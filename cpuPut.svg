<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2118" onload="init(evt)" viewBox="0 0 1200 2118" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="2101"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="2101"> </text>
<g id="frames">
<g>
<title>all (85 samples, 100.00%)</title><rect x="10.0" y="2067.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="2078.0">all</text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="2051.0" width="13.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="2062.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="2035.0" width="13.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="2046.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="2019.0" width="13.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="2003.0" width="13.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="13.0" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1987.0" width="13.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="13.0" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1971.0" width="13.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="13.0" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1955.0" width="13.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="13.0" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1939.0" width="13.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="13.0" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1923.0" width="13.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="13.0" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1907.0" width="13.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="13.0" y="1918.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1891.0" width="13.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="13.0" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1875.0" width="13.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="13.0" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1859.0" width="13.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="13.0" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1843.0" width="13.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="13.0" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1827.0" width="13.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="13.0" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1811.0" width="13.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="13.0" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1795.0" width="13.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="13.0" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1779.0" width="13.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="13.0" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1763.0" width="13.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="13.0" y="1774.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1747.0" width="13.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="1758.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1731.0" width="13.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="13.0" y="1742.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1715.0" width="13.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="13.0" y="1726.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1699.0" width="13.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="13.0" y="1710.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1683.0" width="13.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="13.0" y="1694.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1667.0" width="13.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="13.0" y="1678.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1651.0" width="13.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="13.0" y="1662.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1635.0" width="13.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="13.0" y="1646.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1619.0" width="13.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="13.0" y="1630.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1603.0" width="13.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="13.0" y="1614.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1587.0" width="13.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="13.0" y="1598.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1571.0" width="13.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1582.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1555.0" width="13.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="13.0" y="1566.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1539.0" width="13.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="13.0" y="1550.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1523.0" width="13.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="13.0" y="1534.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1507.0" width="13.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="13.0" y="1518.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1491.0" width="13.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="13.0" y="1502.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1475.0" width="13.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="13.0" y="1486.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1459.0" width="13.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="13.0" y="1470.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1443.0" width="13.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="13.0" y="1454.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1427.0" width="13.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="13.0" y="1438.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1411.0" width="13.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="13.0" y="1422.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1395.0" width="13.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="13.0" y="1406.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1379.0" width="13.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="13.0" y="1390.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1363.0" width="13.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="13.0" y="1374.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1347.0" width="13.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="13.0" y="1358.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1331.0" width="13.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="13.0" y="1342.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1315.0" width="13.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="13.0" y="1326.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1299.0" width="13.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="13.0" y="1310.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1283.0" width="13.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="13.0" y="1294.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1267.0" width="13.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="13.0" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1251.0" width="13.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="13.0" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1235.0" width="13.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="13.0" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1219.0" width="13.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="13.0" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1203.0" width="13.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="13.0" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1187.0" width="13.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="13.0" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1171.0" width="13.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="13.0" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1155.0" width="13.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1139.0" width="13.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="13.0" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1123.0" width="13.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="13.0" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1107.0" width="13.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="13.0" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1091.0" width="13.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="13.0" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1075.0" width="13.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="13.0" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1059.0" width="13.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="13.0" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1043.0" width="13.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="13.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1027.0" width="13.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="13.0" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="1011.0" width="13.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="995.0" width="13.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="13.0" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="979.0" width="13.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="13.0" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="963.0" width="13.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="13.0" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="947.0" width="13.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="13.0" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="931.0" width="13.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="915.0" width="13.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="899.0" width="13.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="883.0" width="13.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="867.0" width="13.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="851.0" width="13.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="835.0" width="13.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="819.0" width="13.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="803.0" width="13.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="787.0" width="13.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="771.0" width="13.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="755.0" width="13.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="739.0" width="13.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="723.0" width="13.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="707.0" width="13.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="691.0" width="13.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="675.0" width="13.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="659.0" width="13.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="13.0" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="643.0" width="13.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="13.0" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="627.0" width="13.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="13.0" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="611.0" width="13.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="13.0" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="595.0" width="13.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="579.0" width="13.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="13.0" y="590.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="563.0" width="13.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="13.0" y="574.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="547.0" width="13.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="13.0" y="558.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="531.0" width="13.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="542.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="515.0" width="13.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="13.0" y="526.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="499.0" width="13.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="13.0" y="510.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="483.0" width="13.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="13.0" y="494.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="467.0" width="13.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="13.0" y="478.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="451.0" width="13.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="13.0" y="462.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="435.0" width="13.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="13.0" y="446.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="419.0" width="13.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="403.0" width="13.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="13.0" y="414.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="387.0" width="13.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="13.0" y="398.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="371.0" width="13.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="13.0" y="382.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="355.0" width="13.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="13.0" y="366.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="339.0" width="13.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="323.0" width="13.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="10.0" y="307.0" width="13.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>__GI___libc_read (1 samples, 1.18%)</title><rect x="10.0" y="291.0" width="13.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 1.18%)</title><rect x="10.0" y="275.0" width="13.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="13.0" y="286.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 1.18%)</title><rect x="10.0" y="259.0" width="13.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="13.0" y="270.0"></text>
</g>
<g>
<title>__x64_sys_read (1 samples, 1.18%)</title><rect x="10.0" y="243.0" width="13.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="13.0" y="254.0"></text>
</g>
<g>
<title>ksys_read (1 samples, 1.18%)</title><rect x="10.0" y="227.0" width="13.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="13.0" y="238.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 1.18%)</title><rect x="10.0" y="211.0" width="13.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="13.0" y="222.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 1.18%)</title><rect x="10.0" y="195.0" width="13.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="13.0" y="206.0"></text>
</g>
<g>
<title>kernfs_fop_read (1 samples, 1.18%)</title><rect x="10.0" y="179.0" width="13.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="13.0" y="190.0"></text>
</g>
<g>
<title>seq_read (1 samples, 1.18%)</title><rect x="10.0" y="163.0" width="13.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="13.0" y="174.0"></text>
</g>
<g>
<title>kernfs_seq_show (1 samples, 1.18%)</title><rect x="10.0" y="147.0" width="13.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="13.0" y="158.0"></text>
</g>
<g>
<title>cgroup_seqfile_show (1 samples, 1.18%)</title><rect x="10.0" y="131.0" width="13.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="13.0" y="142.0"></text>
</g>
<g>
<title>memcg_stat_show (1 samples, 1.18%)</title><rect x="10.0" y="115.0" width="13.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="13.0" y="126.0"></text>
</g>
<g>
<title>seq_printf (1 samples, 1.18%)</title><rect x="10.0" y="99.0" width="13.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="13.0" y="110.0"></text>
</g>
<g>
<title>seq_vprintf (1 samples, 1.18%)</title><rect x="10.0" y="83.0" width="13.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="13.0" y="94.0"></text>
</g>
<g>
<title>vsnprintf (1 samples, 1.18%)</title><rect x="10.0" y="67.0" width="13.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="13.0" y="78.0"></text>
</g>
<g>
<title>string (1 samples, 1.18%)</title><rect x="10.0" y="51.0" width="13.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="13.0" y="62.0"></text>
</g>
<g>
<title>string_nocheck (1 samples, 1.18%)</title><rect x="10.0" y="35.0" width="13.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="13.0" y="46.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 1.18%)</title><rect x="23.9" y="2051.0" width="13.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="26.9" y="2062.0"></text>
</g>
<g>
<title>Interpreter (1 samples, 1.18%)</title><rect x="23.9" y="2035.0" width="13.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="26.9" y="2046.0"></text>
</g>
<g>
<title>java/lang/Thread.run (9 samples, 10.59%)</title><rect x="37.8" y="2051.0" width="124.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="40.8" y="2062.0">java/lang/Threa..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (9 samples, 10.59%)</title><rect x="37.8" y="2035.0" width="124.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="40.8" y="2046.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (9 samples, 10.59%)</title><rect x="37.8" y="2019.0" width="124.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="40.8" y="2030.0">java/util/concu..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (9 samples, 10.59%)</title><rect x="37.8" y="2003.0" width="124.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="40.8" y="2014.0">sun/rmi/transpo..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (9 samples, 10.59%)</title><rect x="37.8" y="1987.0" width="124.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="40.8" y="1998.0">java/security/A..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$91/1663583035.run (9 samples, 10.59%)</title><rect x="37.8" y="1971.0" width="124.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="40.8" y="1982.0">sun/rmi/transpo..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (9 samples, 10.59%)</title><rect x="37.8" y="1955.0" width="124.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="40.8" y="1966.0">sun/rmi/transpo..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (9 samples, 10.59%)</title><rect x="37.8" y="1939.0" width="124.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="40.8" y="1950.0">sun/rmi/transpo..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (9 samples, 10.59%)</title><rect x="37.8" y="1923.0" width="124.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="40.8" y="1934.0">sun/rmi/transpo..</text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (9 samples, 10.59%)</title><rect x="37.8" y="1907.0" width="124.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="40.8" y="1918.0">sun/rmi/transpo..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (8 samples, 9.41%)</title><rect x="37.8" y="1891.0" width="111.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="40.8" y="1902.0">java/security..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (8 samples, 9.41%)</title><rect x="37.8" y="1875.0" width="111.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="40.8" y="1886.0">sun/rmi/trans..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (8 samples, 9.41%)</title><rect x="37.8" y="1859.0" width="111.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="40.8" y="1870.0">sun/rmi/trans..</text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (8 samples, 9.41%)</title><rect x="37.8" y="1843.0" width="111.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="40.8" y="1854.0">sun/rmi/serve..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (6 samples, 7.06%)</title><rect x="37.8" y="1827.0" width="83.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="40.8" y="1838.0">java/lang..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (6 samples, 7.06%)</title><rect x="37.8" y="1811.0" width="83.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="40.8" y="1822.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor33.invoke (1 samples, 1.18%)</title><rect x="37.8" y="1795.0" width="13.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="40.8" y="1806.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getAttribute (1 samples, 1.18%)</title><rect x="37.8" y="1779.0" width="13.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="40.8" y="1790.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (1 samples, 1.18%)</title><rect x="37.8" y="1763.0" width="13.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="40.8" y="1774.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.rspOutgoing (1 samples, 1.18%)</title><rect x="37.8" y="1747.0" width="13.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="40.8" y="1758.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 1.18%)</title><rect x="37.8" y="1731.0" width="13.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="40.8" y="1742.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 1.18%)</title><rect x="37.8" y="1715.0" width="13.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="40.8" y="1726.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 1.18%)</title><rect x="37.8" y="1699.0" width="13.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="40.8" y="1710.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 1.18%)</title><rect x="37.8" y="1683.0" width="13.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="40.8" y="1694.0"></text>
</g>
<g>
<title>do_futex (1 samples, 1.18%)</title><rect x="37.8" y="1667.0" width="13.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="40.8" y="1678.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 1.18%)</title><rect x="37.8" y="1651.0" width="13.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="40.8" y="1662.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 1.18%)</title><rect x="37.8" y="1635.0" width="13.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="40.8" y="1646.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 1.18%)</title><rect x="37.8" y="1619.0" width="13.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="40.8" y="1630.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 1.18%)</title><rect x="37.8" y="1603.0" width="13.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="40.8" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (5 samples, 5.88%)</title><rect x="51.6" y="1795.0" width="69.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="54.6" y="1806.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (5 samples, 5.88%)</title><rect x="51.6" y="1779.0" width="69.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="54.6" y="1790.0">jdk/int..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getAttribute (1 samples, 1.18%)</title><rect x="51.6" y="1763.0" width="13.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="54.6" y="1774.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (1 samples, 1.18%)</title><rect x="51.6" y="1747.0" width="13.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="54.6" y="1758.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (1 samples, 1.18%)</title><rect x="51.6" y="1731.0" width="13.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="54.6" y="1742.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (1 samples, 1.18%)</title><rect x="51.6" y="1715.0" width="13.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="54.6" y="1726.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.getAttribute (1 samples, 1.18%)</title><rect x="51.6" y="1699.0" width="13.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="54.6" y="1710.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getAttribute (1 samples, 1.18%)</title><rect x="51.6" y="1683.0" width="13.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="54.6" y="1694.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.getAttribute (1 samples, 1.18%)</title><rect x="51.6" y="1667.0" width="13.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="54.6" y="1678.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.getAttribute (1 samples, 1.18%)</title><rect x="51.6" y="1651.0" width="13.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="54.6" y="1662.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.getAttribute (1 samples, 1.18%)</title><rect x="51.6" y="1635.0" width="13.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="54.6" y="1646.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (1 samples, 1.18%)</title><rect x="51.6" y="1619.0" width="13.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="54.6" y="1630.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (1 samples, 1.18%)</title><rect x="51.6" y="1603.0" width="13.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="54.6" y="1614.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (1 samples, 1.18%)</title><rect x="51.6" y="1587.0" width="13.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="54.6" y="1598.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (1 samples, 1.18%)</title><rect x="51.6" y="1571.0" width="13.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="54.6" y="1582.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (1 samples, 1.18%)</title><rect x="51.6" y="1555.0" width="13.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="54.6" y="1566.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (1 samples, 1.18%)</title><rect x="51.6" y="1539.0" width="13.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="54.6" y="1550.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 1.18%)</title><rect x="51.6" y="1523.0" width="13.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="54.6" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 1.18%)</title><rect x="51.6" y="1507.0" width="13.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="54.6" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 1.18%)</title><rect x="51.6" y="1491.0" width="13.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="54.6" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 1.18%)</title><rect x="51.6" y="1475.0" width="13.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="54.6" y="1486.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (1 samples, 1.18%)</title><rect x="51.6" y="1459.0" width="13.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="54.6" y="1470.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 1.18%)</title><rect x="51.6" y="1443.0" width="13.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="54.6" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 1.18%)</title><rect x="51.6" y="1427.0" width="13.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="54.6" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 1.18%)</title><rect x="51.6" y="1411.0" width="13.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.6" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 1.18%)</title><rect x="51.6" y="1395.0" width="13.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="54.6" y="1406.0"></text>
</g>
<g>
<title>sun/management/BaseOperatingSystemImpl.getAvailableProcessors (1 samples, 1.18%)</title><rect x="51.6" y="1379.0" width="13.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="54.6" y="1390.0"></text>
</g>
<g>
<title>sun/management/VMManagementImpl.getAvailableProcessors (1 samples, 1.18%)</title><rect x="51.6" y="1363.0" width="13.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="54.6" y="1374.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.18%)</title><rect x="51.6" y="1347.0" width="13.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="54.6" y="1358.0"></text>
</g>
<g>
<title>__GI___libc_read (1 samples, 1.18%)</title><rect x="51.6" y="1331.0" width="13.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="54.6" y="1342.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 1.18%)</title><rect x="51.6" y="1315.0" width="13.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="54.6" y="1326.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 1.18%)</title><rect x="51.6" y="1299.0" width="13.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="54.6" y="1310.0"></text>
</g>
<g>
<title>__x64_sys_read (1 samples, 1.18%)</title><rect x="51.6" y="1283.0" width="13.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="54.6" y="1294.0"></text>
</g>
<g>
<title>ksys_read (1 samples, 1.18%)</title><rect x="51.6" y="1267.0" width="13.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="54.6" y="1278.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 1.18%)</title><rect x="51.6" y="1251.0" width="13.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="54.6" y="1262.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 1.18%)</title><rect x="51.6" y="1235.0" width="13.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="54.6" y="1246.0"></text>
</g>
<g>
<title>kernfs_fop_read (1 samples, 1.18%)</title><rect x="51.6" y="1219.0" width="13.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="54.6" y="1230.0"></text>
</g>
<g>
<title>seq_read (1 samples, 1.18%)</title><rect x="51.6" y="1203.0" width="13.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="54.6" y="1214.0"></text>
</g>
<g>
<title>kvmalloc_node (1 samples, 1.18%)</title><rect x="51.6" y="1187.0" width="13.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="54.6" y="1198.0"></text>
</g>
<g>
<title>memset (1 samples, 1.18%)</title><rect x="51.6" y="1171.0" width="13.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="54.6" y="1182.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (3 samples, 3.53%)</title><rect x="65.5" y="1763.0" width="41.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="68.5" y="1774.0">jav..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (3 samples, 3.53%)</title><rect x="65.5" y="1747.0" width="41.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="68.5" y="1758.0">jav..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (3 samples, 3.53%)</title><rect x="65.5" y="1731.0" width="41.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="68.5" y="1742.0">jav..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (3 samples, 3.53%)</title><rect x="65.5" y="1715.0" width="41.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="68.5" y="1726.0">jav..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (3 samples, 3.53%)</title><rect x="65.5" y="1699.0" width="41.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="68.5" y="1710.0">com..</text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (3 samples, 3.53%)</title><rect x="65.5" y="1683.0" width="41.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="68.5" y="1694.0">com..</text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (3 samples, 3.53%)</title><rect x="65.5" y="1667.0" width="41.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="68.5" y="1678.0">jav..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (3 samples, 3.53%)</title><rect x="65.5" y="1651.0" width="41.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="68.5" y="1662.0">com..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (3 samples, 3.53%)</title><rect x="65.5" y="1635.0" width="41.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="68.5" y="1646.0">com..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (3 samples, 3.53%)</title><rect x="65.5" y="1619.0" width="41.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="68.5" y="1630.0">com..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (3 samples, 3.53%)</title><rect x="65.5" y="1603.0" width="41.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="68.5" y="1614.0">com..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (3 samples, 3.53%)</title><rect x="65.5" y="1587.0" width="41.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="68.5" y="1598.0">com..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (3 samples, 3.53%)</title><rect x="65.5" y="1571.0" width="41.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="68.5" y="1582.0">com..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (3 samples, 3.53%)</title><rect x="65.5" y="1555.0" width="41.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="68.5" y="1566.0">com..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (3 samples, 3.53%)</title><rect x="65.5" y="1539.0" width="41.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="68.5" y="1550.0">com..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (3 samples, 3.53%)</title><rect x="65.5" y="1523.0" width="41.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="68.5" y="1534.0">com..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (3 samples, 3.53%)</title><rect x="65.5" y="1507.0" width="41.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="68.5" y="1518.0">com..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (3 samples, 3.53%)</title><rect x="65.5" y="1491.0" width="41.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="68.5" y="1502.0">com..</text>
</g>
<g>
<title>InterpreterRuntime::anewarray(JavaThread*, ConstantPool*, int, int) (1 samples, 1.18%)</title><rect x="65.5" y="1475.0" width="13.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="68.5" y="1486.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 1.18%)</title><rect x="65.5" y="1459.0" width="13.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="68.5" y="1470.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (1 samples, 1.18%)</title><rect x="79.4" y="1475.0" width="13.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="82.4" y="1486.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (1 samples, 1.18%)</title><rect x="79.4" y="1459.0" width="13.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="82.4" y="1470.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 1.18%)</title><rect x="79.4" y="1443.0" width="13.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="82.4" y="1454.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 1.18%)</title><rect x="79.4" y="1427.0" width="13.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="82.4" y="1438.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (1 samples, 1.18%)</title><rect x="93.3" y="1475.0" width="13.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="96.3" y="1486.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 1.18%)</title><rect x="93.3" y="1459.0" width="13.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="96.3" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 1.18%)</title><rect x="93.3" y="1443.0" width="13.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="96.3" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (1 samples, 1.18%)</title><rect x="93.3" y="1427.0" width="13.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="96.3" y="1438.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (1 samples, 1.18%)</title><rect x="93.3" y="1411.0" width="13.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="96.3" y="1422.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 1.18%)</title><rect x="93.3" y="1395.0" width="13.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="96.3" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 1.18%)</title><rect x="93.3" y="1379.0" width="13.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="96.3" y="1390.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIServerImpl.newClient (1 samples, 1.18%)</title><rect x="107.2" y="1763.0" width="13.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="110.2" y="1774.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIServerImpl.doNewClient (1 samples, 1.18%)</title><rect x="107.2" y="1747.0" width="13.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="110.2" y="1758.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIJRMPServerImpl.makeClient (1 samples, 1.18%)</title><rect x="107.2" y="1731.0" width="13.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="110.2" y="1742.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIJRMPServerImpl.export (1 samples, 1.18%)</title><rect x="107.2" y="1715.0" width="13.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="110.2" y="1726.0"></text>
</g>
<g>
<title>sun/management/jmxremote/ConnectorBootstrap$PermanentExporter.exportObject (1 samples, 1.18%)</title><rect x="107.2" y="1699.0" width="13.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="110.2" y="1710.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.exportObject (1 samples, 1.18%)</title><rect x="107.2" y="1683.0" width="13.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="110.2" y="1694.0"></text>
</g>
<g>
<title>sun/rmi/server/Util.createProxy (1 samples, 1.18%)</title><rect x="107.2" y="1667.0" width="13.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="110.2" y="1678.0"></text>
</g>
<g>
<title>sun/rmi/server/Util.createStub (1 samples, 1.18%)</title><rect x="107.2" y="1651.0" width="13.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="110.2" y="1662.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 1.18%)</title><rect x="107.2" y="1635.0" width="13.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="110.2" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 1.18%)</title><rect x="107.2" y="1619.0" width="13.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="110.2" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (1 samples, 1.18%)</title><rect x="107.2" y="1603.0" width="13.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="110.2" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance0 (1 samples, 1.18%)</title><rect x="107.2" y="1587.0" width="13.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="110.2" y="1598.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl_Stub.&lt;clinit&gt; (1 samples, 1.18%)</title><rect x="107.2" y="1571.0" width="13.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="110.2" y="1582.0"></text>
</g>
<g>
<title>java/lang/Class.getMethod (1 samples, 1.18%)</title><rect x="107.2" y="1555.0" width="13.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="110.2" y="1566.0"></text>
</g>
<g>
<title>java/lang/Class.getMethod0 (1 samples, 1.18%)</title><rect x="107.2" y="1539.0" width="13.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="110.2" y="1550.0"></text>
</g>
<g>
<title>java/lang/Class.getMethodsRecursive (1 samples, 1.18%)</title><rect x="107.2" y="1523.0" width="13.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="110.2" y="1534.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredMethods (1 samples, 1.18%)</title><rect x="107.2" y="1507.0" width="13.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="110.2" y="1518.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredMethods0 (1 samples, 1.18%)</title><rect x="107.2" y="1491.0" width="13.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="110.2" y="1502.0"></text>
</g>
<g>
<title>JVM_GetClassDeclaredMethods (1 samples, 1.18%)</title><rect x="107.2" y="1475.0" width="13.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="110.2" y="1486.0"></text>
</g>
<g>
<title>get_class_declared_methods_helper(JNIEnv_*, _jclass*, unsigned char, bool, Klass*, Thread*) (1 samples, 1.18%)</title><rect x="107.2" y="1459.0" width="13.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="110.2" y="1470.0"></text>
</g>
<g>
<title>Reflection::new_method(methodHandle const&amp;, bool, Thread*) (1 samples, 1.18%)</title><rect x="107.2" y="1443.0" width="13.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="110.2" y="1454.0"></text>
</g>
<g>
<title>get_parameter_types(methodHandle const&amp;, int, oopDesc**, Thread*) (1 samples, 1.18%)</title><rect x="107.2" y="1427.0" width="13.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="110.2" y="1438.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 1.18%)</title><rect x="107.2" y="1411.0" width="13.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="110.2" y="1422.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 1.18%)</title><rect x="107.2" y="1395.0" width="13.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="110.2" y="1406.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 1.18%)</title><rect x="107.2" y="1379.0" width="13.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="110.2" y="1390.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 1.18%)</title><rect x="107.2" y="1363.0" width="13.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="110.2" y="1374.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 1.18%)</title><rect x="107.2" y="1347.0" width="13.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="110.2" y="1358.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, Thread*) (1 samples, 1.18%)</title><rect x="107.2" y="1331.0" width="13.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="110.2" y="1342.0"></text>
</g>
<g>
<title>ClassFileParser::fill_instance_klass(InstanceKlass*, bool, Thread*) (1 samples, 1.18%)</title><rect x="107.2" y="1315.0" width="13.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="110.2" y="1326.0"></text>
</g>
<g>
<title>DefaultMethods::generate_default_methods(InstanceKlass*, GrowableArray&lt;Method*&gt; const*, Thread*) (1 samples, 1.18%)</title><rect x="107.2" y="1299.0" width="13.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="110.2" y="1310.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 1.18%)</title><rect x="107.2" y="1283.0" width="13.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="110.2" y="1294.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (1 samples, 1.18%)</title><rect x="107.2" y="1267.0" width="13.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="110.2" y="1278.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (2 samples, 2.35%)</title><rect x="121.1" y="1827.0" width="27.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="124.1" y="1838.0">s..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (2 samples, 2.35%)</title><rect x="121.1" y="1811.0" width="27.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="124.1" y="1822.0">j..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 2.35%)</title><rect x="121.1" y="1795.0" width="27.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="124.1" y="1806.0">j..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (1 samples, 1.18%)</title><rect x="121.1" y="1779.0" width="13.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="124.1" y="1790.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 1.18%)</title><rect x="121.1" y="1763.0" width="13.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="124.1" y="1774.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 1.18%)</title><rect x="121.1" y="1747.0" width="13.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="124.1" y="1758.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 1.18%)</title><rect x="121.1" y="1731.0" width="13.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="124.1" y="1742.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 1.18%)</title><rect x="121.1" y="1715.0" width="13.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="124.1" y="1726.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 1.18%)</title><rect x="121.1" y="1699.0" width="13.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="124.1" y="1710.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 1.18%)</title><rect x="121.1" y="1683.0" width="13.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="124.1" y="1694.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 1.18%)</title><rect x="121.1" y="1667.0" width="13.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="124.1" y="1678.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (1 samples, 1.18%)</title><rect x="121.1" y="1651.0" width="13.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="124.1" y="1662.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 1.18%)</title><rect x="121.1" y="1635.0" width="13.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="124.1" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 1.18%)</title><rect x="121.1" y="1619.0" width="13.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="124.1" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor22.invoke (1 samples, 1.18%)</title><rect x="121.1" y="1603.0" width="13.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="124.1" y="1614.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (1 samples, 1.18%)</title><rect x="121.1" y="1587.0" width="13.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="124.1" y="1598.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (1 samples, 1.18%)</title><rect x="121.1" y="1571.0" width="13.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="124.1" y="1582.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 1.18%)</title><rect x="121.1" y="1555.0" width="13.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="124.1" y="1566.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (1 samples, 1.18%)</title><rect x="121.1" y="1539.0" width="13.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="124.1" y="1550.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 1.18%)</title><rect x="121.1" y="1523.0" width="13.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="124.1" y="1534.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 1.18%)</title><rect x="121.1" y="1507.0" width="13.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="124.1" y="1518.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 1.18%)</title><rect x="121.1" y="1491.0" width="13.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="124.1" y="1502.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 1.18%)</title><rect x="121.1" y="1475.0" width="13.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="124.1" y="1486.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 1.18%)</title><rect x="121.1" y="1459.0" width="13.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="124.1" y="1470.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 1.18%)</title><rect x="121.1" y="1443.0" width="13.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="124.1" y="1454.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 1.18%)</title><rect x="121.1" y="1427.0" width="13.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="124.1" y="1438.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (1 samples, 1.18%)</title><rect x="121.1" y="1411.0" width="13.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="124.1" y="1422.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 1.18%)</title><rect x="121.1" y="1395.0" width="13.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="124.1" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 1.18%)</title><rect x="121.1" y="1379.0" width="13.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="124.1" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor22.invoke (1 samples, 1.18%)</title><rect x="121.1" y="1363.0" width="13.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="124.1" y="1374.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (1 samples, 1.18%)</title><rect x="121.1" y="1347.0" width="13.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="124.1" y="1358.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (1 samples, 1.18%)</title><rect x="121.1" y="1331.0" width="13.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="124.1" y="1342.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 1.18%)</title><rect x="121.1" y="1315.0" width="13.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="124.1" y="1326.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 1.18%)</title><rect x="121.1" y="1299.0" width="13.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="124.1" y="1310.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (1 samples, 1.18%)</title><rect x="134.9" y="1779.0" width="13.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="137.9" y="1790.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.&lt;init&gt; (1 samples, 1.18%)</title><rect x="134.9" y="1763.0" width="13.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="137.9" y="1774.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 1.18%)</title><rect x="134.9" y="1747.0" width="13.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="137.9" y="1758.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass$2.run (1 samples, 1.18%)</title><rect x="134.9" y="1731.0" width="13.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="137.9" y="1742.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass$2.run (1 samples, 1.18%)</title><rect x="134.9" y="1715.0" width="13.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="137.9" y="1726.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getDeclaredSUID (1 samples, 1.18%)</title><rect x="134.9" y="1699.0" width="13.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="137.9" y="1710.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.getLong (1 samples, 1.18%)</title><rect x="134.9" y="1683.0" width="13.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="137.9" y="1694.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.getFieldAccessor (1 samples, 1.18%)</title><rect x="134.9" y="1667.0" width="13.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="137.9" y="1678.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.acquireFieldAccessor (1 samples, 1.18%)</title><rect x="134.9" y="1651.0" width="13.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="137.9" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.newFieldAccessor (1 samples, 1.18%)</title><rect x="134.9" y="1635.0" width="13.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="137.9" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/reflect/UnsafeFieldAccessorFactory.newFieldAccessor (1 samples, 1.18%)</title><rect x="134.9" y="1619.0" width="13.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="137.9" y="1630.0"></text>
</g>
<g>
<title>java/lang/reflect/Modifier.isVolatile (1 samples, 1.18%)</title><rect x="134.9" y="1603.0" width="13.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="137.9" y="1614.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 1.18%)</title><rect x="134.9" y="1587.0" width="13.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="137.9" y="1598.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 1.18%)</title><rect x="134.9" y="1571.0" width="13.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="137.9" y="1582.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 1.18%)</title><rect x="134.9" y="1555.0" width="13.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="137.9" y="1566.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 1.18%)</title><rect x="134.9" y="1539.0" width="13.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="137.9" y="1550.0"></text>
</g>
<g>
<title>CompilationPolicy::is_compilation_enabled() (1 samples, 1.18%)</title><rect x="134.9" y="1523.0" width="13.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="137.9" y="1534.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getInputStream (1 samples, 1.18%)</title><rect x="148.8" y="1891.0" width="13.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="151.8" y="1902.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionInputStream.&lt;init&gt; (1 samples, 1.18%)</title><rect x="148.8" y="1875.0" width="13.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="151.8" y="1886.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (1 samples, 1.18%)</title><rect x="148.8" y="1859.0" width="13.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="151.8" y="1870.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (1 samples, 1.18%)</title><rect x="148.8" y="1843.0" width="13.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="151.8" y="1854.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 1.18%)</title><rect x="148.8" y="1827.0" width="13.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="151.8" y="1838.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 1.18%)</title><rect x="148.8" y="1811.0" width="13.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="151.8" y="1822.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 1.18%)</title><rect x="148.8" y="1795.0" width="13.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="151.8" y="1806.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 1.18%)</title><rect x="148.8" y="1779.0" width="13.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="151.8" y="1790.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 1.18%)</title><rect x="148.8" y="1763.0" width="13.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="151.8" y="1774.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 1.18%)</title><rect x="148.8" y="1747.0" width="13.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="151.8" y="1758.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 1.18%)</title><rect x="148.8" y="1731.0" width="13.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="151.8" y="1742.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 1.18%)</title><rect x="148.8" y="1715.0" width="13.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="151.8" y="1726.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 1.18%)</title><rect x="148.8" y="1699.0" width="13.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="151.8" y="1710.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 1.18%)</title><rect x="148.8" y="1683.0" width="13.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="151.8" y="1694.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 1.18%)</title><rect x="148.8" y="1667.0" width="13.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="151.8" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/agent/Agent.startLocalManagementAgent (2 samples, 2.35%)</title><rect x="162.7" y="2051.0" width="27.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="165.7" y="2062.0">j..</text>
</g>
<g>
<title>sun/management/jmxremote/ConnectorBootstrap.startLocalConnectorServer (2 samples, 2.35%)</title><rect x="162.7" y="2035.0" width="27.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="165.7" y="2046.0">s..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectorServer.start (2 samples, 2.35%)</title><rect x="162.7" y="2019.0" width="27.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="165.7" y="2030.0">j..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIJRMPServerImpl.export (2 samples, 2.35%)</title><rect x="162.7" y="2003.0" width="27.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="165.7" y="2014.0">j..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIJRMPServerImpl.export (2 samples, 2.35%)</title><rect x="162.7" y="1987.0" width="27.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="165.7" y="1998.0">j..</text>
</g>
<g>
<title>sun/management/jmxremote/ConnectorBootstrap$PermanentExporter.exportObject (2 samples, 2.35%)</title><rect x="162.7" y="1971.0" width="27.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="165.7" y="1982.0">s..</text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.&lt;clinit&gt; (1 samples, 1.18%)</title><rect x="162.7" y="1955.0" width="13.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="165.7" y="1966.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 1.18%)</title><rect x="162.7" y="1939.0" width="13.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="165.7" y="1950.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 1.18%)</title><rect x="162.7" y="1923.0" width="13.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="165.7" y="1934.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field_access(fieldDescriptor&amp;, constantPoolHandle const&amp;, int, methodHandle const&amp;, Bytecodes::Code, Thread*) (1 samples, 1.18%)</title><rect x="162.7" y="1907.0" width="13.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="165.7" y="1918.0"></text>
</g>
<g>
<title>ConstantPool::klass_ref_at(int, Thread*) (1 samples, 1.18%)</title><rect x="162.7" y="1891.0" width="13.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="165.7" y="1902.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 1.18%)</title><rect x="162.7" y="1875.0" width="13.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="165.7" y="1886.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 1.18%)</title><rect x="162.7" y="1859.0" width="13.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="165.7" y="1870.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 1.18%)</title><rect x="162.7" y="1843.0" width="13.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="165.7" y="1854.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 1.18%)</title><rect x="162.7" y="1827.0" width="13.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="165.7" y="1838.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 1.18%)</title><rect x="162.7" y="1811.0" width="13.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="165.7" y="1822.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 1.18%)</title><rect x="162.7" y="1795.0" width="13.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="165.7" y="1806.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 1.18%)</title><rect x="162.7" y="1779.0" width="13.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="165.7" y="1790.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 1.18%)</title><rect x="162.7" y="1763.0" width="13.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="165.7" y="1774.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 1.18%)</title><rect x="162.7" y="1747.0" width="13.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="165.7" y="1758.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.exportObject (1 samples, 1.18%)</title><rect x="176.6" y="1955.0" width="13.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="179.6" y="1966.0"></text>
</g>
<g>
<title>sun/rmi/transport/Target.&lt;init&gt; (1 samples, 1.18%)</title><rect x="176.6" y="1939.0" width="13.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="179.6" y="1950.0"></text>
</g>
<g>
<title>sun/rmi/transport/Target.pinImpl (1 samples, 1.18%)</title><rect x="176.6" y="1923.0" width="13.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="179.6" y="1934.0"></text>
</g>
<g>
<title>sun/rmi/transport/WeakRef.pin (1 samples, 1.18%)</title><rect x="176.6" y="1907.0" width="13.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="179.6" y="1918.0"></text>
</g>
<g>
<title>sun/rmi/transport/DGCImpl.&lt;clinit&gt; (1 samples, 1.18%)</title><rect x="176.6" y="1891.0" width="13.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="179.6" y="1902.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 1.18%)</title><rect x="176.6" y="1875.0" width="13.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="179.6" y="1886.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 1.18%)</title><rect x="176.6" y="1859.0" width="13.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="179.6" y="1870.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 1.18%)</title><rect x="176.6" y="1843.0" width="13.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="179.6" y="1854.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 1.18%)</title><rect x="176.6" y="1827.0" width="13.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="179.6" y="1838.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 1.18%)</title><rect x="176.6" y="1811.0" width="13.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="179.6" y="1822.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 1.18%)</title><rect x="176.6" y="1795.0" width="13.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="179.6" y="1806.0"></text>
</g>
<g>
<title>Symbol::as_C_string() const (1 samples, 1.18%)</title><rect x="176.6" y="1779.0" width="13.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="179.6" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/vm/VMSupport.serializeAgentPropertiesToByteArray (1 samples, 1.18%)</title><rect x="190.5" y="2051.0" width="13.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="193.5" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/vm/VMSupport.serializePropertiesToByteArray (1 samples, 1.18%)</title><rect x="190.5" y="2035.0" width="13.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="193.5" y="2046.0"></text>
</g>
<g>
<title>java/util/Properties.store (1 samples, 1.18%)</title><rect x="190.5" y="2019.0" width="13.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="193.5" y="2030.0"></text>
</g>
<g>
<title>java/util/Properties.store0 (1 samples, 1.18%)</title><rect x="190.5" y="2003.0" width="13.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="193.5" y="2014.0"></text>
</g>
<g>
<title>java/util/Properties.getFormattedTimestamp (1 samples, 1.18%)</title><rect x="190.5" y="1987.0" width="13.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="193.5" y="1998.0"></text>
</g>
<g>
<title>java/util/Date.toString (1 samples, 1.18%)</title><rect x="190.5" y="1971.0" width="13.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="193.5" y="1982.0"></text>
</g>
<g>
<title>java/util/TimeZone.getDisplayName (1 samples, 1.18%)</title><rect x="190.5" y="1955.0" width="13.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="193.5" y="1966.0"></text>
</g>
<g>
<title>sun/util/locale/provider/TimeZoneNameUtility.retrieveDisplayName (1 samples, 1.18%)</title><rect x="190.5" y="1939.0" width="13.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="193.5" y="1950.0"></text>
</g>
<g>
<title>sun/util/locale/provider/TimeZoneNameUtility.retrieveDisplayNamesImpl (1 samples, 1.18%)</title><rect x="190.5" y="1923.0" width="13.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="193.5" y="1934.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 1.18%)</title><rect x="190.5" y="1907.0" width="13.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="193.5" y="1918.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 1.18%)</title><rect x="190.5" y="1891.0" width="13.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="193.5" y="1902.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field_access(fieldDescriptor&amp;, constantPoolHandle const&amp;, int, methodHandle const&amp;, Bytecodes::Code, Thread*) (1 samples, 1.18%)</title><rect x="190.5" y="1875.0" width="13.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="193.5" y="1886.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field(fieldDescriptor&amp;, LinkInfo const&amp;, Bytecodes::Code, bool, Thread*) (1 samples, 1.18%)</title><rect x="190.5" y="1859.0" width="13.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="193.5" y="1870.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 1.18%)</title><rect x="190.5" y="1843.0" width="13.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="193.5" y="1854.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 1.18%)</title><rect x="190.5" y="1827.0" width="13.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="193.5" y="1838.0"></text>
</g>
<g>
<title>JvmtiExport::post_class_prepare(JavaThread*, Klass*) (1 samples, 1.18%)</title><rect x="190.5" y="1811.0" width="13.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="193.5" y="1822.0"></text>
</g>
<g>
<title>VM::loadMethodIDs(_jvmtiEnv*, JNIEnv_*, _jclass*) (1 samples, 1.18%)</title><rect x="190.5" y="1795.0" width="13.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="193.5" y="1806.0"></text>
</g>
<g>
<title>jvmti_GetClassMethods (1 samples, 1.18%)</title><rect x="190.5" y="1779.0" width="13.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="193.5" y="1790.0"></text>
</g>
<g>
<title>JvmtiEnv::GetClassMethods(oopDesc*, int*, _jmethodID***) (1 samples, 1.18%)</title><rect x="190.5" y="1763.0" width="13.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="193.5" y="1774.0"></text>
</g>
<g>
<title>InstanceKlass::get_jmethod_id(methodHandle const&amp;) (1 samples, 1.18%)</title><rect x="190.5" y="1747.0" width="13.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="193.5" y="1758.0"></text>
</g>
<g>
<title>Method::make_jmethod_id(ClassLoaderData*, Method*) (1 samples, 1.18%)</title><rect x="190.5" y="1731.0" width="13.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="193.5" y="1742.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (38 samples, 44.71%)</title><rect x="204.4" y="2051.0" width="527.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="207.4" y="2062.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2 samples, 2.35%)</title><rect x="204.4" y="2035.0" width="27.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="207.4" y="2046.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (2 samples, 2.35%)</title><rect x="204.4" y="2019.0" width="27.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="207.4" y="2030.0">o..</text>
</g>
<g>
<title>[unknown] (2 samples, 2.35%)</title><rect x="204.4" y="2003.0" width="27.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="207.4" y="2014.0">[..</text>
</g>
<g>
<title>epoll_wait (2 samples, 2.35%)</title><rect x="204.4" y="1987.0" width="27.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="207.4" y="1998.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 2.35%)</title><rect x="204.4" y="1971.0" width="27.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="207.4" y="1982.0">e..</text>
</g>
<g>
<title>do_syscall_64 (2 samples, 2.35%)</title><rect x="204.4" y="1955.0" width="27.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="207.4" y="1966.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (2 samples, 2.35%)</title><rect x="204.4" y="1939.0" width="27.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="207.4" y="1950.0">_..</text>
</g>
<g>
<title>do_epoll_wait (2 samples, 2.35%)</title><rect x="204.4" y="1923.0" width="27.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="207.4" y="1934.0">d..</text>
</g>
<g>
<title>__fdget (1 samples, 1.18%)</title><rect x="204.4" y="1907.0" width="13.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="207.4" y="1918.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 1.18%)</title><rect x="204.4" y="1891.0" width="13.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="207.4" y="1902.0"></text>
</g>
<g>
<title>__fget (1 samples, 1.18%)</title><rect x="204.4" y="1875.0" width="13.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="207.4" y="1886.0"></text>
</g>
<g>
<title>ep_poll (1 samples, 1.18%)</title><rect x="218.2" y="1907.0" width="13.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="221.2" y="1918.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 1.18%)</title><rect x="218.2" y="1891.0" width="13.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="221.2" y="1902.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 1.18%)</title><rect x="218.2" y="1875.0" width="13.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="221.2" y="1886.0"></text>
</g>
<g>
<title>schedule (1 samples, 1.18%)</title><rect x="218.2" y="1859.0" width="13.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="221.2" y="1870.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 1.18%)</title><rect x="218.2" y="1843.0" width="13.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="221.2" y="1854.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (36 samples, 42.35%)</title><rect x="232.1" y="2035.0" width="499.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="235.1" y="2046.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (36 samples, 42.35%)</title><rect x="232.1" y="2019.0" width="499.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="235.1" y="2030.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (32 samples, 37.65%)</title><rect x="232.1" y="2003.0" width="444.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="235.1" y="2014.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 1.18%)</title><rect x="232.1" y="1987.0" width="13.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="235.1" y="1998.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (27 samples, 31.76%)</title><rect x="246.0" y="1987.0" width="374.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="249.0" y="1998.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (27 samples, 31.76%)</title><rect x="246.0" y="1971.0" width="374.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="249.0" y="1982.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (27 samples, 31.76%)</title><rect x="246.0" y="1955.0" width="374.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="249.0" y="1966.0">RequestHandler1_put.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (23 samples, 27.06%)</title><rect x="246.0" y="1939.0" width="319.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="249.0" y="1950.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (23 samples, 27.06%)</title><rect x="246.0" y="1923.0" width="319.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="249.0" y="1934.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/net/Session.write (23 samples, 27.06%)</title><rect x="246.0" y="1907.0" width="319.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="249.0" y="1918.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (23 samples, 27.06%)</title><rect x="246.0" y="1891.0" width="319.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="249.0" y="1902.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (23 samples, 27.06%)</title><rect x="246.0" y="1875.0" width="319.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="249.0" y="1886.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (23 samples, 27.06%)</title><rect x="246.0" y="1859.0" width="319.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="249.0" y="1870.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>__libc_send (23 samples, 27.06%)</title><rect x="246.0" y="1843.0" width="319.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="249.0" y="1854.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 27.06%)</title><rect x="246.0" y="1827.0" width="319.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="249.0" y="1838.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (23 samples, 27.06%)</title><rect x="246.0" y="1811.0" width="319.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="249.0" y="1822.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (23 samples, 27.06%)</title><rect x="246.0" y="1795.0" width="319.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="249.0" y="1806.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (23 samples, 27.06%)</title><rect x="246.0" y="1779.0" width="319.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="249.0" y="1790.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (23 samples, 27.06%)</title><rect x="246.0" y="1763.0" width="319.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="249.0" y="1774.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (23 samples, 27.06%)</title><rect x="246.0" y="1747.0" width="319.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="249.0" y="1758.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (23 samples, 27.06%)</title><rect x="246.0" y="1731.0" width="319.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="249.0" y="1742.0">tcp_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg_locked (23 samples, 27.06%)</title><rect x="246.0" y="1715.0" width="319.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="249.0" y="1726.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 1.18%)</title><rect x="246.0" y="1699.0" width="13.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="249.0" y="1710.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 1.18%)</title><rect x="246.0" y="1683.0" width="13.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="249.0" y="1694.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 4.71%)</title><rect x="259.9" y="1699.0" width="55.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="262.9" y="1710.0">sk_st..</text>
</g>
<g>
<title>__alloc_skb (4 samples, 4.71%)</title><rect x="259.9" y="1683.0" width="55.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="262.9" y="1694.0">__all..</text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (3 samples, 3.53%)</title><rect x="259.9" y="1667.0" width="41.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="262.9" y="1678.0">__k..</text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 2.35%)</title><rect x="259.9" y="1651.0" width="27.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="262.9" y="1662.0">_..</text>
</g>
<g>
<title>memset (1 samples, 1.18%)</title><rect x="287.6" y="1651.0" width="13.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="290.6" y="1662.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 1.18%)</title><rect x="301.5" y="1667.0" width="13.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="304.5" y="1678.0"></text>
</g>
<g>
<title>tcp_push (18 samples, 21.18%)</title><rect x="315.4" y="1699.0" width="249.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="318.4" y="1710.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (18 samples, 21.18%)</title><rect x="315.4" y="1683.0" width="249.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="318.4" y="1694.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_write_xmit (18 samples, 21.18%)</title><rect x="315.4" y="1667.0" width="249.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="318.4" y="1678.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (17 samples, 20.00%)</title><rect x="315.4" y="1651.0" width="236.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="318.4" y="1662.0">__tcp_transmit_skb</text>
</g>
<g>
<title>ip_queue_xmit (16 samples, 18.82%)</title><rect x="329.3" y="1635.0" width="222.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="332.3" y="1646.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (16 samples, 18.82%)</title><rect x="329.3" y="1619.0" width="222.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="332.3" y="1630.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (16 samples, 18.82%)</title><rect x="329.3" y="1603.0" width="222.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="332.3" y="1614.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (1 samples, 1.18%)</title><rect x="329.3" y="1587.0" width="13.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="332.3" y="1598.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 1.18%)</title><rect x="329.3" y="1571.0" width="13.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="332.3" y="1582.0"></text>
</g>
<g>
<title>ip_output (15 samples, 17.65%)</title><rect x="343.2" y="1587.0" width="208.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="346.2" y="1598.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (15 samples, 17.65%)</title><rect x="343.2" y="1571.0" width="208.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="346.2" y="1582.0">ip_finish_output</text>
</g>
<g>
<title>__ip_finish_output (14 samples, 16.47%)</title><rect x="343.2" y="1555.0" width="194.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="346.2" y="1566.0">__ip_finish_output</text>
</g>
<g>
<title>ip_finish_output2 (14 samples, 16.47%)</title><rect x="343.2" y="1539.0" width="194.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="346.2" y="1550.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (14 samples, 16.47%)</title><rect x="343.2" y="1523.0" width="194.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="346.2" y="1534.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq.part.20 (14 samples, 16.47%)</title><rect x="343.2" y="1507.0" width="194.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="346.2" y="1518.0">do_softirq.part.20</text>
</g>
<g>
<title>do_softirq_own_stack (14 samples, 16.47%)</title><rect x="343.2" y="1491.0" width="194.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="346.2" y="1502.0">do_softirq_own_stack</text>
</g>
<g>
<title>__softirqentry_text_start (14 samples, 16.47%)</title><rect x="343.2" y="1475.0" width="194.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="346.2" y="1486.0">__softirqentry_text_start</text>
</g>
<g>
<title>net_rx_action (14 samples, 16.47%)</title><rect x="343.2" y="1459.0" width="194.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="346.2" y="1470.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (14 samples, 16.47%)</title><rect x="343.2" y="1443.0" width="194.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="346.2" y="1454.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (14 samples, 16.47%)</title><rect x="343.2" y="1427.0" width="194.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="346.2" y="1438.0">__netif_receive_skb</text>
</g>
<g>
<title>__netif_receive_skb_one_core (14 samples, 16.47%)</title><rect x="343.2" y="1411.0" width="194.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="346.2" y="1422.0">__netif_receive_skb_one_c..</text>
</g>
<g>
<title>ip_rcv (14 samples, 16.47%)</title><rect x="343.2" y="1395.0" width="194.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="346.2" y="1406.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (14 samples, 16.47%)</title><rect x="343.2" y="1379.0" width="194.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="346.2" y="1390.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (14 samples, 16.47%)</title><rect x="343.2" y="1363.0" width="194.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="346.2" y="1374.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (14 samples, 16.47%)</title><rect x="343.2" y="1347.0" width="194.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="346.2" y="1358.0">ip_local_deliver_finish</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (14 samples, 16.47%)</title><rect x="343.2" y="1331.0" width="194.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="346.2" y="1342.0">ip_protocol_deliver_rcu</text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 1.18%)</title><rect x="343.2" y="1315.0" width="13.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="346.2" y="1326.0"></text>
</g>
<g>
<title>tcp_v4_rcv (13 samples, 15.29%)</title><rect x="357.1" y="1315.0" width="180.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="360.1" y="1326.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 1.18%)</title><rect x="384.8" y="1299.0" width="13.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="387.8" y="1310.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (10 samples, 11.76%)</title><rect x="398.7" y="1299.0" width="138.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="401.7" y="1310.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>tcp_rcv_established (10 samples, 11.76%)</title><rect x="398.7" y="1283.0" width="138.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="401.7" y="1294.0">tcp_rcv_established</text>
</g>
<g>
<title>tcp_ack (3 samples, 3.53%)</title><rect x="412.6" y="1267.0" width="41.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="415.6" y="1278.0">tcp..</text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 2.35%)</title><rect x="426.5" y="1251.0" width="27.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="429.5" y="1262.0">t..</text>
</g>
<g>
<title>__kfree_skb (1 samples, 1.18%)</title><rect x="426.5" y="1235.0" width="13.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="429.5" y="1246.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 1.18%)</title><rect x="426.5" y="1219.0" width="13.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="429.5" y="1230.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 1.18%)</title><rect x="426.5" y="1203.0" width="13.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="429.5" y="1214.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 1.18%)</title><rect x="426.5" y="1187.0" width="13.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="429.5" y="1198.0"></text>
</g>
<g>
<title>kfree (1 samples, 1.18%)</title><rect x="426.5" y="1171.0" width="13.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="429.5" y="1182.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 1.18%)</title><rect x="426.5" y="1155.0" width="13.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="429.5" y="1166.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 1.18%)</title><rect x="440.4" y="1235.0" width="13.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="443.4" y="1246.0"></text>
</g>
<g>
<title>tcp_data_ready (6 samples, 7.06%)</title><rect x="454.2" y="1267.0" width="83.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="457.2" y="1278.0">tcp_data_..</text>
</g>
<g>
<title>sock_def_readable (6 samples, 7.06%)</title><rect x="454.2" y="1251.0" width="83.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="457.2" y="1262.0">sock_def_..</text>
</g>
<g>
<title>__wake_up_sync_key (6 samples, 7.06%)</title><rect x="454.2" y="1235.0" width="83.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="457.2" y="1246.0">__wake_up..</text>
</g>
<g>
<title>__wake_up_common_lock (6 samples, 7.06%)</title><rect x="454.2" y="1219.0" width="83.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="457.2" y="1230.0">__wake_up..</text>
</g>
<g>
<title>__lock_text_start (6 samples, 7.06%)</title><rect x="454.2" y="1203.0" width="83.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="457.2" y="1214.0">__lock_te..</text>
</g>
<g>
<title>ipv4_mtu (1 samples, 1.18%)</title><rect x="537.5" y="1555.0" width="13.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="540.5" y="1566.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 1.18%)</title><rect x="551.4" y="1651.0" width="13.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="554.4" y="1662.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 1.18%)</title><rect x="565.3" y="1939.0" width="13.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="568.3" y="1950.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 1.18%)</title><rect x="565.3" y="1923.0" width="13.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="568.3" y="1934.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.put (3 samples, 3.53%)</title><rect x="579.2" y="1939.0" width="41.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="582.2" y="1950.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.upsert (3 samples, 3.53%)</title><rect x="579.2" y="1923.0" width="41.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="582.2" y="1934.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.upsert (3 samples, 3.53%)</title><rect x="579.2" y="1907.0" width="41.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="582.2" y="1918.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.upsert (3 samples, 3.53%)</title><rect x="579.2" y="1891.0" width="41.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="582.2" y="1902.0">ru/..</text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 3.53%)</title><rect x="579.2" y="1875.0" width="41.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="582.2" y="1886.0">jav..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 2.35%)</title><rect x="593.1" y="1859.0" width="27.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="596.1" y="1870.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 2.35%)</title><rect x="593.1" y="1843.0" width="27.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="596.1" y="1854.0">j..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 2.35%)</title><rect x="593.1" y="1827.0" width="27.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="596.1" y="1838.0">j..</text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 2.35%)</title><rect x="620.8" y="1987.0" width="27.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="623.8" y="1998.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1 samples, 1.18%)</title><rect x="620.8" y="1971.0" width="13.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="623.8" y="1982.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 1.18%)</title><rect x="634.7" y="1971.0" width="13.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="637.7" y="1982.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 1.18%)</title><rect x="634.7" y="1955.0" width="13.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="637.7" y="1966.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 2.35%)</title><rect x="648.6" y="1987.0" width="27.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="651.6" y="1998.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 1.18%)</title><rect x="662.5" y="1971.0" width="13.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="665.5" y="1982.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (4 samples, 4.71%)</title><rect x="676.4" y="2003.0" width="55.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="679.4" y="2014.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (4 samples, 4.71%)</title><rect x="676.4" y="1987.0" width="55.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="679.4" y="1998.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 1.18%)</title><rect x="676.4" y="1971.0" width="13.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="679.4" y="1982.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 1.18%)</title><rect x="676.4" y="1955.0" width="13.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="679.4" y="1966.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 1.18%)</title><rect x="676.4" y="1939.0" width="13.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="679.4" y="1950.0"></text>
</g>
<g>
<title>__GI___recv (2 samples, 2.35%)</title><rect x="690.2" y="1971.0" width="27.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="693.2" y="1982.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 2.35%)</title><rect x="690.2" y="1955.0" width="27.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="693.2" y="1966.0">e..</text>
</g>
<g>
<title>do_syscall_64 (2 samples, 2.35%)</title><rect x="690.2" y="1939.0" width="27.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="693.2" y="1950.0">d..</text>
</g>
<g>
<title>__x64_sys_recvfrom (2 samples, 2.35%)</title><rect x="690.2" y="1923.0" width="27.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="693.2" y="1934.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (2 samples, 2.35%)</title><rect x="690.2" y="1907.0" width="27.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="693.2" y="1918.0">_..</text>
</g>
<g>
<title>sock_recvmsg (2 samples, 2.35%)</title><rect x="690.2" y="1891.0" width="27.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="693.2" y="1902.0">s..</text>
</g>
<g>
<title>inet6_recvmsg (2 samples, 2.35%)</title><rect x="690.2" y="1875.0" width="27.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="693.2" y="1886.0">i..</text>
</g>
<g>
<title>tcp_recvmsg (2 samples, 2.35%)</title><rect x="690.2" y="1859.0" width="27.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="693.2" y="1870.0">t..</text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 1.18%)</title><rect x="690.2" y="1843.0" width="13.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="693.2" y="1854.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 1.18%)</title><rect x="690.2" y="1827.0" width="13.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="693.2" y="1838.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 1.18%)</title><rect x="704.1" y="1843.0" width="13.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="707.1" y="1854.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 1.18%)</title><rect x="718.0" y="1971.0" width="13.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="721.0" y="1982.0"></text>
</g>
<g>
<title>start_thread (33 samples, 38.82%)</title><rect x="731.9" y="2051.0" width="458.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="734.9" y="2062.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (33 samples, 38.82%)</title><rect x="731.9" y="2035.0" width="458.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="734.9" y="2046.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (33 samples, 38.82%)</title><rect x="731.9" y="2019.0" width="458.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="734.9" y="2030.0">Thread::call_run()</text>
</g>
<g>
<title>JavaThread::run() (33 samples, 38.82%)</title><rect x="731.9" y="2003.0" width="458.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="734.9" y="2014.0">JavaThread::run()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (33 samples, 38.82%)</title><rect x="731.9" y="1987.0" width="458.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="734.9" y="1998.0">CompileBroker::compiler_thread_loop()</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (33 samples, 38.82%)</title><rect x="731.9" y="1971.0" width="458.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="734.9" y="1982.0">CompileBroker::invoke_compiler_on_method(CompileTask*)</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (24 samples, 28.24%)</title><rect x="731.9" y="1955.0" width="333.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="734.9" y="1966.0">C2Compiler::compile_method(ciEnv*, ciMethod*,..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (24 samples, 28.24%)</title><rect x="731.9" y="1939.0" width="333.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="734.9" y="1950.0">Compile::Compile(ciEnv*, C2Compiler*, ciMetho..</text>
</g>
<g>
<title>Compile::Code_Gen() (14 samples, 16.47%)</title><rect x="731.9" y="1923.0" width="194.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="734.9" y="1934.0">Compile::Code_Gen()</text>
</g>
<g>
<title>Compile::Output() (1 samples, 1.18%)</title><rect x="731.9" y="1907.0" width="13.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="734.9" y="1918.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (1 samples, 1.18%)</title><rect x="731.9" y="1891.0" width="13.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="734.9" y="1902.0"></text>
</g>
<g>
<title>Matcher::match() (4 samples, 4.71%)</title><rect x="745.8" y="1907.0" width="55.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="748.8" y="1918.0">Match..</text>
</g>
<g>
<title>Matcher::find_shared(Node*) (2 samples, 2.35%)</title><rect x="745.8" y="1891.0" width="27.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="748.8" y="1902.0">M..</text>
</g>
<g>
<title>IfNode::Opcode() const (1 samples, 1.18%)</title><rect x="759.6" y="1875.0" width="13.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="762.6" y="1886.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (1 samples, 1.18%)</title><rect x="773.5" y="1891.0" width="13.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="776.5" y="1902.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (1 samples, 1.18%)</title><rect x="787.4" y="1891.0" width="13.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="790.4" y="1902.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (3 samples, 3.53%)</title><rect x="801.3" y="1907.0" width="41.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="804.3" y="1918.0">Pha..</text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (3 samples, 3.53%)</title><rect x="801.3" y="1891.0" width="41.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="804.3" y="1902.0">Pha..</text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (1 samples, 1.18%)</title><rect x="801.3" y="1875.0" width="13.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="804.3" y="1886.0"></text>
</g>
<g>
<title>Node_Backward_Iterator::next() (1 samples, 1.18%)</title><rect x="801.3" y="1859.0" width="13.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="804.3" y="1870.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (1 samples, 1.18%)</title><rect x="815.2" y="1875.0" width="13.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="818.2" y="1886.0"></text>
</g>
<g>
<title>MachNode::ideal_reg() const (1 samples, 1.18%)</title><rect x="815.2" y="1859.0" width="13.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="818.2" y="1870.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 1.18%)</title><rect x="829.1" y="1875.0" width="13.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="832.1" y="1886.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (6 samples, 7.06%)</title><rect x="842.9" y="1907.0" width="83.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="845.9" y="1918.0">PhaseChai..</text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (1 samples, 1.18%)</title><rect x="842.9" y="1891.0" width="13.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="845.9" y="1902.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (3 samples, 3.53%)</title><rect x="856.8" y="1891.0" width="41.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="859.8" y="1902.0">Pha..</text>
</g>
<g>
<title>CProjNode::is_block_proj() const (1 samples, 1.18%)</title><rect x="856.8" y="1875.0" width="13.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="859.8" y="1886.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 1.18%)</title><rect x="870.7" y="1875.0" width="13.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="873.7" y="1886.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (1 samples, 1.18%)</title><rect x="884.6" y="1875.0" width="13.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="887.6" y="1886.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (1 samples, 1.18%)</title><rect x="884.6" y="1859.0" width="13.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="887.6" y="1870.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 1.18%)</title><rect x="898.5" y="1891.0" width="13.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="901.5" y="1902.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 1.18%)</title><rect x="898.5" y="1875.0" width="13.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="901.5" y="1886.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 1.18%)</title><rect x="912.4" y="1891.0" width="13.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="915.4" y="1902.0"></text>
</g>
<g>
<title>Compile::Optimize() (5 samples, 5.88%)</title><rect x="926.2" y="1923.0" width="69.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="929.2" y="1934.0">Compile..</text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (1 samples, 1.18%)</title><rect x="926.2" y="1907.0" width="13.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="929.2" y="1918.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 1.18%)</title><rect x="926.2" y="1891.0" width="13.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="929.2" y="1902.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 1.18%)</title><rect x="926.2" y="1875.0" width="13.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="929.2" y="1886.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (1 samples, 1.18%)</title><rect x="926.2" y="1859.0" width="13.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="929.2" y="1870.0"></text>
</g>
<g>
<title>PhaseIdealLoop::remix_address_expressions(Node*) (1 samples, 1.18%)</title><rect x="926.2" y="1843.0" width="13.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="929.2" y="1854.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 1.18%)</title><rect x="926.2" y="1827.0" width="13.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="929.2" y="1838.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (1 samples, 1.18%)</title><rect x="940.1" y="1907.0" width="13.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="943.1" y="1918.0"></text>
</g>
<g>
<title>TypeAryPtr::add_offset(long) const (1 samples, 1.18%)</title><rect x="940.1" y="1891.0" width="13.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="943.1" y="1902.0"></text>
</g>
<g>
<title>TypeAryPtr::make(TypePtr::PTR, ciObject*, TypeAry const*, ciKlass*, bool, int, int, TypePtr const*, int, bool) (1 samples, 1.18%)</title><rect x="940.1" y="1875.0" width="13.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="943.1" y="1886.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 1.18%)</title><rect x="954.0" y="1907.0" width="13.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="957.0" y="1918.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 1.18%)</title><rect x="954.0" y="1891.0" width="13.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="957.0" y="1902.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 1.18%)</title><rect x="954.0" y="1875.0" width="13.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="957.0" y="1886.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (1 samples, 1.18%)</title><rect x="954.0" y="1859.0" width="13.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="957.0" y="1870.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 1.18%)</title><rect x="954.0" y="1843.0" width="13.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="957.0" y="1854.0"></text>
</g>
<g>
<title>PhaseIterGVN::PhaseIterGVN(PhaseGVN*) (1 samples, 1.18%)</title><rect x="967.9" y="1907.0" width="13.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="970.9" y="1918.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (1 samples, 1.18%)</title><rect x="967.9" y="1891.0" width="13.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="970.9" y="1902.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 1.18%)</title><rect x="981.8" y="1907.0" width="13.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="984.8" y="1918.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 1.18%)</title><rect x="981.8" y="1891.0" width="13.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="984.8" y="1902.0"></text>
</g>
<g>
<title>AddPNode::Opcode() const (1 samples, 1.18%)</title><rect x="981.8" y="1875.0" width="13.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="984.8" y="1886.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (1 samples, 1.18%)</title><rect x="995.6" y="1923.0" width="13.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="998.6" y="1934.0"></text>
</g>
<g>
<title>ConLNode::Opcode() const (1 samples, 1.18%)</title><rect x="995.6" y="1907.0" width="13.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="998.6" y="1918.0"></text>
</g>
<g>
<title>CompileWrapper::CompileWrapper(Compile*) (1 samples, 1.18%)</title><rect x="1009.5" y="1923.0" width="13.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1012.5" y="1934.0"></text>
</g>
<g>
<title>Type::Initialize(Compile*) (1 samples, 1.18%)</title><rect x="1009.5" y="1907.0" width="13.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1012.5" y="1918.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 1.18%)</title><rect x="1009.5" y="1891.0" width="13.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1012.5" y="1902.0"></text>
</g>
<g>
<title>TypeAry::hash() const (1 samples, 1.18%)</title><rect x="1009.5" y="1875.0" width="13.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1012.5" y="1886.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 2.35%)</title><rect x="1023.4" y="1923.0" width="27.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1026.4" y="1934.0">P..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 2.35%)</title><rect x="1023.4" y="1907.0" width="27.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1026.4" y="1918.0">P..</text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 2.35%)</title><rect x="1023.4" y="1891.0" width="27.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1026.4" y="1902.0">P..</text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 2.35%)</title><rect x="1023.4" y="1875.0" width="27.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1026.4" y="1886.0">P..</text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 2.35%)</title><rect x="1023.4" y="1859.0" width="27.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1026.4" y="1870.0">P..</text>
</g>
<g>
<title>Parse::do_call() (2 samples, 2.35%)</title><rect x="1023.4" y="1843.0" width="27.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1026.4" y="1854.0">P..</text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 2.35%)</title><rect x="1023.4" y="1827.0" width="27.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1026.4" y="1838.0">P..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 2.35%)</title><rect x="1023.4" y="1811.0" width="27.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1026.4" y="1822.0">P..</text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 2.35%)</title><rect x="1023.4" y="1795.0" width="27.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1026.4" y="1806.0">P..</text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 2.35%)</title><rect x="1023.4" y="1779.0" width="27.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1026.4" y="1790.0">P..</text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 2.35%)</title><rect x="1023.4" y="1763.0" width="27.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1026.4" y="1774.0">P..</text>
</g>
<g>
<title>Parse::do_call() (2 samples, 2.35%)</title><rect x="1023.4" y="1747.0" width="27.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1026.4" y="1758.0">P..</text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 1.18%)</title><rect x="1023.4" y="1731.0" width="13.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1026.4" y="1742.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 1.18%)</title><rect x="1023.4" y="1715.0" width="13.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1026.4" y="1726.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 1.18%)</title><rect x="1023.4" y="1699.0" width="13.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1026.4" y="1710.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 1.18%)</title><rect x="1023.4" y="1683.0" width="13.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1026.4" y="1694.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 1.18%)</title><rect x="1023.4" y="1667.0" width="13.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1026.4" y="1678.0"></text>
</g>
<g>
<title>Parse::return_current(Node*) (1 samples, 1.18%)</title><rect x="1023.4" y="1651.0" width="13.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1026.4" y="1662.0"></text>
</g>
<g>
<title>Parse::call_register_finalizer() (1 samples, 1.18%)</title><rect x="1023.4" y="1635.0" width="13.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1026.4" y="1646.0"></text>
</g>
<g>
<title>PhaseTransform::longcon(long) (1 samples, 1.18%)</title><rect x="1023.4" y="1619.0" width="13.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1026.4" y="1630.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 1.18%)</title><rect x="1023.4" y="1603.0" width="13.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1026.4" y="1614.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 1.18%)</title><rect x="1023.4" y="1587.0" width="13.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1026.4" y="1598.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 1.18%)</title><rect x="1037.3" y="1731.0" width="13.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1040.3" y="1742.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 1.18%)</title><rect x="1037.3" y="1715.0" width="13.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1040.3" y="1726.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 1.18%)</title><rect x="1037.3" y="1699.0" width="13.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1040.3" y="1710.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 1.18%)</title><rect x="1037.3" y="1683.0" width="13.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1040.3" y="1694.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 1.18%)</title><rect x="1037.3" y="1667.0" width="13.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1040.3" y="1678.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 1.18%)</title><rect x="1037.3" y="1651.0" width="13.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1040.3" y="1662.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 1.18%)</title><rect x="1037.3" y="1635.0" width="13.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1040.3" y="1646.0"></text>
</g>
<g>
<title>DirectCallGenerator::generate(JVMState*) (1 samples, 1.18%)</title><rect x="1037.3" y="1619.0" width="13.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1040.3" y="1630.0"></text>
</g>
<g>
<title>GraphKit::set_results_for_java_call(CallJavaNode*, bool, bool) (1 samples, 1.18%)</title><rect x="1037.3" y="1603.0" width="13.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1040.3" y="1614.0"></text>
</g>
<g>
<title>GraphKit::make_slow_call_ex(Node*, ciInstanceKlass*, bool, bool) [clone .part.179] (1 samples, 1.18%)</title><rect x="1037.3" y="1587.0" width="13.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1040.3" y="1598.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 1.18%)</title><rect x="1037.3" y="1571.0" width="13.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1040.3" y="1582.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 1.18%)</title><rect x="1037.3" y="1555.0" width="13.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1040.3" y="1566.0"></text>
</g>
<g>
<title>ReplacedNodes::clone() (1 samples, 1.18%)</title><rect x="1037.3" y="1539.0" width="13.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1040.3" y="1550.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (1 samples, 1.18%)</title><rect x="1051.2" y="1923.0" width="13.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1054.2" y="1934.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (1 samples, 1.18%)</title><rect x="1051.2" y="1907.0" width="13.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1054.2" y="1918.0"></text>
</g>
<g>
<title>InstanceKlass::add_dependent_nmethod(nmethod*) (1 samples, 1.18%)</title><rect x="1051.2" y="1891.0" width="13.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1054.2" y="1902.0"></text>
</g>
<g>
<title>DependencyContext::add_dependent_nmethod(nmethod*, bool) (1 samples, 1.18%)</title><rect x="1051.2" y="1875.0" width="13.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1054.2" y="1886.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (9 samples, 10.59%)</title><rect x="1065.1" y="1955.0" width="124.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1068.1" y="1966.0">Compiler::compi..</text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (9 samples, 10.59%)</title><rect x="1065.1" y="1939.0" width="124.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1068.1" y="1950.0">Compilation::Co..</text>
</g>
<g>
<title>Compilation::compile_method() (9 samples, 10.59%)</title><rect x="1065.1" y="1923.0" width="124.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1068.1" y="1934.0">Compilation::co..</text>
</g>
<g>
<title>Compilation::compile_java_method() (7 samples, 8.24%)</title><rect x="1065.1" y="1907.0" width="97.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1068.1" y="1918.0">Compilation..</text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (3 samples, 3.53%)</title><rect x="1065.1" y="1891.0" width="41.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1068.1" y="1902.0">Com..</text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (2 samples, 2.35%)</title><rect x="1065.1" y="1875.0" width="27.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1068.1" y="1886.0">I..</text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (2 samples, 2.35%)</title><rect x="1065.1" y="1859.0" width="27.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1068.1" y="1870.0">I..</text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (2 samples, 2.35%)</title><rect x="1065.1" y="1843.0" width="27.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1068.1" y="1854.0">G..</text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (1 samples, 1.18%)</title><rect x="1065.1" y="1827.0" width="13.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1068.1" y="1838.0"></text>
</g>
<g>
<title>BlockListBuilder::set_leaders() (1 samples, 1.18%)</title><rect x="1065.1" y="1811.0" width="13.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1068.1" y="1822.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (1 samples, 1.18%)</title><rect x="1065.1" y="1795.0" width="13.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1068.1" y="1806.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 1.18%)</title><rect x="1078.9" y="1827.0" width="13.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1081.9" y="1838.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 1.18%)</title><rect x="1078.9" y="1811.0" width="13.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1081.9" y="1822.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 1.18%)</title><rect x="1078.9" y="1795.0" width="13.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1081.9" y="1806.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 1.18%)</title><rect x="1078.9" y="1779.0" width="13.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1081.9" y="1790.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 1.18%)</title><rect x="1078.9" y="1763.0" width="13.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1081.9" y="1774.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (1 samples, 1.18%)</title><rect x="1078.9" y="1747.0" width="13.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1081.9" y="1758.0"></text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (1 samples, 1.18%)</title><rect x="1078.9" y="1731.0" width="13.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1081.9" y="1742.0"></text>
</g>
<g>
<title>BlockListBuilder::set_leaders() (1 samples, 1.18%)</title><rect x="1078.9" y="1715.0" width="13.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1081.9" y="1726.0"></text>
</g>
<g>
<title>BlockListBuilder::make_block_at(int, BlockBegin*) (1 samples, 1.18%)</title><rect x="1078.9" y="1699.0" width="13.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1081.9" y="1710.0"></text>
</g>
<g>
<title>BlockBegin::BlockBegin(int) (1 samples, 1.18%)</title><rect x="1078.9" y="1683.0" width="13.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1081.9" y="1694.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 1.18%)</title><rect x="1078.9" y="1667.0" width="13.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1081.9" y="1678.0"></text>
</g>
<g>
<title>IR::eliminate_null_checks() (1 samples, 1.18%)</title><rect x="1092.8" y="1875.0" width="13.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1095.8" y="1886.0"></text>
</g>
<g>
<title>Optimizer::eliminate_null_checks() (1 samples, 1.18%)</title><rect x="1092.8" y="1859.0" width="13.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1095.8" y="1870.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (2 samples, 2.35%)</title><rect x="1106.7" y="1891.0" width="27.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1109.7" y="1902.0">C..</text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (2 samples, 2.35%)</title><rect x="1106.7" y="1875.0" width="27.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1109.7" y="1886.0">L..</text>
</g>
<g>
<title>LIR_Assembler::emit_op1(LIR_Op1*) (2 samples, 2.35%)</title><rect x="1106.7" y="1859.0" width="27.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1109.7" y="1870.0">L..</text>
</g>
<g>
<title>LIR_Assembler::move_op(LIR_OprDesc*, LIR_OprDesc*, BasicType, LIR_PatchCode, CodeEmitInfo*, bool, bool, bool) (1 samples, 1.18%)</title><rect x="1106.7" y="1843.0" width="13.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1109.7" y="1854.0"></text>
</g>
<g>
<title>LIR_Assembler::reg2mem(LIR_OprDesc*, LIR_OprDesc*, BasicType, LIR_PatchCode, CodeEmitInfo*, bool, bool, bool) (1 samples, 1.18%)</title><rect x="1120.6" y="1843.0" width="13.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1123.6" y="1854.0"></text>
</g>
<g>
<title>Assembler::movl(Address, RegisterImpl*) (1 samples, 1.18%)</title><rect x="1120.6" y="1827.0" width="13.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1123.6" y="1838.0"></text>
</g>
<g>
<title>Assembler::emit_operand(RegisterImpl*, RegisterImpl*, RegisterImpl*, Address::ScaleFactor, int, RelocationHolder const&amp;, int) (1 samples, 1.18%)</title><rect x="1120.6" y="1811.0" width="13.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1123.6" y="1822.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (1 samples, 1.18%)</title><rect x="1134.5" y="1891.0" width="13.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1137.5" y="1902.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (1 samples, 1.18%)</title><rect x="1134.5" y="1875.0" width="13.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1137.5" y="1886.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (1 samples, 1.18%)</title><rect x="1134.5" y="1859.0" width="13.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1137.5" y="1870.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (1 samples, 1.18%)</title><rect x="1134.5" y="1843.0" width="13.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1137.5" y="1854.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_OpVisitState const&amp;, LIR_Op*) (1 samples, 1.18%)</title><rect x="1134.5" y="1827.0" width="13.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1137.5" y="1838.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_Op*, CodeEmitInfo*, bool) (1 samples, 1.18%)</title><rect x="1134.5" y="1811.0" width="13.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1137.5" y="1822.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) (1 samples, 1.18%)</title><rect x="1134.5" y="1795.0" width="13.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1137.5" y="1806.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data() (1 samples, 1.18%)</title><rect x="1148.4" y="1891.0" width="13.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1151.4" y="1902.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data(methodHandle const&amp;) (1 samples, 1.18%)</title><rect x="1148.4" y="1875.0" width="13.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1151.4" y="1886.0"></text>
</g>
<g>
<title>ciMethodData::load_data() (1 samples, 1.18%)</title><rect x="1148.4" y="1859.0" width="13.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1151.4" y="1870.0"></text>
</g>
<g>
<title>ciVirtualCallData::translate_from(ProfileData const*) (1 samples, 1.18%)</title><rect x="1148.4" y="1843.0" width="13.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1151.4" y="1854.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 1.18%)</title><rect x="1148.4" y="1827.0" width="13.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1151.4" y="1838.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 1.18%)</title><rect x="1148.4" y="1811.0" width="13.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1151.4" y="1822.0"></text>
</g>
<g>
<title>ClassLoaderData::holder_phantom() const (1 samples, 1.18%)</title><rect x="1148.4" y="1795.0" width="13.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1151.4" y="1806.0"></text>
</g>
<g>
<title>Dependencies::assert_evol_method(ciMethod*) (1 samples, 1.18%)</title><rect x="1162.2" y="1907.0" width="13.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1165.2" y="1918.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (1 samples, 1.18%)</title><rect x="1176.1" y="1907.0" width="13.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1179.1" y="1918.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (1 samples, 1.18%)</title><rect x="1176.1" y="1891.0" width="13.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1179.1" y="1902.0"></text>
</g>
<g>
<title>CodeBuffer::finalize_oop_references(methodHandle const&amp;) (1 samples, 1.18%)</title><rect x="1176.1" y="1875.0" width="13.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1179.1" y="1886.0"></text>
</g>
</g>
</svg>
