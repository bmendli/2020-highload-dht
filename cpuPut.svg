<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="965"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="965"> </text>
<g id="frames">
<g>
<title>all (1,715 samples, 100.00%)</title><rect x="10.0" y="931.0" width="1180.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="13.0" y="942.0">all</text>
</g>
<g>
<title>[C2 CompilerThre tid=16325] (3 samples, 0.17%)</title><rect x="10.0" y="915.0" width="2.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.17%)</title><rect x="10.0" y="899.0" width="2.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.17%)</title><rect x="10.0" y="883.0" width="2.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>JavaThread::run() (3 samples, 0.17%)</title><rect x="10.0" y="867.0" width="2.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (3 samples, 0.17%)</title><rect x="10.0" y="851.0" width="2.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (3 samples, 0.17%)</title><rect x="10.0" y="835.0" width="2.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (3 samples, 0.17%)</title><rect x="10.0" y="819.0" width="2.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (3 samples, 0.17%)</title><rect x="10.0" y="803.0" width="2.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (3 samples, 0.17%)</title><rect x="10.0" y="787.0" width="2.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (1 samples, 0.06%)</title><rect x="10.0" y="771.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (1 samples, 0.06%)</title><rect x="10.0" y="755.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.06%)</title><rect x="10.0" y="739.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.06%)</title><rect x="10.0" y="723.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>Compile::Optimize() (2 samples, 0.12%)</title><rect x="10.7" y="771.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.7" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (1 samples, 0.06%)</title><rect x="10.7" y="755.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.7" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.06%)</title><rect x="10.7" y="739.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="13.7" y="750.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.06%)</title><rect x="11.4" y="755.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="14.4" y="766.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.06%)</title><rect x="11.4" y="739.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="14.4" y="750.0"></text>
</g>
<g>
<title>LoadNNode::Opcode() const (1 samples, 0.06%)</title><rect x="11.4" y="723.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="14.4" y="734.0"></text>
</g>
<g>
<title>[G1 Refine#0 tid=16319] (3 samples, 0.17%)</title><rect x="12.1" y="915.0" width="2.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="15.1" y="926.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.17%)</title><rect x="12.1" y="899.0" width="2.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="15.1" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.17%)</title><rect x="12.1" y="883.0" width="2.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="15.1" y="894.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (3 samples, 0.17%)</title><rect x="12.1" y="867.0" width="2.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="15.1" y="878.0"></text>
</g>
<g>
<title>G1ConcurrentRefineThread::run_service() (3 samples, 0.17%)</title><rect x="12.1" y="851.0" width="2.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="15.1" y="862.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long) (3 samples, 0.17%)</title><rect x="12.1" y="835.0" width="2.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="15.1" y="846.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_concurrently(signed char*, unsigned int) (3 samples, 0.17%)</title><rect x="12.1" y="819.0" width="2.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="15.1" y="830.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;false, G1ConcurrentRefineOopClosure&gt;(MemRegion, G1ConcurrentRefineOopClosure*) (3 samples, 0.17%)</title><rect x="12.1" y="803.0" width="2.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="15.1" y="814.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (1 samples, 0.06%)</title><rect x="12.1" y="787.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="15.1" y="798.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ConcurrentRefineOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*) (2 samples, 0.12%)</title><rect x="12.8" y="787.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="15.8" y="798.0"></text>
</g>
<g>
<title>OtherRegionsTable::add_reference(void*, unsigned int) (1 samples, 0.06%)</title><rect x="12.8" y="771.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="15.8" y="782.0"></text>
</g>
<g>
<title>void G1ConcurrentRefineOopClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) [clone .isra.229] (1 samples, 0.06%)</title><rect x="13.4" y="771.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="16.4" y="782.0"></text>
</g>
<g>
<title>[G1 Young RemSet tid=16320] (2 samples, 0.12%)</title><rect x="14.1" y="915.0" width="1.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="17.1" y="926.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.12%)</title><rect x="14.1" y="899.0" width="1.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="17.1" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.12%)</title><rect x="14.1" y="883.0" width="1.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="17.1" y="894.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (2 samples, 0.12%)</title><rect x="14.1" y="867.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="17.1" y="878.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (2 samples, 0.12%)</title><rect x="14.1" y="851.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="17.1" y="862.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (1 samples, 0.06%)</title><rect x="14.1" y="835.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="17.1" y="846.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (1 samples, 0.06%)</title><rect x="14.1" y="819.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="17.1" y="830.0"></text>
</g>
<g>
<title>G1CollectionSet::update_young_region_prediction(HeapRegion*, unsigned long) (1 samples, 0.06%)</title><rect x="14.1" y="803.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="17.1" y="814.0"></text>
</g>
<g>
<title>SuspendibleThreadSet::join() (1 samples, 0.06%)</title><rect x="14.8" y="835.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="17.8" y="846.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="14.8" y="819.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="17.8" y="830.0"></text>
</g>
<g>
<title>[GC Thread#0 tid=16316] (3 samples, 0.17%)</title><rect x="15.5" y="915.0" width="2.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="18.5" y="926.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.17%)</title><rect x="15.5" y="899.0" width="2.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="18.5" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.17%)</title><rect x="15.5" y="883.0" width="2.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="18.5" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (3 samples, 0.17%)</title><rect x="15.5" y="867.0" width="2.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="18.5" y="878.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::work(unsigned int) (1 samples, 0.06%)</title><rect x="15.5" y="851.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="18.5" y="862.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (1 samples, 0.06%)</title><rect x="15.5" y="835.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="18.5" y="846.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::G1SerialFreeCollectionSetClosure::do_heap_region(HeapRegion*) (1 samples, 0.06%)</title><rect x="15.5" y="819.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="18.5" y="830.0"></text>
</g>
<g>
<title>SurvRateGroup::record_surviving_words(int, unsigned long) (1 samples, 0.06%)</title><rect x="15.5" y="803.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="18.5" y="814.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.06%)</title><rect x="16.2" y="851.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="19.2" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.06%)</title><rect x="16.2" y="835.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="19.2" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.06%)</title><rect x="16.2" y="819.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="19.2" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.06%)</title><rect x="16.2" y="803.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="19.2" y="814.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (1 samples, 0.06%)</title><rect x="16.9" y="851.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="19.9" y="862.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (1 samples, 0.06%)</title><rect x="16.9" y="835.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="19.9" y="846.0"></text>
</g>
<g>
<title>[GC Thread#1 tid=18874] (2 samples, 0.12%)</title><rect x="17.6" y="915.0" width="1.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="20.6" y="926.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.12%)</title><rect x="17.6" y="899.0" width="1.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="20.6" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.12%)</title><rect x="17.6" y="883.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="20.6" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.12%)</title><rect x="17.6" y="867.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="20.6" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (2 samples, 0.12%)</title><rect x="17.6" y="851.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="20.6" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.06%)</title><rect x="17.6" y="835.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="20.6" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.06%)</title><rect x="17.6" y="819.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="20.6" y="830.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.06%)</title><rect x="18.3" y="835.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="21.3" y="846.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (1 samples, 0.06%)</title><rect x="18.3" y="819.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="21.3" y="830.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (1 samples, 0.06%)</title><rect x="18.3" y="803.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="21.3" y="814.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (1 samples, 0.06%)</title><rect x="18.3" y="787.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="21.3" y="798.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.06%)</title><rect x="18.3" y="771.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="21.3" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.06%)</title><rect x="18.3" y="755.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="21.3" y="766.0"></text>
</g>
<g>
<title>[GC Thread#2 tid=18875] (3 samples, 0.17%)</title><rect x="18.9" y="915.0" width="2.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="21.9" y="926.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.17%)</title><rect x="18.9" y="899.0" width="2.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="21.9" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.17%)</title><rect x="18.9" y="883.0" width="2.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="21.9" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (3 samples, 0.17%)</title><rect x="18.9" y="867.0" width="2.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="21.9" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (3 samples, 0.17%)</title><rect x="18.9" y="851.0" width="2.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="21.9" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.06%)</title><rect x="18.9" y="835.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="21.9" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.06%)</title><rect x="18.9" y="819.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="21.9" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.06%)</title><rect x="18.9" y="803.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="21.9" y="814.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.12%)</title><rect x="19.6" y="835.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="22.6" y="846.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (2 samples, 0.12%)</title><rect x="19.6" y="819.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="22.6" y="830.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (2 samples, 0.12%)</title><rect x="19.6" y="803.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="22.6" y="814.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (2 samples, 0.12%)</title><rect x="19.6" y="787.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="22.6" y="798.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (2 samples, 0.12%)</title><rect x="19.6" y="771.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="22.6" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.06%)</title><rect x="20.3" y="755.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="23.3" y="766.0"></text>
</g>
<g>
<title>[GC Thread#3 tid=18876] (3 samples, 0.17%)</title><rect x="21.0" y="915.0" width="2.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="24.0" y="926.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.17%)</title><rect x="21.0" y="899.0" width="2.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="24.0" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.17%)</title><rect x="21.0" y="883.0" width="2.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="24.0" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (3 samples, 0.17%)</title><rect x="21.0" y="867.0" width="2.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="24.0" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (3 samples, 0.17%)</title><rect x="21.0" y="851.0" width="2.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="24.0" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.06%)</title><rect x="21.0" y="835.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="24.0" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.06%)</title><rect x="21.0" y="819.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="24.0" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.06%)</title><rect x="21.0" y="803.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="24.0" y="814.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.12%)</title><rect x="21.7" y="835.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="24.7" y="846.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (2 samples, 0.12%)</title><rect x="21.7" y="819.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="24.7" y="830.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (2 samples, 0.12%)</title><rect x="21.7" y="803.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="24.7" y="814.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (2 samples, 0.12%)</title><rect x="21.7" y="787.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="24.7" y="798.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (2 samples, 0.12%)</title><rect x="21.7" y="771.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="24.7" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.12%)</title><rect x="21.7" y="755.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="24.7" y="766.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.06%)</title><rect x="22.4" y="739.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="25.4" y="750.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="22.4" y="723.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="25.4" y="734.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="22.4" y="707.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="25.4" y="718.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="22.4" y="691.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="25.4" y="702.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="22.4" y="675.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="25.4" y="686.0"></text>
</g>
<g>
<title>mem_cgroup_try_charge (1 samples, 0.06%)</title><rect x="22.4" y="659.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="25.4" y="670.0"></text>
</g>
<g>
<title>try_charge (1 samples, 0.06%)</title><rect x="22.4" y="643.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="25.4" y="654.0"></text>
</g>
<g>
<title>[GC Thread#4 tid=18877] (3 samples, 0.17%)</title><rect x="23.1" y="915.0" width="2.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="26.1" y="926.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.17%)</title><rect x="23.1" y="899.0" width="2.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="26.1" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.17%)</title><rect x="23.1" y="883.0" width="2.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="26.1" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (3 samples, 0.17%)</title><rect x="23.1" y="867.0" width="2.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="26.1" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (3 samples, 0.17%)</title><rect x="23.1" y="851.0" width="2.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="26.1" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.06%)</title><rect x="23.1" y="835.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="26.1" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.06%)</title><rect x="23.1" y="819.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="26.1" y="830.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.12%)</title><rect x="23.8" y="835.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="26.8" y="846.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (2 samples, 0.12%)</title><rect x="23.8" y="819.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="26.8" y="830.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (2 samples, 0.12%)</title><rect x="23.8" y="803.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="26.8" y="814.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (2 samples, 0.12%)</title><rect x="23.8" y="787.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="26.8" y="798.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.06%)</title><rect x="23.8" y="771.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="26.8" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.06%)</title><rect x="23.8" y="755.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="26.8" y="766.0"></text>
</g>
<g>
<title>HeapRegionRemSetIterator::has_next(unsigned long&amp;) (1 samples, 0.06%)</title><rect x="24.4" y="771.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="27.4" y="782.0"></text>
</g>
<g>
<title>[GC Thread#5 tid=18878] (3 samples, 0.17%)</title><rect x="25.1" y="915.0" width="2.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="28.1" y="926.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.17%)</title><rect x="25.1" y="899.0" width="2.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="28.1" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.17%)</title><rect x="25.1" y="883.0" width="2.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="28.1" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (3 samples, 0.17%)</title><rect x="25.1" y="867.0" width="2.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="28.1" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.06%)</title><rect x="25.1" y="851.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="28.1" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.06%)</title><rect x="25.1" y="835.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="28.1" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.06%)</title><rect x="25.1" y="819.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="28.1" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.06%)</title><rect x="25.1" y="803.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="28.1" y="814.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (1 samples, 0.06%)</title><rect x="25.8" y="851.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="28.8" y="862.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (1 samples, 0.06%)</title><rect x="25.8" y="835.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="28.8" y="846.0"></text>
</g>
<g>
<title>sem_post@@GLIBC_2.2.5 (1 samples, 0.06%)</title><rect x="26.5" y="851.0" width="0.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="29.5" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="26.5" y="835.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="29.5" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="26.5" y="819.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="29.5" y="830.0"></text>
</g>
<g>
<title>[GC Thread#6 tid=18879] (3 samples, 0.17%)</title><rect x="27.2" y="915.0" width="2.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="30.2" y="926.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.17%)</title><rect x="27.2" y="899.0" width="2.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="30.2" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.17%)</title><rect x="27.2" y="883.0" width="2.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="30.2" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (3 samples, 0.17%)</title><rect x="27.2" y="867.0" width="2.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="30.2" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (3 samples, 0.17%)</title><rect x="27.2" y="851.0" width="2.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="30.2" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.06%)</title><rect x="27.2" y="835.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="30.2" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.06%)</title><rect x="27.2" y="819.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="30.2" y="830.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.12%)</title><rect x="27.9" y="835.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="30.9" y="846.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (2 samples, 0.12%)</title><rect x="27.9" y="819.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="30.9" y="830.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (2 samples, 0.12%)</title><rect x="27.9" y="803.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="30.9" y="814.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (2 samples, 0.12%)</title><rect x="27.9" y="787.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="30.9" y="798.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (2 samples, 0.12%)</title><rect x="27.9" y="771.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="30.9" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.06%)</title><rect x="28.6" y="755.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="31.6" y="766.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.06%)</title><rect x="28.6" y="739.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="31.6" y="750.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="28.6" y="723.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="31.6" y="734.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="28.6" y="707.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="31.6" y="718.0"></text>
</g>
<g>
<title>[GC Thread#7 tid=18880] (3 samples, 0.17%)</title><rect x="29.3" y="915.0" width="2.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="32.3" y="926.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.17%)</title><rect x="29.3" y="899.0" width="2.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="32.3" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.17%)</title><rect x="29.3" y="883.0" width="2.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="32.3" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (3 samples, 0.17%)</title><rect x="29.3" y="867.0" width="2.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="32.3" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (3 samples, 0.17%)</title><rect x="29.3" y="851.0" width="2.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="32.3" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.06%)</title><rect x="29.3" y="835.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="32.3" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.06%)</title><rect x="29.3" y="819.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="32.3" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.06%)</title><rect x="29.3" y="803.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="32.3" y="814.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.06%)</title><rect x="29.3" y="787.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="32.3" y="798.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.12%)</title><rect x="30.0" y="835.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="33.0" y="846.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (2 samples, 0.12%)</title><rect x="30.0" y="819.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="33.0" y="830.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (2 samples, 0.12%)</title><rect x="30.0" y="803.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="33.0" y="814.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (2 samples, 0.12%)</title><rect x="30.0" y="787.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="33.0" y="798.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (2 samples, 0.12%)</title><rect x="30.0" y="771.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="33.0" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.06%)</title><rect x="30.6" y="755.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="33.6" y="766.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=16337] (346 samples, 20.17%)</title><rect x="31.3" y="915.0" width="238.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="34.3" y="926.0">[NIO Selector #0 tid=16337]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (346 samples, 20.17%)</title><rect x="31.3" y="899.0" width="238.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="34.3" y="910.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (9 samples, 0.52%)</title><rect x="32.0" y="883.0" width="6.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="35.0" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (9 samples, 0.52%)</title><rect x="32.0" y="867.0" width="6.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="35.0" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.06%)</title><rect x="37.5" y="851.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="40.5" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (59 samples, 3.44%)</title><rect x="38.2" y="883.0" width="40.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="41.2" y="894.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (3 samples, 0.17%)</title><rect x="38.2" y="867.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="41.2" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (56 samples, 3.27%)</title><rect x="40.3" y="867.0" width="38.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="43.3" y="878.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (3 samples, 0.17%)</title><rect x="46.5" y="851.0" width="2.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="49.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="48.5" y="851.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="51.5" y="862.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.06%)</title><rect x="48.5" y="835.0" width="0.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="51.5" y="846.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.06%)</title><rect x="49.2" y="851.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="52.2" y="862.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.06%)</title><rect x="49.9" y="851.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="52.9" y="862.0"></text>
</g>
<g>
<title>clock_gettime@plt (1 samples, 0.06%)</title><rect x="50.6" y="851.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="53.6" y="862.0"></text>
</g>
<g>
<title>epoll_wait (36 samples, 2.10%)</title><rect x="51.3" y="851.0" width="24.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="54.3" y="862.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (29 samples, 1.69%)</title><rect x="56.1" y="835.0" width="20.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="59.1" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (28 samples, 1.63%)</title><rect x="56.1" y="819.0" width="19.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="59.1" y="830.0"></text>
</g>
<g>
<title>fput (1 samples, 0.06%)</title><rect x="59.5" y="803.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="62.5" y="814.0"></text>
</g>
<g>
<title>sys_epoll_wait (22 samples, 1.28%)</title><rect x="60.2" y="803.0" width="15.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="63.2" y="814.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.06%)</title><rect x="60.2" y="787.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="63.2" y="798.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="60.2" y="771.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="63.2" y="782.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.06%)</title><rect x="60.2" y="755.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="63.2" y="766.0"></text>
</g>
<g>
<title>ep_poll (21 samples, 1.22%)</title><rect x="60.9" y="787.0" width="14.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="63.9" y="798.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.23%)</title><rect x="61.6" y="771.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="64.6" y="782.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rbx (1 samples, 0.06%)</title><rect x="64.4" y="771.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="67.4" y="782.0"></text>
</g>
<g>
<title>ep_scan_ready_list (5 samples, 0.29%)</title><rect x="65.0" y="771.0" width="3.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="68.0" y="782.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.17%)</title><rect x="65.0" y="755.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="68.0" y="766.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.12%)</title><rect x="67.1" y="755.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="70.1" y="766.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (1 samples, 0.06%)</title><rect x="67.8" y="739.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="70.8" y="750.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.06%)</title><rect x="67.8" y="723.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="70.8" y="734.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.06%)</title><rect x="67.8" y="707.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="70.8" y="718.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.06%)</title><rect x="68.5" y="771.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="71.5" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (9 samples, 0.52%)</title><rect x="69.2" y="771.0" width="6.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="72.2" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (9 samples, 0.52%)</title><rect x="69.2" y="755.0" width="6.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="72.2" y="766.0"></text>
</g>
<g>
<title>schedule (9 samples, 0.52%)</title><rect x="69.2" y="739.0" width="6.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="72.2" y="750.0"></text>
</g>
<g>
<title>__schedule (8 samples, 0.47%)</title><rect x="69.9" y="723.0" width="5.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="72.9" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (8 samples, 0.47%)</title><rect x="69.9" y="707.0" width="5.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="72.9" y="718.0"></text>
</g>
<g>
<title>sys_epoll_wait (1 samples, 0.06%)</title><rect x="75.4" y="819.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="78.4" y="830.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.23%)</title><rect x="76.1" y="851.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="79.1" y="862.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.23%)</title><rect x="76.1" y="835.0" width="2.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="79.1" y="846.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.12%)</title><rect x="76.1" y="819.0" width="1.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="79.1" y="830.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.12%)</title><rect x="76.1" y="803.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="79.1" y="814.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.12%)</title><rect x="77.4" y="819.0" width="1.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="80.4" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (277 samples, 16.15%)</title><rect x="78.8" y="883.0" width="190.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="81.8" y="894.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (274 samples, 15.98%)</title><rect x="80.2" y="867.0" width="188.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="83.2" y="878.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (228 samples, 13.29%)</title><rect x="80.2" y="851.0" width="156.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="83.2" y="862.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (208 samples, 12.13%)</title><rect x="82.2" y="835.0" width="143.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="85.2" y="846.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (208 samples, 12.13%)</title><rect x="82.2" y="819.0" width="143.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="85.2" y="830.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (207 samples, 12.07%)</title><rect x="82.2" y="803.0" width="142.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="85.2" y="814.0">RequestHandler1_pu..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (169 samples, 9.85%)</title><rect x="82.2" y="787.0" width="116.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="85.2" y="798.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (164 samples, 9.56%)</title><rect x="82.9" y="771.0" width="112.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="85.9" y="782.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.12%)</title><rect x="82.9" y="755.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="85.9" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.06%)</title><rect x="83.6" y="739.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="86.6" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.06%)</title><rect x="83.6" y="723.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="86.6" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (162 samples, 9.45%)</title><rect x="84.3" y="755.0" width="111.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="87.3" y="766.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/net/Session.write (162 samples, 9.45%)</title><rect x="84.3" y="739.0" width="111.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="87.3" y="750.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (161 samples, 9.39%)</title><rect x="84.3" y="723.0" width="110.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="87.3" y="734.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (161 samples, 9.39%)</title><rect x="84.3" y="707.0" width="110.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="87.3" y="718.0">one/nio/net/N..</text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.12%)</title><rect x="85.0" y="691.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="88.0" y="702.0"></text>
</g>
<g>
<title>send (158 samples, 9.21%)</title><rect x="86.4" y="691.0" width="108.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="89.4" y="702.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (153 samples, 8.92%)</title><rect x="89.8" y="675.0" width="105.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="92.8" y="686.0">entry_SYSCALL..</text>
</g>
<g>
<title>do_syscall_64 (152 samples, 8.86%)</title><rect x="89.8" y="659.0" width="104.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="92.8" y="670.0">do_syscall_64</text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.06%)</title><rect x="90.5" y="643.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="93.5" y="654.0"></text>
</g>
<g>
<title>sys_sendto (150 samples, 8.75%)</title><rect x="91.2" y="643.0" width="103.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="94.2" y="654.0">sys_sendto</text>
</g>
<g>
<title>SYSC_sendto (150 samples, 8.75%)</title><rect x="91.2" y="627.0" width="103.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="94.2" y="638.0">SYSC_sendto</text>
</g>
<g>
<title>inet_sendmsg (1 samples, 0.06%)</title><rect x="91.2" y="611.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="94.2" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (148 samples, 8.63%)</title><rect x="91.9" y="611.0" width="101.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="94.9" y="622.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (145 samples, 8.45%)</title><rect x="91.9" y="595.0" width="99.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="94.9" y="606.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (145 samples, 8.45%)</title><rect x="91.9" y="579.0" width="99.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="94.9" y="590.0">tcp_sendmsg</text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.06%)</title><rect x="91.9" y="563.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="94.9" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (142 samples, 8.28%)</title><rect x="92.6" y="563.0" width="97.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="95.6" y="574.0">tcp_sendmsg..</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.12%)</title><rect x="93.3" y="547.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="96.3" y="558.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.06%)</title><rect x="93.3" y="531.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="96.3" y="542.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.06%)</title><rect x="93.9" y="531.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="96.9" y="542.0"></text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.12%)</title><rect x="94.6" y="547.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="97.6" y="558.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.12%)</title><rect x="94.6" y="531.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="97.6" y="542.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.06%)</title><rect x="96.0" y="547.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="99.0" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.12%)</title><rect x="96.7" y="547.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="99.7" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.12%)</title><rect x="96.7" y="531.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="99.7" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (2 samples, 0.12%)</title><rect x="96.7" y="515.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="99.7" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.12%)</title><rect x="96.7" y="499.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="99.7" y="510.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.06%)</title><rect x="97.4" y="483.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="100.4" y="494.0"></text>
</g>
<g>
<title>tcp_push (133 samples, 7.76%)</title><rect x="98.1" y="547.0" width="91.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="101.1" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (131 samples, 7.64%)</title><rect x="99.4" y="531.0" width="90.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="102.4" y="542.0">__tcp_push..</text>
</g>
<g>
<title>sched_clock_cpu (1 samples, 0.06%)</title><rect x="99.4" y="515.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="102.4" y="526.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.12%)</title><rect x="100.1" y="515.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="103.1" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (128 samples, 7.46%)</title><rect x="101.5" y="515.0" width="88.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="104.5" y="526.0">tcp_write_..</text>
</g>
<g>
<title>__tcp_transmit_skb (118 samples, 6.88%)</title><rect x="105.6" y="499.0" width="81.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="108.6" y="510.0">__tcp_tra..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.06%)</title><rect x="107.7" y="483.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="110.7" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (114 samples, 6.65%)</title><rect x="108.4" y="483.0" width="78.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="111.4" y="494.0">ip_queue_..</text>
</g>
<g>
<title>ip_local_out (112 samples, 6.53%)</title><rect x="109.1" y="467.0" width="77.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="112.1" y="478.0">ip_local_..</text>
</g>
<g>
<title>__ip_local_out (26 samples, 1.52%)</title><rect x="109.1" y="451.0" width="17.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="112.1" y="462.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.06%)</title><rect x="109.1" y="435.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="112.1" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.06%)</title><rect x="109.8" y="435.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="112.8" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (1 samples, 0.06%)</title><rect x="110.5" y="435.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="113.5" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (23 samples, 1.34%)</title><rect x="111.1" y="435.0" width="15.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="114.1" y="446.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (6 samples, 0.35%)</title><rect x="111.1" y="419.0" width="4.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="114.1" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (6 samples, 0.35%)</title><rect x="111.1" y="403.0" width="4.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="114.1" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.06%)</title><rect x="114.6" y="387.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="117.6" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.17 (1 samples, 0.06%)</title><rect x="114.6" y="371.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="117.6" y="382.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.06%)</title><rect x="114.6" y="355.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="117.6" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="114.6" y="339.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="117.6" y="350.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.06%)</title><rect x="114.6" y="323.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="117.6" y="334.0"></text>
</g>
<g>
<title>rebalance_domains (1 samples, 0.06%)</title><rect x="114.6" y="307.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="117.6" y="318.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.06%)</title><rect x="114.6" y="291.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="117.6" y="302.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="114.6" y="275.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="117.6" y="286.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (16 samples, 0.93%)</title><rect x="115.3" y="419.0" width="11.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="118.3" y="430.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (1 samples, 0.06%)</title><rect x="115.3" y="403.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="118.3" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (12 samples, 0.70%)</title><rect x="116.0" y="403.0" width="8.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="119.0" y="414.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (2 samples, 0.12%)</title><rect x="118.7" y="387.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="121.7" y="398.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (1 samples, 0.06%)</title><rect x="120.1" y="387.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="123.1" y="398.0"></text>
</g>
<g>
<title>ipv4_pkt_to_tuple?[nf_conntrack_ipv4] (1 samples, 0.06%)</title><rect x="120.8" y="387.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="123.8" y="398.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (1 samples, 0.06%)</title><rect x="121.5" y="387.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="124.5" y="398.0"></text>
</g>
<g>
<title>ipv4_pkt_to_tuple?[nf_conntrack_ipv4] (1 samples, 0.06%)</title><rect x="121.5" y="371.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="124.5" y="382.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (2 samples, 0.12%)</title><rect x="122.2" y="387.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="125.2" y="398.0"></text>
</g>
<g>
<title>tcp_pkt_to_tuple?[nf_conntrack] (1 samples, 0.06%)</title><rect x="123.5" y="387.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="126.5" y="398.0"></text>
</g>
<g>
<title>tcp_error?[nf_conntrack] (2 samples, 0.12%)</title><rect x="124.2" y="403.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="127.2" y="414.0"></text>
</g>
<g>
<title>tcp_get_timeouts?[nf_conntrack] (1 samples, 0.06%)</title><rect x="125.6" y="403.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="128.6" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.06%)</title><rect x="126.3" y="419.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="129.3" y="430.0"></text>
</g>
<g>
<title>ip_output (85 samples, 4.96%)</title><rect x="127.0" y="451.0" width="58.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="130.0" y="462.0">ip_out..</text>
</g>
<g>
<title>ip_finish_output (83 samples, 4.84%)</title><rect x="127.0" y="435.0" width="57.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="130.0" y="446.0">ip_fin..</text>
</g>
<g>
<title>ip_finish_output2 (82 samples, 4.78%)</title><rect x="127.7" y="419.0" width="56.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="130.7" y="430.0">ip_fin..</text>
</g>
<g>
<title>__local_bh_enable_ip (68 samples, 3.97%)</title><rect x="130.4" y="403.0" width="46.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="133.4" y="414.0">__lo..</text>
</g>
<g>
<title>do_softirq.part.17 (68 samples, 3.97%)</title><rect x="130.4" y="387.0" width="46.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="133.4" y="398.0">do_s..</text>
</g>
<g>
<title>do_softirq_own_stack (65 samples, 3.79%)</title><rect x="132.5" y="371.0" width="44.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="135.5" y="382.0">do_s..</text>
</g>
<g>
<title>__softirqentry_text_start (65 samples, 3.79%)</title><rect x="132.5" y="355.0" width="44.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="135.5" y="366.0">__so..</text>
</g>
<g>
<title>net_rx_action (63 samples, 3.67%)</title><rect x="133.8" y="339.0" width="43.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="136.8" y="350.0">net_..</text>
</g>
<g>
<title>process_backlog (62 samples, 3.62%)</title><rect x="134.5" y="323.0" width="42.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="137.5" y="334.0">proc..</text>
</g>
<g>
<title>__netif_receive_skb (62 samples, 3.62%)</title><rect x="134.5" y="307.0" width="42.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="137.5" y="318.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_core (61 samples, 3.56%)</title><rect x="135.2" y="291.0" width="42.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="138.2" y="302.0">__n..</text>
</g>
<g>
<title>ip_rcv (59 samples, 3.44%)</title><rect x="136.6" y="275.0" width="40.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="139.6" y="286.0">ip_..</text>
</g>
<g>
<title>__indirect_thunk_start (1 samples, 0.06%)</title><rect x="136.6" y="259.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="139.6" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (56 samples, 3.27%)</title><rect x="137.3" y="259.0" width="38.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="140.3" y="270.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (56 samples, 3.27%)</title><rect x="137.3" y="243.0" width="38.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="140.3" y="254.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver_finish (52 samples, 3.03%)</title><rect x="137.3" y="227.0" width="35.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="140.3" y="238.0">ip_..</text>
</g>
<g>
<title>__xfrm_policy_check2.constprop.33 (1 samples, 0.06%)</title><rect x="138.0" y="211.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="141.0" y="222.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.06%)</title><rect x="138.7" y="211.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="141.7" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (49 samples, 2.86%)</title><rect x="139.4" y="211.0" width="33.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="142.4" y="222.0">tc..</text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.06%)</title><rect x="139.4" y="195.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="142.4" y="206.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.06%)</title><rect x="139.4" y="179.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="142.4" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (48 samples, 2.80%)</title><rect x="140.0" y="195.0" width="33.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="143.0" y="206.0">tc..</text>
</g>
<g>
<title>tcp_ack (1 samples, 0.06%)</title><rect x="140.7" y="179.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="143.7" y="190.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.06%)</title><rect x="141.4" y="179.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="144.4" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (45 samples, 2.62%)</title><rect x="142.1" y="179.0" width="31.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="145.1" y="190.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.12%)</title><rect x="142.1" y="163.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="145.1" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.12%)</title><rect x="142.1" y="147.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="145.1" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.12%)</title><rect x="142.1" y="131.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="145.1" y="142.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.06%)</title><rect x="142.8" y="115.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="145.8" y="126.0"></text>
</g>
<g>
<title>tcp_ack (12 samples, 0.70%)</title><rect x="143.5" y="163.0" width="8.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="146.5" y="174.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.41 (1 samples, 0.06%)</title><rect x="144.9" y="147.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="147.9" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (9 samples, 0.52%)</title><rect x="145.5" y="147.0" width="6.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="148.5" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.35%)</title><rect x="146.9" y="131.0" width="4.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="149.9" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.06%)</title><rect x="146.9" y="115.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="149.9" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.06%)</title><rect x="146.9" y="99.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="149.9" y="110.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.29%)</title><rect x="147.6" y="115.0" width="3.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="150.6" y="126.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.29%)</title><rect x="147.6" y="99.0" width="3.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="150.6" y="110.0"></text>
</g>
<g>
<title>skb_free_head (4 samples, 0.23%)</title><rect x="148.3" y="83.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="151.3" y="94.0"></text>
</g>
<g>
<title>kfree (4 samples, 0.23%)</title><rect x="148.3" y="67.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="151.3" y="78.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.06%)</title><rect x="150.4" y="51.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="153.4" y="62.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.41 (1 samples, 0.06%)</title><rect x="151.0" y="131.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="154.0" y="142.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.06%)</title><rect x="151.0" y="115.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="154.0" y="126.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.06%)</title><rect x="151.7" y="163.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="154.7" y="174.0"></text>
</g>
<g>
<title>tcp_data_queue (27 samples, 1.57%)</title><rect x="152.4" y="163.0" width="18.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="155.4" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (23 samples, 1.34%)</title><rect x="153.1" y="147.0" width="15.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="156.1" y="158.0"></text>
</g>
<g>
<title>__wake_up_sync_key (23 samples, 1.34%)</title><rect x="153.1" y="131.0" width="15.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="156.1" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (23 samples, 1.34%)</title><rect x="153.1" y="115.0" width="15.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="156.1" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (23 samples, 1.34%)</title><rect x="153.1" y="99.0" width="15.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="156.1" y="110.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.06%)</title><rect x="168.9" y="147.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="171.9" y="158.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.12%)</title><rect x="169.6" y="147.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="172.6" y="158.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.12%)</title><rect x="171.0" y="163.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="174.0" y="174.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.06%)</title><rect x="172.4" y="163.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="175.4" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.23%)</title><rect x="173.1" y="227.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="176.1" y="238.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.06%)</title><rect x="173.1" y="211.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="176.1" y="222.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.06%)</title><rect x="173.1" y="195.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="176.1" y="206.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (2 samples, 0.12%)</title><rect x="173.8" y="211.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="176.8" y="222.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.12%)</title><rect x="173.8" y="195.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="176.8" y="206.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_fn?[iptable_nat] (1 samples, 0.06%)</title><rect x="175.1" y="211.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="178.1" y="222.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (1 samples, 0.06%)</title><rect x="175.1" y="195.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="178.1" y="206.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.12%)</title><rect x="175.8" y="259.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="178.8" y="270.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (1 samples, 0.06%)</title><rect x="175.8" y="243.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="178.8" y="254.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.06%)</title><rect x="175.8" y="227.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="178.8" y="238.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack_ipv4] (1 samples, 0.06%)</title><rect x="176.5" y="243.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="179.5" y="254.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.06%)</title><rect x="176.5" y="227.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="179.5" y="238.0"></text>
</g>
<g>
<title>dev_queue_xmit (10 samples, 0.58%)</title><rect x="177.2" y="403.0" width="6.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="180.2" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (10 samples, 0.58%)</title><rect x="177.2" y="387.0" width="6.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="180.2" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.29%)</title><rect x="179.3" y="371.0" width="3.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="182.3" y="382.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.06%)</title><rect x="179.9" y="355.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="182.9" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.17%)</title><rect x="180.6" y="355.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="183.6" y="366.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.06%)</title><rect x="181.3" y="339.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="184.3" y="350.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.06%)</title><rect x="182.0" y="339.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="185.0" y="350.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.12%)</title><rect x="182.7" y="371.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="185.7" y="382.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.12%)</title><rect x="182.7" y="355.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="185.7" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.12%)</title><rect x="184.1" y="435.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="187.1" y="446.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack_ipv4] (1 samples, 0.06%)</title><rect x="184.8" y="419.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="187.8" y="430.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (1 samples, 0.06%)</title><rect x="184.8" y="403.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="187.8" y="414.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.06%)</title><rect x="185.5" y="451.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="188.5" y="462.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.06%)</title><rect x="186.1" y="467.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="189.1" y="478.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.23%)</title><rect x="186.8" y="499.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="189.8" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.12%)</title><rect x="188.2" y="483.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="191.2" y="494.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (2 samples, 0.12%)</title><rect x="188.2" y="467.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="191.2" y="478.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.12%)</title><rect x="188.2" y="451.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="191.2" y="462.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.12%)</title><rect x="188.2" y="435.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="191.2" y="446.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="188.9" y="419.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="191.9" y="430.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.06%)</title><rect x="189.6" y="547.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="192.6" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.06%)</title><rect x="189.6" y="531.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="192.6" y="542.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.06%)</title><rect x="189.6" y="515.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="192.6" y="526.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.06%)</title><rect x="190.3" y="563.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="193.3" y="574.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.06%)</title><rect x="191.0" y="563.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="194.0" y="574.0"></text>
</g>
<g>
<title>security_socket_sendmsg (3 samples, 0.17%)</title><rect x="191.6" y="595.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="194.6" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.12%)</title><rect x="192.3" y="579.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="195.3" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.12%)</title><rect x="192.3" y="563.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="195.3" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.06%)</title><rect x="193.7" y="611.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="196.7" y="622.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.06%)</title><rect x="193.7" y="595.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="196.7" y="606.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="193.7" y="579.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="196.7" y="590.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.06%)</title><rect x="193.7" y="563.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="196.7" y="574.0"></text>
</g>
<g>
<title>sys_sendto (1 samples, 0.06%)</title><rect x="194.4" y="659.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="197.4" y="670.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.06%)</title><rect x="195.1" y="723.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="198.1" y="734.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.06%)</title><rect x="195.1" y="707.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="198.1" y="718.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.06%)</title><rect x="195.1" y="691.0" width="0.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="198.1" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.23%)</title><rect x="195.8" y="771.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="198.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.17%)</title><rect x="196.5" y="755.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="199.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.06%)</title><rect x="196.5" y="739.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="199.5" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.12%)</title><rect x="197.1" y="739.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="200.1" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.06%)</title><rect x="197.8" y="723.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="200.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (5 samples, 0.29%)</title><rect x="198.5" y="787.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="201.5" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.29%)</title><rect x="198.5" y="771.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="201.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.06%)</title><rect x="198.5" y="755.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="201.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.06%)</title><rect x="198.5" y="739.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="201.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.06%)</title><rect x="198.5" y="723.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="201.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.12%)</title><rect x="199.2" y="755.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="202.2" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.12%)</title><rect x="199.2" y="739.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="202.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.12%)</title><rect x="199.2" y="723.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="202.2" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="199.9" y="707.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="202.9" y="718.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.12%)</title><rect x="200.6" y="755.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="203.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="201.3" y="739.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="204.3" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="201.3" y="723.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="204.3" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.06%)</title><rect x="201.3" y="707.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="204.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.put (33 samples, 1.92%)</title><rect x="202.0" y="787.0" width="22.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="205.0" y="798.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.06%)</title><rect x="202.0" y="771.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="205.0" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.06%)</title><rect x="202.0" y="755.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="205.0" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="202.0" y="739.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="205.0" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="202.0" y="723.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="205.0" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="202.0" y="707.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="205.0" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.06%)</title><rect x="202.0" y="691.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="205.0" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.06%)</title><rect x="202.0" y="675.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="205.0" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.06%)</title><rect x="202.0" y="659.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="205.0" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.06%)</title><rect x="202.7" y="771.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="205.7" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="202.7" y="755.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="205.7" y="766.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="202.7" y="739.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="205.7" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="202.7" y="723.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="205.7" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="202.7" y="707.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="205.7" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="202.7" y="691.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="205.7" y="702.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.06%)</title><rect x="202.7" y="675.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="205.7" y="686.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.06%)</title><rect x="202.7" y="659.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="205.7" y="670.0"></text>
</g>
<g>
<title>Monitor::lock() (1 samples, 0.06%)</title><rect x="202.7" y="643.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="205.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.upsert (31 samples, 1.81%)</title><rect x="203.3" y="771.0" width="21.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="206.3" y="782.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.upsert (31 samples, 1.81%)</title><rect x="203.3" y="755.0" width="21.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="206.3" y="766.0">r..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.06%)</title><rect x="203.3" y="739.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="206.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (1 samples, 0.06%)</title><rect x="203.3" y="723.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="206.3" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.12%)</title><rect x="204.0" y="739.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="207.0" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.12%)</title><rect x="204.0" y="723.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="207.0" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.12%)</title><rect x="204.0" y="707.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="207.0" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.12%)</title><rect x="204.0" y="691.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="207.0" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.12%)</title><rect x="204.0" y="675.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="207.0" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.12%)</title><rect x="204.0" y="659.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="207.0" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.12%)</title><rect x="204.0" y="643.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="207.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.upsert (28 samples, 1.63%)</title><rect x="205.4" y="739.0" width="19.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="208.4" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.upsert (28 samples, 1.63%)</title><rect x="205.4" y="723.0" width="19.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="208.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (28 samples, 1.63%)</title><rect x="205.4" y="707.0" width="19.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="208.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (28 samples, 1.63%)</title><rect x="205.4" y="691.0" width="19.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="208.4" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.12%)</title><rect x="214.3" y="675.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="217.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (13 samples, 0.76%)</title><rect x="215.7" y="675.0" width="9.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="218.7" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (13 samples, 0.76%)</title><rect x="215.7" y="659.0" width="9.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="218.7" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (13 samples, 0.76%)</title><rect x="215.7" y="643.0" width="9.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="218.7" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.17%)</title><rect x="215.7" y="627.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="218.7" y="638.0"></text>
</g>
<g>
<title>vectorizedMismatch (3 samples, 0.17%)</title><rect x="215.7" y="611.0" width="2.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="218.7" y="622.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (10 samples, 0.58%)</title><rect x="217.8" y="627.0" width="6.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="220.8" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.23%)</title><rect x="221.9" y="611.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="224.9" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.06%)</title><rect x="224.0" y="595.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="227.0" y="606.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.06%)</title><rect x="224.7" y="803.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="227.7" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.06%)</title><rect x="224.7" y="787.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="227.7" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.06%)</title><rect x="224.7" y="771.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="227.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.06%)</title><rect x="224.7" y="755.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="227.7" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.06%)</title><rect x="224.7" y="739.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="227.7" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (8 samples, 0.47%)</title><rect x="225.4" y="835.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="228.4" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (6 samples, 0.35%)</title><rect x="226.0" y="819.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="229.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.17%)</title><rect x="227.4" y="803.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="230.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.17%)</title><rect x="227.4" y="787.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="230.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.17%)</title><rect x="227.4" y="771.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="230.4" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.12%)</title><rect x="228.1" y="755.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="231.1" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.06%)</title><rect x="229.5" y="803.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="232.5" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.06%)</title><rect x="230.2" y="819.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="233.2" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.06%)</title><rect x="230.9" y="835.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="233.9" y="846.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.06%)</title><rect x="230.9" y="819.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="233.9" y="830.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.06%)</title><rect x="230.9" y="803.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="233.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.06%)</title><rect x="231.6" y="835.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="234.6" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.17%)</title><rect x="232.2" y="835.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="235.2" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.06%)</title><rect x="232.9" y="819.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="235.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="233.6" y="819.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="236.6" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="233.6" y="803.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="236.6" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="233.6" y="787.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="236.6" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.23%)</title><rect x="234.3" y="835.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="237.3" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.23%)</title><rect x="234.3" y="819.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="237.3" y="830.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (1 samples, 0.06%)</title><rect x="236.4" y="803.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="239.4" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (46 samples, 2.68%)</title><rect x="237.1" y="851.0" width="31.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="240.1" y="862.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (45 samples, 2.62%)</title><rect x="237.7" y="835.0" width="31.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="240.7" y="846.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (9 samples, 0.52%)</title><rect x="238.4" y="819.0" width="6.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="241.4" y="830.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.06%)</title><rect x="239.1" y="803.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="242.1" y="814.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.12%)</title><rect x="239.8" y="803.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="242.8" y="814.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned (2 samples, 0.12%)</title><rect x="241.2" y="803.0" width="1.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="244.2" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.17%)</title><rect x="242.6" y="803.0" width="2.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="245.6" y="814.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.06%)</title><rect x="243.9" y="787.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="246.9" y="798.0"></text>
</g>
<g>
<title>recv (35 samples, 2.04%)</title><rect x="244.6" y="819.0" width="24.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="247.6" y="830.0">r..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 1.57%)</title><rect x="250.1" y="803.0" width="18.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="253.1" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (27 samples, 1.57%)</title><rect x="250.1" y="787.0" width="18.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="253.1" y="798.0"></text>
</g>
<g>
<title>sys_recvfrom (22 samples, 1.28%)</title><rect x="253.6" y="771.0" width="15.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="256.6" y="782.0"></text>
</g>
<g>
<title>SYSC_recvfrom (19 samples, 1.11%)</title><rect x="253.6" y="755.0" width="13.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="256.6" y="766.0"></text>
</g>
<g>
<title>sock_recvmsg (17 samples, 0.99%)</title><rect x="253.6" y="739.0" width="11.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="256.6" y="750.0"></text>
</g>
<g>
<title>inet_recvmsg (15 samples, 0.87%)</title><rect x="253.6" y="723.0" width="10.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="256.6" y="734.0"></text>
</g>
<g>
<title>tcp_recvmsg (15 samples, 0.87%)</title><rect x="253.6" y="707.0" width="10.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="256.6" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.06%)</title><rect x="255.6" y="691.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="258.6" y="702.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.06%)</title><rect x="256.3" y="691.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="259.3" y="702.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.06%)</title><rect x="256.3" y="675.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="259.3" y="686.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.06%)</title><rect x="257.0" y="691.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="260.0" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (6 samples, 0.35%)</title><rect x="257.7" y="691.0" width="4.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="260.7" y="702.0"></text>
</g>
<g>
<title>__check_object_size (5 samples, 0.29%)</title><rect x="257.7" y="675.0" width="3.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="260.7" y="686.0"></text>
</g>
<g>
<title>__check_heap_object (2 samples, 0.12%)</title><rect x="259.1" y="659.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="262.1" y="670.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.06%)</title><rect x="260.4" y="659.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="263.4" y="670.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.06%)</title><rect x="261.1" y="675.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="264.1" y="686.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.12%)</title><rect x="261.8" y="691.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="264.8" y="702.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.06%)</title><rect x="262.5" y="675.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="265.5" y="686.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.06%)</title><rect x="263.2" y="691.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="266.2" y="702.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.12%)</title><rect x="263.9" y="723.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="266.9" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.06%)</title><rect x="264.6" y="707.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="267.6" y="718.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.06%)</title><rect x="264.6" y="691.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="267.6" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.06%)</title><rect x="264.6" y="675.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="267.6" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.12%)</title><rect x="265.3" y="739.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="268.3" y="750.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.12%)</title><rect x="265.3" y="723.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="268.3" y="734.0"></text>
</g>
<g>
<title>import_single_range (3 samples, 0.17%)</title><rect x="266.6" y="755.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="269.6" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.06%)</title><rect x="268.7" y="867.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="271.7" y="878.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.06%)</title><rect x="268.7" y="851.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="271.7" y="862.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.06%)</title><rect x="268.7" y="835.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="271.7" y="846.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=16338] (513 samples, 29.91%)</title><rect x="269.4" y="915.0" width="353.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="272.4" y="926.0">[NIO Selector #1 tid=16338]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (513 samples, 29.91%)</title><rect x="269.4" y="899.0" width="353.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="272.4" y="910.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.06%)</title><rect x="274.2" y="883.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="277.2" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (2 samples, 0.12%)</title><rect x="274.9" y="883.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="277.9" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.17%)</title><rect x="276.3" y="883.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="279.3" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.12%)</title><rect x="277.0" y="867.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="280.0" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (97 samples, 5.66%)</title><rect x="278.3" y="883.0" width="66.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="281.3" y="894.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (6 samples, 0.35%)</title><rect x="281.8" y="867.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="284.8" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (86 samples, 5.01%)</title><rect x="285.9" y="867.0" width="59.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="288.9" y="878.0">one/ni..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (3 samples, 0.17%)</title><rect x="292.8" y="851.0" width="2.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="295.8" y="862.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.29%)</title><rect x="294.9" y="851.0" width="3.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="297.9" y="862.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.12%)</title><rect x="294.9" y="835.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="297.9" y="846.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.06%)</title><rect x="295.5" y="819.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="298.5" y="830.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.06%)</title><rect x="295.5" y="803.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="298.5" y="814.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.06%)</title><rect x="295.5" y="787.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="298.5" y="798.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="295.5" y="771.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="298.5" y="782.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="295.5" y="755.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="298.5" y="766.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.06%)</title><rect x="295.5" y="739.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="298.5" y="750.0"></text>
</g>
<g>
<title>rebalance_domains (1 samples, 0.06%)</title><rect x="295.5" y="723.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="298.5" y="734.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.06%)</title><rect x="295.5" y="707.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="298.5" y="718.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="295.5" y="691.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="298.5" y="702.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (3 samples, 0.17%)</title><rect x="296.2" y="835.0" width="2.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="299.2" y="846.0"></text>
</g>
<g>
<title>__clock_gettime (6 samples, 0.35%)</title><rect x="298.3" y="851.0" width="4.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="301.3" y="862.0"></text>
</g>
<g>
<title>epoll_wait (62 samples, 3.62%)</title><rect x="302.4" y="851.0" width="42.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="305.4" y="862.0">epol..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (46 samples, 2.68%)</title><rect x="313.4" y="835.0" width="31.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="316.4" y="846.0">en..</text>
</g>
<g>
<title>do_syscall_64 (46 samples, 2.68%)</title><rect x="313.4" y="819.0" width="31.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="316.4" y="830.0">do..</text>
</g>
<g>
<title>ep_poll (1 samples, 0.06%)</title><rect x="315.5" y="803.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="318.5" y="814.0"></text>
</g>
<g>
<title>fput (3 samples, 0.17%)</title><rect x="316.2" y="803.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="319.2" y="814.0"></text>
</g>
<g>
<title>sys_epoll_wait (39 samples, 2.27%)</title><rect x="318.2" y="803.0" width="26.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="321.2" y="814.0">s..</text>
</g>
<g>
<title>__fdget (2 samples, 0.12%)</title><rect x="318.9" y="787.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="321.9" y="798.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.12%)</title><rect x="318.9" y="771.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="321.9" y="782.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.12%)</title><rect x="318.9" y="755.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="321.9" y="766.0"></text>
</g>
<g>
<title>ep_poll (36 samples, 2.10%)</title><rect x="320.3" y="787.0" width="24.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="323.3" y="798.0">e..</text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="326.5" y="771.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="329.5" y="782.0"></text>
</g>
<g>
<title>ep_scan_ready_list (14 samples, 0.82%)</title><rect x="327.2" y="771.0" width="9.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="330.2" y="782.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="327.2" y="755.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="330.2" y="766.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (1 samples, 0.06%)</title><rect x="327.9" y="755.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="330.9" y="766.0"></text>
</g>
<g>
<title>ep_send_events_proc (10 samples, 0.58%)</title><rect x="328.6" y="755.0" width="6.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="331.6" y="766.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (8 samples, 0.47%)</title><rect x="329.9" y="739.0" width="5.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="332.9" y="750.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 0.29%)</title><rect x="332.0" y="723.0" width="3.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="335.0" y="734.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.06%)</title><rect x="334.1" y="707.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="337.1" y="718.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.06%)</title><rect x="334.8" y="707.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="337.8" y="718.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.12%)</title><rect x="335.4" y="755.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="338.4" y="766.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.06%)</title><rect x="336.1" y="739.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="339.1" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.12%)</title><rect x="336.8" y="771.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="339.8" y="782.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.06%)</title><rect x="338.2" y="771.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="341.2" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (9 samples, 0.52%)</title><rect x="338.9" y="771.0" width="6.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="341.9" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (9 samples, 0.52%)</title><rect x="338.9" y="755.0" width="6.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="341.9" y="766.0"></text>
</g>
<g>
<title>schedule (8 samples, 0.47%)</title><rect x="339.6" y="739.0" width="5.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="342.6" y="750.0"></text>
</g>
<g>
<title>__schedule (8 samples, 0.47%)</title><rect x="339.6" y="723.0" width="5.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="342.6" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (7 samples, 0.41%)</title><rect x="340.3" y="707.0" width="4.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="343.3" y="718.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.06%)</title><rect x="344.4" y="691.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="347.4" y="702.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.06%)</title><rect x="344.4" y="675.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="347.4" y="686.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="344.4" y="659.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="347.4" y="670.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="344.4" y="643.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="347.4" y="654.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.06%)</title><rect x="344.4" y="627.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="347.4" y="638.0"></text>
</g>
<g>
<title>rebalance_domains (1 samples, 0.06%)</title><rect x="344.4" y="611.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="347.4" y="622.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.06%)</title><rect x="344.4" y="595.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="347.4" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="344.4" y="579.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="347.4" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (403 samples, 23.50%)</title><rect x="345.1" y="883.0" width="277.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="348.1" y="894.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (399 samples, 23.27%)</title><rect x="347.1" y="867.0" width="274.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="350.1" y="878.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (335 samples, 19.53%)</title><rect x="349.2" y="851.0" width="230.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="352.2" y="862.0">one/nio/http/HttpSession.proce..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (316 samples, 18.43%)</title><rect x="349.9" y="835.0" width="217.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="352.9" y="846.0">one/nio/http/HttpSession.hand..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (316 samples, 18.43%)</title><rect x="349.9" y="819.0" width="217.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="352.9" y="830.0">one/nio/http/HttpServer.handl..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (313 samples, 18.25%)</title><rect x="349.9" y="803.0" width="215.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="352.9" y="814.0">RequestHandler1_put.handleRe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (259 samples, 15.10%)</title><rect x="349.9" y="787.0" width="178.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="352.9" y="798.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (255 samples, 14.87%)</title><rect x="351.3" y="771.0" width="175.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="354.3" y="782.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 0.47%)</title><rect x="351.3" y="755.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="354.3" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="352.0" y="739.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="355.0" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.35%)</title><rect x="352.6" y="739.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="355.6" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.06%)</title><rect x="352.6" y="723.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="355.6" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.29%)</title><rect x="353.3" y="723.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="356.3" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.29%)</title><rect x="353.3" y="707.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="356.3" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.29%)</title><rect x="353.3" y="691.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="356.3" y="702.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.06%)</title><rect x="356.1" y="675.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="359.1" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.06%)</title><rect x="356.1" y="659.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="359.1" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (247 samples, 14.40%)</title><rect x="356.8" y="755.0" width="169.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="359.8" y="766.0">one/nio/net/Session.wr..</text>
</g>
<g>
<title>one/nio/net/Session.write (247 samples, 14.40%)</title><rect x="356.8" y="739.0" width="169.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="359.8" y="750.0">one/nio/net/Session.wr..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.06%)</title><rect x="356.8" y="723.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="359.8" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (246 samples, 14.34%)</title><rect x="357.5" y="723.0" width="169.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="360.5" y="734.0">one/nio/net/Session$Ar..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (244 samples, 14.23%)</title><rect x="358.8" y="707.0" width="167.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="361.8" y="718.0">one/nio/net/NativeSoc..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.12%)</title><rect x="362.3" y="691.0" width="1.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="365.3" y="702.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned (1 samples, 0.06%)</title><rect x="363.0" y="675.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="366.0" y="686.0"></text>
</g>
<g>
<title>send (237 samples, 13.82%)</title><rect x="363.7" y="691.0" width="163.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="366.7" y="702.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (229 samples, 13.35%)</title><rect x="369.2" y="675.0" width="157.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="372.2" y="686.0">entry_SYSCALL_64_aft..</text>
</g>
<g>
<title>do_syscall_64 (229 samples, 13.35%)</title><rect x="369.2" y="659.0" width="157.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="372.2" y="670.0">do_syscall_64</text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.06%)</title><rect x="372.6" y="643.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="375.6" y="654.0"></text>
</g>
<g>
<title>sys_sendto (223 samples, 13.00%)</title><rect x="373.3" y="643.0" width="153.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="376.3" y="654.0">sys_sendto</text>
</g>
<g>
<title>SYSC_sendto (219 samples, 12.77%)</title><rect x="374.7" y="627.0" width="150.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="377.7" y="638.0">SYSC_sendto</text>
</g>
<g>
<title>import_single_range (1 samples, 0.06%)</title><rect x="374.7" y="611.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="377.7" y="622.0"></text>
</g>
<g>
<title>inet_sendmsg (1 samples, 0.06%)</title><rect x="375.4" y="611.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="378.4" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (217 samples, 12.65%)</title><rect x="376.0" y="611.0" width="149.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="379.0" y="622.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (215 samples, 12.54%)</title><rect x="376.7" y="595.0" width="148.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="379.7" y="606.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (215 samples, 12.54%)</title><rect x="376.7" y="579.0" width="148.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="379.7" y="590.0">tcp_sendmsg</text>
</g>
<g>
<title>release_sock (1 samples, 0.06%)</title><rect x="376.7" y="563.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="379.7" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.06%)</title><rect x="376.7" y="547.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="379.7" y="558.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.06%)</title><rect x="376.7" y="531.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="379.7" y="542.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (214 samples, 12.48%)</title><rect x="377.4" y="563.0" width="147.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="380.4" y="574.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.17%)</title><rect x="380.9" y="547.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="383.9" y="558.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.17%)</title><rect x="380.9" y="531.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="383.9" y="542.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (11 samples, 0.64%)</title><rect x="382.9" y="547.0" width="7.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="385.9" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (9 samples, 0.52%)</title><rect x="384.3" y="531.0" width="6.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="387.3" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (2 samples, 0.12%)</title><rect x="384.3" y="515.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="387.3" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.12%)</title><rect x="384.3" y="499.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="387.3" y="510.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.12%)</title><rect x="384.3" y="483.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="387.3" y="494.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.06%)</title><rect x="385.7" y="515.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="388.7" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (5 samples, 0.29%)</title><rect x="386.4" y="515.0" width="3.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="389.4" y="526.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.06%)</title><rect x="389.1" y="499.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="392.1" y="510.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.06%)</title><rect x="389.8" y="515.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="392.8" y="526.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.12%)</title><rect x="390.5" y="547.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="393.5" y="558.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.06%)</title><rect x="391.2" y="531.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="394.2" y="542.0"></text>
</g>
<g>
<title>tcp_push (187 samples, 10.90%)</title><rect x="391.9" y="547.0" width="128.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="394.9" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (186 samples, 10.85%)</title><rect x="391.9" y="531.0" width="127.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="394.9" y="542.0">__tcp_push_pendi..</text>
</g>
<g>
<title>tcp_write_xmit (186 samples, 10.85%)</title><rect x="391.9" y="515.0" width="127.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="394.9" y="526.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (171 samples, 9.97%)</title><rect x="394.6" y="499.0" width="117.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="397.6" y="510.0">__tcp_transmit..</text>
</g>
<g>
<title>ip_queue_xmit (161 samples, 9.39%)</title><rect x="398.7" y="483.0" width="110.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="401.7" y="494.0">ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.12%)</title><rect x="398.7" y="467.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="401.7" y="478.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.06%)</title><rect x="399.4" y="451.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="402.4" y="462.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rdx (1 samples, 0.06%)</title><rect x="400.1" y="467.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="403.1" y="478.0"></text>
</g>
<g>
<title>ip_local_out (156 samples, 9.10%)</title><rect x="400.8" y="467.0" width="107.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="403.8" y="478.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (29 samples, 1.69%)</title><rect x="400.8" y="451.0" width="20.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="403.8" y="462.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (1 samples, 0.06%)</title><rect x="400.8" y="435.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="403.8" y="446.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn?[iptable_nat] (2 samples, 0.12%)</title><rect x="401.5" y="435.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="404.5" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (1 samples, 0.06%)</title><rect x="402.9" y="435.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="405.9" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (1 samples, 0.06%)</title><rect x="403.6" y="435.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="406.6" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (24 samples, 1.40%)</title><rect x="404.3" y="435.0" width="16.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="407.3" y="446.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.06%)</title><rect x="405.6" y="419.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="408.6" y="430.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.06%)</title><rect x="406.3" y="419.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="409.3" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.06%)</title><rect x="406.3" y="403.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="409.3" y="414.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (3 samples, 0.17%)</title><rect x="407.0" y="419.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="410.0" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (3 samples, 0.17%)</title><rect x="407.0" y="403.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="410.0" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (14 samples, 0.82%)</title><rect x="409.1" y="419.0" width="9.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="412.1" y="430.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (1 samples, 0.06%)</title><rect x="409.1" y="403.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="412.1" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (13 samples, 0.76%)</title><rect x="409.8" y="403.0" width="8.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="412.8" y="414.0"></text>
</g>
<g>
<title>__indirect_thunk_start (1 samples, 0.06%)</title><rect x="411.1" y="387.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="414.1" y="398.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (1 samples, 0.06%)</title><rect x="411.8" y="387.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="414.8" y="398.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (2 samples, 0.12%)</title><rect x="412.5" y="387.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="415.5" y="398.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.06%)</title><rect x="413.9" y="387.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="416.9" y="398.0"></text>
</g>
<g>
<title>tcp_error?[nf_conntrack] (1 samples, 0.06%)</title><rect x="414.6" y="387.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="417.6" y="398.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (5 samples, 0.29%)</title><rect x="415.3" y="387.0" width="3.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="418.3" y="398.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (2 samples, 0.12%)</title><rect x="415.9" y="371.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="418.9" y="382.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (2 samples, 0.12%)</title><rect x="417.3" y="371.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="420.3" y="382.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (3 samples, 0.17%)</title><rect x="418.7" y="419.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="421.7" y="430.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.06%)</title><rect x="420.8" y="451.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="423.8" y="462.0"></text>
</g>
<g>
<title>ip_output (124 samples, 7.23%)</title><rect x="421.5" y="451.0" width="85.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="424.5" y="462.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (122 samples, 7.11%)</title><rect x="422.1" y="435.0" width="84.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="425.1" y="446.0">ip_finish..</text>
</g>
<g>
<title>ip_finish_output2 (122 samples, 7.11%)</title><rect x="422.1" y="419.0" width="84.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="425.1" y="430.0">ip_finish..</text>
</g>
<g>
<title>__local_bh_enable_ip (103 samples, 6.01%)</title><rect x="424.9" y="403.0" width="70.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="427.9" y="414.0">__local_..</text>
</g>
<g>
<title>do_softirq.part.17 (103 samples, 6.01%)</title><rect x="424.9" y="387.0" width="70.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="427.9" y="398.0">do_softi..</text>
</g>
<g>
<title>do_softirq_own_stack (102 samples, 5.95%)</title><rect x="425.6" y="371.0" width="70.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="428.6" y="382.0">do_softi..</text>
</g>
<g>
<title>__softirqentry_text_start (102 samples, 5.95%)</title><rect x="425.6" y="355.0" width="70.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="428.6" y="366.0">__softir..</text>
</g>
<g>
<title>net_rx_action (99 samples, 5.77%)</title><rect x="426.3" y="339.0" width="68.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="429.3" y="350.0">net_rx_..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.06%)</title><rect x="428.3" y="323.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="431.3" y="334.0"></text>
</g>
<g>
<title>process_backlog (95 samples, 5.54%)</title><rect x="429.0" y="323.0" width="65.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="432.0" y="334.0">process..</text>
</g>
<g>
<title>__netif_receive_skb (93 samples, 5.42%)</title><rect x="429.7" y="307.0" width="64.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="432.7" y="318.0">__netif..</text>
</g>
<g>
<title>__netif_receive_skb_core (90 samples, 5.25%)</title><rect x="430.4" y="291.0" width="61.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="433.4" y="302.0">__neti..</text>
</g>
<g>
<title>ip_rcv (84 samples, 4.90%)</title><rect x="431.8" y="275.0" width="57.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="434.8" y="286.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (78 samples, 4.55%)</title><rect x="431.8" y="259.0" width="53.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="434.8" y="270.0">ip_rc..</text>
</g>
<g>
<title>ip_local_deliver (77 samples, 4.49%)</title><rect x="432.5" y="243.0" width="52.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="435.5" y="254.0">ip_lo..</text>
</g>
<g>
<title>ip_local_deliver_finish (72 samples, 4.20%)</title><rect x="432.5" y="227.0" width="49.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="435.5" y="238.0">ip_lo..</text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.06%)</title><rect x="433.1" y="211.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="436.1" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (70 samples, 4.08%)</title><rect x="433.8" y="211.0" width="48.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="436.8" y="222.0">tcp_..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.12%)</title><rect x="435.2" y="195.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="438.2" y="206.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.06%)</title><rect x="436.6" y="195.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="439.6" y="206.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.06%)</title><rect x="437.3" y="195.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="440.3" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.12%)</title><rect x="438.0" y="195.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="441.0" y="206.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.06%)</title><rect x="438.0" y="179.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="441.0" y="190.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.06%)</title><rect x="438.7" y="179.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="441.7" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (62 samples, 3.62%)</title><rect x="439.3" y="195.0" width="42.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="442.3" y="206.0">tcp_..</text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.06%)</title><rect x="440.0" y="179.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="443.0" y="190.0"></text>
</g>
<g>
<title>sched_clock_cpu (1 samples, 0.06%)</title><rect x="440.7" y="179.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="443.7" y="190.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.12%)</title><rect x="441.4" y="179.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="444.4" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (57 samples, 3.32%)</title><rect x="442.8" y="179.0" width="39.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="445.8" y="190.0">tcp..</text>
</g>
<g>
<title>__tcp_ack_snd_check (4 samples, 0.23%)</title><rect x="445.5" y="163.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="448.5" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (4 samples, 0.23%)</title><rect x="445.5" y="147.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="448.5" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.23%)</title><rect x="445.5" y="131.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="448.5" y="142.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.06%)</title><rect x="445.5" y="115.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="448.5" y="126.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.17%)</title><rect x="446.2" y="115.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="449.2" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.12%)</title><rect x="446.9" y="99.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="449.9" y="110.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.06%)</title><rect x="448.3" y="163.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="451.3" y="174.0"></text>
</g>
<g>
<title>tcp_ack (11 samples, 0.64%)</title><rect x="449.0" y="163.0" width="7.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="452.0" y="174.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (7 samples, 0.41%)</title><rect x="451.7" y="147.0" width="4.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="454.7" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.29%)</title><rect x="452.4" y="131.0" width="3.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="455.4" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.12%)</title><rect x="452.4" y="115.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="455.4" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.12%)</title><rect x="452.4" y="99.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="455.4" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.06%)</title><rect x="453.8" y="115.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="456.8" y="126.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.12%)</title><rect x="454.5" y="115.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="457.5" y="126.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.12%)</title><rect x="454.5" y="99.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="457.5" y="110.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.12%)</title><rect x="454.5" y="83.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="457.5" y="94.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.12%)</title><rect x="454.5" y="67.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="457.5" y="78.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.12%)</title><rect x="454.5" y="51.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="457.5" y="62.0"></text>
</g>
<g>
<title>cmpxchg_double_slab.isra.33 (2 samples, 0.12%)</title><rect x="454.5" y="35.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="457.5" y="46.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.06%)</title><rect x="455.9" y="131.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="458.9" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.06%)</title><rect x="456.5" y="163.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="459.5" y="174.0"></text>
</g>
<g>
<title>tcp_data_queue (35 samples, 2.04%)</title><rect x="457.2" y="163.0" width="24.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="460.2" y="174.0">t..</text>
</g>
<g>
<title>sock_def_readable (33 samples, 1.92%)</title><rect x="458.6" y="147.0" width="22.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="461.6" y="158.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (31 samples, 1.81%)</title><rect x="460.0" y="131.0" width="21.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="463.0" y="142.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (31 samples, 1.81%)</title><rect x="460.0" y="115.0" width="21.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="463.0" y="126.0">_..</text>
</g>
<g>
<title>__lock_text_start (31 samples, 1.81%)</title><rect x="460.0" y="99.0" width="21.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="463.0" y="110.0">_..</text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.06%)</title><rect x="481.3" y="163.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="484.3" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.29%)</title><rect x="482.0" y="227.0" width="3.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="485.0" y="238.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.06%)</title><rect x="482.7" y="211.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="485.7" y="222.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.06%)</title><rect x="482.7" y="195.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="485.7" y="206.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (3 samples, 0.17%)</title><rect x="483.4" y="211.0" width="2.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="486.4" y="222.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.12%)</title><rect x="484.1" y="195.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="487.1" y="206.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (1 samples, 0.06%)</title><rect x="485.4" y="259.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="488.4" y="270.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_in?[iptable_nat] (1 samples, 0.06%)</title><rect x="486.1" y="259.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="489.1" y="270.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (1 samples, 0.06%)</title><rect x="486.8" y="259.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="489.8" y="270.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack_ipv4] (1 samples, 0.06%)</title><rect x="487.5" y="259.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="490.5" y="270.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.12%)</title><rect x="488.2" y="259.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="491.2" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.12%)</title><rect x="489.6" y="275.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="492.6" y="286.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.12%)</title><rect x="490.9" y="275.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="493.9" y="286.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.12%)</title><rect x="492.3" y="291.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="495.3" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.06%)</title><rect x="493.7" y="307.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="496.7" y="318.0"></text>
</g>
<g>
<title>rcu_bh_qs (2 samples, 0.12%)</title><rect x="494.4" y="339.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="497.4" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (15 samples, 0.87%)</title><rect x="495.8" y="403.0" width="10.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="498.8" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (15 samples, 0.87%)</title><rect x="495.8" y="387.0" width="10.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="498.8" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (10 samples, 0.58%)</title><rect x="497.1" y="371.0" width="6.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="500.1" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.29%)</title><rect x="498.5" y="355.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="501.5" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (3 samples, 0.17%)</title><rect x="499.9" y="339.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="502.9" y="350.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.06%)</title><rect x="502.0" y="355.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="505.0" y="366.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.12%)</title><rect x="502.6" y="355.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="505.6" y="366.0"></text>
</g>
<g>
<title>netdev_pick_tx (1 samples, 0.06%)</title><rect x="504.0" y="371.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="507.0" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.12%)</title><rect x="504.7" y="371.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="507.7" y="382.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.12%)</title><rect x="504.7" y="355.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="507.7" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.06%)</title><rect x="506.1" y="435.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="509.1" y="446.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_out?[iptable_nat] (1 samples, 0.06%)</title><rect x="506.1" y="419.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="509.1" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (1 samples, 0.06%)</title><rect x="506.1" y="403.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="509.1" y="414.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.06%)</title><rect x="506.8" y="451.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="509.8" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.06%)</title><rect x="507.5" y="451.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="510.5" y="462.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.12%)</title><rect x="508.1" y="467.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="511.1" y="478.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.12%)</title><rect x="509.5" y="483.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="512.5" y="494.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.06%)</title><rect x="510.2" y="467.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="513.2" y="478.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.06%)</title><rect x="510.2" y="451.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="513.2" y="462.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.06%)</title><rect x="510.9" y="483.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="513.9" y="494.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.06%)</title><rect x="511.6" y="483.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="514.6" y="494.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.06%)</title><rect x="511.6" y="467.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="514.6" y="478.0"></text>
</g>
<g>
<title>sched_clock_cpu (2 samples, 0.12%)</title><rect x="512.3" y="499.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="515.3" y="510.0"></text>
</g>
<g>
<title>sched_clock (2 samples, 0.12%)</title><rect x="512.3" y="483.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="515.3" y="494.0"></text>
</g>
<g>
<title>native_sched_clock (2 samples, 0.12%)</title><rect x="512.3" y="467.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="515.3" y="478.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.06%)</title><rect x="513.7" y="499.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="516.7" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (5 samples, 0.29%)</title><rect x="514.3" y="499.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="517.3" y="510.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.06%)</title><rect x="515.0" y="483.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="518.0" y="494.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.06%)</title><rect x="515.0" y="467.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="518.0" y="478.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.17%)</title><rect x="515.7" y="483.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="518.7" y="494.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (3 samples, 0.17%)</title><rect x="515.7" y="467.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="518.7" y="478.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.17%)</title><rect x="515.7" y="451.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="518.7" y="462.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.17%)</title><rect x="515.7" y="435.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="518.7" y="446.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.12%)</title><rect x="516.4" y="419.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="519.4" y="430.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.06%)</title><rect x="517.8" y="499.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="520.8" y="510.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.12%)</title><rect x="518.5" y="499.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="521.5" y="510.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.06%)</title><rect x="518.5" y="483.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="521.5" y="494.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.06%)</title><rect x="519.2" y="483.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="522.2" y="494.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.06%)</title><rect x="519.2" y="467.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="522.2" y="478.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.06%)</title><rect x="519.8" y="531.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="522.8" y="542.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.06%)</title><rect x="520.5" y="547.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="523.5" y="558.0"></text>
</g>
<g>
<title>tcp_send_mss (5 samples, 0.29%)</title><rect x="521.2" y="547.0" width="3.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="524.2" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.23%)</title><rect x="521.9" y="531.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="524.9" y="542.0"></text>
</g>
<g>
<title>tcp_v4_md5_lookup (1 samples, 0.06%)</title><rect x="524.0" y="515.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="527.0" y="526.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.06%)</title><rect x="524.7" y="595.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="527.7" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.06%)</title><rect x="524.7" y="579.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="527.7" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.06%)</title><rect x="524.7" y="563.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="527.7" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.06%)</title><rect x="524.7" y="547.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="527.7" y="558.0"></text>
</g>
<g>
<title>fput (2 samples, 0.12%)</title><rect x="525.3" y="627.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="528.3" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.12%)</title><rect x="526.7" y="771.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="529.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.12%)</title><rect x="526.7" y="755.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="529.7" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.12%)</title><rect x="526.7" y="739.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="529.7" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.06%)</title><rect x="527.4" y="723.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="530.4" y="734.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.06%)</title><rect x="527.4" y="707.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="530.4" y="718.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.06%)</title><rect x="527.4" y="691.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="530.4" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (3 samples, 0.17%)</title><rect x="528.1" y="787.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="531.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.17%)</title><rect x="528.1" y="771.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="531.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="528.1" y="755.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="531.1" y="766.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.12%)</title><rect x="528.8" y="755.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="531.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.12%)</title><rect x="528.8" y="739.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="531.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.12%)</title><rect x="528.8" y="723.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="531.8" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.12%)</title><rect x="528.8" y="707.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="531.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.put (51 samples, 2.97%)</title><rect x="530.2" y="787.0" width="35.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="533.2" y="798.0">ru/..</text>
</g>
<g>
<title>java/lang/String.isBlank (1 samples, 0.06%)</title><rect x="531.5" y="771.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="534.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOfNonWhitespace (1 samples, 0.06%)</title><rect x="531.5" y="755.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="534.5" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOfNonWhitespace (1 samples, 0.06%)</title><rect x="531.5" y="739.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="534.5" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.isWhitespace (1 samples, 0.06%)</title><rect x="531.5" y="723.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="534.5" y="734.0"></text>
</g>
<g>
<title>java/lang/Character.isWhitespace (1 samples, 0.06%)</title><rect x="531.5" y="707.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="534.5" y="718.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.06%)</title><rect x="531.5" y="691.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="534.5" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.17%)</title><rect x="532.2" y="771.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="535.2" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.17%)</title><rect x="532.2" y="755.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="535.2" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.12%)</title><rect x="532.2" y="739.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="535.2" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.12%)</title><rect x="532.2" y="723.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="535.2" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.12%)</title><rect x="532.2" y="707.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="535.2" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.06%)</title><rect x="532.2" y="691.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="535.2" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.06%)</title><rect x="532.2" y="675.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="535.2" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.06%)</title><rect x="532.2" y="659.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="535.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.upsert (1 samples, 0.06%)</title><rect x="532.2" y="643.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="535.2" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.06%)</title><rect x="532.9" y="691.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="535.9" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.06%)</title><rect x="532.9" y="675.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="535.9" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="533.6" y="739.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="536.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.upsert (45 samples, 2.62%)</title><rect x="534.3" y="771.0" width="31.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="537.3" y="782.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.upsert (45 samples, 2.62%)</title><rect x="534.3" y="755.0" width="31.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="537.3" y="766.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.12%)</title><rect x="534.3" y="739.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="537.3" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.06%)</title><rect x="534.3" y="723.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="537.3" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="534.3" y="707.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="537.3" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="534.3" y="691.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="537.3" y="702.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.06%)</title><rect x="534.3" y="675.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="537.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (1 samples, 0.06%)</title><rect x="535.0" y="723.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="538.0" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.23%)</title><rect x="535.7" y="739.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="538.7" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.23%)</title><rect x="535.7" y="723.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="538.7" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.23%)</title><rect x="535.7" y="707.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="538.7" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.23%)</title><rect x="535.7" y="691.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="538.7" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.12%)</title><rect x="535.7" y="675.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="538.7" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.12%)</title><rect x="535.7" y="659.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="538.7" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.12%)</title><rect x="535.7" y="643.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="538.7" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.12%)</title><rect x="537.0" y="675.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="540.0" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.12%)</title><rect x="537.0" y="659.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="540.0" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.12%)</title><rect x="537.0" y="643.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="540.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.upsert (39 samples, 2.27%)</title><rect x="538.4" y="739.0" width="26.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="541.4" y="750.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.upsert (39 samples, 2.27%)</title><rect x="538.4" y="723.0" width="26.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="541.4" y="734.0">r..</text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.06%)</title><rect x="538.4" y="707.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="541.4" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.06%)</title><rect x="538.4" y="691.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="541.4" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="538.4" y="675.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="541.4" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="538.4" y="659.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="541.4" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="538.4" y="643.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="541.4" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.06%)</title><rect x="538.4" y="627.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="541.4" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.06%)</title><rect x="538.4" y="611.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="541.4" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.06%)</title><rect x="538.4" y="595.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="541.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (38 samples, 2.22%)</title><rect x="539.1" y="707.0" width="26.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="542.1" y="718.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (38 samples, 2.22%)</title><rect x="539.1" y="691.0" width="26.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="542.1" y="702.0">j..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.17%)</title><rect x="550.8" y="675.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="553.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (4 samples, 0.23%)</title><rect x="552.9" y="675.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="555.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (4 samples, 0.23%)</title><rect x="552.9" y="659.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="555.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (14 samples, 0.82%)</title><rect x="555.6" y="675.0" width="9.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="558.6" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (13 samples, 0.76%)</title><rect x="556.3" y="659.0" width="9.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="559.3" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (13 samples, 0.76%)</title><rect x="556.3" y="643.0" width="9.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="559.3" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.17%)</title><rect x="557.0" y="627.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="560.0" y="638.0"></text>
</g>
<g>
<title>vectorizedMismatch (3 samples, 0.17%)</title><rect x="557.0" y="611.0" width="2.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="560.0" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (2 samples, 0.12%)</title><rect x="559.1" y="627.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="562.1" y="638.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.35%)</title><rect x="560.4" y="627.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="563.4" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.17%)</title><rect x="562.5" y="611.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="565.5" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.12%)</title><rect x="563.2" y="595.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="566.2" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.06%)</title><rect x="564.6" y="627.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="567.6" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.06%)</title><rect x="564.6" y="611.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="567.6" y="622.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.06%)</title><rect x="565.3" y="803.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="568.3" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.06%)</title><rect x="565.3" y="787.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="568.3" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.06%)</title><rect x="565.3" y="771.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="568.3" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.12%)</title><rect x="565.9" y="803.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="568.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.12%)</title><rect x="565.9" y="787.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="568.9" y="798.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.06%)</title><rect x="565.9" y="771.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="568.9" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="566.6" y="771.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="569.6" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (8 samples, 0.47%)</title><rect x="567.3" y="835.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="570.3" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.23%)</title><rect x="567.3" y="819.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="570.3" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.12%)</title><rect x="568.7" y="803.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="571.7" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.12%)</title><rect x="568.7" y="787.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="571.7" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.12%)</title><rect x="568.7" y="771.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="571.7" y="782.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.06%)</title><rect x="569.4" y="755.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="572.4" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.17%)</title><rect x="570.1" y="819.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="573.1" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.17%)</title><rect x="570.1" y="803.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="573.1" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.06%)</title><rect x="572.1" y="819.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="575.1" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.12%)</title><rect x="572.8" y="835.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="575.8" y="846.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.06%)</title><rect x="573.5" y="819.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="576.5" y="830.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.06%)</title><rect x="573.5" y="803.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="576.5" y="814.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.06%)</title><rect x="574.2" y="835.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="577.2" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.29%)</title><rect x="574.9" y="835.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="577.9" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.12%)</title><rect x="576.3" y="819.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="579.3" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="577.6" y="819.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="580.6" y="830.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newString (1 samples, 0.06%)</title><rect x="577.6" y="803.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="580.6" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.12%)</title><rect x="578.3" y="835.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="581.3" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.12%)</title><rect x="578.3" y="819.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="581.3" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="579.0" y="803.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="582.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="579.0" y="787.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="582.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.06%)</title><rect x="579.0" y="771.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="582.0" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (61 samples, 3.56%)</title><rect x="579.7" y="851.0" width="42.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="582.7" y="862.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (61 samples, 3.56%)</title><rect x="579.7" y="835.0" width="42.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="582.7" y="846.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (10 samples, 0.58%)</title><rect x="581.1" y="819.0" width="6.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="584.1" y="830.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.12%)</title><rect x="581.8" y="803.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="584.8" y="814.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned (2 samples, 0.12%)</title><rect x="583.1" y="803.0" width="1.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="586.1" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.23%)</title><rect x="584.5" y="803.0" width="2.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="587.5" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (2 samples, 0.12%)</title><rect x="585.9" y="787.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="588.9" y="798.0"></text>
</g>
<g>
<title>memmove@plt (1 samples, 0.06%)</title><rect x="587.3" y="803.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="590.3" y="814.0"></text>
</g>
<g>
<title>recv (49 samples, 2.86%)</title><rect x="588.0" y="819.0" width="33.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="591.0" y="830.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (37 samples, 2.16%)</title><rect x="596.2" y="803.0" width="25.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="599.2" y="814.0">e..</text>
</g>
<g>
<title>do_syscall_64 (37 samples, 2.16%)</title><rect x="596.2" y="787.0" width="25.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="599.2" y="798.0">d..</text>
</g>
<g>
<title>SYSC_recvfrom (1 samples, 0.06%)</title><rect x="597.6" y="771.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="600.6" y="782.0"></text>
</g>
<g>
<title>sys_recvfrom (34 samples, 1.98%)</title><rect x="598.3" y="771.0" width="23.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="601.3" y="782.0">s..</text>
</g>
<g>
<title>SYSC_recvfrom (32 samples, 1.87%)</title><rect x="598.3" y="755.0" width="22.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="601.3" y="766.0">S..</text>
</g>
<g>
<title>sock_recvmsg (23 samples, 1.34%)</title><rect x="598.3" y="739.0" width="15.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="601.3" y="750.0"></text>
</g>
<g>
<title>inet_recvmsg (21 samples, 1.22%)</title><rect x="598.3" y="723.0" width="14.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="601.3" y="734.0"></text>
</g>
<g>
<title>tcp_recvmsg (21 samples, 1.22%)</title><rect x="598.3" y="707.0" width="14.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="601.3" y="718.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.06%)</title><rect x="601.0" y="691.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="604.0" y="702.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.06%)</title><rect x="601.7" y="691.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="604.7" y="702.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.06%)</title><rect x="601.7" y="675.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="604.7" y="686.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.06%)</title><rect x="602.4" y="691.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="605.4" y="702.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.06%)</title><rect x="603.1" y="691.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="606.1" y="702.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.06%)</title><rect x="603.8" y="691.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="606.8" y="702.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.06%)</title><rect x="604.5" y="691.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="607.5" y="702.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.06%)</title><rect x="604.5" y="675.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="607.5" y="686.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.12%)</title><rect x="605.2" y="691.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="608.2" y="702.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.06%)</title><rect x="605.8" y="675.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="608.8" y="686.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (6 samples, 0.35%)</title><rect x="606.5" y="691.0" width="4.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="609.5" y="702.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.23%)</title><rect x="606.5" y="675.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="609.5" y="686.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.06%)</title><rect x="607.9" y="659.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="610.9" y="670.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.06%)</title><rect x="608.6" y="659.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="611.6" y="670.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.06%)</title><rect x="609.3" y="675.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="612.3" y="686.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.06%)</title><rect x="609.3" y="659.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="612.3" y="670.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.06%)</title><rect x="610.0" y="675.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="613.0" y="686.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.06%)</title><rect x="610.7" y="691.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="613.7" y="702.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.12%)</title><rect x="611.4" y="691.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="614.4" y="702.0"></text>
</g>
<g>
<title>sched_clock_cpu (1 samples, 0.06%)</title><rect x="612.0" y="675.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="615.0" y="686.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.06%)</title><rect x="612.0" y="659.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="615.0" y="670.0"></text>
</g>
<g>
<title>native_sched_clock (1 samples, 0.06%)</title><rect x="612.0" y="643.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="615.0" y="654.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.12%)</title><rect x="612.7" y="723.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="615.7" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.12%)</title><rect x="612.7" y="707.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="615.7" y="718.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.12%)</title><rect x="612.7" y="691.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="615.7" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.12%)</title><rect x="612.7" y="675.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="615.7" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (9 samples, 0.52%)</title><rect x="614.1" y="739.0" width="6.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="617.1" y="750.0"></text>
</g>
<g>
<title>__fdget (7 samples, 0.41%)</title><rect x="614.1" y="723.0" width="4.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="617.1" y="734.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.41%)</title><rect x="614.1" y="707.0" width="4.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="617.1" y="718.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.41%)</title><rect x="614.1" y="691.0" width="4.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="617.1" y="702.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.12%)</title><rect x="618.9" y="723.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="621.9" y="734.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.12%)</title><rect x="620.3" y="755.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="623.3" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.06%)</title><rect x="621.7" y="867.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="624.7" y="878.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=16339] (427 samples, 24.90%)</title><rect x="622.4" y="915.0" width="293.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="625.4" y="926.0">[NIO Selector #2 tid=16339]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (427 samples, 24.90%)</title><rect x="622.4" y="899.0" width="293.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="625.4" y="910.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (8 samples, 0.47%)</title><rect x="622.4" y="883.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="625.4" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (8 samples, 0.47%)</title><rect x="622.4" y="867.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="625.4" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (95 samples, 5.54%)</title><rect x="627.9" y="883.0" width="65.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="630.9" y="894.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.06%)</title><rect x="630.6" y="867.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="633.6" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (90 samples, 5.25%)</title><rect x="631.3" y="867.0" width="61.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="634.3" y="878.0">one/ni..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.12%)</title><rect x="638.2" y="851.0" width="1.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="641.2" y="862.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.12%)</title><rect x="639.6" y="851.0" width="1.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="642.6" y="862.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.12%)</title><rect x="640.9" y="851.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="643.9" y="862.0"></text>
</g>
<g>
<title>clock_gettime@plt (1 samples, 0.06%)</title><rect x="642.3" y="851.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="645.3" y="862.0"></text>
</g>
<g>
<title>epoll_wait (61 samples, 3.56%)</title><rect x="643.0" y="851.0" width="42.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="646.0" y="862.0">epo..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (47 samples, 2.74%)</title><rect x="652.6" y="835.0" width="32.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="655.6" y="846.0">en..</text>
</g>
<g>
<title>do_syscall_64 (47 samples, 2.74%)</title><rect x="652.6" y="819.0" width="32.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="655.6" y="830.0">do..</text>
</g>
<g>
<title>fput (3 samples, 0.17%)</title><rect x="656.1" y="803.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="659.1" y="814.0"></text>
</g>
<g>
<title>sys_epoll_wait (39 samples, 2.27%)</title><rect x="658.1" y="803.0" width="26.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="661.1" y="814.0">s..</text>
</g>
<g>
<title>__fdget (1 samples, 0.06%)</title><rect x="659.5" y="787.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="662.5" y="798.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="659.5" y="771.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="662.5" y="782.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.06%)</title><rect x="659.5" y="755.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="662.5" y="766.0"></text>
</g>
<g>
<title>ep_poll (36 samples, 2.10%)</title><rect x="660.2" y="787.0" width="24.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="663.2" y="798.0">e..</text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.12%)</title><rect x="661.6" y="771.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="664.6" y="782.0"></text>
</g>
<g>
<title>ep_scan_ready_list (15 samples, 0.87%)</title><rect x="663.0" y="771.0" width="10.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="666.0" y="782.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.12%)</title><rect x="663.6" y="755.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="666.6" y="766.0"></text>
</g>
<g>
<title>ep_send_events_proc (12 samples, 0.70%)</title><rect x="665.0" y="755.0" width="8.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="668.0" y="766.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (6 samples, 0.35%)</title><rect x="667.8" y="739.0" width="4.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="670.8" y="750.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 0.29%)</title><rect x="668.5" y="723.0" width="3.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="671.5" y="734.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.12%)</title><rect x="670.5" y="707.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="673.5" y="718.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.12%)</title><rect x="671.9" y="739.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="674.9" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (17 samples, 0.99%)</title><rect x="673.3" y="771.0" width="11.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="676.3" y="782.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="673.3" y="755.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="676.3" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (16 samples, 0.93%)</title><rect x="674.0" y="755.0" width="11.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="677.0" y="766.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="674.7" y="739.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="677.7" y="750.0"></text>
</g>
<g>
<title>schedule (14 samples, 0.82%)</title><rect x="675.3" y="739.0" width="9.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="678.3" y="750.0"></text>
</g>
<g>
<title>__schedule (14 samples, 0.82%)</title><rect x="675.3" y="723.0" width="9.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="678.3" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (11 samples, 0.64%)</title><rect x="677.4" y="707.0" width="7.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="680.4" y="718.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.23%)</title><rect x="685.0" y="851.0" width="2.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="688.0" y="862.0"></text>
</g>
<g>
<title>__clock_gettime (4 samples, 0.23%)</title><rect x="685.0" y="835.0" width="2.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="688.0" y="846.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.06%)</title><rect x="685.0" y="819.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="688.0" y="830.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (3 samples, 0.17%)</title><rect x="685.7" y="819.0" width="2.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="688.7" y="830.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.06%)</title><rect x="687.0" y="803.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="690.0" y="814.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (8 samples, 0.47%)</title><rect x="687.7" y="851.0" width="5.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="690.7" y="862.0"></text>
</g>
<g>
<title>gettimeofday (8 samples, 0.47%)</title><rect x="687.7" y="835.0" width="5.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="690.7" y="846.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.12%)</title><rect x="687.7" y="819.0" width="1.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="690.7" y="830.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.12%)</title><rect x="687.7" y="803.0" width="1.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="690.7" y="814.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (6 samples, 0.35%)</title><rect x="689.1" y="819.0" width="4.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="692.1" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (324 samples, 18.89%)</title><rect x="693.2" y="883.0" width="223.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="696.2" y="894.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (324 samples, 18.89%)</title><rect x="693.2" y="867.0" width="223.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="696.2" y="878.0">one/nio/http/HttpSession.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (270 samples, 15.74%)</title><rect x="693.9" y="851.0" width="185.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="696.9" y="862.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (255 samples, 14.87%)</title><rect x="694.6" y="835.0" width="175.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="697.6" y="846.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (255 samples, 14.87%)</title><rect x="694.6" y="819.0" width="175.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="697.6" y="830.0">one/nio/http/HttpServer..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (248 samples, 14.46%)</title><rect x="694.6" y="803.0" width="170.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="697.6" y="814.0">RequestHandler1_put.ha..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (212 samples, 12.36%)</title><rect x="694.6" y="787.0" width="145.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="697.6" y="798.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (209 samples, 12.19%)</title><rect x="696.0" y="771.0" width="143.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="699.0" y="782.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.12%)</title><rect x="696.0" y="755.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="699.0" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="696.0" y="739.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="699.0" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.06%)</title><rect x="696.7" y="739.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="699.7" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.06%)</title><rect x="696.7" y="723.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="699.7" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.06%)</title><rect x="696.7" y="707.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="699.7" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.06%)</title><rect x="696.7" y="691.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="699.7" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (207 samples, 12.07%)</title><rect x="697.4" y="755.0" width="142.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="700.4" y="766.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/Session.write (206 samples, 12.01%)</title><rect x="698.0" y="739.0" width="141.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="701.0" y="750.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.06%)</title><rect x="698.0" y="723.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="701.0" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (204 samples, 11.90%)</title><rect x="698.7" y="723.0" width="140.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="701.7" y="734.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (204 samples, 11.90%)</title><rect x="698.7" y="707.0" width="140.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="701.7" y="718.0">one/nio/net/Native..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.12%)</title><rect x="699.4" y="691.0" width="1.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="702.4" y="702.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned (1 samples, 0.06%)</title><rect x="699.4" y="675.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="702.4" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.06%)</title><rect x="700.1" y="675.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="703.1" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.06%)</title><rect x="700.1" y="659.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="703.1" y="670.0"></text>
</g>
<g>
<title>send (201 samples, 11.72%)</title><rect x="700.8" y="691.0" width="138.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="703.8" y="702.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (197 samples, 11.49%)</title><rect x="703.6" y="675.0" width="135.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="706.6" y="686.0">entry_SYSCALL_64_..</text>
</g>
<g>
<title>do_syscall_64 (197 samples, 11.49%)</title><rect x="703.6" y="659.0" width="135.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="706.6" y="670.0">do_syscall_64</text>
</g>
<g>
<title>sys_sendto (197 samples, 11.49%)</title><rect x="703.6" y="643.0" width="135.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="706.6" y="654.0">sys_sendto</text>
</g>
<g>
<title>SYSC_sendto (197 samples, 11.49%)</title><rect x="703.6" y="627.0" width="135.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="706.6" y="638.0">SYSC_sendto</text>
</g>
<g>
<title>inet_sendmsg (1 samples, 0.06%)</title><rect x="704.2" y="611.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="707.2" y="622.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.06%)</title><rect x="704.9" y="611.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="707.9" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (192 samples, 11.20%)</title><rect x="705.6" y="611.0" width="132.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="708.6" y="622.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (188 samples, 10.96%)</title><rect x="705.6" y="595.0" width="129.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="708.6" y="606.0">inet_sendmsg</text>
</g>
<g>
<title>release_sock (2 samples, 0.12%)</title><rect x="707.0" y="579.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="710.0" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (184 samples, 10.73%)</title><rect x="708.4" y="579.0" width="126.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="711.4" y="590.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.06%)</title><rect x="708.4" y="563.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="711.4" y="574.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.06%)</title><rect x="709.1" y="563.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="712.1" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (181 samples, 10.55%)</title><rect x="709.7" y="563.0" width="124.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="712.7" y="574.0">tcp_sendmsg_loc..</text>
</g>
<g>
<title>sk_stream_alloc_skb (10 samples, 0.58%)</title><rect x="713.9" y="547.0" width="6.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="716.9" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (9 samples, 0.52%)</title><rect x="714.6" y="531.0" width="6.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="717.6" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (2 samples, 0.12%)</title><rect x="716.6" y="515.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="719.6" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.12%)</title><rect x="716.6" y="499.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="719.6" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.12%)</title><rect x="718.0" y="515.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="721.0" y="526.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.12%)</title><rect x="719.4" y="515.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="722.4" y="526.0"></text>
</g>
<g>
<title>tcp_push (162 samples, 9.45%)</title><rect x="720.8" y="547.0" width="111.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="723.8" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (162 samples, 9.45%)</title><rect x="720.8" y="531.0" width="111.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="723.8" y="542.0">__tcp_push_pe..</text>
</g>
<g>
<title>tcp_write_xmit (162 samples, 9.45%)</title><rect x="720.8" y="515.0" width="111.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="723.8" y="526.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (147 samples, 8.57%)</title><rect x="722.8" y="499.0" width="101.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="725.8" y="510.0">__tcp_transm..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.06%)</title><rect x="724.2" y="483.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="727.2" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (143 samples, 8.34%)</title><rect x="724.9" y="483.0" width="98.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="727.9" y="494.0">ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (139 samples, 8.10%)</title><rect x="725.6" y="467.0" width="95.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="728.6" y="478.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (29 samples, 1.69%)</title><rect x="725.6" y="451.0" width="19.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="728.6" y="462.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (1 samples, 0.06%)</title><rect x="725.6" y="435.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="728.6" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (28 samples, 1.63%)</title><rect x="726.3" y="435.0" width="19.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="729.3" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (5 samples, 0.29%)</title><rect x="726.3" y="419.0" width="3.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="729.3" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (5 samples, 0.29%)</title><rect x="726.3" y="403.0" width="3.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="729.3" y="414.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (2 samples, 0.12%)</title><rect x="729.7" y="419.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="732.7" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.12%)</title><rect x="729.7" y="403.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="732.7" y="414.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn?[iptable_nat] (3 samples, 0.17%)</title><rect x="731.1" y="419.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="734.1" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (3 samples, 0.17%)</title><rect x="731.1" y="403.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="734.1" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (2 samples, 0.12%)</title><rect x="731.1" y="387.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="734.1" y="398.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (2 samples, 0.12%)</title><rect x="731.1" y="371.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="734.1" y="382.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (1 samples, 0.06%)</title><rect x="732.4" y="387.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="735.4" y="398.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (16 samples, 0.93%)</title><rect x="733.1" y="419.0" width="11.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="736.1" y="430.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (1 samples, 0.06%)</title><rect x="733.1" y="403.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="736.1" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (15 samples, 0.87%)</title><rect x="733.8" y="403.0" width="10.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="736.8" y="414.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (4 samples, 0.23%)</title><rect x="733.8" y="387.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="736.8" y="398.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (3 samples, 0.17%)</title><rect x="736.6" y="387.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="739.6" y="398.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (2 samples, 0.12%)</title><rect x="738.6" y="387.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="741.6" y="398.0"></text>
</g>
<g>
<title>ipv4_pkt_to_tuple?[nf_conntrack_ipv4] (1 samples, 0.06%)</title><rect x="738.6" y="371.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="741.6" y="382.0"></text>
</g>
<g>
<title>tcp_pkt_to_tuple?[nf_conntrack] (1 samples, 0.06%)</title><rect x="739.3" y="371.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="742.3" y="382.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (4 samples, 0.23%)</title><rect x="740.0" y="387.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="743.0" y="398.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct?[nf_conntrack] (1 samples, 0.06%)</title><rect x="740.7" y="371.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="743.7" y="382.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (2 samples, 0.12%)</title><rect x="741.4" y="371.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="744.4" y="382.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (1 samples, 0.06%)</title><rect x="742.1" y="355.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="745.1" y="366.0"></text>
</g>
<g>
<title>tcp_pkt_to_tuple?[nf_conntrack] (2 samples, 0.12%)</title><rect x="742.8" y="387.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="745.8" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.06%)</title><rect x="744.1" y="419.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="747.1" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (1 samples, 0.06%)</title><rect x="744.8" y="419.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="747.8" y="430.0"></text>
</g>
<g>
<title>ip_output (110 samples, 6.41%)</title><rect x="745.5" y="451.0" width="75.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="748.5" y="462.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.06%)</title><rect x="746.2" y="435.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="749.2" y="446.0"></text>
</g>
<g>
<title>ip_finish_output (100 samples, 5.83%)</title><rect x="746.9" y="435.0" width="68.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="749.9" y="446.0">ip_fini..</text>
</g>
<g>
<title>ip_finish_output2 (99 samples, 5.77%)</title><rect x="747.6" y="419.0" width="68.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="750.6" y="430.0">ip_fini..</text>
</g>
<g>
<title>__local_bh_enable_ip (85 samples, 4.96%)</title><rect x="751.0" y="403.0" width="58.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="754.0" y="414.0">__loca..</text>
</g>
<g>
<title>do_softirq.part.17 (83 samples, 4.84%)</title><rect x="752.4" y="387.0" width="57.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="755.4" y="398.0">do_sof..</text>
</g>
<g>
<title>do_softirq_own_stack (83 samples, 4.84%)</title><rect x="752.4" y="371.0" width="57.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="755.4" y="382.0">do_sof..</text>
</g>
<g>
<title>__softirqentry_text_start (83 samples, 4.84%)</title><rect x="752.4" y="355.0" width="57.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="755.4" y="366.0">__soft..</text>
</g>
<g>
<title>net_rx_action (79 samples, 4.61%)</title><rect x="753.1" y="339.0" width="54.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="756.1" y="350.0">net_r..</text>
</g>
<g>
<title>process_backlog (79 samples, 4.61%)</title><rect x="753.1" y="323.0" width="54.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="756.1" y="334.0">proce..</text>
</g>
<g>
<title>__netif_receive_skb (76 samples, 4.43%)</title><rect x="754.5" y="307.0" width="52.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="757.5" y="318.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_core (75 samples, 4.37%)</title><rect x="755.2" y="291.0" width="51.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="758.2" y="302.0">__net..</text>
</g>
<g>
<title>ip_rcv (69 samples, 4.02%)</title><rect x="757.2" y="275.0" width="47.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="760.2" y="286.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (62 samples, 3.62%)</title><rect x="759.3" y="259.0" width="42.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="762.3" y="270.0">ip_r..</text>
</g>
<g>
<title>ip_local_deliver (60 samples, 3.50%)</title><rect x="760.7" y="243.0" width="41.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="763.7" y="254.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver_finish (59 samples, 3.44%)</title><rect x="760.7" y="227.0" width="40.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="763.7" y="238.0">ip_..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.06%)</title><rect x="764.1" y="211.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="767.1" y="222.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.06%)</title><rect x="764.8" y="211.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="767.8" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (52 samples, 3.03%)</title><rect x="765.5" y="211.0" width="35.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="768.5" y="222.0">tcp..</text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.17%)</title><rect x="768.9" y="195.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="771.9" y="206.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.06%)</title><rect x="770.3" y="179.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="773.3" y="190.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (1 samples, 0.06%)</title><rect x="771.0" y="195.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="774.0" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (43 samples, 2.51%)</title><rect x="771.7" y="195.0" width="29.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="774.7" y="206.0">tc..</text>
</g>
<g>
<title>tcp_rcv_established (43 samples, 2.51%)</title><rect x="771.7" y="179.0" width="29.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="774.7" y="190.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.12%)</title><rect x="772.4" y="163.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="775.4" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.12%)</title><rect x="772.4" y="147.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="775.4" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.12%)</title><rect x="772.4" y="131.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="775.4" y="142.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.12%)</title><rect x="772.4" y="115.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="775.4" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.12%)</title><rect x="772.4" y="99.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="775.4" y="110.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.06%)</title><rect x="773.7" y="163.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="776.7" y="174.0"></text>
</g>
<g>
<title>sched_clock_cpu (1 samples, 0.06%)</title><rect x="774.4" y="163.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="777.4" y="174.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.06%)</title><rect x="774.4" y="147.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="777.4" y="158.0"></text>
</g>
<g>
<title>native_sched_clock (1 samples, 0.06%)</title><rect x="774.4" y="131.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="777.4" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.06%)</title><rect x="775.1" y="163.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="778.1" y="174.0"></text>
</g>
<g>
<title>tcp_ack (10 samples, 0.58%)</title><rect x="775.8" y="163.0" width="6.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="778.8" y="174.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 0.35%)</title><rect x="777.2" y="147.0" width="4.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="780.2" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.29%)</title><rect x="777.9" y="131.0" width="3.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="780.9" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.12%)</title><rect x="777.9" y="115.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="780.9" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.12%)</title><rect x="777.9" y="99.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="780.9" y="110.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.17%)</title><rect x="779.2" y="115.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="782.2" y="126.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.17%)</title><rect x="779.2" y="99.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="782.2" y="110.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.06%)</title><rect x="780.6" y="83.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="783.6" y="94.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.06%)</title><rect x="780.6" y="67.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="783.6" y="78.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.06%)</title><rect x="780.6" y="51.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="783.6" y="62.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.06%)</title><rect x="781.3" y="147.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="784.3" y="158.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.06%)</title><rect x="782.0" y="147.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="785.0" y="158.0"></text>
</g>
<g>
<title>tcp_data_queue (26 samples, 1.52%)</title><rect x="782.7" y="163.0" width="17.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="785.7" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (23 samples, 1.34%)</title><rect x="784.1" y="147.0" width="15.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="787.1" y="158.0"></text>
</g>
<g>
<title>__wake_up_sync_key (23 samples, 1.34%)</title><rect x="784.1" y="131.0" width="15.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="787.1" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (23 samples, 1.34%)</title><rect x="784.1" y="115.0" width="15.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="787.1" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (23 samples, 1.34%)</title><rect x="784.1" y="99.0" width="15.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="787.1" y="110.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.06%)</title><rect x="799.9" y="147.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="802.9" y="158.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.06%)</title><rect x="800.6" y="163.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="803.6" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.06%)</title><rect x="801.3" y="227.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="804.3" y="238.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.06%)</title><rect x="801.3" y="211.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="804.3" y="222.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.06%)</title><rect x="801.3" y="195.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="804.3" y="206.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (2 samples, 0.12%)</title><rect x="801.9" y="259.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="804.9" y="270.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.12%)</title><rect x="803.3" y="259.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="806.3" y="270.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (1 samples, 0.06%)</title><rect x="804.0" y="243.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="807.0" y="254.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.06%)</title><rect x="804.0" y="227.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="807.0" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.12%)</title><rect x="804.7" y="275.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="807.7" y="286.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.06%)</title><rect x="806.1" y="275.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="809.1" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.06%)</title><rect x="806.8" y="307.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="809.8" y="318.0"></text>
</g>
<g>
<title>process_backlog (3 samples, 0.17%)</title><rect x="807.4" y="339.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="810.4" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (9 samples, 0.52%)</title><rect x="809.5" y="403.0" width="6.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="812.5" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (9 samples, 0.52%)</title><rect x="809.5" y="387.0" width="6.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="812.5" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.17%)</title><rect x="810.2" y="371.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="813.2" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.17%)</title><rect x="810.2" y="355.0" width="2.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="813.2" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.12%)</title><rect x="810.2" y="339.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="813.2" y="350.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.06%)</title><rect x="811.6" y="339.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="814.6" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.06%)</title><rect x="811.6" y="323.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="814.6" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.06%)</title><rect x="811.6" y="307.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="814.6" y="318.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.06%)</title><rect x="812.3" y="371.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="815.3" y="382.0"></text>
</g>
<g>
<title>netdev_pick_tx (1 samples, 0.06%)</title><rect x="813.0" y="371.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="816.0" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.17%)</title><rect x="813.6" y="371.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="816.6" y="382.0"></text>
</g>
<g>
<title>skb_network_protocol (1 samples, 0.06%)</title><rect x="815.0" y="355.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="818.0" y="366.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack_ipv4] (1 samples, 0.06%)</title><rect x="815.7" y="435.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="818.7" y="446.0"></text>
</g>
<g>
<title>ipv4_helper?[nf_conntrack_ipv4] (1 samples, 0.06%)</title><rect x="816.4" y="435.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="819.4" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.35%)</title><rect x="817.1" y="435.0" width="4.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="820.1" y="446.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (1 samples, 0.06%)</title><rect x="817.1" y="419.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="820.1" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.06%)</title><rect x="817.1" y="403.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="820.1" y="414.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack_ipv4] (3 samples, 0.17%)</title><rect x="817.8" y="419.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="820.8" y="430.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (3 samples, 0.17%)</title><rect x="817.8" y="403.0" width="2.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="820.8" y="414.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (1 samples, 0.06%)</title><rect x="819.8" y="419.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="822.8" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat_ipv4] (1 samples, 0.06%)</title><rect x="820.5" y="419.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="823.5" y="430.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.12%)</title><rect x="821.2" y="467.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="824.2" y="478.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.06%)</title><rect x="822.6" y="467.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="825.6" y="478.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.06%)</title><rect x="823.3" y="483.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="826.3" y="494.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.06%)</title><rect x="823.3" y="467.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="826.3" y="478.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.06%)</title><rect x="823.3" y="451.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="826.3" y="462.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.06%)</title><rect x="824.0" y="499.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="827.0" y="510.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.06%)</title><rect x="824.6" y="499.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="827.6" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (6 samples, 0.35%)</title><rect x="825.3" y="499.0" width="4.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="828.3" y="510.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.06%)</title><rect x="826.0" y="483.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="829.0" y="494.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.06%)</title><rect x="826.0" y="467.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="829.0" y="478.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.23%)</title><rect x="826.7" y="483.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="829.7" y="494.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (4 samples, 0.23%)</title><rect x="826.7" y="467.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="829.7" y="478.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.23%)</title><rect x="826.7" y="451.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="829.7" y="462.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.23%)</title><rect x="826.7" y="435.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="829.7" y="446.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.23%)</title><rect x="826.7" y="419.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="829.7" y="430.0"></text>
</g>
<g>
<title>tcp_init_tso_segs (1 samples, 0.06%)</title><rect x="829.5" y="499.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="832.5" y="510.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.06%)</title><rect x="830.2" y="499.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="833.2" y="510.0"></text>
</g>
<g>
<title>tcp_tso_segs (1 samples, 0.06%)</title><rect x="830.8" y="499.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="833.8" y="510.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.06%)</title><rect x="831.5" y="499.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="834.5" y="510.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.17%)</title><rect x="832.2" y="547.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="835.2" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.17%)</title><rect x="832.2" y="531.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="835.2" y="542.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.06%)</title><rect x="832.2" y="515.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="835.2" y="526.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.06%)</title><rect x="832.9" y="515.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="835.9" y="526.0"></text>
</g>
<g>
<title>tcp_v4_md5_lookup (1 samples, 0.06%)</title><rect x="833.6" y="515.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="836.6" y="526.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.06%)</title><rect x="834.3" y="563.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="837.3" y="574.0"></text>
</g>
<g>
<title>security_socket_sendmsg (3 samples, 0.17%)</title><rect x="835.0" y="595.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="838.0" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.12%)</title><rect x="835.7" y="579.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="838.7" y="590.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.06%)</title><rect x="835.7" y="563.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="838.7" y="574.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.06%)</title><rect x="836.3" y="563.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="839.3" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.06%)</title><rect x="836.3" y="547.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="839.3" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.06%)</title><rect x="837.0" y="595.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="840.0" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.12%)</title><rect x="837.7" y="611.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="840.7" y="622.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.12%)</title><rect x="837.7" y="595.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="840.7" y="606.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.12%)</title><rect x="837.7" y="579.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="840.7" y="590.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.12%)</title><rect x="837.7" y="563.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="840.7" y="574.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.06%)</title><rect x="839.1" y="723.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="842.1" y="734.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.06%)</title><rect x="839.1" y="707.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="842.1" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.06%)</title><rect x="839.8" y="771.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="842.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.06%)</title><rect x="839.8" y="755.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="842.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.06%)</title><rect x="839.8" y="739.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="842.8" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.06%)</title><rect x="839.8" y="723.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="842.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 0.12%)</title><rect x="840.5" y="787.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="843.5" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.12%)</title><rect x="840.5" y="771.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="843.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (2 samples, 0.12%)</title><rect x="840.5" y="755.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="843.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.06%)</title><rect x="841.2" y="739.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="844.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.06%)</title><rect x="841.2" y="723.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="844.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.put (34 samples, 1.98%)</title><rect x="841.8" y="787.0" width="23.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="844.8" y="798.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.06%)</title><rect x="841.8" y="771.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="844.8" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.23%)</title><rect x="842.5" y="771.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="845.5" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.23%)</title><rect x="842.5" y="755.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="845.5" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.17%)</title><rect x="842.5" y="739.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="845.5" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.17%)</title><rect x="842.5" y="723.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="845.5" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.17%)</title><rect x="842.5" y="707.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="845.5" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.06%)</title><rect x="842.5" y="691.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="845.5" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.06%)</title><rect x="842.5" y="675.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="845.5" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.06%)</title><rect x="842.5" y="659.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="845.5" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.upsert (1 samples, 0.06%)</title><rect x="842.5" y="643.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="845.5" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.12%)</title><rect x="843.2" y="691.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="846.2" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.06%)</title><rect x="843.9" y="675.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="846.9" y="686.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="843.9" y="659.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="846.9" y="670.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="844.6" y="739.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="847.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.upsert (29 samples, 1.69%)</title><rect x="845.3" y="771.0" width="19.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="848.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.upsert (29 samples, 1.69%)</title><rect x="845.3" y="755.0" width="19.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="848.3" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.06%)</title><rect x="845.3" y="739.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="848.3" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.06%)</title><rect x="845.3" y="723.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="848.3" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="845.3" y="707.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="848.3" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="845.3" y="691.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="848.3" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.06%)</title><rect x="846.0" y="739.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="849.0" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="846.0" y="723.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="849.0" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="846.0" y="707.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="849.0" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="846.0" y="691.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="849.0" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.06%)</title><rect x="846.0" y="675.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="849.0" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.06%)</title><rect x="846.0" y="659.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="849.0" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.06%)</title><rect x="846.0" y="643.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="849.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.upsert (27 samples, 1.57%)</title><rect x="846.7" y="739.0" width="18.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="849.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.upsert (27 samples, 1.57%)</title><rect x="846.7" y="723.0" width="18.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="849.7" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.06%)</title><rect x="846.7" y="707.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="849.7" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.06%)</title><rect x="846.7" y="691.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="849.7" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="846.7" y="675.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="849.7" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="846.7" y="659.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="849.7" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="846.7" y="643.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="849.7" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.06%)</title><rect x="846.7" y="627.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="849.7" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.06%)</title><rect x="846.7" y="611.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="849.7" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.06%)</title><rect x="846.7" y="595.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="849.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (26 samples, 1.52%)</title><rect x="847.4" y="707.0" width="17.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="850.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (26 samples, 1.52%)</title><rect x="847.4" y="691.0" width="17.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="850.4" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (7 samples, 0.41%)</title><rect x="853.5" y="675.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="856.5" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.06%)</title><rect x="857.7" y="659.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="860.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.12%)</title><rect x="858.4" y="675.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="861.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.12%)</title><rect x="858.4" y="659.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="861.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (8 samples, 0.47%)</title><rect x="859.7" y="675.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="862.7" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.41%)</title><rect x="860.4" y="659.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="863.4" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.41%)</title><rect x="860.4" y="643.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="863.4" y="654.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.17%)</title><rect x="861.8" y="627.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="864.8" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.06%)</title><rect x="863.2" y="611.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="866.2" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.06%)</title><rect x="863.2" y="595.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="866.2" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.12%)</title><rect x="863.9" y="627.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="866.9" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.06%)</title><rect x="863.9" y="611.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="866.9" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.06%)</title><rect x="864.6" y="611.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="867.6" y="622.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (5 samples, 0.29%)</title><rect x="865.2" y="803.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="868.2" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.29%)</title><rect x="865.2" y="787.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="868.2" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (5 samples, 0.29%)</title><rect x="865.2" y="771.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="868.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.equals (3 samples, 0.17%)</title><rect x="866.6" y="755.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="869.6" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.12%)</title><rect x="868.7" y="803.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="871.7" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="869.4" y="787.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="872.4" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="869.4" y="771.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="872.4" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (7 samples, 0.41%)</title><rect x="870.1" y="835.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="873.1" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.06%)</title><rect x="870.1" y="819.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="873.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="870.1" y="803.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="873.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="870.1" y="787.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="873.1" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.06%)</title><rect x="870.1" y="771.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="873.1" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.12%)</title><rect x="870.7" y="819.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="873.7" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.12%)</title><rect x="870.7" y="803.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="873.7" y="814.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (1 samples, 0.06%)</title><rect x="871.4" y="787.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="874.4" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (4 samples, 0.23%)</title><rect x="872.1" y="819.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="875.1" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.29%)</title><rect x="874.9" y="835.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="877.9" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="877.6" y="819.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="880.6" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="877.6" y="803.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="880.6" y="814.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="877.6" y="787.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="880.6" y="798.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="877.6" y="771.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="880.6" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.12%)</title><rect x="878.3" y="835.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="881.3" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.12%)</title><rect x="878.3" y="819.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="881.3" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.12%)</title><rect x="878.3" y="803.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="881.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.12%)</title><rect x="878.3" y="787.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="881.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.12%)</title><rect x="878.3" y="771.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="881.3" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (53 samples, 3.09%)</title><rect x="879.7" y="851.0" width="36.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="882.7" y="862.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (53 samples, 3.09%)</title><rect x="879.7" y="835.0" width="36.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="882.7" y="846.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (7 samples, 0.41%)</title><rect x="880.4" y="819.0" width="4.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="883.4" y="830.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.06%)</title><rect x="881.8" y="803.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="884.8" y="814.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned (1 samples, 0.06%)</title><rect x="882.4" y="803.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="885.4" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.17%)</title><rect x="883.1" y="803.0" width="2.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="886.1" y="814.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.06%)</title><rect x="883.8" y="787.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="886.8" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.06%)</title><rect x="884.5" y="787.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="887.5" y="798.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.06%)</title><rect x="885.2" y="819.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="888.2" y="830.0"></text>
</g>
<g>
<title>recv (44 samples, 2.57%)</title><rect x="885.9" y="819.0" width="30.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="888.9" y="830.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (38 samples, 2.22%)</title><rect x="890.0" y="803.0" width="26.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="893.0" y="814.0">e..</text>
</g>
<g>
<title>do_syscall_64 (38 samples, 2.22%)</title><rect x="890.0" y="787.0" width="26.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="893.0" y="798.0">d..</text>
</g>
<g>
<title>SYSC_recvfrom (1 samples, 0.06%)</title><rect x="894.8" y="771.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="897.8" y="782.0"></text>
</g>
<g>
<title>sys_recvfrom (30 samples, 1.75%)</title><rect x="895.5" y="771.0" width="20.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="898.5" y="782.0"></text>
</g>
<g>
<title>SYSC_recvfrom (30 samples, 1.75%)</title><rect x="895.5" y="755.0" width="20.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="898.5" y="766.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.06%)</title><rect x="895.5" y="739.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="898.5" y="750.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.06%)</title><rect x="896.2" y="739.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="899.2" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (24 samples, 1.40%)</title><rect x="896.9" y="739.0" width="16.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="899.9" y="750.0"></text>
</g>
<g>
<title>inet_recvmsg (22 samples, 1.28%)</title><rect x="896.9" y="723.0" width="15.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="899.9" y="734.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.06%)</title><rect x="896.9" y="707.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="899.9" y="718.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.06%)</title><rect x="897.6" y="707.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="900.6" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (20 samples, 1.17%)</title><rect x="898.3" y="707.0" width="13.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="901.3" y="718.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.23%)</title><rect x="902.4" y="691.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="905.4" y="702.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.23%)</title><rect x="902.4" y="675.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="905.4" y="686.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.12%)</title><rect x="902.4" y="659.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="905.4" y="670.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.12%)</title><rect x="903.8" y="659.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="906.8" y="670.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.06%)</title><rect x="905.1" y="691.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="908.1" y="702.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.17%)</title><rect x="905.8" y="691.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="908.8" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (5 samples, 0.29%)</title><rect x="907.9" y="691.0" width="3.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="910.9" y="702.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.06%)</title><rect x="907.9" y="675.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="910.9" y="686.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.06%)</title><rect x="908.6" y="675.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="911.6" y="686.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.12%)</title><rect x="909.3" y="675.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="912.3" y="686.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.12%)</title><rect x="909.3" y="659.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="912.3" y="670.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.06%)</title><rect x="910.7" y="675.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="913.7" y="686.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.06%)</title><rect x="911.3" y="691.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="914.3" y="702.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.06%)</title><rect x="911.3" y="675.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="914.3" y="686.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.06%)</title><rect x="912.0" y="723.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="915.0" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.06%)</title><rect x="912.0" y="707.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="915.0" y="718.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.06%)</title><rect x="912.0" y="691.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="915.0" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.06%)</title><rect x="912.0" y="675.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="915.0" y="686.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.06%)</title><rect x="912.7" y="723.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="915.7" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.23%)</title><rect x="913.4" y="739.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="916.4" y="750.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.12%)</title><rect x="913.4" y="723.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="916.4" y="734.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.12%)</title><rect x="913.4" y="707.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="916.4" y="718.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.12%)</title><rect x="913.4" y="691.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="916.4" y="702.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.12%)</title><rect x="914.8" y="723.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="917.8" y="734.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=16340] (393 samples, 22.92%)</title><rect x="916.2" y="915.0" width="270.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="919.2" y="926.0">[NIO Selector #3 tid=16340]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (393 samples, 22.92%)</title><rect x="916.2" y="899.0" width="270.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="919.2" y="910.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (71 samples, 4.14%)</title><rect x="917.5" y="883.0" width="48.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="920.5" y="894.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (3 samples, 0.17%)</title><rect x="922.3" y="867.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="925.3" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.06%)</title><rect x="923.7" y="851.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="926.7" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (61 samples, 3.56%)</title><rect x="924.4" y="867.0" width="42.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="927.4" y="878.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.12%)</title><rect x="929.9" y="851.0" width="1.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="932.9" y="862.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.06%)</title><rect x="931.3" y="851.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="934.3" y="862.0"></text>
</g>
<g>
<title>clock_gettime@plt (1 samples, 0.06%)</title><rect x="932.0" y="851.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="935.0" y="862.0"></text>
</g>
<g>
<title>epoll_wait (42 samples, 2.45%)</title><rect x="932.7" y="851.0" width="28.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="935.7" y="862.0">ep..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (37 samples, 2.16%)</title><rect x="936.1" y="835.0" width="25.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="939.1" y="846.0">e..</text>
</g>
<g>
<title>do_syscall_64 (37 samples, 2.16%)</title><rect x="936.1" y="819.0" width="25.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="939.1" y="830.0">d..</text>
</g>
<g>
<title>sys_epoll_wait (36 samples, 2.10%)</title><rect x="936.8" y="803.0" width="24.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="939.8" y="814.0">s..</text>
</g>
<g>
<title>__fdget (1 samples, 0.06%)</title><rect x="938.2" y="787.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="941.2" y="798.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="938.2" y="771.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="941.2" y="782.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.06%)</title><rect x="938.2" y="755.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="941.2" y="766.0"></text>
</g>
<g>
<title>ep_poll (33 samples, 1.92%)</title><rect x="938.9" y="787.0" width="22.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="941.9" y="798.0">e..</text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="939.6" y="771.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="942.6" y="782.0"></text>
</g>
<g>
<title>ep_scan_ready_list (17 samples, 0.99%)</title><rect x="940.2" y="771.0" width="11.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="943.2" y="782.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.17%)</title><rect x="940.9" y="755.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="943.9" y="766.0"></text>
</g>
<g>
<title>ep_send_events_proc (13 samples, 0.76%)</title><rect x="943.0" y="755.0" width="8.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="946.0" y="766.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (9 samples, 0.52%)</title><rect x="945.7" y="739.0" width="6.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="948.7" y="750.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 0.29%)</title><rect x="948.5" y="723.0" width="3.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="951.5" y="734.0"></text>
</g>
<g>
<title>tcp_poll (4 samples, 0.23%)</title><rect x="949.2" y="707.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="952.2" y="718.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.12%)</title><rect x="951.9" y="771.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="954.9" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (12 samples, 0.70%)</title><rect x="953.3" y="771.0" width="8.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="956.3" y="782.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="953.3" y="755.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="956.3" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (11 samples, 0.64%)</title><rect x="954.0" y="755.0" width="7.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="957.0" y="766.0"></text>
</g>
<g>
<title>schedule (11 samples, 0.64%)</title><rect x="954.0" y="739.0" width="7.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="957.0" y="750.0"></text>
</g>
<g>
<title>__schedule (10 samples, 0.58%)</title><rect x="954.7" y="723.0" width="6.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="957.7" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (9 samples, 0.52%)</title><rect x="955.4" y="707.0" width="6.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="958.4" y="718.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.12%)</title><rect x="961.6" y="851.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="964.6" y="862.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.12%)</title><rect x="961.6" y="835.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="964.6" y="846.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.06%)</title><rect x="961.6" y="819.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="964.6" y="830.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.06%)</title><rect x="962.3" y="819.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="965.3" y="830.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.29%)</title><rect x="962.9" y="851.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="965.9" y="862.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.29%)</title><rect x="962.9" y="835.0" width="3.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="965.9" y="846.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (5 samples, 0.29%)</title><rect x="962.9" y="819.0" width="3.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="965.9" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (320 samples, 18.66%)</title><rect x="966.4" y="883.0" width="220.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="969.4" y="894.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (320 samples, 18.66%)</title><rect x="966.4" y="867.0" width="220.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="969.4" y="878.0">one/nio/http/HttpSession.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (267 samples, 15.57%)</title><rect x="967.1" y="851.0" width="183.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="970.1" y="862.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (244 samples, 14.23%)</title><rect x="969.8" y="835.0" width="167.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="972.8" y="846.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (243 samples, 14.17%)</title><rect x="970.5" y="819.0" width="167.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="973.5" y="830.0">one/nio/http/HttpServ..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (242 samples, 14.11%)</title><rect x="970.5" y="803.0" width="166.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="973.5" y="814.0">RequestHandler1_put.h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (199 samples, 11.60%)</title><rect x="970.5" y="787.0" width="136.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="973.5" y="798.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (194 samples, 11.31%)</title><rect x="971.2" y="771.0" width="133.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="974.2" y="782.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.41%)</title><rect x="971.2" y="755.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="974.2" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.29%)</title><rect x="972.6" y="739.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="975.6" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.06%)</title><rect x="972.6" y="723.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="975.6" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.12%)</title><rect x="973.3" y="723.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="976.3" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.06%)</title><rect x="974.0" y="707.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="977.0" y="718.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (1 samples, 0.06%)</title><rect x="974.0" y="691.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="977.0" y="702.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.checkIndex (1 samples, 0.06%)</title><rect x="974.0" y="675.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="977.0" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.length (1 samples, 0.06%)</title><rect x="974.0" y="659.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="977.0" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.12%)</title><rect x="974.6" y="723.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="977.6" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.12%)</title><rect x="974.6" y="707.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="977.6" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.12%)</title><rect x="974.6" y="691.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="977.6" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (187 samples, 10.90%)</title><rect x="976.0" y="755.0" width="128.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="979.0" y="766.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/net/Session.write (187 samples, 10.90%)</title><rect x="976.0" y="739.0" width="128.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="979.0" y="750.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (187 samples, 10.90%)</title><rect x="976.0" y="723.0" width="128.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="979.0" y="734.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (187 samples, 10.90%)</title><rect x="976.0" y="707.0" width="128.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="979.0" y="718.0">one/nio/net/Nati..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.12%)</title><rect x="976.0" y="691.0" width="1.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="979.0" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.06%)</title><rect x="976.7" y="675.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="979.7" y="686.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.06%)</title><rect x="977.4" y="691.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="980.4" y="702.0"></text>
</g>
<g>
<title>send (184 samples, 10.73%)</title><rect x="978.1" y="691.0" width="126.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="981.1" y="702.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (181 samples, 10.55%)</title><rect x="980.1" y="675.0" width="124.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="983.1" y="686.0">entry_SYSCALL_6..</text>
</g>
<g>
<title>do_syscall_64 (180 samples, 10.50%)</title><rect x="980.1" y="659.0" width="123.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="983.1" y="670.0">do_syscall_64</text>
</g>
<g>
<title>sys_sendto (175 samples, 10.20%)</title><rect x="983.6" y="643.0" width="120.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="986.6" y="654.0">sys_sendto</text>
</g>
<g>
<title>SYSC_sendto (175 samples, 10.20%)</title><rect x="983.6" y="627.0" width="120.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="986.6" y="638.0">SYSC_sendto</text>
</g>
<g>
<title>sock_sendmsg (175 samples, 10.20%)</title><rect x="983.6" y="611.0" width="120.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="986.6" y="622.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.06%)</title><rect x="983.6" y="595.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="986.6" y="606.0"></text>
</g>
<g>
<title>inet_sendmsg (173 samples, 10.09%)</title><rect x="984.3" y="595.0" width="119.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="987.3" y="606.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (173 samples, 10.09%)</title><rect x="984.3" y="579.0" width="119.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="987.3" y="590.0">tcp_sendmsg</text>
</g>
<g>
<title>release_sock (1 samples, 0.06%)</title><rect x="985.0" y="563.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="988.0" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.06%)</title><rect x="985.7" y="563.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="988.7" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (170 samples, 9.91%)</title><rect x="986.3" y="563.0" width="117.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="989.3" y="574.0">tcp_sendmsg_lo..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.06%)</title><rect x="987.7" y="547.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="990.7" y="558.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.06%)</title><rect x="987.7" y="531.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="990.7" y="542.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.06%)</title><rect x="988.4" y="547.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="991.4" y="558.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.06%)</title><rect x="988.4" y="531.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="991.4" y="542.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (7 samples, 0.41%)</title><rect x="989.1" y="547.0" width="4.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="992.1" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (7 samples, 0.41%)</title><rect x="989.1" y="531.0" width="4.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="992.1" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (4 samples, 0.23%)</title><rect x="989.1" y="515.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="992.1" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.17%)</title><rect x="989.1" y="499.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="992.1" y="510.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.12%)</title><rect x="989.8" y="483.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="992.8" y="494.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.06%)</title><rect x="991.2" y="499.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="994.2" y="510.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.06%)</title><rect x="991.8" y="515.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="994.8" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.12%)</title><rect x="992.5" y="515.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="995.5" y="526.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.12%)</title><rect x="992.5" y="499.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="995.5" y="510.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.06%)</title><rect x="993.9" y="547.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="996.9" y="558.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.06%)</title><rect x="993.9" y="531.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="996.9" y="542.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.06%)</title><rect x="994.6" y="547.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="997.6" y="558.0"></text>
</g>
<g>
<title>tcp_push (152 samples, 8.86%)</title><rect x="995.3" y="547.0" width="104.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="998.3" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (152 samples, 8.86%)</title><rect x="995.3" y="531.0" width="104.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="998.3" y="542.0">__tcp_push_p..</text>
</g>
<g>
<title>tcp_write_xmit (152 samples, 8.86%)</title><rect x="995.3" y="515.0" width="104.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="998.3" y="526.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (146 samples, 8.51%)</title><rect x="996.0" y="499.0" width="100.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="999.0" y="510.0">__tcp_transm..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.06%)</title><rect x="996.7" y="483.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="999.7" y="494.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.06%)</title><rect x="997.3" y="483.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1000.3" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (141 samples, 8.22%)</title><rect x="998.0" y="483.0" width="97.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1001.0" y="494.0">ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (140 samples, 8.16%)</title><rect x="998.0" y="467.0" width="96.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1001.0" y="478.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (38 samples, 2.22%)</title><rect x="998.7" y="451.0" width="26.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1001.7" y="462.0">_..</text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (1 samples, 0.06%)</title><rect x="998.7" y="435.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1001.7" y="446.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn?[iptable_nat] (1 samples, 0.06%)</title><rect x="999.4" y="435.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1002.4" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (2 samples, 0.12%)</title><rect x="1000.1" y="435.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1003.1" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (34 samples, 1.98%)</title><rect x="1001.5" y="435.0" width="23.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1004.5" y="446.0">n..</text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (4 samples, 0.23%)</title><rect x="1001.5" y="419.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1004.5" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (3 samples, 0.17%)</title><rect x="1002.2" y="403.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1005.2" y="414.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (4 samples, 0.23%)</title><rect x="1004.2" y="419.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1007.2" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (4 samples, 0.23%)</title><rect x="1004.2" y="403.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1007.2" y="414.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn?[iptable_nat] (3 samples, 0.17%)</title><rect x="1007.0" y="419.0" width="2.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1010.0" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (2 samples, 0.12%)</title><rect x="1007.0" y="403.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1010.0" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (1 samples, 0.06%)</title><rect x="1008.4" y="403.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1011.4" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (1 samples, 0.06%)</title><rect x="1008.4" y="387.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1011.4" y="398.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (1 samples, 0.06%)</title><rect x="1008.4" y="371.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1011.4" y="382.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (21 samples, 1.22%)</title><rect x="1009.0" y="419.0" width="14.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1012.0" y="430.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (1 samples, 0.06%)</title><rect x="1009.0" y="403.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1012.0" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (17 samples, 0.99%)</title><rect x="1009.7" y="403.0" width="11.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1012.7" y="414.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (4 samples, 0.23%)</title><rect x="1010.4" y="387.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1013.4" y="398.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (4 samples, 0.23%)</title><rect x="1013.2" y="387.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1016.2" y="398.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (1 samples, 0.06%)</title><rect x="1015.9" y="387.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1018.9" y="398.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (1 samples, 0.06%)</title><rect x="1016.6" y="387.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1019.6" y="398.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (5 samples, 0.29%)</title><rect x="1017.3" y="387.0" width="3.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1020.3" y="398.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (2 samples, 0.12%)</title><rect x="1019.4" y="371.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1022.4" y="382.0"></text>
</g>
<g>
<title>tcp_pkt_to_tuple?[nf_conntrack] (1 samples, 0.06%)</title><rect x="1020.7" y="387.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1023.7" y="398.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (1 samples, 0.06%)</title><rect x="1021.4" y="403.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1024.4" y="414.0"></text>
</g>
<g>
<title>tcp_error?[nf_conntrack] (2 samples, 0.12%)</title><rect x="1022.1" y="403.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1025.1" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.12%)</title><rect x="1023.5" y="419.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1026.5" y="430.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.06%)</title><rect x="1024.9" y="451.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1027.9" y="462.0"></text>
</g>
<g>
<title>ip_output (98 samples, 5.71%)</title><rect x="1025.6" y="451.0" width="67.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1028.6" y="462.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.12%)</title><rect x="1025.6" y="435.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1028.6" y="446.0"></text>
</g>
<g>
<title>ip_finish_output (94 samples, 5.48%)</title><rect x="1026.9" y="435.0" width="64.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1029.9" y="446.0">ip_fini..</text>
</g>
<g>
<title>ip_finish_output2 (94 samples, 5.48%)</title><rect x="1026.9" y="419.0" width="64.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1029.9" y="430.0">ip_fini..</text>
</g>
<g>
<title>__local_bh_enable_ip (73 samples, 4.26%)</title><rect x="1031.7" y="403.0" width="50.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1034.7" y="414.0">__loc..</text>
</g>
<g>
<title>do_softirq.part.17 (73 samples, 4.26%)</title><rect x="1031.7" y="387.0" width="50.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1034.7" y="398.0">do_so..</text>
</g>
<g>
<title>do_softirq_own_stack (72 samples, 4.20%)</title><rect x="1032.4" y="371.0" width="49.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1035.4" y="382.0">do_so..</text>
</g>
<g>
<title>__softirqentry_text_start (71 samples, 4.14%)</title><rect x="1032.4" y="355.0" width="48.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1035.4" y="366.0">__so..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.06%)</title><rect x="1034.5" y="339.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1037.5" y="350.0"></text>
</g>
<g>
<title>net_rx_action (66 samples, 3.85%)</title><rect x="1035.2" y="339.0" width="45.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1038.2" y="350.0">net_..</text>
</g>
<g>
<title>process_backlog (65 samples, 3.79%)</title><rect x="1035.9" y="323.0" width="44.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1038.9" y="334.0">proc..</text>
</g>
<g>
<title>__netif_receive_skb (64 samples, 3.73%)</title><rect x="1036.6" y="307.0" width="44.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1039.6" y="318.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_core (64 samples, 3.73%)</title><rect x="1036.6" y="291.0" width="44.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1039.6" y="302.0">__ne..</text>
</g>
<g>
<title>ip_rcv (62 samples, 3.62%)</title><rect x="1036.6" y="275.0" width="42.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1039.6" y="286.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (58 samples, 3.38%)</title><rect x="1037.3" y="259.0" width="39.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1040.3" y="270.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (57 samples, 3.32%)</title><rect x="1037.9" y="243.0" width="39.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1040.9" y="254.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver_finish (54 samples, 3.15%)</title><rect x="1037.9" y="227.0" width="37.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1040.9" y="238.0">ip_..</text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.06%)</title><rect x="1037.9" y="211.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1040.9" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (53 samples, 3.09%)</title><rect x="1038.6" y="211.0" width="36.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1041.6" y="222.0">tcp..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.12%)</title><rect x="1039.3" y="195.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1042.3" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.06%)</title><rect x="1040.7" y="195.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1043.7" y="206.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.06%)</title><rect x="1040.7" y="179.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1043.7" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (49 samples, 2.86%)</title><rect x="1041.4" y="195.0" width="33.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1044.4" y="206.0">tc..</text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.12%)</title><rect x="1042.1" y="179.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1045.1" y="190.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.06%)</title><rect x="1043.4" y="179.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1046.4" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (45 samples, 2.62%)</title><rect x="1044.1" y="179.0" width="31.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1047.1" y="190.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (5 samples, 0.29%)</title><rect x="1044.1" y="163.0" width="3.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1047.1" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (4 samples, 0.23%)</title><rect x="1044.8" y="147.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1047.8" y="158.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.06%)</title><rect x="1045.5" y="131.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1048.5" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.12%)</title><rect x="1046.2" y="131.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1049.2" y="142.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.12%)</title><rect x="1046.2" y="115.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1049.2" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.12%)</title><rect x="1046.2" y="99.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1049.2" y="110.0"></text>
</g>
<g>
<title>sched_clock_cpu (1 samples, 0.06%)</title><rect x="1047.6" y="163.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1050.6" y="174.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.06%)</title><rect x="1047.6" y="147.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1050.6" y="158.0"></text>
</g>
<g>
<title>native_sched_clock (1 samples, 0.06%)</title><rect x="1047.6" y="131.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1050.6" y="142.0"></text>
</g>
<g>
<title>tcp_ack (8 samples, 0.47%)</title><rect x="1048.3" y="163.0" width="5.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1051.3" y="174.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (7 samples, 0.41%)</title><rect x="1049.0" y="147.0" width="4.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1052.0" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.17%)</title><rect x="1051.7" y="131.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1054.7" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.06%)</title><rect x="1051.7" y="115.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1054.7" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.06%)</title><rect x="1051.7" y="99.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1054.7" y="110.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.12%)</title><rect x="1052.4" y="115.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1055.4" y="126.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.12%)</title><rect x="1052.4" y="99.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1055.4" y="110.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.12%)</title><rect x="1052.4" y="83.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1055.4" y="94.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.12%)</title><rect x="1052.4" y="67.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1055.4" y="78.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.06%)</title><rect x="1053.1" y="51.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1056.1" y="62.0"></text>
</g>
<g>
<title>tcp_data_queue (30 samples, 1.75%)</title><rect x="1053.8" y="163.0" width="20.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1056.8" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (26 samples, 1.52%)</title><rect x="1054.5" y="147.0" width="17.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1057.5" y="158.0"></text>
</g>
<g>
<title>__wake_up_sync_key (24 samples, 1.40%)</title><rect x="1055.8" y="131.0" width="16.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1058.8" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (24 samples, 1.40%)</title><rect x="1055.8" y="115.0" width="16.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1058.8" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (24 samples, 1.40%)</title><rect x="1055.8" y="99.0" width="16.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1058.8" y="110.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.06%)</title><rect x="1072.3" y="147.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1075.3" y="158.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.12%)</title><rect x="1073.0" y="147.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1076.0" y="158.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.06%)</title><rect x="1074.4" y="163.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1077.4" y="174.0"></text>
</g>
<g>
<title>ipv4_helper?[nf_conntrack_ipv4] (1 samples, 0.06%)</title><rect x="1075.1" y="227.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1078.1" y="238.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.12%)</title><rect x="1075.8" y="227.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1078.8" y="238.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.06%)</title><rect x="1076.5" y="211.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1079.5" y="222.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.06%)</title><rect x="1076.5" y="195.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1079.5" y="206.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (2 samples, 0.12%)</title><rect x="1077.2" y="259.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1080.2" y="270.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.06%)</title><rect x="1078.5" y="259.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1081.5" y="270.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.06%)</title><rect x="1078.5" y="243.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1081.5" y="254.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.12%)</title><rect x="1079.2" y="275.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1082.2" y="286.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.06%)</title><rect x="1080.6" y="339.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1083.6" y="350.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.06%)</title><rect x="1081.3" y="355.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1084.3" y="366.0"></text>
</g>
<g>
<title>dev_queue_xmit (14 samples, 0.82%)</title><rect x="1082.0" y="403.0" width="9.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1085.0" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (13 samples, 0.76%)</title><rect x="1082.7" y="387.0" width="8.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1085.7" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.17%)</title><rect x="1086.1" y="371.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1089.1" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.12%)</title><rect x="1086.1" y="355.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1089.1" y="366.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.06%)</title><rect x="1087.5" y="355.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1090.5" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.06%)</title><rect x="1088.2" y="371.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1091.2" y="382.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.06%)</title><rect x="1088.9" y="371.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1091.9" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.17%)</title><rect x="1089.5" y="371.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1092.5" y="382.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.06%)</title><rect x="1090.2" y="355.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1093.2" y="366.0"></text>
</g>
<g>
<title>skb_network_protocol (1 samples, 0.06%)</title><rect x="1090.9" y="355.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1093.9" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.12%)</title><rect x="1091.6" y="435.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1094.6" y="446.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (1 samples, 0.06%)</title><rect x="1091.6" y="419.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1094.6" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.06%)</title><rect x="1091.6" y="403.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1094.6" y="414.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack_ipv4] (1 samples, 0.06%)</title><rect x="1092.3" y="419.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1095.3" y="430.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (1 samples, 0.06%)</title><rect x="1092.3" y="403.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1095.3" y="414.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.12%)</title><rect x="1093.0" y="451.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1096.0" y="462.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.06%)</title><rect x="1094.4" y="467.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1097.4" y="478.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.06%)</title><rect x="1095.0" y="483.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1098.0" y="494.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.06%)</title><rect x="1095.0" y="467.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1098.0" y="478.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.06%)</title><rect x="1095.7" y="483.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1098.7" y="494.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.06%)</title><rect x="1095.7" y="467.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1098.7" y="478.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.06%)</title><rect x="1096.4" y="499.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1099.4" y="510.0"></text>
</g>
<g>
<title>sched_clock_cpu (1 samples, 0.06%)</title><rect x="1097.1" y="499.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1100.1" y="510.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.06%)</title><rect x="1097.1" y="483.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1100.1" y="494.0"></text>
</g>
<g>
<title>native_sched_clock (1 samples, 0.06%)</title><rect x="1097.1" y="467.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1100.1" y="478.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.06%)</title><rect x="1097.8" y="499.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1100.8" y="510.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.06%)</title><rect x="1098.5" y="499.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1101.5" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.06%)</title><rect x="1099.2" y="499.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1102.2" y="510.0"></text>
</g>
<g>
<title>tcp_send_mss (5 samples, 0.29%)</title><rect x="1099.9" y="547.0" width="3.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1102.9" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (5 samples, 0.29%)</title><rect x="1099.9" y="531.0" width="3.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1102.9" y="542.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.06%)</title><rect x="1101.2" y="515.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1104.2" y="526.0"></text>
</g>
<g>
<title>tcp_established_options (2 samples, 0.12%)</title><rect x="1101.9" y="515.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1104.9" y="526.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.06%)</title><rect x="1103.3" y="595.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1106.3" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.06%)</title><rect x="1103.3" y="579.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1106.3" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.06%)</title><rect x="1103.3" y="563.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1106.3" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.06%)</title><rect x="1103.3" y="547.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1106.3" y="558.0"></text>
</g>
<g>
<title>sys_sendto (1 samples, 0.06%)</title><rect x="1104.0" y="659.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1107.0" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.23%)</title><rect x="1104.7" y="771.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1107.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.23%)</title><rect x="1104.7" y="755.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1107.7" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.23%)</title><rect x="1104.7" y="739.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1107.7" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.06%)</title><rect x="1106.7" y="723.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1109.7" y="734.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.06%)</title><rect x="1106.7" y="707.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1109.7" y="718.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.06%)</title><rect x="1106.7" y="691.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1109.7" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (4 samples, 0.23%)</title><rect x="1107.4" y="787.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1110.4" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.17%)</title><rect x="1107.4" y="771.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1110.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="1107.4" y="755.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1110.4" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="1107.4" y="739.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1110.4" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1107.4" y="723.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1110.4" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="1107.4" y="707.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1110.4" y="718.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.12%)</title><rect x="1108.1" y="755.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1111.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.12%)</title><rect x="1108.1" y="739.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1111.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.12%)</title><rect x="1108.1" y="723.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1111.1" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.12%)</title><rect x="1108.1" y="707.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1111.1" y="718.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.06%)</title><rect x="1109.5" y="771.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1112.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.put (39 samples, 2.27%)</title><rect x="1110.2" y="787.0" width="26.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1113.2" y="798.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.06%)</title><rect x="1110.9" y="771.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1113.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.isBlank (2 samples, 0.12%)</title><rect x="1111.6" y="771.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1114.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOfNonWhitespace (2 samples, 0.12%)</title><rect x="1111.6" y="755.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1114.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOfNonWhitespace (2 samples, 0.12%)</title><rect x="1111.6" y="739.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1114.6" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.12%)</title><rect x="1112.9" y="771.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1115.9" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.12%)</title><rect x="1112.9" y="755.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1115.9" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1112.9" y="739.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1115.9" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1112.9" y="723.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1115.9" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1112.9" y="707.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1115.9" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.06%)</title><rect x="1113.6" y="691.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1116.6" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.06%)</title><rect x="1113.6" y="675.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1116.6" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.06%)</title><rect x="1113.6" y="659.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1116.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.upsert (33 samples, 1.92%)</title><rect x="1114.3" y="771.0" width="22.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1117.3" y="782.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.upsert (33 samples, 1.92%)</title><rect x="1114.3" y="755.0" width="22.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1117.3" y="766.0">r..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.06%)</title><rect x="1114.3" y="739.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1117.3" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1114.3" y="723.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1117.3" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1114.3" y="707.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1117.3" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1114.3" y="691.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1117.3" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.06%)</title><rect x="1114.3" y="675.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1117.3" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.06%)</title><rect x="1114.3" y="659.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1117.3" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.06%)</title><rect x="1114.3" y="643.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1117.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.upsert (32 samples, 1.87%)</title><rect x="1115.0" y="739.0" width="22.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1118.0" y="750.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.upsert (32 samples, 1.87%)</title><rect x="1115.0" y="723.0" width="22.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1118.0" y="734.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (32 samples, 1.87%)</title><rect x="1115.0" y="707.0" width="22.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1118.0" y="718.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (32 samples, 1.87%)</title><rect x="1115.0" y="691.0" width="22.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1118.0" y="702.0">j..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.17%)</title><rect x="1122.6" y="675.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1125.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Node.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1124.6" y="675.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1127.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.06%)</title><rect x="1126.0" y="675.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1129.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.06%)</title><rect x="1126.0" y="659.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1129.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (15 samples, 0.87%)</title><rect x="1126.7" y="675.0" width="10.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1129.7" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (14 samples, 0.82%)</title><rect x="1127.4" y="659.0" width="9.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1130.4" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (13 samples, 0.76%)</title><rect x="1128.1" y="643.0" width="8.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1131.1" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.17%)</title><rect x="1128.1" y="627.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1131.1" y="638.0"></text>
</g>
<g>
<title>vectorizedMismatch (2 samples, 0.12%)</title><rect x="1128.8" y="611.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1131.8" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.06%)</title><rect x="1130.1" y="627.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1133.1" y="638.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (9 samples, 0.52%)</title><rect x="1130.8" y="627.0" width="6.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1133.8" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.23%)</title><rect x="1134.3" y="611.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1137.3" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.23%)</title><rect x="1134.3" y="595.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1137.3" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.06%)</title><rect x="1137.0" y="803.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1140.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="1137.0" y="787.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1140.0" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="1137.0" y="771.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1140.0" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (15 samples, 0.87%)</title><rect x="1137.7" y="835.0" width="10.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1140.7" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (6 samples, 0.35%)</title><rect x="1139.1" y="819.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1142.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.17%)</title><rect x="1141.1" y="803.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1144.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.17%)</title><rect x="1141.1" y="787.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1144.1" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.17%)</title><rect x="1141.1" y="771.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1144.1" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.06%)</title><rect x="1142.5" y="755.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1145.5" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.17%)</title><rect x="1143.2" y="819.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1146.2" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.17%)</title><rect x="1143.2" y="803.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1146.2" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (4 samples, 0.23%)</title><rect x="1145.3" y="819.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1148.3" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.06%)</title><rect x="1148.0" y="835.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1151.0" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.setBody (1 samples, 0.06%)</title><rect x="1148.0" y="819.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1151.0" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.06%)</title><rect x="1148.7" y="835.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1151.7" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.06%)</title><rect x="1148.7" y="819.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1151.7" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.06%)</title><rect x="1148.7" y="803.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1151.7" y="814.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.06%)</title><rect x="1148.7" y="787.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1151.7" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.06%)</title><rect x="1148.7" y="771.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1151.7" y="782.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.06%)</title><rect x="1148.7" y="755.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1151.7" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.12%)</title><rect x="1149.4" y="835.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1152.4" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.12%)</title><rect x="1149.4" y="819.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1152.4" y="830.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (1 samples, 0.06%)</title><rect x="1150.1" y="803.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1153.1" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (52 samples, 3.03%)</title><rect x="1150.8" y="851.0" width="35.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1153.8" y="862.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (52 samples, 3.03%)</title><rect x="1150.8" y="835.0" width="35.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1153.8" y="846.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (10 samples, 0.58%)</title><rect x="1152.2" y="819.0" width="6.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1155.2" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.06%)</title><rect x="1152.2" y="803.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1155.2" y="814.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned (1 samples, 0.06%)</title><rect x="1152.8" y="803.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1155.8" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (8 samples, 0.47%)</title><rect x="1153.5" y="803.0" width="5.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1156.5" y="814.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.06%)</title><rect x="1154.9" y="787.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1157.9" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (5 samples, 0.29%)</title><rect x="1155.6" y="787.0" width="3.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1158.6" y="798.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.17%)</title><rect x="1159.0" y="819.0" width="2.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1162.0" y="830.0"></text>
</g>
<g>
<title>recv (37 samples, 2.16%)</title><rect x="1161.1" y="819.0" width="25.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1164.1" y="830.0">r..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (30 samples, 1.75%)</title><rect x="1165.9" y="803.0" width="20.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1168.9" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (29 samples, 1.69%)</title><rect x="1165.9" y="787.0" width="20.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1168.9" y="798.0"></text>
</g>
<g>
<title>sys_recvfrom (23 samples, 1.34%)</title><rect x="1170.0" y="771.0" width="15.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1173.0" y="782.0"></text>
</g>
<g>
<title>SYSC_recvfrom (23 samples, 1.34%)</title><rect x="1170.0" y="755.0" width="15.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1173.0" y="766.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.06%)</title><rect x="1170.0" y="739.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1173.0" y="750.0"></text>
</g>
<g>
<title>inet_recvmsg (1 samples, 0.06%)</title><rect x="1170.7" y="739.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1173.7" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (19 samples, 1.11%)</title><rect x="1171.4" y="739.0" width="13.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1174.4" y="750.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.06%)</title><rect x="1171.4" y="723.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1174.4" y="734.0"></text>
</g>
<g>
<title>inet_recvmsg (15 samples, 0.87%)</title><rect x="1172.1" y="723.0" width="10.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1175.1" y="734.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.06%)</title><rect x="1172.1" y="707.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1175.1" y="718.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.06%)</title><rect x="1172.8" y="707.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1175.8" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (13 samples, 0.76%)</title><rect x="1173.5" y="707.0" width="8.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1176.5" y="718.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.12%)</title><rect x="1175.6" y="691.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1178.6" y="702.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.06%)</title><rect x="1175.6" y="675.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1178.6" y="686.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.06%)</title><rect x="1176.2" y="675.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1179.2" y="686.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.06%)</title><rect x="1176.2" y="659.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1179.2" y="670.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (5 samples, 0.29%)</title><rect x="1176.9" y="691.0" width="3.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1179.9" y="702.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.06%)</title><rect x="1176.9" y="675.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1179.9" y="686.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.12%)</title><rect x="1177.6" y="675.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1180.6" y="686.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.12%)</title><rect x="1179.0" y="675.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1182.0" y="686.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.12%)</title><rect x="1179.0" y="659.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1182.0" y="670.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.06%)</title><rect x="1180.4" y="691.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1183.4" y="702.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.12%)</title><rect x="1181.1" y="691.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1184.1" y="702.0"></text>
</g>
<g>
<title>sched_clock_cpu (1 samples, 0.06%)</title><rect x="1181.7" y="675.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1184.7" y="686.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.06%)</title><rect x="1181.7" y="659.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1184.7" y="670.0"></text>
</g>
<g>
<title>native_sched_clock (1 samples, 0.06%)</title><rect x="1181.7" y="643.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1184.7" y="654.0"></text>
</g>
<g>
<title>security_socket_recvmsg (3 samples, 0.17%)</title><rect x="1182.4" y="723.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1185.4" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (3 samples, 0.17%)</title><rect x="1182.4" y="707.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1185.4" y="718.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.17%)</title><rect x="1182.4" y="691.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1185.4" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.12%)</title><rect x="1183.1" y="675.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1186.1" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.12%)</title><rect x="1184.5" y="739.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1187.5" y="750.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.12%)</title><rect x="1184.5" y="723.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1187.5" y="734.0"></text>
</g>
<g>
<title>sys_recvfrom (1 samples, 0.06%)</title><rect x="1185.9" y="787.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1188.9" y="798.0"></text>
</g>
<g>
<title>[VM Periodic Tas tid=16332] (4 samples, 0.23%)</title><rect x="1186.6" y="915.0" width="2.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1189.6" y="926.0"></text>
</g>
<g>
<title>start_thread (4 samples, 0.23%)</title><rect x="1186.6" y="899.0" width="2.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1189.6" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (4 samples, 0.23%)</title><rect x="1186.6" y="883.0" width="2.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1189.6" y="894.0"></text>
</g>
<g>
<title>WatcherThread::run() (4 samples, 0.23%)</title><rect x="1186.6" y="867.0" width="2.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.6" y="878.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.06%)</title><rect x="1186.6" y="851.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.6" y="862.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (2 samples, 0.12%)</title><rect x="1187.2" y="851.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.2" y="862.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.12%)</title><rect x="1187.2" y="835.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.2" y="846.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (2 samples, 0.12%)</title><rect x="1187.2" y="819.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.2" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.06%)</title><rect x="1187.9" y="803.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1190.9" y="814.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.06%)</title><rect x="1188.6" y="851.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.6" y="862.0"></text>
</g>
<g>
<title>[VM Thread tid=16321] (1 samples, 0.06%)</title><rect x="1189.3" y="915.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1192.3" y="926.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.06%)</title><rect x="1189.3" y="899.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1192.3" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.06%)</title><rect x="1189.3" y="883.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1192.3" y="894.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.06%)</title><rect x="1189.3" y="867.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1192.3" y="878.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.06%)</title><rect x="1189.3" y="851.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.3" y="862.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (1 samples, 0.06%)</title><rect x="1189.3" y="835.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.3" y="846.0"></text>
</g>
<g>
<title>SafepointSynchronize::do_cleanup_tasks() (1 samples, 0.06%)</title><rect x="1189.3" y="819.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.3" y="830.0"></text>
</g>
<g>
<title>WorkGang::run_task(AbstractGangTask*) (1 samples, 0.06%)</title><rect x="1189.3" y="803.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.3" y="814.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int) (1 samples, 0.06%)</title><rect x="1189.3" y="787.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1192.3" y="798.0"></text>
</g>
<g>
<title>sem_post@@GLIBC_2.2.5 (1 samples, 0.06%)</title><rect x="1189.3" y="771.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1192.3" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="1189.3" y="755.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1192.3" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="1189.3" y="739.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1192.3" y="750.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.06%)</title><rect x="1189.3" y="723.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1192.3" y="734.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="1189.3" y="707.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1192.3" y="718.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.06%)</title><rect x="1189.3" y="691.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1192.3" y="702.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.06%)</title><rect x="1189.3" y="675.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1192.3" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.06%)</title><rect x="1189.3" y="659.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1192.3" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="1189.3" y="643.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1192.3" y="654.0"></text>
</g>
</g>
</svg>
