<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="613"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="613"> </text>
<g id="frames">
<g>
<title>all (91,840 samples, 100.00%)</title><rect x="10.0" y="579.0" width="1180.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="13.0" y="590.0">all</text>
</g>
<g>
<title>[2020-highload-dht-thread-0 tid=13575] (1,743 samples, 1.90%)</title><rect x="10.0" y="563.0" width="22.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="13.0" y="574.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (1,743 samples, 1.90%)</title><rect x="10.0" y="547.0" width="22.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,743 samples, 1.90%)</title><rect x="10.0" y="531.0" width="22.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,743 samples, 1.90%)</title><rect x="10.0" y="515.0" width="22.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (20 samples, 0.02%)</title><rect x="10.0" y="499.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (20 samples, 0.02%)</title><rect x="10.0" y="483.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.run (1,723 samples, 1.88%)</title><rect x="10.3" y="499.0" width="22.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.3" y="510.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$entity$1 (1,723 samples, 1.88%)</title><rect x="10.3" y="483.0" width="22.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.3" y="494.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleRequest (1,723 samples, 1.88%)</title><rect x="10.3" y="467.0" width="22.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.3" y="478.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (41 samples, 0.04%)</title><rect x="10.3" y="451.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.3" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (41 samples, 0.04%)</title><rect x="10.3" y="435.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.3" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (41 samples, 0.04%)</title><rect x="10.3" y="419.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.3" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (41 samples, 0.04%)</title><rect x="10.3" y="403.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.3" y="414.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.04%)</title><rect x="10.3" y="387.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="13.3" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (27 samples, 0.03%)</title><rect x="10.8" y="451.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.8" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (27 samples, 0.03%)</title><rect x="10.8" y="435.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.8" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (27 samples, 0.03%)</title><rect x="10.8" y="419.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="13.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleGet (1,655 samples, 1.80%)</title><rect x="11.1" y="451.0" width="21.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="14.1" y="462.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (101 samples, 0.11%)</title><rect x="11.1" y="435.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="14.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (101 samples, 0.11%)</title><rect x="11.1" y="419.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="14.1" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (74 samples, 0.08%)</title><rect x="11.1" y="403.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="14.1" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (61 samples, 0.07%)</title><rect x="11.3" y="387.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="14.3" y="398.0"></text>
</g>
<g>
<title>byte[] (61 samples, 0.07%)</title><rect x="11.3" y="371.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="14.3" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (27 samples, 0.03%)</title><rect x="12.1" y="403.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="15.1" y="414.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (27 samples, 0.03%)</title><rect x="12.1" y="387.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="15.1" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (74 samples, 0.08%)</title><rect x="12.4" y="435.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="15.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (63 samples, 0.07%)</title><rect x="12.6" y="419.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="15.6" y="430.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.02%)</title><rect x="12.6" y="403.0" width="0.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="15.6" y="414.0"></text>
</g>
<g>
<title>java.lang.String[] (27 samples, 0.03%)</title><rect x="12.8" y="403.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="15.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,453 samples, 1.58%)</title><rect x="13.4" y="435.0" width="18.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="16.4" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (176 samples, 0.19%)</title><rect x="13.4" y="419.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="16.4" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (176 samples, 0.19%)</title><rect x="13.4" y="403.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="16.4" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (176 samples, 0.19%)</title><rect x="13.4" y="387.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="16.4" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (176 samples, 0.19%)</title><rect x="13.4" y="371.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="16.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (176 samples, 0.19%)</title><rect x="13.4" y="355.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="16.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (121 samples, 0.13%)</title><rect x="13.4" y="339.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="16.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (121 samples, 0.13%)</title><rect x="13.4" y="323.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="16.4" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (121 samples, 0.13%)</title><rect x="13.4" y="307.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="16.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (121 samples, 0.13%)</title><rect x="13.4" y="291.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="16.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (121 samples, 0.13%)</title><rect x="13.4" y="275.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="16.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (121 samples, 0.13%)</title><rect x="13.4" y="259.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="16.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (59 samples, 0.06%)</title><rect x="13.4" y="243.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="16.4" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (59 samples, 0.06%)</title><rect x="13.4" y="227.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="16.4" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (59 samples, 0.06%)</title><rect x="13.4" y="211.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="16.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (59 samples, 0.06%)</title><rect x="13.4" y="195.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="16.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (59 samples, 0.06%)</title><rect x="13.4" y="179.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="16.4" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (59 samples, 0.06%)</title><rect x="13.4" y="163.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="16.4" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (59 samples, 0.06%)</title><rect x="13.4" y="147.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="16.4" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (59 samples, 0.06%)</title><rect x="13.4" y="131.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="16.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (59 samples, 0.06%)</title><rect x="13.4" y="115.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="16.4" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (40 samples, 0.04%)</title><rect x="13.6" y="99.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="16.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (40 samples, 0.04%)</title><rect x="13.6" y="83.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="16.6" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (40 samples, 0.04%)</title><rect x="13.6" y="67.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="16.6" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (26 samples, 0.03%)</title><rect x="13.6" y="51.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="16.6" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (26 samples, 0.03%)</title><rect x="13.6" y="35.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="16.6" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (62 samples, 0.07%)</title><rect x="14.1" y="243.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="17.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (62 samples, 0.07%)</title><rect x="14.1" y="227.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="17.1" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (62 samples, 0.07%)</title><rect x="14.1" y="211.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="17.1" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (62 samples, 0.07%)</title><rect x="14.1" y="195.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="17.1" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (62 samples, 0.07%)</title><rect x="14.1" y="179.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="17.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$140/499586134.apply (55 samples, 0.06%)</title><rect x="14.9" y="339.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="17.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (55 samples, 0.06%)</title><rect x="14.9" y="323.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="17.9" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (55 samples, 0.06%)</title><rect x="14.9" y="307.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="17.9" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (55 samples, 0.06%)</title><rect x="14.9" y="291.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="17.9" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (55 samples, 0.06%)</title><rect x="14.9" y="275.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="17.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (82 samples, 0.09%)</title><rect x="15.6" y="419.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="18.6" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (82 samples, 0.09%)</title><rect x="15.6" y="403.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="18.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$151/1576841624.apply (82 samples, 0.09%)</title><rect x="15.6" y="387.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="18.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$3 (82 samples, 0.09%)</title><rect x="15.6" y="371.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="18.6" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (30 samples, 0.03%)</title><rect x="15.6" y="355.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="18.6" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (30 samples, 0.03%)</title><rect x="15.6" y="339.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="18.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (34 samples, 0.04%)</title><rect x="16.3" y="355.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="19.3" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (34 samples, 0.04%)</title><rect x="16.3" y="339.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="19.3" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (34 samples, 0.04%)</title><rect x="16.3" y="323.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="19.3" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (34 samples, 0.04%)</title><rect x="16.3" y="307.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="19.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (29 samples, 0.03%)</title><rect x="16.7" y="419.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="19.7" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (29 samples, 0.03%)</title><rect x="16.7" y="403.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="19.7" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (29 samples, 0.03%)</title><rect x="16.7" y="387.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="19.7" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (29 samples, 0.03%)</title><rect x="16.7" y="371.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="19.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (31 samples, 0.03%)</title><rect x="17.1" y="419.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="20.1" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (31 samples, 0.03%)</title><rect x="17.1" y="403.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="20.1" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (31 samples, 0.03%)</title><rect x="17.1" y="387.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="20.1" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (31 samples, 0.03%)</title><rect x="17.1" y="371.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="20.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (1,135 samples, 1.24%)</title><rect x="17.5" y="419.0" width="14.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="20.5" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (30 samples, 0.03%)</title><rect x="17.7" y="403.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="20.7" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (30 samples, 0.03%)</title><rect x="17.7" y="387.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="20.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (712 samples, 0.78%)</title><rect x="18.1" y="403.0" width="9.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="21.1" y="414.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (24 samples, 0.03%)</title><rect x="18.2" y="387.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="21.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (24 samples, 0.03%)</title><rect x="18.2" y="371.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="21.2" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (24 samples, 0.03%)</title><rect x="18.2" y="355.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="21.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (639 samples, 0.70%)</title><rect x="19.0" y="387.0" width="8.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="22.0" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (23 samples, 0.03%)</title><rect x="19.0" y="371.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="22.0" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (23 samples, 0.03%)</title><rect x="19.0" y="355.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="22.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (242 samples, 0.26%)</title><rect x="19.3" y="371.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="22.3" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (229 samples, 0.25%)</title><rect x="19.5" y="355.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="22.5" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (163 samples, 0.18%)</title><rect x="20.3" y="339.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="23.3" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (163 samples, 0.18%)</title><rect x="20.3" y="323.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="23.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (163 samples, 0.18%)</title><rect x="20.3" y="307.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="23.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (55 samples, 0.06%)</title><rect x="20.3" y="291.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="23.3" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (55 samples, 0.06%)</title><rect x="20.3" y="275.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="23.3" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (55 samples, 0.06%)</title><rect x="20.3" y="259.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="23.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (55 samples, 0.06%)</title><rect x="20.3" y="243.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="23.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (38 samples, 0.04%)</title><rect x="20.5" y="227.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="23.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (38 samples, 0.04%)</title><rect x="20.5" y="211.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="23.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (38 samples, 0.04%)</title><rect x="20.5" y="195.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="23.5" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (23 samples, 0.03%)</title><rect x="20.5" y="179.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="23.5" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (23 samples, 0.03%)</title><rect x="20.5" y="163.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="23.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (108 samples, 0.12%)</title><rect x="21.0" y="291.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="24.0" y="302.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (20 samples, 0.02%)</title><rect x="21.5" y="275.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="24.5" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (20 samples, 0.02%)</title><rect x="21.5" y="259.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="24.5" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (20 samples, 0.02%)</title><rect x="21.5" y="243.0" width="0.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="24.5" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (52 samples, 0.06%)</title><rect x="21.7" y="275.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="24.7" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (52 samples, 0.06%)</title><rect x="21.7" y="259.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="24.7" y="270.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (35 samples, 0.04%)</title><rect x="22.5" y="371.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="25.5" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (35 samples, 0.04%)</title><rect x="22.5" y="355.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="25.5" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$ValueIterator (35 samples, 0.04%)</title><rect x="22.5" y="339.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="25.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (79 samples, 0.09%)</title><rect x="23.8" y="371.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="26.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (62 samples, 0.07%)</title><rect x="24.0" y="355.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="27.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (62 samples, 0.07%)</title><rect x="24.0" y="339.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="27.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (62 samples, 0.07%)</title><rect x="24.0" y="323.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="27.0" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (62 samples, 0.07%)</title><rect x="24.0" y="307.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="27.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (62 samples, 0.07%)</title><rect x="24.0" y="291.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="27.0" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (62 samples, 0.07%)</title><rect x="24.0" y="275.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="27.0" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (62 samples, 0.07%)</title><rect x="24.0" y="259.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="27.0" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (62 samples, 0.07%)</title><rect x="24.0" y="243.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="27.0" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (62 samples, 0.07%)</title><rect x="24.0" y="227.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="27.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (62 samples, 0.07%)</title><rect x="24.0" y="211.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="27.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (45 samples, 0.05%)</title><rect x="24.2" y="195.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="27.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (45 samples, 0.05%)</title><rect x="24.2" y="179.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="27.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (45 samples, 0.05%)</title><rect x="24.2" y="163.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="27.2" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (30 samples, 0.03%)</title><rect x="24.2" y="147.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="27.2" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (30 samples, 0.03%)</title><rect x="24.2" y="131.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="27.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (190 samples, 0.21%)</title><rect x="24.8" y="371.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="27.8" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (50 samples, 0.05%)</title><rect x="24.8" y="355.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="27.8" y="366.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (31 samples, 0.03%)</title><rect x="25.0" y="339.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="28.0" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (31 samples, 0.03%)</title><rect x="25.0" y="323.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="28.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (28 samples, 0.03%)</title><rect x="25.5" y="355.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="28.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (28 samples, 0.03%)</title><rect x="25.5" y="339.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="28.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (28 samples, 0.03%)</title><rect x="25.5" y="323.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="28.5" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (28 samples, 0.03%)</title><rect x="25.5" y="307.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="28.5" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (59 samples, 0.06%)</title><rect x="25.9" y="355.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="28.9" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (23 samples, 0.03%)</title><rect x="25.9" y="339.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="28.9" y="350.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (23 samples, 0.03%)</title><rect x="25.9" y="323.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="28.9" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (36 samples, 0.04%)</title><rect x="26.2" y="339.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="29.2" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (32 samples, 0.03%)</title><rect x="26.3" y="323.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="29.3" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (32 samples, 0.03%)</title><rect x="26.3" y="307.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="29.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (43 samples, 0.05%)</title><rect x="26.7" y="355.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="29.7" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (43 samples, 0.05%)</title><rect x="26.7" y="339.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="29.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (376 samples, 0.41%)</title><rect x="27.2" y="403.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="30.2" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (176 samples, 0.19%)</title><rect x="27.2" y="387.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="30.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (166 samples, 0.18%)</title><rect x="27.3" y="371.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="30.3" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (108 samples, 0.12%)</title><rect x="27.6" y="355.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="30.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (108 samples, 0.12%)</title><rect x="27.6" y="339.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="30.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (108 samples, 0.12%)</title><rect x="27.6" y="323.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="30.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (108 samples, 0.12%)</title><rect x="27.6" y="307.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="30.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (62 samples, 0.07%)</title><rect x="27.6" y="291.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="30.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (62 samples, 0.07%)</title><rect x="27.6" y="275.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="30.6" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (62 samples, 0.07%)</title><rect x="27.6" y="259.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="30.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (62 samples, 0.07%)</title><rect x="27.6" y="243.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="30.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (62 samples, 0.07%)</title><rect x="27.6" y="227.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="30.6" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (62 samples, 0.07%)</title><rect x="27.6" y="211.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="30.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (62 samples, 0.07%)</title><rect x="27.6" y="195.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="30.6" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (62 samples, 0.07%)</title><rect x="27.6" y="179.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="30.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (62 samples, 0.07%)</title><rect x="27.6" y="163.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="30.6" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (46 samples, 0.05%)</title><rect x="27.8" y="147.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="30.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (46 samples, 0.05%)</title><rect x="27.8" y="131.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="30.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (46 samples, 0.05%)</title><rect x="27.8" y="115.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="30.8" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (33 samples, 0.04%)</title><rect x="27.8" y="99.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="30.8" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (33 samples, 0.04%)</title><rect x="27.8" y="83.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="30.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (46 samples, 0.05%)</title><rect x="28.4" y="291.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="31.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (46 samples, 0.05%)</title><rect x="28.4" y="275.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="31.4" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (46 samples, 0.05%)</title><rect x="28.4" y="259.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="31.4" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (46 samples, 0.05%)</title><rect x="28.4" y="243.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="31.4" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (46 samples, 0.05%)</title><rect x="28.4" y="227.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="31.4" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (32 samples, 0.03%)</title><rect x="29.6" y="387.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="32.6" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (21 samples, 0.02%)</title><rect x="29.8" y="371.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="32.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.02%)</title><rect x="29.8" y="355.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="32.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.02%)</title><rect x="29.8" y="339.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="32.8" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$93/506024426.get$Lambda (21 samples, 0.02%)</title><rect x="29.8" y="323.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="32.8" y="334.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$93 (21 samples, 0.02%)</title><rect x="29.8" y="307.0" width="0.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="32.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (157 samples, 0.17%)</title><rect x="30.0" y="387.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="33.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (143 samples, 0.16%)</title><rect x="30.2" y="371.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="33.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (143 samples, 0.16%)</title><rect x="30.2" y="355.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="33.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (143 samples, 0.16%)</title><rect x="30.2" y="339.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="33.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (143 samples, 0.16%)</title><rect x="30.2" y="323.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="33.2" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (143 samples, 0.16%)</title><rect x="30.2" y="307.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="33.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (143 samples, 0.16%)</title><rect x="30.2" y="291.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="33.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (143 samples, 0.16%)</title><rect x="30.2" y="275.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="33.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (71 samples, 0.08%)</title><rect x="30.2" y="259.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="33.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (71 samples, 0.08%)</title><rect x="30.2" y="243.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="33.2" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (71 samples, 0.08%)</title><rect x="30.2" y="227.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="33.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (71 samples, 0.08%)</title><rect x="30.2" y="211.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="33.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (71 samples, 0.08%)</title><rect x="30.2" y="195.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="33.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (71 samples, 0.08%)</title><rect x="30.2" y="179.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="33.2" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (71 samples, 0.08%)</title><rect x="30.2" y="163.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="33.2" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (71 samples, 0.08%)</title><rect x="30.2" y="147.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="33.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (71 samples, 0.08%)</title><rect x="30.2" y="131.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="33.2" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (55 samples, 0.06%)</title><rect x="30.4" y="115.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="33.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (55 samples, 0.06%)</title><rect x="30.4" y="99.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="33.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (55 samples, 0.06%)</title><rect x="30.4" y="83.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="33.4" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (40 samples, 0.04%)</title><rect x="30.4" y="67.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="33.4" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (40 samples, 0.04%)</title><rect x="30.4" y="51.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="33.4" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (72 samples, 0.08%)</title><rect x="31.1" y="259.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="34.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (72 samples, 0.08%)</title><rect x="31.1" y="243.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="34.1" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (72 samples, 0.08%)</title><rect x="31.1" y="227.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="34.1" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (72 samples, 0.08%)</title><rect x="31.1" y="211.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="34.1" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (72 samples, 0.08%)</title><rect x="31.1" y="195.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="34.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.getBytesFromByteBuffer (27 samples, 0.03%)</title><rect x="32.0" y="435.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="35.0" y="446.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.03%)</title><rect x="32.0" y="419.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="35.0" y="430.0"></text>
</g>
<g>
<title>[2020-highload-dht-thread-0 tid=13584] (1,752 samples, 1.91%)</title><rect x="32.4" y="563.0" width="22.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="35.4" y="574.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (1,752 samples, 1.91%)</title><rect x="32.4" y="547.0" width="22.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="35.4" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,752 samples, 1.91%)</title><rect x="32.4" y="531.0" width="22.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="35.4" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,752 samples, 1.91%)</title><rect x="32.4" y="515.0" width="22.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="35.4" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (37 samples, 0.04%)</title><rect x="32.4" y="499.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="35.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (37 samples, 0.04%)</title><rect x="32.4" y="483.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="35.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (37 samples, 0.04%)</title><rect x="32.4" y="467.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="35.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (37 samples, 0.04%)</title><rect x="32.4" y="451.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="35.4" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (37 samples, 0.04%)</title><rect x="32.4" y="435.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="35.4" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.run (1,715 samples, 1.87%)</title><rect x="32.9" y="499.0" width="22.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="35.9" y="510.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$entity$1 (1,715 samples, 1.87%)</title><rect x="32.9" y="483.0" width="22.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="35.9" y="494.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleRequest (1,715 samples, 1.87%)</title><rect x="32.9" y="467.0" width="22.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="35.9" y="478.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (45 samples, 0.05%)</title><rect x="32.9" y="451.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="35.9" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (45 samples, 0.05%)</title><rect x="32.9" y="435.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="35.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (45 samples, 0.05%)</title><rect x="32.9" y="419.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="35.9" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (45 samples, 0.05%)</title><rect x="32.9" y="403.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="35.9" y="414.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.05%)</title><rect x="32.9" y="387.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="35.9" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (30 samples, 0.03%)</title><rect x="33.4" y="451.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="36.4" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (30 samples, 0.03%)</title><rect x="33.4" y="435.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="36.4" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (30 samples, 0.03%)</title><rect x="33.4" y="419.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="36.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleGet (1,640 samples, 1.79%)</title><rect x="33.8" y="451.0" width="21.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="36.8" y="462.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (90 samples, 0.10%)</title><rect x="33.8" y="435.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="36.8" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (90 samples, 0.10%)</title><rect x="33.8" y="419.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="36.8" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (66 samples, 0.07%)</title><rect x="33.8" y="403.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="36.8" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (55 samples, 0.06%)</title><rect x="34.0" y="387.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="37.0" y="398.0"></text>
</g>
<g>
<title>byte[] (55 samples, 0.06%)</title><rect x="34.0" y="371.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="37.0" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (24 samples, 0.03%)</title><rect x="34.7" y="403.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="37.7" y="414.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (24 samples, 0.03%)</title><rect x="34.7" y="387.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="37.7" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (75 samples, 0.08%)</title><rect x="35.0" y="435.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="38.0" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (63 samples, 0.07%)</title><rect x="35.1" y="419.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="38.1" y="430.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.03%)</title><rect x="35.1" y="403.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="38.1" y="414.0"></text>
</g>
<g>
<title>java.lang.String[] (21 samples, 0.02%)</title><rect x="35.5" y="403.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="38.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,455 samples, 1.58%)</title><rect x="36.0" y="435.0" width="18.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="39.0" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (187 samples, 0.20%)</title><rect x="36.0" y="419.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="39.0" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (187 samples, 0.20%)</title><rect x="36.0" y="403.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="39.0" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (187 samples, 0.20%)</title><rect x="36.0" y="387.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="39.0" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (187 samples, 0.20%)</title><rect x="36.0" y="371.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="39.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (187 samples, 0.20%)</title><rect x="36.0" y="355.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="39.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (129 samples, 0.14%)</title><rect x="36.0" y="339.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="39.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (129 samples, 0.14%)</title><rect x="36.0" y="323.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="39.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (129 samples, 0.14%)</title><rect x="36.0" y="307.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="39.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (129 samples, 0.14%)</title><rect x="36.0" y="291.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="39.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (129 samples, 0.14%)</title><rect x="36.0" y="275.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="39.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (129 samples, 0.14%)</title><rect x="36.0" y="259.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="39.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (54 samples, 0.06%)</title><rect x="36.0" y="243.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="39.0" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (54 samples, 0.06%)</title><rect x="36.0" y="227.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="39.0" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (54 samples, 0.06%)</title><rect x="36.0" y="211.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="39.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (54 samples, 0.06%)</title><rect x="36.0" y="195.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="39.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (54 samples, 0.06%)</title><rect x="36.0" y="179.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="39.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (54 samples, 0.06%)</title><rect x="36.0" y="163.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="39.0" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (54 samples, 0.06%)</title><rect x="36.0" y="147.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="39.0" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (54 samples, 0.06%)</title><rect x="36.0" y="131.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="39.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (54 samples, 0.06%)</title><rect x="36.0" y="115.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="39.0" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (41 samples, 0.04%)</title><rect x="36.1" y="99.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="39.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (41 samples, 0.04%)</title><rect x="36.1" y="83.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="39.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (41 samples, 0.04%)</title><rect x="36.1" y="67.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="39.1" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (27 samples, 0.03%)</title><rect x="36.1" y="51.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="39.1" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (27 samples, 0.03%)</title><rect x="36.1" y="35.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="39.1" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (75 samples, 0.08%)</title><rect x="36.6" y="243.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="39.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (75 samples, 0.08%)</title><rect x="36.6" y="227.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="39.6" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (75 samples, 0.08%)</title><rect x="36.6" y="211.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="39.6" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (75 samples, 0.08%)</title><rect x="36.6" y="195.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="39.6" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (75 samples, 0.08%)</title><rect x="36.6" y="179.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="39.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$140/499586134.apply (58 samples, 0.06%)</title><rect x="37.6" y="339.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="40.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (58 samples, 0.06%)</title><rect x="37.6" y="323.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="40.6" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (58 samples, 0.06%)</title><rect x="37.6" y="307.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="40.6" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (58 samples, 0.06%)</title><rect x="37.6" y="291.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="40.6" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (58 samples, 0.06%)</title><rect x="37.6" y="275.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="40.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (62 samples, 0.07%)</title><rect x="38.4" y="419.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="41.4" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (62 samples, 0.07%)</title><rect x="38.4" y="403.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="41.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$151/1576841624.apply (62 samples, 0.07%)</title><rect x="38.4" y="387.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="41.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$3 (62 samples, 0.07%)</title><rect x="38.4" y="371.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="41.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (29 samples, 0.03%)</title><rect x="38.8" y="355.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="41.8" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (29 samples, 0.03%)</title><rect x="38.8" y="339.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="41.8" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (29 samples, 0.03%)</title><rect x="38.8" y="323.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="41.8" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (29 samples, 0.03%)</title><rect x="38.8" y="307.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="41.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (37 samples, 0.04%)</title><rect x="39.2" y="419.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="42.2" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (37 samples, 0.04%)</title><rect x="39.2" y="403.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="42.2" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (37 samples, 0.04%)</title><rect x="39.2" y="387.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="42.2" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (37 samples, 0.04%)</title><rect x="39.2" y="371.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="42.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (34 samples, 0.04%)</title><rect x="39.6" y="419.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="42.6" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (34 samples, 0.04%)</title><rect x="39.6" y="403.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="42.6" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (34 samples, 0.04%)</title><rect x="39.6" y="387.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="42.6" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (34 samples, 0.04%)</title><rect x="39.6" y="371.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="42.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (1,135 samples, 1.24%)</title><rect x="40.1" y="419.0" width="14.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="43.1" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (31 samples, 0.03%)</title><rect x="40.1" y="403.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="43.1" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (31 samples, 0.03%)</title><rect x="40.1" y="387.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="43.1" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (22 samples, 0.02%)</title><rect x="40.5" y="403.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="43.5" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (22 samples, 0.02%)</title><rect x="40.5" y="387.0" width="0.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="43.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (720 samples, 0.78%)</title><rect x="40.8" y="403.0" width="9.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="43.8" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (22 samples, 0.02%)</title><rect x="41.3" y="387.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="44.3" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (22 samples, 0.02%)</title><rect x="41.3" y="371.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="44.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (655 samples, 0.71%)</title><rect x="41.6" y="387.0" width="8.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="44.6" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (22 samples, 0.02%)</title><rect x="41.6" y="371.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="44.6" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (22 samples, 0.02%)</title><rect x="41.6" y="355.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="44.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (265 samples, 0.29%)</title><rect x="41.9" y="371.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="44.9" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (255 samples, 0.28%)</title><rect x="42.0" y="355.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="45.0" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (195 samples, 0.21%)</title><rect x="42.8" y="339.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="45.8" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (195 samples, 0.21%)</title><rect x="42.8" y="323.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="45.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (195 samples, 0.21%)</title><rect x="42.8" y="307.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="45.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (69 samples, 0.08%)</title><rect x="42.8" y="291.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="45.8" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (69 samples, 0.08%)</title><rect x="42.8" y="275.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="45.8" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (69 samples, 0.08%)</title><rect x="42.8" y="259.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="45.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (69 samples, 0.08%)</title><rect x="42.8" y="243.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="45.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (24 samples, 0.03%)</title><rect x="42.8" y="227.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="45.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (24 samples, 0.03%)</title><rect x="42.8" y="211.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="45.8" y="222.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (24 samples, 0.03%)</title><rect x="42.8" y="195.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="45.8" y="206.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (45 samples, 0.05%)</title><rect x="43.1" y="227.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="46.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (45 samples, 0.05%)</title><rect x="43.1" y="211.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="46.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (45 samples, 0.05%)</title><rect x="43.1" y="195.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="46.1" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (27 samples, 0.03%)</title><rect x="43.1" y="179.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="46.1" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (27 samples, 0.03%)</title><rect x="43.1" y="163.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="46.1" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (126 samples, 0.14%)</title><rect x="43.7" y="291.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="46.7" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (27 samples, 0.03%)</title><rect x="43.7" y="275.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="46.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (28 samples, 0.03%)</title><rect x="44.0" y="275.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="47.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (28 samples, 0.03%)</title><rect x="44.0" y="259.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="47.0" y="270.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (25 samples, 0.03%)</title><rect x="44.4" y="275.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="47.4" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (25 samples, 0.03%)</title><rect x="44.4" y="259.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="47.4" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (25 samples, 0.03%)</title><rect x="44.4" y="243.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="47.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (46 samples, 0.05%)</title><rect x="44.7" y="275.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="47.7" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (46 samples, 0.05%)</title><rect x="44.7" y="259.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="47.7" y="270.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (20 samples, 0.02%)</title><rect x="45.4" y="371.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="48.4" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (20 samples, 0.02%)</title><rect x="45.4" y="355.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="48.4" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$ValueIterator (20 samples, 0.02%)</title><rect x="45.4" y="339.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="48.4" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (25 samples, 0.03%)</title><rect x="46.3" y="371.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="49.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (83 samples, 0.09%)</title><rect x="46.6" y="371.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="49.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (68 samples, 0.07%)</title><rect x="46.8" y="355.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="49.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (68 samples, 0.07%)</title><rect x="46.8" y="339.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="49.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (68 samples, 0.07%)</title><rect x="46.8" y="323.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="49.8" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (68 samples, 0.07%)</title><rect x="46.8" y="307.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="49.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (68 samples, 0.07%)</title><rect x="46.8" y="291.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="49.8" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (68 samples, 0.07%)</title><rect x="46.8" y="275.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="49.8" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (68 samples, 0.07%)</title><rect x="46.8" y="259.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="49.8" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (68 samples, 0.07%)</title><rect x="46.8" y="243.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="49.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (68 samples, 0.07%)</title><rect x="46.8" y="227.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="49.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (68 samples, 0.07%)</title><rect x="46.8" y="211.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="49.8" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (23 samples, 0.03%)</title><rect x="46.8" y="195.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="49.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (23 samples, 0.03%)</title><rect x="46.8" y="179.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="49.8" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (23 samples, 0.03%)</title><rect x="46.8" y="163.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="49.8" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (45 samples, 0.05%)</title><rect x="47.1" y="195.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="50.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (45 samples, 0.05%)</title><rect x="47.1" y="179.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="50.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (45 samples, 0.05%)</title><rect x="47.1" y="163.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="50.1" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (37 samples, 0.04%)</title><rect x="47.1" y="147.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="50.1" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (37 samples, 0.04%)</title><rect x="47.1" y="131.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="50.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (185 samples, 0.20%)</title><rect x="47.6" y="371.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="50.6" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (60 samples, 0.07%)</title><rect x="47.6" y="355.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="50.6" y="366.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (42 samples, 0.05%)</title><rect x="47.9" y="339.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="50.9" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (42 samples, 0.05%)</title><rect x="47.9" y="323.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="50.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (26 samples, 0.03%)</title><rect x="48.5" y="355.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="51.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (26 samples, 0.03%)</title><rect x="48.5" y="339.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="51.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (26 samples, 0.03%)</title><rect x="48.5" y="323.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="51.5" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (26 samples, 0.03%)</title><rect x="48.5" y="307.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="51.5" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (53 samples, 0.06%)</title><rect x="48.9" y="355.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="51.9" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (36 samples, 0.04%)</title><rect x="49.1" y="339.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="52.1" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (23 samples, 0.03%)</title><rect x="49.3" y="323.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="52.3" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (23 samples, 0.03%)</title><rect x="49.3" y="307.0" width="0.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="52.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (37 samples, 0.04%)</title><rect x="49.5" y="355.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="52.5" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (37 samples, 0.04%)</title><rect x="49.5" y="339.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="52.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (360 samples, 0.39%)</title><rect x="50.0" y="403.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="53.0" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (204 samples, 0.22%)</title><rect x="50.0" y="387.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="53.0" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (195 samples, 0.21%)</title><rect x="50.1" y="371.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="53.1" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (118 samples, 0.13%)</title><rect x="50.3" y="355.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="53.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (118 samples, 0.13%)</title><rect x="50.3" y="339.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="53.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (118 samples, 0.13%)</title><rect x="50.3" y="323.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="53.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (118 samples, 0.13%)</title><rect x="50.3" y="307.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="53.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (59 samples, 0.06%)</title><rect x="50.3" y="291.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="53.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (59 samples, 0.06%)</title><rect x="50.3" y="275.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="53.3" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (59 samples, 0.06%)</title><rect x="50.3" y="259.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="53.3" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (59 samples, 0.06%)</title><rect x="50.3" y="243.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="53.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (59 samples, 0.06%)</title><rect x="50.3" y="227.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="53.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (59 samples, 0.06%)</title><rect x="50.3" y="211.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="53.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (59 samples, 0.06%)</title><rect x="50.3" y="195.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="53.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (59 samples, 0.06%)</title><rect x="50.3" y="179.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="53.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (59 samples, 0.06%)</title><rect x="50.3" y="163.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="53.3" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (46 samples, 0.05%)</title><rect x="50.5" y="147.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="53.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (46 samples, 0.05%)</title><rect x="50.5" y="131.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="53.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (46 samples, 0.05%)</title><rect x="50.5" y="115.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="53.5" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (29 samples, 0.03%)</title><rect x="50.5" y="99.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="53.5" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (29 samples, 0.03%)</title><rect x="50.5" y="83.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="53.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (59 samples, 0.06%)</title><rect x="51.1" y="291.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="54.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (59 samples, 0.06%)</title><rect x="51.1" y="275.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="54.1" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (59 samples, 0.06%)</title><rect x="51.1" y="259.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="54.1" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (59 samples, 0.06%)</title><rect x="51.1" y="243.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="54.1" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (59 samples, 0.06%)</title><rect x="51.1" y="227.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="54.1" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (23 samples, 0.03%)</title><rect x="51.8" y="355.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="54.8" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (23 samples, 0.03%)</title><rect x="51.8" y="339.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="54.8" y="350.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (26 samples, 0.03%)</title><rect x="52.1" y="355.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="55.1" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (21 samples, 0.02%)</title><rect x="52.7" y="387.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="55.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (127 samples, 0.14%)</title><rect x="53.0" y="387.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="56.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (115 samples, 0.13%)</title><rect x="53.2" y="371.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="56.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (115 samples, 0.13%)</title><rect x="53.2" y="355.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="56.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (115 samples, 0.13%)</title><rect x="53.2" y="339.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="56.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (115 samples, 0.13%)</title><rect x="53.2" y="323.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="56.2" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (115 samples, 0.13%)</title><rect x="53.2" y="307.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="56.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (115 samples, 0.13%)</title><rect x="53.2" y="291.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="56.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (115 samples, 0.13%)</title><rect x="53.2" y="275.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="56.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (45 samples, 0.05%)</title><rect x="53.2" y="259.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="56.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (45 samples, 0.05%)</title><rect x="53.2" y="243.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="56.2" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (45 samples, 0.05%)</title><rect x="53.2" y="227.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="56.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (45 samples, 0.05%)</title><rect x="53.2" y="211.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="56.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (45 samples, 0.05%)</title><rect x="53.2" y="195.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="56.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (45 samples, 0.05%)</title><rect x="53.2" y="179.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="56.2" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (45 samples, 0.05%)</title><rect x="53.2" y="163.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="56.2" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (45 samples, 0.05%)</title><rect x="53.2" y="147.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="56.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (45 samples, 0.05%)</title><rect x="53.2" y="131.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="56.2" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (27 samples, 0.03%)</title><rect x="53.4" y="115.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="56.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (27 samples, 0.03%)</title><rect x="53.4" y="99.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="56.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (27 samples, 0.03%)</title><rect x="53.4" y="83.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="56.4" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (24 samples, 0.03%)</title><rect x="53.4" y="67.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="56.4" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (24 samples, 0.03%)</title><rect x="53.4" y="51.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="56.4" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (70 samples, 0.08%)</title><rect x="53.7" y="259.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="56.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (70 samples, 0.08%)</title><rect x="53.7" y="243.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="56.7" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (70 samples, 0.08%)</title><rect x="53.7" y="227.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="56.7" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (70 samples, 0.08%)</title><rect x="53.7" y="211.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="56.7" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (70 samples, 0.08%)</title><rect x="53.7" y="195.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="56.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.getBytesFromByteBuffer (20 samples, 0.02%)</title><rect x="54.6" y="435.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="57.6" y="446.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.02%)</title><rect x="54.6" y="419.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="57.6" y="430.0"></text>
</g>
<g>
<title>[2020-highload-dht-thread-1 tid=13576] (1,743 samples, 1.90%)</title><rect x="54.9" y="563.0" width="22.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="57.9" y="574.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (1,743 samples, 1.90%)</title><rect x="54.9" y="547.0" width="22.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="57.9" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,743 samples, 1.90%)</title><rect x="54.9" y="531.0" width="22.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="57.9" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,743 samples, 1.90%)</title><rect x="54.9" y="515.0" width="22.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="57.9" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (24 samples, 0.03%)</title><rect x="54.9" y="499.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="57.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (24 samples, 0.03%)</title><rect x="54.9" y="483.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="57.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (24 samples, 0.03%)</title><rect x="54.9" y="467.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="57.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (24 samples, 0.03%)</title><rect x="54.9" y="451.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="57.9" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (24 samples, 0.03%)</title><rect x="54.9" y="435.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="57.9" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.run (1,719 samples, 1.87%)</title><rect x="55.2" y="499.0" width="22.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="58.2" y="510.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$entity$1 (1,719 samples, 1.87%)</title><rect x="55.2" y="483.0" width="22.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="58.2" y="494.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleRequest (1,719 samples, 1.87%)</title><rect x="55.2" y="467.0" width="22.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="58.2" y="478.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (34 samples, 0.04%)</title><rect x="55.2" y="451.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="58.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (34 samples, 0.04%)</title><rect x="55.2" y="435.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="58.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (34 samples, 0.04%)</title><rect x="55.2" y="419.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="58.2" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (34 samples, 0.04%)</title><rect x="55.2" y="403.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="58.2" y="414.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.04%)</title><rect x="55.2" y="387.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="58.2" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (20 samples, 0.02%)</title><rect x="55.7" y="451.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="58.7" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (20 samples, 0.02%)</title><rect x="55.7" y="435.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="58.7" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (20 samples, 0.02%)</title><rect x="55.7" y="419.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="58.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleGet (1,665 samples, 1.81%)</title><rect x="55.9" y="451.0" width="21.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="58.9" y="462.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (94 samples, 0.10%)</title><rect x="55.9" y="435.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="58.9" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (94 samples, 0.10%)</title><rect x="55.9" y="419.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="58.9" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (73 samples, 0.08%)</title><rect x="55.9" y="403.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="58.9" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (62 samples, 0.07%)</title><rect x="56.0" y="387.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="59.0" y="398.0"></text>
</g>
<g>
<title>byte[] (62 samples, 0.07%)</title><rect x="56.0" y="371.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="59.0" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (21 samples, 0.02%)</title><rect x="56.8" y="403.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="59.8" y="414.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (21 samples, 0.02%)</title><rect x="56.8" y="387.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="59.8" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (92 samples, 0.10%)</title><rect x="57.1" y="435.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="60.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (73 samples, 0.08%)</title><rect x="57.4" y="419.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="60.4" y="430.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.03%)</title><rect x="57.4" y="403.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="60.4" y="414.0"></text>
</g>
<g>
<title>java.lang.String[] (25 samples, 0.03%)</title><rect x="57.8" y="403.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="60.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,454 samples, 1.58%)</title><rect x="58.3" y="435.0" width="18.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="61.3" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (170 samples, 0.19%)</title><rect x="58.3" y="419.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="61.3" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (170 samples, 0.19%)</title><rect x="58.3" y="403.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="61.3" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (170 samples, 0.19%)</title><rect x="58.3" y="387.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="61.3" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (170 samples, 0.19%)</title><rect x="58.3" y="371.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="61.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (170 samples, 0.19%)</title><rect x="58.3" y="355.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="61.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (104 samples, 0.11%)</title><rect x="58.3" y="339.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="61.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (104 samples, 0.11%)</title><rect x="58.3" y="323.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="61.3" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (104 samples, 0.11%)</title><rect x="58.3" y="307.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="61.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (104 samples, 0.11%)</title><rect x="58.3" y="291.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="61.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (104 samples, 0.11%)</title><rect x="58.3" y="275.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="61.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (104 samples, 0.11%)</title><rect x="58.3" y="259.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="61.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (52 samples, 0.06%)</title><rect x="58.3" y="243.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="61.3" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (52 samples, 0.06%)</title><rect x="58.3" y="227.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="61.3" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (52 samples, 0.06%)</title><rect x="58.3" y="211.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="61.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (52 samples, 0.06%)</title><rect x="58.3" y="195.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="61.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (52 samples, 0.06%)</title><rect x="58.3" y="179.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="61.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (52 samples, 0.06%)</title><rect x="58.3" y="163.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="61.3" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (52 samples, 0.06%)</title><rect x="58.3" y="147.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="61.3" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (52 samples, 0.06%)</title><rect x="58.3" y="131.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="61.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (52 samples, 0.06%)</title><rect x="58.3" y="115.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="61.3" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (36 samples, 0.04%)</title><rect x="58.5" y="99.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="61.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (36 samples, 0.04%)</title><rect x="58.5" y="83.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="61.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (36 samples, 0.04%)</title><rect x="58.5" y="67.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="61.5" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (26 samples, 0.03%)</title><rect x="58.5" y="51.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="61.5" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (26 samples, 0.03%)</title><rect x="58.5" y="35.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="61.5" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (52 samples, 0.06%)</title><rect x="59.0" y="243.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="62.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (52 samples, 0.06%)</title><rect x="59.0" y="227.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="62.0" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (52 samples, 0.06%)</title><rect x="59.0" y="211.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="62.0" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (52 samples, 0.06%)</title><rect x="59.0" y="195.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="62.0" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (52 samples, 0.06%)</title><rect x="59.0" y="179.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="62.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$140/499586134.apply (66 samples, 0.07%)</title><rect x="59.6" y="339.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="62.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (66 samples, 0.07%)</title><rect x="59.6" y="323.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="62.6" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (66 samples, 0.07%)</title><rect x="59.6" y="307.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="62.6" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (66 samples, 0.07%)</title><rect x="59.6" y="291.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="62.6" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (66 samples, 0.07%)</title><rect x="59.6" y="275.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="62.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (80 samples, 0.09%)</title><rect x="60.5" y="419.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="63.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (80 samples, 0.09%)</title><rect x="60.5" y="403.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="63.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$151/1576841624.apply (80 samples, 0.09%)</title><rect x="60.5" y="387.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="63.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$3 (80 samples, 0.09%)</title><rect x="60.5" y="371.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="63.5" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (24 samples, 0.03%)</title><rect x="60.5" y="355.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="63.5" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (24 samples, 0.03%)</title><rect x="60.5" y="339.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="63.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.of (20 samples, 0.02%)</title><rect x="60.8" y="355.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="63.8" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.Record (20 samples, 0.02%)</title><rect x="60.8" y="339.0" width="0.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="63.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (36 samples, 0.04%)</title><rect x="61.0" y="355.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="64.0" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (36 samples, 0.04%)</title><rect x="61.0" y="339.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="64.0" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (36 samples, 0.04%)</title><rect x="61.0" y="323.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="64.0" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (36 samples, 0.04%)</title><rect x="61.0" y="307.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="64.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (26 samples, 0.03%)</title><rect x="61.5" y="419.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="64.5" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (26 samples, 0.03%)</title><rect x="61.5" y="403.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="64.5" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (26 samples, 0.03%)</title><rect x="61.5" y="387.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="64.5" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (26 samples, 0.03%)</title><rect x="61.5" y="371.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="64.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (37 samples, 0.04%)</title><rect x="61.8" y="419.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="64.8" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (37 samples, 0.04%)</title><rect x="61.8" y="403.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="64.8" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (37 samples, 0.04%)</title><rect x="61.8" y="387.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="64.8" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (37 samples, 0.04%)</title><rect x="61.8" y="371.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="64.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (1,141 samples, 1.24%)</title><rect x="62.3" y="419.0" width="14.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="65.3" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (24 samples, 0.03%)</title><rect x="62.3" y="403.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="65.3" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (24 samples, 0.03%)</title><rect x="62.3" y="387.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="65.3" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (42 samples, 0.05%)</title><rect x="62.6" y="403.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="65.6" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (42 samples, 0.05%)</title><rect x="62.6" y="387.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="65.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (704 samples, 0.77%)</title><rect x="63.2" y="403.0" width="9.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="66.2" y="414.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (25 samples, 0.03%)</title><rect x="63.4" y="387.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="66.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (25 samples, 0.03%)</title><rect x="63.4" y="371.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="66.4" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (25 samples, 0.03%)</title><rect x="63.4" y="355.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="66.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.02%)</title><rect x="63.7" y="387.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="66.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.02%)</title><rect x="63.7" y="371.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="66.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$126/679454107.get$Lambda (20 samples, 0.02%)</title><rect x="63.7" y="355.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="66.7" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.DAOImpl$$Lambda$126 (20 samples, 0.02%)</title><rect x="63.7" y="339.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="66.7" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (22 samples, 0.02%)</title><rect x="64.0" y="387.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="67.0" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (22 samples, 0.02%)</title><rect x="64.0" y="371.0" width="0.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="67.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (622 samples, 0.68%)</title><rect x="64.2" y="387.0" width="8.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="67.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (248 samples, 0.27%)</title><rect x="64.4" y="371.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="67.4" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (238 samples, 0.26%)</title><rect x="64.6" y="355.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="67.6" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (186 samples, 0.20%)</title><rect x="65.2" y="339.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="68.2" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (186 samples, 0.20%)</title><rect x="65.2" y="323.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="68.2" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (186 samples, 0.20%)</title><rect x="65.2" y="307.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="68.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (67 samples, 0.07%)</title><rect x="65.2" y="291.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="68.2" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (67 samples, 0.07%)</title><rect x="65.2" y="275.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="68.2" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (67 samples, 0.07%)</title><rect x="65.2" y="259.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="68.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (67 samples, 0.07%)</title><rect x="65.2" y="243.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="68.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (24 samples, 0.03%)</title><rect x="65.2" y="227.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="68.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (24 samples, 0.03%)</title><rect x="65.2" y="211.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="68.2" y="222.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (24 samples, 0.03%)</title><rect x="65.2" y="195.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="68.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (43 samples, 0.05%)</title><rect x="65.5" y="227.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="68.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (43 samples, 0.05%)</title><rect x="65.5" y="211.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="68.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (43 samples, 0.05%)</title><rect x="65.5" y="195.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="68.5" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (24 samples, 0.03%)</title><rect x="65.5" y="179.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="68.5" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (24 samples, 0.03%)</title><rect x="65.5" y="163.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="68.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (119 samples, 0.13%)</title><rect x="66.1" y="291.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="69.1" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (32 samples, 0.03%)</title><rect x="66.1" y="275.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="69.1" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.02%)</title><rect x="66.5" y="275.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="69.5" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.02%)</title><rect x="66.5" y="259.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="69.5" y="270.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (50 samples, 0.05%)</title><rect x="67.0" y="275.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="70.0" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (50 samples, 0.05%)</title><rect x="67.0" y="259.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="70.0" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (29 samples, 0.03%)</title><rect x="68.4" y="371.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="71.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (85 samples, 0.09%)</title><rect x="68.7" y="371.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="71.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (69 samples, 0.08%)</title><rect x="68.9" y="355.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="71.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (69 samples, 0.08%)</title><rect x="68.9" y="339.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="71.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (69 samples, 0.08%)</title><rect x="68.9" y="323.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="71.9" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (69 samples, 0.08%)</title><rect x="68.9" y="307.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="71.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (69 samples, 0.08%)</title><rect x="68.9" y="291.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="71.9" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (69 samples, 0.08%)</title><rect x="68.9" y="275.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="71.9" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (69 samples, 0.08%)</title><rect x="68.9" y="259.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="71.9" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (69 samples, 0.08%)</title><rect x="68.9" y="243.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="71.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (69 samples, 0.08%)</title><rect x="68.9" y="227.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="71.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (69 samples, 0.08%)</title><rect x="68.9" y="211.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="71.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (53 samples, 0.06%)</title><rect x="69.1" y="195.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="72.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (53 samples, 0.06%)</title><rect x="69.1" y="179.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="72.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (53 samples, 0.06%)</title><rect x="69.1" y="163.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.1" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (32 samples, 0.03%)</title><rect x="69.1" y="147.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="72.1" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (32 samples, 0.03%)</title><rect x="69.1" y="131.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="72.1" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (21 samples, 0.02%)</title><rect x="69.6" y="147.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="72.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (187 samples, 0.20%)</title><rect x="69.8" y="371.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="72.8" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (63 samples, 0.07%)</title><rect x="69.8" y="355.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="72.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (24 samples, 0.03%)</title><rect x="69.8" y="339.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="72.8" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (24 samples, 0.03%)</title><rect x="69.8" y="323.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="72.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (39 samples, 0.04%)</title><rect x="70.1" y="339.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="73.1" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (39 samples, 0.04%)</title><rect x="70.1" y="323.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="73.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (25 samples, 0.03%)</title><rect x="70.8" y="355.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="73.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (25 samples, 0.03%)</title><rect x="70.8" y="339.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="73.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (25 samples, 0.03%)</title><rect x="70.8" y="323.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="73.8" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (25 samples, 0.03%)</title><rect x="70.8" y="307.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="73.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (52 samples, 0.06%)</title><rect x="71.1" y="355.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="74.1" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (20 samples, 0.02%)</title><rect x="71.1" y="339.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="74.1" y="350.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (20 samples, 0.02%)</title><rect x="71.1" y="323.0" width="0.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="74.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (32 samples, 0.03%)</title><rect x="71.3" y="339.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="74.3" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (37 samples, 0.04%)</title><rect x="71.7" y="355.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="74.7" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (37 samples, 0.04%)</title><rect x="71.7" y="339.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="74.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (370 samples, 0.40%)</title><rect x="72.2" y="403.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="75.2" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (193 samples, 0.21%)</title><rect x="72.2" y="387.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="75.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (182 samples, 0.20%)</title><rect x="72.4" y="371.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="75.4" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (25 samples, 0.03%)</title><rect x="72.4" y="355.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="75.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (95 samples, 0.10%)</title><rect x="72.7" y="355.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="75.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (95 samples, 0.10%)</title><rect x="72.7" y="339.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="75.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (95 samples, 0.10%)</title><rect x="72.7" y="323.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="75.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (95 samples, 0.10%)</title><rect x="72.7" y="307.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="75.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (49 samples, 0.05%)</title><rect x="72.7" y="291.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="75.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (49 samples, 0.05%)</title><rect x="72.7" y="275.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="75.7" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (49 samples, 0.05%)</title><rect x="72.7" y="259.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="75.7" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (49 samples, 0.05%)</title><rect x="72.7" y="243.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="75.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (49 samples, 0.05%)</title><rect x="72.7" y="227.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="75.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (49 samples, 0.05%)</title><rect x="72.7" y="211.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="75.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (49 samples, 0.05%)</title><rect x="72.7" y="195.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="75.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (49 samples, 0.05%)</title><rect x="72.7" y="179.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="75.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (49 samples, 0.05%)</title><rect x="72.7" y="163.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="75.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (37 samples, 0.04%)</title><rect x="72.8" y="147.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="75.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (37 samples, 0.04%)</title><rect x="72.8" y="131.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="75.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (37 samples, 0.04%)</title><rect x="72.8" y="115.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="75.8" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (26 samples, 0.03%)</title><rect x="72.8" y="99.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="75.8" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (26 samples, 0.03%)</title><rect x="72.8" y="83.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="75.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (46 samples, 0.05%)</title><rect x="73.3" y="291.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="76.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (46 samples, 0.05%)</title><rect x="73.3" y="275.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="76.3" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (46 samples, 0.05%)</title><rect x="73.3" y="259.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="76.3" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (46 samples, 0.05%)</title><rect x="73.3" y="243.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="76.3" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (46 samples, 0.05%)</title><rect x="73.3" y="227.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="76.3" y="238.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (27 samples, 0.03%)</title><rect x="74.1" y="355.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="77.1" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (25 samples, 0.03%)</title><rect x="74.9" y="387.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="77.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (138 samples, 0.15%)</title><rect x="75.2" y="387.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="78.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (121 samples, 0.13%)</title><rect x="75.4" y="371.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="78.4" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (121 samples, 0.13%)</title><rect x="75.4" y="355.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="78.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (121 samples, 0.13%)</title><rect x="75.4" y="339.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="78.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (121 samples, 0.13%)</title><rect x="75.4" y="323.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="78.4" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (121 samples, 0.13%)</title><rect x="75.4" y="307.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="78.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (121 samples, 0.13%)</title><rect x="75.4" y="291.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="78.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (121 samples, 0.13%)</title><rect x="75.4" y="275.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="78.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (62 samples, 0.07%)</title><rect x="75.4" y="259.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="78.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (62 samples, 0.07%)</title><rect x="75.4" y="243.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="78.4" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (62 samples, 0.07%)</title><rect x="75.4" y="227.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="78.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (62 samples, 0.07%)</title><rect x="75.4" y="211.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="78.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (62 samples, 0.07%)</title><rect x="75.4" y="195.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="78.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (62 samples, 0.07%)</title><rect x="75.4" y="179.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="78.4" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (62 samples, 0.07%)</title><rect x="75.4" y="163.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="78.4" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (62 samples, 0.07%)</title><rect x="75.4" y="147.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="78.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (62 samples, 0.07%)</title><rect x="75.4" y="131.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="78.4" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (44 samples, 0.05%)</title><rect x="75.7" y="115.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="78.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (44 samples, 0.05%)</title><rect x="75.7" y="99.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="78.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (44 samples, 0.05%)</title><rect x="75.7" y="83.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="78.7" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (30 samples, 0.03%)</title><rect x="75.7" y="67.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="78.7" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (30 samples, 0.03%)</title><rect x="75.7" y="51.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="78.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (59 samples, 0.06%)</title><rect x="76.2" y="259.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="79.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (59 samples, 0.06%)</title><rect x="76.2" y="243.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="79.2" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (59 samples, 0.06%)</title><rect x="76.2" y="227.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="79.2" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (59 samples, 0.06%)</title><rect x="76.2" y="211.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="79.2" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (59 samples, 0.06%)</title><rect x="76.2" y="195.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="79.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.getBytesFromByteBuffer (25 samples, 0.03%)</title><rect x="77.0" y="435.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="80.0" y="446.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.03%)</title><rect x="77.0" y="419.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="80.0" y="430.0"></text>
</g>
<g>
<title>[2020-highload-dht-thread-1 tid=13586] (1,753 samples, 1.91%)</title><rect x="77.3" y="563.0" width="22.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="80.3" y="574.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (1,753 samples, 1.91%)</title><rect x="77.3" y="547.0" width="22.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="80.3" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,753 samples, 1.91%)</title><rect x="77.3" y="531.0" width="22.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="80.3" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,753 samples, 1.91%)</title><rect x="77.3" y="515.0" width="22.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="80.3" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (21 samples, 0.02%)</title><rect x="77.3" y="499.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="80.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (21 samples, 0.02%)</title><rect x="77.3" y="483.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="80.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (21 samples, 0.02%)</title><rect x="77.3" y="467.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="80.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (21 samples, 0.02%)</title><rect x="77.3" y="451.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="80.3" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (21 samples, 0.02%)</title><rect x="77.3" y="435.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="80.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.run (1,732 samples, 1.89%)</title><rect x="77.6" y="499.0" width="22.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="80.6" y="510.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$entity$1 (1,732 samples, 1.89%)</title><rect x="77.6" y="483.0" width="22.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="80.6" y="494.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleRequest (1,732 samples, 1.89%)</title><rect x="77.6" y="467.0" width="22.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="80.6" y="478.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (34 samples, 0.04%)</title><rect x="77.6" y="451.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="80.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (34 samples, 0.04%)</title><rect x="77.6" y="435.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="80.6" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (34 samples, 0.04%)</title><rect x="77.6" y="419.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="80.6" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (34 samples, 0.04%)</title><rect x="77.6" y="403.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="80.6" y="414.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.04%)</title><rect x="77.6" y="387.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="80.6" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (27 samples, 0.03%)</title><rect x="78.0" y="451.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="81.0" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (27 samples, 0.03%)</title><rect x="78.0" y="435.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="81.0" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (27 samples, 0.03%)</title><rect x="78.0" y="419.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="81.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleGet (1,671 samples, 1.82%)</title><rect x="78.4" y="451.0" width="21.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="81.4" y="462.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (122 samples, 0.13%)</title><rect x="78.4" y="435.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="81.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (122 samples, 0.13%)</title><rect x="78.4" y="419.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="81.4" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (95 samples, 0.10%)</title><rect x="78.4" y="403.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="81.4" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (77 samples, 0.08%)</title><rect x="78.6" y="387.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="81.6" y="398.0"></text>
</g>
<g>
<title>byte[] (77 samples, 0.08%)</title><rect x="78.6" y="371.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="81.6" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (27 samples, 0.03%)</title><rect x="79.6" y="403.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="82.6" y="414.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (27 samples, 0.03%)</title><rect x="79.6" y="387.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="82.6" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (69 samples, 0.08%)</title><rect x="79.9" y="435.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="82.9" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (64 samples, 0.07%)</title><rect x="80.0" y="419.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="83.0" y="430.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.03%)</title><rect x="80.0" y="403.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="83.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,457 samples, 1.59%)</title><rect x="80.8" y="435.0" width="18.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="83.8" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (197 samples, 0.21%)</title><rect x="80.8" y="419.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="83.8" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (197 samples, 0.21%)</title><rect x="80.8" y="403.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="83.8" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (197 samples, 0.21%)</title><rect x="80.8" y="387.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="83.8" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (197 samples, 0.21%)</title><rect x="80.8" y="371.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="83.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (197 samples, 0.21%)</title><rect x="80.8" y="355.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="83.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (125 samples, 0.14%)</title><rect x="80.8" y="339.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="83.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (125 samples, 0.14%)</title><rect x="80.8" y="323.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="83.8" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (125 samples, 0.14%)</title><rect x="80.8" y="307.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="83.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (125 samples, 0.14%)</title><rect x="80.8" y="291.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="83.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (125 samples, 0.14%)</title><rect x="80.8" y="275.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="83.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (125 samples, 0.14%)</title><rect x="80.8" y="259.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="83.8" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (62 samples, 0.07%)</title><rect x="80.8" y="243.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="83.8" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (62 samples, 0.07%)</title><rect x="80.8" y="227.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="83.8" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (62 samples, 0.07%)</title><rect x="80.8" y="211.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="83.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (62 samples, 0.07%)</title><rect x="80.8" y="195.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="83.8" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (62 samples, 0.07%)</title><rect x="80.8" y="179.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="83.8" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (62 samples, 0.07%)</title><rect x="80.8" y="163.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="83.8" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (62 samples, 0.07%)</title><rect x="80.8" y="147.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="83.8" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (62 samples, 0.07%)</title><rect x="80.8" y="131.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="83.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (62 samples, 0.07%)</title><rect x="80.8" y="115.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="83.8" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (51 samples, 0.06%)</title><rect x="80.9" y="99.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="83.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (51 samples, 0.06%)</title><rect x="80.9" y="83.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="83.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (51 samples, 0.06%)</title><rect x="80.9" y="67.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="83.9" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (33 samples, 0.04%)</title><rect x="80.9" y="51.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="83.9" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (33 samples, 0.04%)</title><rect x="80.9" y="35.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="83.9" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (63 samples, 0.07%)</title><rect x="81.6" y="243.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="84.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (63 samples, 0.07%)</title><rect x="81.6" y="227.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="84.6" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (63 samples, 0.07%)</title><rect x="81.6" y="211.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="84.6" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (63 samples, 0.07%)</title><rect x="81.6" y="195.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="84.6" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (63 samples, 0.07%)</title><rect x="81.6" y="179.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="84.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$140/499586134.apply (72 samples, 0.08%)</title><rect x="82.4" y="339.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="85.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (72 samples, 0.08%)</title><rect x="82.4" y="323.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="85.4" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (72 samples, 0.08%)</title><rect x="82.4" y="307.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="85.4" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (72 samples, 0.08%)</title><rect x="82.4" y="291.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="85.4" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (72 samples, 0.08%)</title><rect x="82.4" y="275.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="85.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (69 samples, 0.08%)</title><rect x="83.3" y="419.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="86.3" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (69 samples, 0.08%)</title><rect x="83.3" y="403.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="86.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$151/1576841624.apply (69 samples, 0.08%)</title><rect x="83.3" y="387.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="86.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$3 (69 samples, 0.08%)</title><rect x="83.3" y="371.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="86.3" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (22 samples, 0.02%)</title><rect x="83.3" y="355.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="86.3" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (22 samples, 0.02%)</title><rect x="83.3" y="339.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="86.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (29 samples, 0.03%)</title><rect x="83.9" y="355.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="86.9" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (29 samples, 0.03%)</title><rect x="83.9" y="339.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="86.9" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (29 samples, 0.03%)</title><rect x="83.9" y="323.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="86.9" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (29 samples, 0.03%)</title><rect x="83.9" y="307.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="86.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (30 samples, 0.03%)</title><rect x="84.2" y="419.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="87.2" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (30 samples, 0.03%)</title><rect x="84.2" y="403.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="87.2" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (30 samples, 0.03%)</title><rect x="84.2" y="387.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="87.2" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (30 samples, 0.03%)</title><rect x="84.2" y="371.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="87.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (30 samples, 0.03%)</title><rect x="84.6" y="419.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="87.6" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (30 samples, 0.03%)</title><rect x="84.6" y="403.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="87.6" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (30 samples, 0.03%)</title><rect x="84.6" y="387.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="87.6" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (30 samples, 0.03%)</title><rect x="84.6" y="371.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="87.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (1,131 samples, 1.23%)</title><rect x="85.0" y="419.0" width="14.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="88.0" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (25 samples, 0.03%)</title><rect x="85.0" y="403.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="88.0" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (25 samples, 0.03%)</title><rect x="85.0" y="387.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="88.0" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (28 samples, 0.03%)</title><rect x="85.3" y="403.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="88.3" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (28 samples, 0.03%)</title><rect x="85.3" y="387.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="88.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (715 samples, 0.78%)</title><rect x="85.7" y="403.0" width="9.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="88.7" y="414.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (37 samples, 0.04%)</title><rect x="85.9" y="387.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="88.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (37 samples, 0.04%)</title><rect x="85.9" y="371.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="88.9" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (37 samples, 0.04%)</title><rect x="85.9" y="355.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="88.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (647 samples, 0.70%)</title><rect x="86.6" y="387.0" width="8.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="89.6" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (254 samples, 0.28%)</title><rect x="86.8" y="371.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="89.8" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (244 samples, 0.27%)</title><rect x="86.9" y="355.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="89.9" y="366.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (22 samples, 0.02%)</title><rect x="87.3" y="339.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="90.3" y="350.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (176 samples, 0.19%)</title><rect x="87.8" y="339.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="90.8" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (176 samples, 0.19%)</title><rect x="87.8" y="323.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="90.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (176 samples, 0.19%)</title><rect x="87.8" y="307.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="90.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (67 samples, 0.07%)</title><rect x="87.8" y="291.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="90.8" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (67 samples, 0.07%)</title><rect x="87.8" y="275.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="90.8" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (67 samples, 0.07%)</title><rect x="87.8" y="259.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="90.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (67 samples, 0.07%)</title><rect x="87.8" y="243.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="90.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (55 samples, 0.06%)</title><rect x="87.9" y="227.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="90.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (55 samples, 0.06%)</title><rect x="87.9" y="211.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="90.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (55 samples, 0.06%)</title><rect x="87.9" y="195.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="90.9" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (40 samples, 0.04%)</title><rect x="87.9" y="179.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="90.9" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (40 samples, 0.04%)</title><rect x="87.9" y="163.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="90.9" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (109 samples, 0.12%)</title><rect x="88.6" y="291.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="91.6" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (22 samples, 0.02%)</title><rect x="88.6" y="275.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="91.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.02%)</title><rect x="88.9" y="275.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="91.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.02%)</title><rect x="88.9" y="259.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="91.9" y="270.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (52 samples, 0.06%)</title><rect x="89.4" y="275.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="92.4" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (52 samples, 0.06%)</title><rect x="89.4" y="259.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="92.4" y="270.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (20 samples, 0.02%)</title><rect x="90.2" y="371.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="93.2" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (20 samples, 0.02%)</title><rect x="90.2" y="355.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="93.2" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$ValueIterator (20 samples, 0.02%)</title><rect x="90.2" y="339.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="93.2" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (20 samples, 0.02%)</title><rect x="91.0" y="371.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="94.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (89 samples, 0.10%)</title><rect x="91.3" y="371.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="94.3" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (24 samples, 0.03%)</title><rect x="91.3" y="355.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="94.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (65 samples, 0.07%)</title><rect x="91.6" y="355.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="94.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (65 samples, 0.07%)</title><rect x="91.6" y="339.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="94.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (65 samples, 0.07%)</title><rect x="91.6" y="323.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="94.6" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (65 samples, 0.07%)</title><rect x="91.6" y="307.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="94.6" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (65 samples, 0.07%)</title><rect x="91.6" y="291.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="94.6" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (65 samples, 0.07%)</title><rect x="91.6" y="275.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="94.6" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (65 samples, 0.07%)</title><rect x="91.6" y="259.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="94.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (65 samples, 0.07%)</title><rect x="91.6" y="243.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="94.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (65 samples, 0.07%)</title><rect x="91.6" y="227.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="94.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (65 samples, 0.07%)</title><rect x="91.6" y="211.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="94.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (51 samples, 0.06%)</title><rect x="91.8" y="195.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="94.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (51 samples, 0.06%)</title><rect x="91.8" y="179.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="94.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (51 samples, 0.06%)</title><rect x="91.8" y="163.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="94.8" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (35 samples, 0.04%)</title><rect x="91.8" y="147.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="94.8" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (35 samples, 0.04%)</title><rect x="91.8" y="131.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="94.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (192 samples, 0.21%)</title><rect x="92.4" y="371.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="95.4" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (60 samples, 0.07%)</title><rect x="92.4" y="355.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="95.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (23 samples, 0.03%)</title><rect x="92.4" y="339.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="95.4" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (23 samples, 0.03%)</title><rect x="92.4" y="323.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="95.4" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (37 samples, 0.04%)</title><rect x="92.7" y="339.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="95.7" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (37 samples, 0.04%)</title><rect x="92.7" y="323.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="95.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (33 samples, 0.04%)</title><rect x="93.3" y="355.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="96.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (33 samples, 0.04%)</title><rect x="93.3" y="339.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="96.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (33 samples, 0.04%)</title><rect x="93.3" y="323.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="96.3" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (33 samples, 0.04%)</title><rect x="93.3" y="307.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="96.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (46 samples, 0.05%)</title><rect x="93.7" y="355.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="96.7" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (39 samples, 0.04%)</title><rect x="93.8" y="339.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="96.8" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (35 samples, 0.04%)</title><rect x="93.8" y="323.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="96.8" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (35 samples, 0.04%)</title><rect x="93.8" y="307.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="96.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (48 samples, 0.05%)</title><rect x="94.3" y="355.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="97.3" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (48 samples, 0.05%)</title><rect x="94.3" y="339.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="97.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (360 samples, 0.39%)</title><rect x="94.9" y="403.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="97.9" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (201 samples, 0.22%)</title><rect x="94.9" y="387.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="97.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (191 samples, 0.21%)</title><rect x="95.0" y="371.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="98.0" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (21 samples, 0.02%)</title><rect x="95.0" y="355.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="98.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (118 samples, 0.13%)</title><rect x="95.3" y="355.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="98.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (118 samples, 0.13%)</title><rect x="95.3" y="339.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="98.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (118 samples, 0.13%)</title><rect x="95.3" y="323.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="98.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (118 samples, 0.13%)</title><rect x="95.3" y="307.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="98.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (61 samples, 0.07%)</title><rect x="95.3" y="291.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="98.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (61 samples, 0.07%)</title><rect x="95.3" y="275.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="98.3" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (61 samples, 0.07%)</title><rect x="95.3" y="259.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="98.3" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (61 samples, 0.07%)</title><rect x="95.3" y="243.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="98.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (61 samples, 0.07%)</title><rect x="95.3" y="227.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="98.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (61 samples, 0.07%)</title><rect x="95.3" y="211.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="98.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (61 samples, 0.07%)</title><rect x="95.3" y="195.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="98.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (61 samples, 0.07%)</title><rect x="95.3" y="179.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="98.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (61 samples, 0.07%)</title><rect x="95.3" y="163.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="98.3" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (49 samples, 0.05%)</title><rect x="95.5" y="147.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="98.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (49 samples, 0.05%)</title><rect x="95.5" y="131.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="98.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (49 samples, 0.05%)</title><rect x="95.5" y="115.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="98.5" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (31 samples, 0.03%)</title><rect x="95.5" y="99.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="98.5" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (31 samples, 0.03%)</title><rect x="95.5" y="83.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="98.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (57 samples, 0.06%)</title><rect x="96.1" y="291.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="99.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (57 samples, 0.06%)</title><rect x="96.1" y="275.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="99.1" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (57 samples, 0.06%)</title><rect x="96.1" y="259.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="99.1" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (57 samples, 0.06%)</title><rect x="96.1" y="243.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="99.1" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (57 samples, 0.06%)</title><rect x="96.1" y="227.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="99.1" y="238.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (21 samples, 0.02%)</title><rect x="96.9" y="355.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="99.9" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (24 samples, 0.03%)</title><rect x="97.2" y="355.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="100.2" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (24 samples, 0.03%)</title><rect x="97.2" y="339.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="100.2" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (26 samples, 0.03%)</title><rect x="97.6" y="387.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="100.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (126 samples, 0.14%)</title><rect x="97.9" y="387.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="100.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (109 samples, 0.12%)</title><rect x="98.1" y="371.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="101.1" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (109 samples, 0.12%)</title><rect x="98.1" y="355.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="101.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (109 samples, 0.12%)</title><rect x="98.1" y="339.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="101.1" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (109 samples, 0.12%)</title><rect x="98.1" y="323.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="101.1" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (109 samples, 0.12%)</title><rect x="98.1" y="307.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="101.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (109 samples, 0.12%)</title><rect x="98.1" y="291.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="101.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (109 samples, 0.12%)</title><rect x="98.1" y="275.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="101.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (55 samples, 0.06%)</title><rect x="98.1" y="259.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="101.1" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (55 samples, 0.06%)</title><rect x="98.1" y="243.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="101.1" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (55 samples, 0.06%)</title><rect x="98.1" y="227.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="101.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (55 samples, 0.06%)</title><rect x="98.1" y="211.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="101.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (55 samples, 0.06%)</title><rect x="98.1" y="195.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="101.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (55 samples, 0.06%)</title><rect x="98.1" y="179.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="101.1" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (55 samples, 0.06%)</title><rect x="98.1" y="163.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="101.1" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (55 samples, 0.06%)</title><rect x="98.1" y="147.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="101.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (55 samples, 0.06%)</title><rect x="98.1" y="131.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="101.1" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (41 samples, 0.04%)</title><rect x="98.3" y="115.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="101.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (41 samples, 0.04%)</title><rect x="98.3" y="99.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="101.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (41 samples, 0.04%)</title><rect x="98.3" y="83.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="101.3" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (29 samples, 0.03%)</title><rect x="98.3" y="67.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="101.3" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (29 samples, 0.03%)</title><rect x="98.3" y="51.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="101.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (54 samples, 0.06%)</title><rect x="98.8" y="259.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="101.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (54 samples, 0.06%)</title><rect x="98.8" y="243.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="101.8" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (54 samples, 0.06%)</title><rect x="98.8" y="227.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="101.8" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (54 samples, 0.06%)</title><rect x="98.8" y="211.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="101.8" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (54 samples, 0.06%)</title><rect x="98.8" y="195.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="101.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.getBytesFromByteBuffer (23 samples, 0.03%)</title><rect x="99.5" y="435.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="102.5" y="446.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.03%)</title><rect x="99.5" y="419.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="102.5" y="430.0"></text>
</g>
<g>
<title>[2020-highload-dht-thread-130 tid=17028] (3,435 samples, 3.74%)</title><rect x="99.8" y="563.0" width="44.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="102.8" y="574.0">[202..</text>
</g>
<g>
<title>java/lang/Thread.run (3,435 samples, 3.74%)</title><rect x="99.8" y="547.0" width="44.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="102.8" y="558.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,435 samples, 3.74%)</title><rect x="99.8" y="531.0" width="44.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="102.8" y="542.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,435 samples, 3.74%)</title><rect x="99.8" y="515.0" width="44.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="102.8" y="526.0">java..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.run (3,421 samples, 3.72%)</title><rect x="100.0" y="499.0" width="44.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="103.0" y="510.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$entity$1 (3,421 samples, 3.72%)</title><rect x="100.0" y="483.0" width="44.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="103.0" y="494.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleRequest (3,421 samples, 3.72%)</title><rect x="100.0" y="467.0" width="44.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="103.0" y="478.0">ru/m..</text>
</g>
<g>
<title>java/lang/String.getBytes (35 samples, 0.04%)</title><rect x="100.0" y="451.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="103.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (35 samples, 0.04%)</title><rect x="100.0" y="435.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="103.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (35 samples, 0.04%)</title><rect x="100.0" y="419.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="103.0" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (35 samples, 0.04%)</title><rect x="100.0" y="403.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="103.0" y="414.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.04%)</title><rect x="100.0" y="387.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="103.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleGet (3,370 samples, 3.67%)</title><rect x="100.7" y="451.0" width="43.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="103.7" y="462.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (64 samples, 0.07%)</title><rect x="100.7" y="435.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="103.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (64 samples, 0.07%)</title><rect x="100.7" y="419.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="103.7" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (54 samples, 0.06%)</title><rect x="100.7" y="403.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="103.7" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (45 samples, 0.05%)</title><rect x="100.8" y="387.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="103.8" y="398.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.05%)</title><rect x="100.8" y="371.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="103.8" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (34 samples, 0.04%)</title><rect x="101.5" y="435.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="104.5" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (23 samples, 0.03%)</title><rect x="101.6" y="419.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="104.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (491 samples, 0.53%)</title><rect x="101.9" y="435.0" width="6.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="104.9" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (90 samples, 0.10%)</title><rect x="101.9" y="419.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="104.9" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (90 samples, 0.10%)</title><rect x="101.9" y="403.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="104.9" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (90 samples, 0.10%)</title><rect x="101.9" y="387.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="104.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (90 samples, 0.10%)</title><rect x="101.9" y="371.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="104.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (90 samples, 0.10%)</title><rect x="101.9" y="355.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="104.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (62 samples, 0.07%)</title><rect x="101.9" y="339.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="104.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (62 samples, 0.07%)</title><rect x="101.9" y="323.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="104.9" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (62 samples, 0.07%)</title><rect x="101.9" y="307.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="104.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (62 samples, 0.07%)</title><rect x="101.9" y="291.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="104.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (62 samples, 0.07%)</title><rect x="101.9" y="275.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="104.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (62 samples, 0.07%)</title><rect x="101.9" y="259.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="104.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (33 samples, 0.04%)</title><rect x="101.9" y="243.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="104.9" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (33 samples, 0.04%)</title><rect x="101.9" y="227.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="104.9" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (33 samples, 0.04%)</title><rect x="101.9" y="211.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="104.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (33 samples, 0.04%)</title><rect x="101.9" y="195.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="104.9" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (33 samples, 0.04%)</title><rect x="101.9" y="179.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="104.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (33 samples, 0.04%)</title><rect x="101.9" y="163.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="104.9" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (33 samples, 0.04%)</title><rect x="101.9" y="147.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="104.9" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (33 samples, 0.04%)</title><rect x="101.9" y="131.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="104.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (33 samples, 0.04%)</title><rect x="101.9" y="115.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="104.9" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (21 samples, 0.02%)</title><rect x="102.1" y="99.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="105.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (21 samples, 0.02%)</title><rect x="102.1" y="83.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="105.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (21 samples, 0.02%)</title><rect x="102.1" y="67.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="105.1" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (29 samples, 0.03%)</title><rect x="102.3" y="243.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="105.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (29 samples, 0.03%)</title><rect x="102.3" y="227.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="105.3" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (29 samples, 0.03%)</title><rect x="102.3" y="211.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="105.3" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (29 samples, 0.03%)</title><rect x="102.3" y="195.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="105.3" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (29 samples, 0.03%)</title><rect x="102.3" y="179.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="105.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$140/499586134.apply (28 samples, 0.03%)</title><rect x="102.7" y="339.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="105.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (28 samples, 0.03%)</title><rect x="102.7" y="323.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="105.7" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (28 samples, 0.03%)</title><rect x="102.7" y="307.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="105.7" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (28 samples, 0.03%)</title><rect x="102.7" y="291.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="105.7" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (28 samples, 0.03%)</title><rect x="102.7" y="275.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="105.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (355 samples, 0.39%)</title><rect x="103.7" y="419.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="106.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (207 samples, 0.23%)</title><rect x="103.8" y="403.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="106.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (185 samples, 0.20%)</title><rect x="104.1" y="387.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="107.1" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (87 samples, 0.09%)</title><rect x="104.2" y="371.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="107.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (86 samples, 0.09%)</title><rect x="104.2" y="355.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="107.2" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (71 samples, 0.08%)</title><rect x="104.4" y="339.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="107.4" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (71 samples, 0.08%)</title><rect x="104.4" y="323.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="107.4" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (71 samples, 0.08%)</title><rect x="104.4" y="307.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="107.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (25 samples, 0.03%)</title><rect x="104.4" y="291.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="107.4" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (25 samples, 0.03%)</title><rect x="104.4" y="275.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="107.4" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (25 samples, 0.03%)</title><rect x="104.4" y="259.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="107.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (25 samples, 0.03%)</title><rect x="104.4" y="243.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="107.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (46 samples, 0.05%)</title><rect x="104.7" y="291.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="107.7" y="302.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (24 samples, 0.03%)</title><rect x="105.0" y="275.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="108.0" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (24 samples, 0.03%)</title><rect x="105.0" y="259.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="108.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (34 samples, 0.04%)</title><rect x="105.6" y="371.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="108.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (28 samples, 0.03%)</title><rect x="105.7" y="355.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="108.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (28 samples, 0.03%)</title><rect x="105.7" y="339.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="108.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (28 samples, 0.03%)</title><rect x="105.7" y="323.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="108.7" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (28 samples, 0.03%)</title><rect x="105.7" y="307.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="108.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (28 samples, 0.03%)</title><rect x="105.7" y="291.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="108.7" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (28 samples, 0.03%)</title><rect x="105.7" y="275.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="108.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (28 samples, 0.03%)</title><rect x="105.7" y="259.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="108.7" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (28 samples, 0.03%)</title><rect x="105.7" y="243.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="108.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (28 samples, 0.03%)</title><rect x="105.7" y="227.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="108.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (28 samples, 0.03%)</title><rect x="105.7" y="211.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="108.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (36 samples, 0.04%)</title><rect x="106.0" y="371.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="109.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (134 samples, 0.15%)</title><rect x="106.5" y="403.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="109.5" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (70 samples, 0.08%)</title><rect x="106.5" y="387.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="109.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (64 samples, 0.07%)</title><rect x="106.6" y="371.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="109.6" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (38 samples, 0.04%)</title><rect x="106.7" y="355.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="109.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (38 samples, 0.04%)</title><rect x="106.7" y="339.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="109.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (38 samples, 0.04%)</title><rect x="106.7" y="323.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="109.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (38 samples, 0.04%)</title><rect x="106.7" y="307.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="109.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (24 samples, 0.03%)</title><rect x="106.8" y="291.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="109.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (24 samples, 0.03%)</title><rect x="106.8" y="275.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="109.8" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (24 samples, 0.03%)</title><rect x="106.8" y="259.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="109.8" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (24 samples, 0.03%)</title><rect x="106.8" y="243.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="109.8" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (24 samples, 0.03%)</title><rect x="106.8" y="227.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="109.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (54 samples, 0.06%)</title><rect x="107.5" y="387.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="110.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (48 samples, 0.05%)</title><rect x="107.6" y="371.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="110.6" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (48 samples, 0.05%)</title><rect x="107.6" y="355.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="110.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (48 samples, 0.05%)</title><rect x="107.6" y="339.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="110.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (48 samples, 0.05%)</title><rect x="107.6" y="323.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="110.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (48 samples, 0.05%)</title><rect x="107.6" y="307.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="110.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (48 samples, 0.05%)</title><rect x="107.6" y="291.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="110.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (48 samples, 0.05%)</title><rect x="107.6" y="275.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="110.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (24 samples, 0.03%)</title><rect x="107.6" y="259.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="110.6" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (24 samples, 0.03%)</title><rect x="107.6" y="243.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="110.6" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (24 samples, 0.03%)</title><rect x="107.6" y="227.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="110.6" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (24 samples, 0.03%)</title><rect x="107.6" y="211.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="110.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (24 samples, 0.03%)</title><rect x="107.6" y="195.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="110.6" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (24 samples, 0.03%)</title><rect x="107.6" y="179.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="110.6" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (24 samples, 0.03%)</title><rect x="107.6" y="163.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="110.6" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (24 samples, 0.03%)</title><rect x="107.6" y="147.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="110.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (24 samples, 0.03%)</title><rect x="107.6" y="131.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="110.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (24 samples, 0.03%)</title><rect x="107.9" y="259.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="110.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (24 samples, 0.03%)</title><rect x="107.9" y="243.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="110.9" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (24 samples, 0.03%)</title><rect x="107.9" y="227.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="110.9" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (24 samples, 0.03%)</title><rect x="107.9" y="211.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="110.9" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (24 samples, 0.03%)</title><rect x="107.9" y="195.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="110.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.proxy (2,775 samples, 3.02%)</title><rect x="108.3" y="435.0" width="35.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="111.3" y="446.0">ru/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.03%)</title><rect x="108.3" y="419.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="111.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/373182087.invoke (25 samples, 0.03%)</title><rect x="108.3" y="403.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="111.3" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.03%)</title><rect x="108.3" y="387.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="111.3" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,750 samples, 2.99%)</title><rect x="108.6" y="419.0" width="35.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="111.6" y="430.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,750 samples, 2.99%)</title><rect x="108.6" y="403.0" width="35.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="111.6" y="414.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (2,597 samples, 2.83%)</title><rect x="108.8" y="387.0" width="33.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="111.8" y="398.0">on..</text>
</g>
<g>
<title>byte[] (671 samples, 0.73%)</title><rect x="108.8" y="371.0" width="8.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="111.8" y="382.0"></text>
</g>
<g>
<title>byte[] (1,926 samples, 2.10%)</title><rect x="117.4" y="371.0" width="24.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="120.4" y="382.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (101 samples, 0.11%)</title><rect x="142.1" y="387.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="145.1" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (82 samples, 0.09%)</title><rect x="142.3" y="371.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="145.3" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (82 samples, 0.09%)</title><rect x="142.3" y="355.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="145.3" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (82 samples, 0.09%)</title><rect x="142.3" y="339.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="145.3" y="350.0"></text>
</g>
<g>
<title>char[] (47 samples, 0.05%)</title><rect x="142.3" y="323.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="145.3" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (20 samples, 0.02%)</title><rect x="143.1" y="323.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="146.1" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (20 samples, 0.02%)</title><rect x="143.1" y="307.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="146.1" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (20 samples, 0.02%)</title><rect x="143.1" y="291.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="146.1" y="302.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.02%)</title><rect x="143.1" y="275.0" width="0.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="146.1" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (34 samples, 0.04%)</title><rect x="143.4" y="387.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="146.4" y="398.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (24 samples, 0.03%)</title><rect x="143.5" y="371.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="146.5" y="382.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.03%)</title><rect x="143.5" y="355.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="146.5" y="366.0"></text>
</g>
<g>
<title>[2020-highload-dht-thread-134 tid=17032] (3,473 samples, 3.78%)</title><rect x="144.0" y="563.0" width="44.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="147.0" y="574.0">[202..</text>
</g>
<g>
<title>java/lang/Thread.run (3,473 samples, 3.78%)</title><rect x="144.0" y="547.0" width="44.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="147.0" y="558.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,473 samples, 3.78%)</title><rect x="144.0" y="531.0" width="44.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="147.0" y="542.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,473 samples, 3.78%)</title><rect x="144.0" y="515.0" width="44.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="147.0" y="526.0">java..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.run (3,458 samples, 3.77%)</title><rect x="144.2" y="499.0" width="44.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="147.2" y="510.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$entity$1 (3,458 samples, 3.77%)</title><rect x="144.2" y="483.0" width="44.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="147.2" y="494.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleRequest (3,458 samples, 3.77%)</title><rect x="144.2" y="467.0" width="44.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="147.2" y="478.0">ru/m..</text>
</g>
<g>
<title>java/lang/String.getBytes (32 samples, 0.03%)</title><rect x="144.2" y="451.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="147.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (32 samples, 0.03%)</title><rect x="144.2" y="435.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="147.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (32 samples, 0.03%)</title><rect x="144.2" y="419.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="147.2" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (32 samples, 0.03%)</title><rect x="144.2" y="403.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="147.2" y="414.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.03%)</title><rect x="144.2" y="387.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="147.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleGet (3,407 samples, 3.71%)</title><rect x="144.8" y="451.0" width="43.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="147.8" y="462.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (60 samples, 0.07%)</title><rect x="144.8" y="435.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="147.8" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (60 samples, 0.07%)</title><rect x="144.8" y="419.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="147.8" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (48 samples, 0.05%)</title><rect x="144.8" y="403.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="147.8" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (37 samples, 0.04%)</title><rect x="144.9" y="387.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="147.9" y="398.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.04%)</title><rect x="144.9" y="371.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="147.9" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (21 samples, 0.02%)</title><rect x="145.6" y="435.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="148.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (510 samples, 0.56%)</title><rect x="145.8" y="435.0" width="6.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="148.8" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (69 samples, 0.08%)</title><rect x="145.8" y="419.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="148.8" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (69 samples, 0.08%)</title><rect x="145.8" y="403.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="148.8" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (69 samples, 0.08%)</title><rect x="145.8" y="387.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="148.8" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (69 samples, 0.08%)</title><rect x="145.8" y="371.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="148.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (69 samples, 0.08%)</title><rect x="145.8" y="355.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="148.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (42 samples, 0.05%)</title><rect x="145.8" y="339.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="148.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (42 samples, 0.05%)</title><rect x="145.8" y="323.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="148.8" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (42 samples, 0.05%)</title><rect x="145.8" y="307.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="148.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (42 samples, 0.05%)</title><rect x="145.8" y="291.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="148.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (42 samples, 0.05%)</title><rect x="145.8" y="275.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="148.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (42 samples, 0.05%)</title><rect x="145.8" y="259.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="148.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (23 samples, 0.03%)</title><rect x="146.1" y="243.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="149.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (23 samples, 0.03%)</title><rect x="146.1" y="227.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="149.1" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (23 samples, 0.03%)</title><rect x="146.1" y="211.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="149.1" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (23 samples, 0.03%)</title><rect x="146.1" y="195.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="149.1" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (23 samples, 0.03%)</title><rect x="146.1" y="179.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="149.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$140/499586134.apply (27 samples, 0.03%)</title><rect x="146.4" y="339.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="149.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (27 samples, 0.03%)</title><rect x="146.4" y="323.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="149.4" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (27 samples, 0.03%)</title><rect x="146.4" y="307.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="149.4" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (27 samples, 0.03%)</title><rect x="146.4" y="291.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="149.4" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (27 samples, 0.03%)</title><rect x="146.4" y="275.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="149.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (28 samples, 0.03%)</title><rect x="146.7" y="419.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="149.7" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (28 samples, 0.03%)</title><rect x="146.7" y="403.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="149.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$151/1576841624.apply (28 samples, 0.03%)</title><rect x="146.7" y="387.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="149.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$3 (28 samples, 0.03%)</title><rect x="146.7" y="371.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="149.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (394 samples, 0.43%)</title><rect x="147.3" y="419.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="150.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (215 samples, 0.23%)</title><rect x="147.4" y="403.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="150.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (198 samples, 0.22%)</title><rect x="147.7" y="387.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="150.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (108 samples, 0.12%)</title><rect x="147.8" y="371.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="150.8" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (104 samples, 0.11%)</title><rect x="147.8" y="355.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="150.8" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (77 samples, 0.08%)</title><rect x="148.2" y="339.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="151.2" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (77 samples, 0.08%)</title><rect x="148.2" y="323.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="151.2" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (77 samples, 0.08%)</title><rect x="148.2" y="307.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="151.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (20 samples, 0.02%)</title><rect x="148.2" y="291.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="151.2" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (20 samples, 0.02%)</title><rect x="148.2" y="275.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="151.2" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (20 samples, 0.02%)</title><rect x="148.2" y="259.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="151.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (20 samples, 0.02%)</title><rect x="148.2" y="243.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="151.2" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (57 samples, 0.06%)</title><rect x="148.4" y="291.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="151.4" y="302.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (32 samples, 0.03%)</title><rect x="148.8" y="275.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="151.8" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (32 samples, 0.03%)</title><rect x="148.8" y="259.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="151.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (27 samples, 0.03%)</title><rect x="149.5" y="371.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="152.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (23 samples, 0.03%)</title><rect x="149.5" y="355.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="152.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (23 samples, 0.03%)</title><rect x="149.5" y="339.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="152.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (23 samples, 0.03%)</title><rect x="149.5" y="323.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="152.5" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (23 samples, 0.03%)</title><rect x="149.5" y="307.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="152.5" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (23 samples, 0.03%)</title><rect x="149.5" y="291.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="152.5" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (23 samples, 0.03%)</title><rect x="149.5" y="275.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="152.5" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (23 samples, 0.03%)</title><rect x="149.5" y="259.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="152.5" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (23 samples, 0.03%)</title><rect x="149.5" y="243.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="152.5" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (23 samples, 0.03%)</title><rect x="149.5" y="227.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="152.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (23 samples, 0.03%)</title><rect x="149.5" y="211.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="152.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (30 samples, 0.03%)</title><rect x="149.8" y="371.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="152.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (171 samples, 0.19%)</title><rect x="150.2" y="403.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="153.2" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (93 samples, 0.10%)</title><rect x="150.2" y="387.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="153.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (88 samples, 0.10%)</title><rect x="150.3" y="371.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="153.3" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (68 samples, 0.07%)</title><rect x="150.3" y="355.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="153.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (68 samples, 0.07%)</title><rect x="150.3" y="339.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="153.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (68 samples, 0.07%)</title><rect x="150.3" y="323.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="153.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (68 samples, 0.07%)</title><rect x="150.3" y="307.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="153.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (34 samples, 0.04%)</title><rect x="150.3" y="291.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="153.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (34 samples, 0.04%)</title><rect x="150.3" y="275.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="153.3" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (34 samples, 0.04%)</title><rect x="150.3" y="259.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="153.3" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (34 samples, 0.04%)</title><rect x="150.3" y="243.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="153.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (34 samples, 0.04%)</title><rect x="150.3" y="227.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="153.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (34 samples, 0.04%)</title><rect x="150.3" y="211.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="153.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (34 samples, 0.04%)</title><rect x="150.3" y="195.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="153.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (34 samples, 0.04%)</title><rect x="150.3" y="179.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="153.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (34 samples, 0.04%)</title><rect x="150.3" y="163.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="153.3" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (23 samples, 0.03%)</title><rect x="150.5" y="147.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="153.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (23 samples, 0.03%)</title><rect x="150.5" y="131.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="153.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (23 samples, 0.03%)</title><rect x="150.5" y="115.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="153.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (34 samples, 0.04%)</title><rect x="150.8" y="291.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="153.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (34 samples, 0.04%)</title><rect x="150.8" y="275.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="153.8" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (34 samples, 0.04%)</title><rect x="150.8" y="259.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="153.8" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (34 samples, 0.04%)</title><rect x="150.8" y="243.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="153.8" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (34 samples, 0.04%)</title><rect x="150.8" y="227.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="153.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (60 samples, 0.07%)</title><rect x="151.6" y="387.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="154.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (54 samples, 0.06%)</title><rect x="151.7" y="371.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="154.7" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (54 samples, 0.06%)</title><rect x="151.7" y="355.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="154.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (54 samples, 0.06%)</title><rect x="151.7" y="339.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="154.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (54 samples, 0.06%)</title><rect x="151.7" y="323.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="154.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (54 samples, 0.06%)</title><rect x="151.7" y="307.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="154.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (54 samples, 0.06%)</title><rect x="151.7" y="291.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="154.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (54 samples, 0.06%)</title><rect x="151.7" y="275.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="154.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (25 samples, 0.03%)</title><rect x="151.7" y="259.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="154.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (25 samples, 0.03%)</title><rect x="151.7" y="243.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="154.7" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (25 samples, 0.03%)</title><rect x="151.7" y="227.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="154.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (25 samples, 0.03%)</title><rect x="151.7" y="211.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="154.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (25 samples, 0.03%)</title><rect x="151.7" y="195.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="154.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (25 samples, 0.03%)</title><rect x="151.7" y="179.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="154.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (25 samples, 0.03%)</title><rect x="151.7" y="163.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="154.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (25 samples, 0.03%)</title><rect x="151.7" y="147.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="154.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (25 samples, 0.03%)</title><rect x="151.7" y="131.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="154.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (29 samples, 0.03%)</title><rect x="152.0" y="259.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="155.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (29 samples, 0.03%)</title><rect x="152.0" y="243.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="155.0" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (29 samples, 0.03%)</title><rect x="152.0" y="227.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="155.0" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (29 samples, 0.03%)</title><rect x="152.0" y="211.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="155.0" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (29 samples, 0.03%)</title><rect x="152.0" y="195.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="155.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.proxy (2,805 samples, 3.05%)</title><rect x="152.5" y="435.0" width="36.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="155.5" y="446.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,793 samples, 3.04%)</title><rect x="152.7" y="419.0" width="35.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="155.7" y="430.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,793 samples, 3.04%)</title><rect x="152.7" y="403.0" width="35.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="155.7" y="414.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (2,627 samples, 2.86%)</title><rect x="152.8" y="387.0" width="33.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="155.8" y="398.0">on..</text>
</g>
<g>
<title>byte[] (682 samples, 0.74%)</title><rect x="152.8" y="371.0" width="8.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="155.8" y="382.0"></text>
</g>
<g>
<title>byte[] (1,945 samples, 2.12%)</title><rect x="161.6" y="371.0" width="25.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="164.6" y="382.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (113 samples, 0.12%)</title><rect x="186.6" y="387.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="189.6" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (81 samples, 0.09%)</title><rect x="186.8" y="371.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="189.8" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (81 samples, 0.09%)</title><rect x="186.8" y="355.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="189.8" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (81 samples, 0.09%)</title><rect x="186.8" y="339.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="189.8" y="350.0"></text>
</g>
<g>
<title>char[] (56 samples, 0.06%)</title><rect x="186.8" y="323.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="189.8" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (35 samples, 0.04%)</title><rect x="188.0" y="387.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="191.0" y="398.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (32 samples, 0.03%)</title><rect x="188.1" y="371.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="191.1" y="382.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.03%)</title><rect x="188.1" y="355.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="191.1" y="366.0"></text>
</g>
<g>
<title>[2020-highload-dht-thread-136 tid=17030] (3,459 samples, 3.77%)</title><rect x="188.6" y="563.0" width="44.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="191.6" y="574.0">[202..</text>
</g>
<g>
<title>java/lang/Thread.run (3,459 samples, 3.77%)</title><rect x="188.6" y="547.0" width="44.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="191.6" y="558.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,459 samples, 3.77%)</title><rect x="188.6" y="531.0" width="44.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="191.6" y="542.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,459 samples, 3.77%)</title><rect x="188.6" y="515.0" width="44.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="191.6" y="526.0">java..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.run (3,450 samples, 3.76%)</title><rect x="188.7" y="499.0" width="44.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="191.7" y="510.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$entity$1 (3,450 samples, 3.76%)</title><rect x="188.7" y="483.0" width="44.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="191.7" y="494.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleRequest (3,450 samples, 3.76%)</title><rect x="188.7" y="467.0" width="44.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="191.7" y="478.0">ru/m..</text>
</g>
<g>
<title>java/lang/String.getBytes (31 samples, 0.03%)</title><rect x="188.7" y="451.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="191.7" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (31 samples, 0.03%)</title><rect x="188.7" y="435.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="191.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (31 samples, 0.03%)</title><rect x="188.7" y="419.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="191.7" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (31 samples, 0.03%)</title><rect x="188.7" y="403.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="191.7" y="414.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.03%)</title><rect x="188.7" y="387.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="191.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleGet (3,406 samples, 3.71%)</title><rect x="189.3" y="451.0" width="43.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="192.3" y="462.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (48 samples, 0.05%)</title><rect x="189.3" y="435.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="192.3" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (48 samples, 0.05%)</title><rect x="189.3" y="419.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="192.3" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (38 samples, 0.04%)</title><rect x="189.3" y="403.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="192.3" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (31 samples, 0.03%)</title><rect x="189.4" y="387.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="192.4" y="398.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.03%)</title><rect x="189.4" y="371.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="192.4" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (26 samples, 0.03%)</title><rect x="189.9" y="435.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="192.9" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (22 samples, 0.02%)</title><rect x="189.9" y="419.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="192.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (493 samples, 0.54%)</title><rect x="190.2" y="435.0" width="6.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="193.2" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (80 samples, 0.09%)</title><rect x="190.2" y="419.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="193.2" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (80 samples, 0.09%)</title><rect x="190.2" y="403.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="193.2" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (80 samples, 0.09%)</title><rect x="190.2" y="387.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="193.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (80 samples, 0.09%)</title><rect x="190.2" y="371.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="193.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (80 samples, 0.09%)</title><rect x="190.2" y="355.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="193.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (56 samples, 0.06%)</title><rect x="190.2" y="339.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="193.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (56 samples, 0.06%)</title><rect x="190.2" y="323.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="193.2" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (56 samples, 0.06%)</title><rect x="190.2" y="307.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="193.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (56 samples, 0.06%)</title><rect x="190.2" y="291.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="193.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (56 samples, 0.06%)</title><rect x="190.2" y="275.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="193.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (56 samples, 0.06%)</title><rect x="190.2" y="259.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="193.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (21 samples, 0.02%)</title><rect x="190.2" y="243.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="193.2" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (21 samples, 0.02%)</title><rect x="190.2" y="227.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="193.2" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (21 samples, 0.02%)</title><rect x="190.2" y="211.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="193.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (21 samples, 0.02%)</title><rect x="190.2" y="195.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="193.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (21 samples, 0.02%)</title><rect x="190.2" y="179.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="193.2" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (21 samples, 0.02%)</title><rect x="190.2" y="163.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="193.2" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (21 samples, 0.02%)</title><rect x="190.2" y="147.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="193.2" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (21 samples, 0.02%)</title><rect x="190.2" y="131.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="193.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (21 samples, 0.02%)</title><rect x="190.2" y="115.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="193.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (35 samples, 0.04%)</title><rect x="190.5" y="243.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="193.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (35 samples, 0.04%)</title><rect x="190.5" y="227.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="193.5" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (35 samples, 0.04%)</title><rect x="190.5" y="211.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="193.5" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (35 samples, 0.04%)</title><rect x="190.5" y="195.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="193.5" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (35 samples, 0.04%)</title><rect x="190.5" y="179.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="193.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$140/499586134.apply (24 samples, 0.03%)</title><rect x="190.9" y="339.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="193.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (24 samples, 0.03%)</title><rect x="190.9" y="323.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="193.9" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (24 samples, 0.03%)</title><rect x="190.9" y="307.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="193.9" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (24 samples, 0.03%)</title><rect x="190.9" y="291.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="193.9" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (24 samples, 0.03%)</title><rect x="190.9" y="275.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="193.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (27 samples, 0.03%)</title><rect x="191.2" y="419.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="194.2" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (27 samples, 0.03%)</title><rect x="191.2" y="403.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="194.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$151/1576841624.apply (27 samples, 0.03%)</title><rect x="191.2" y="387.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="194.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$3 (27 samples, 0.03%)</title><rect x="191.2" y="371.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="194.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (361 samples, 0.39%)</title><rect x="191.9" y="419.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="194.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (210 samples, 0.23%)</title><rect x="192.0" y="403.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="195.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (191 samples, 0.21%)</title><rect x="192.2" y="387.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="195.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (97 samples, 0.11%)</title><rect x="192.3" y="371.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="195.3" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (93 samples, 0.10%)</title><rect x="192.4" y="355.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="195.4" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (74 samples, 0.08%)</title><rect x="192.6" y="339.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="195.6" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (74 samples, 0.08%)</title><rect x="192.6" y="323.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="195.6" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (74 samples, 0.08%)</title><rect x="192.6" y="307.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="195.6" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (24 samples, 0.03%)</title><rect x="192.6" y="291.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="195.6" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (24 samples, 0.03%)</title><rect x="192.6" y="275.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="195.6" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (24 samples, 0.03%)</title><rect x="192.6" y="259.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="195.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (24 samples, 0.03%)</title><rect x="192.6" y="243.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="195.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (50 samples, 0.05%)</title><rect x="192.9" y="291.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="195.9" y="302.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (20 samples, 0.02%)</title><rect x="193.3" y="275.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="196.3" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (20 samples, 0.02%)</title><rect x="193.3" y="259.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="196.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (41 samples, 0.04%)</title><rect x="193.8" y="371.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="196.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (34 samples, 0.04%)</title><rect x="193.8" y="355.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="196.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (34 samples, 0.04%)</title><rect x="193.8" y="339.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="196.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (34 samples, 0.04%)</title><rect x="193.8" y="323.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="196.8" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (34 samples, 0.04%)</title><rect x="193.8" y="307.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="196.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (34 samples, 0.04%)</title><rect x="193.8" y="291.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="196.8" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (34 samples, 0.04%)</title><rect x="193.8" y="275.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="196.8" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (34 samples, 0.04%)</title><rect x="193.8" y="259.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="196.8" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (34 samples, 0.04%)</title><rect x="193.8" y="243.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="196.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (34 samples, 0.04%)</title><rect x="193.8" y="227.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="196.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (34 samples, 0.04%)</title><rect x="193.8" y="211.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="196.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (27 samples, 0.03%)</title><rect x="193.9" y="195.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="196.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (27 samples, 0.03%)</title><rect x="193.9" y="179.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="196.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (27 samples, 0.03%)</title><rect x="193.9" y="163.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="196.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (32 samples, 0.03%)</title><rect x="194.3" y="371.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="197.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (144 samples, 0.16%)</title><rect x="194.7" y="403.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="197.7" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (74 samples, 0.08%)</title><rect x="194.7" y="387.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="197.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (69 samples, 0.08%)</title><rect x="194.8" y="371.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="197.8" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (53 samples, 0.06%)</title><rect x="194.9" y="355.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="197.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (53 samples, 0.06%)</title><rect x="194.9" y="339.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="197.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (53 samples, 0.06%)</title><rect x="194.9" y="323.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="197.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (53 samples, 0.06%)</title><rect x="194.9" y="307.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="197.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (23 samples, 0.03%)</title><rect x="194.9" y="291.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="197.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (23 samples, 0.03%)</title><rect x="194.9" y="275.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="197.9" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (23 samples, 0.03%)</title><rect x="194.9" y="259.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="197.9" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (23 samples, 0.03%)</title><rect x="194.9" y="243.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="197.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (23 samples, 0.03%)</title><rect x="194.9" y="227.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="197.9" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (23 samples, 0.03%)</title><rect x="194.9" y="211.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="197.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (23 samples, 0.03%)</title><rect x="194.9" y="195.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="197.9" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (23 samples, 0.03%)</title><rect x="194.9" y="179.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="197.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (23 samples, 0.03%)</title><rect x="194.9" y="163.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="197.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (30 samples, 0.03%)</title><rect x="195.1" y="291.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="198.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (30 samples, 0.03%)</title><rect x="195.1" y="275.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="198.1" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (30 samples, 0.03%)</title><rect x="195.1" y="259.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="198.1" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (30 samples, 0.03%)</title><rect x="195.1" y="243.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="198.1" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (30 samples, 0.03%)</title><rect x="195.1" y="227.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="198.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (56 samples, 0.06%)</title><rect x="195.8" y="387.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="198.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (49 samples, 0.05%)</title><rect x="195.9" y="371.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="198.9" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (49 samples, 0.05%)</title><rect x="195.9" y="355.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="198.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (49 samples, 0.05%)</title><rect x="195.9" y="339.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="198.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (49 samples, 0.05%)</title><rect x="195.9" y="323.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="198.9" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (49 samples, 0.05%)</title><rect x="195.9" y="307.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="198.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (49 samples, 0.05%)</title><rect x="195.9" y="291.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="198.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (49 samples, 0.05%)</title><rect x="195.9" y="275.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="198.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (29 samples, 0.03%)</title><rect x="195.9" y="259.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="198.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (29 samples, 0.03%)</title><rect x="195.9" y="243.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="198.9" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (29 samples, 0.03%)</title><rect x="195.9" y="227.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="198.9" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (29 samples, 0.03%)</title><rect x="195.9" y="211.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="198.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (29 samples, 0.03%)</title><rect x="195.9" y="195.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="198.9" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (29 samples, 0.03%)</title><rect x="195.9" y="179.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="198.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (29 samples, 0.03%)</title><rect x="195.9" y="163.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="198.9" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (29 samples, 0.03%)</title><rect x="195.9" y="147.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="198.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (29 samples, 0.03%)</title><rect x="195.9" y="131.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="198.9" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (24 samples, 0.03%)</title><rect x="196.0" y="115.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="199.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (24 samples, 0.03%)</title><rect x="196.0" y="99.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="199.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (24 samples, 0.03%)</title><rect x="196.0" y="83.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="199.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (20 samples, 0.02%)</title><rect x="196.3" y="259.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="199.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (20 samples, 0.02%)</title><rect x="196.3" y="243.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="199.3" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (20 samples, 0.02%)</title><rect x="196.3" y="227.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="199.3" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (20 samples, 0.02%)</title><rect x="196.3" y="211.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="199.3" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (20 samples, 0.02%)</title><rect x="196.3" y="195.0" width="0.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="199.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.proxy (2,833 samples, 3.08%)</title><rect x="196.6" y="435.0" width="36.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="199.6" y="446.0">ru/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.03%)</title><rect x="196.6" y="419.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="199.6" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/373182087.invoke (25 samples, 0.03%)</title><rect x="196.6" y="403.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="199.6" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.03%)</title><rect x="196.6" y="387.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="199.6" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,808 samples, 3.06%)</title><rect x="196.9" y="419.0" width="36.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="199.9" y="430.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,808 samples, 3.06%)</title><rect x="196.9" y="403.0" width="36.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="199.9" y="414.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (2,638 samples, 2.87%)</title><rect x="197.0" y="387.0" width="33.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="200.0" y="398.0">on..</text>
</g>
<g>
<title>byte[] (699 samples, 0.76%)</title><rect x="197.0" y="371.0" width="9.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="200.0" y="382.0"></text>
</g>
<g>
<title>byte[] (1,939 samples, 2.11%)</title><rect x="206.0" y="371.0" width="24.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="209.0" y="382.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (114 samples, 0.12%)</title><rect x="230.9" y="387.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="233.9" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (89 samples, 0.10%)</title><rect x="231.1" y="371.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="234.1" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (89 samples, 0.10%)</title><rect x="231.1" y="355.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="234.1" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (89 samples, 0.10%)</title><rect x="231.1" y="339.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="234.1" y="350.0"></text>
</g>
<g>
<title>char[] (57 samples, 0.06%)</title><rect x="231.1" y="323.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="234.1" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (34 samples, 0.04%)</title><rect x="232.4" y="387.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="235.4" y="398.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (30 samples, 0.03%)</title><rect x="232.4" y="371.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="235.4" y="382.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.03%)</title><rect x="232.4" y="355.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="235.4" y="366.0"></text>
</g>
<g>
<title>[2020-highload-dht-thread-139 tid=17033] (3,464 samples, 3.77%)</title><rect x="233.0" y="563.0" width="44.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="236.0" y="574.0">[202..</text>
</g>
<g>
<title>java/lang/Thread.run (3,464 samples, 3.77%)</title><rect x="233.0" y="547.0" width="44.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="236.0" y="558.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,464 samples, 3.77%)</title><rect x="233.0" y="531.0" width="44.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="236.0" y="542.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,464 samples, 3.77%)</title><rect x="233.0" y="515.0" width="44.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="236.0" y="526.0">java..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.run (3,454 samples, 3.76%)</title><rect x="233.2" y="499.0" width="44.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="236.2" y="510.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$entity$1 (3,454 samples, 3.76%)</title><rect x="233.2" y="483.0" width="44.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="236.2" y="494.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleRequest (3,454 samples, 3.76%)</title><rect x="233.2" y="467.0" width="44.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="236.2" y="478.0">ru/m..</text>
</g>
<g>
<title>java/lang/String.getBytes (27 samples, 0.03%)</title><rect x="233.2" y="451.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="236.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (27 samples, 0.03%)</title><rect x="233.2" y="435.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="236.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (27 samples, 0.03%)</title><rect x="233.2" y="419.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="236.2" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (27 samples, 0.03%)</title><rect x="233.2" y="403.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="236.2" y="414.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.03%)</title><rect x="233.2" y="387.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="236.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleGet (3,408 samples, 3.71%)</title><rect x="233.7" y="451.0" width="43.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="236.7" y="462.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (45 samples, 0.05%)</title><rect x="233.7" y="435.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="236.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (45 samples, 0.05%)</title><rect x="233.7" y="419.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="236.7" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (35 samples, 0.04%)</title><rect x="233.7" y="403.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="236.7" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (30 samples, 0.03%)</title><rect x="233.8" y="387.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="236.8" y="398.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.03%)</title><rect x="233.8" y="371.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="236.8" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (27 samples, 0.03%)</title><rect x="234.3" y="435.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="237.3" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (22 samples, 0.02%)</title><rect x="234.4" y="419.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="237.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (481 samples, 0.52%)</title><rect x="234.7" y="435.0" width="6.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="237.7" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (63 samples, 0.07%)</title><rect x="234.7" y="419.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="237.7" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (63 samples, 0.07%)</title><rect x="234.7" y="403.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="237.7" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (63 samples, 0.07%)</title><rect x="234.7" y="387.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="237.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (63 samples, 0.07%)</title><rect x="234.7" y="371.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="237.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (63 samples, 0.07%)</title><rect x="234.7" y="355.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="237.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (41 samples, 0.04%)</title><rect x="234.7" y="339.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="237.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (41 samples, 0.04%)</title><rect x="234.7" y="323.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="237.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (41 samples, 0.04%)</title><rect x="234.7" y="307.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="237.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (41 samples, 0.04%)</title><rect x="234.7" y="291.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="237.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (41 samples, 0.04%)</title><rect x="234.7" y="275.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="237.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (41 samples, 0.04%)</title><rect x="234.7" y="259.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="237.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (24 samples, 0.03%)</title><rect x="234.9" y="243.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="237.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (24 samples, 0.03%)</title><rect x="234.9" y="227.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="237.9" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (24 samples, 0.03%)</title><rect x="234.9" y="211.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="237.9" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (24 samples, 0.03%)</title><rect x="234.9" y="195.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="237.9" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (24 samples, 0.03%)</title><rect x="234.9" y="179.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="237.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$140/499586134.apply (22 samples, 0.02%)</title><rect x="235.2" y="339.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="238.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (22 samples, 0.02%)</title><rect x="235.2" y="323.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="238.2" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (22 samples, 0.02%)</title><rect x="235.2" y="307.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="238.2" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (22 samples, 0.02%)</title><rect x="235.2" y="291.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="238.2" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (22 samples, 0.02%)</title><rect x="235.2" y="275.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="238.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (30 samples, 0.03%)</title><rect x="235.5" y="419.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="238.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (30 samples, 0.03%)</title><rect x="235.5" y="403.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="238.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$151/1576841624.apply (30 samples, 0.03%)</title><rect x="235.5" y="387.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="238.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$3 (30 samples, 0.03%)</title><rect x="235.5" y="371.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="238.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (366 samples, 0.40%)</title><rect x="236.1" y="419.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="239.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (227 samples, 0.25%)</title><rect x="236.3" y="403.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="239.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (199 samples, 0.22%)</title><rect x="236.7" y="387.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="239.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (99 samples, 0.11%)</title><rect x="236.7" y="371.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="239.7" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (98 samples, 0.11%)</title><rect x="236.8" y="355.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="239.8" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (77 samples, 0.08%)</title><rect x="237.0" y="339.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="240.0" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (77 samples, 0.08%)</title><rect x="237.0" y="323.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="240.0" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (77 samples, 0.08%)</title><rect x="237.0" y="307.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="240.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (24 samples, 0.03%)</title><rect x="237.0" y="291.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="240.0" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (24 samples, 0.03%)</title><rect x="237.0" y="275.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="240.0" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (24 samples, 0.03%)</title><rect x="237.0" y="259.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="240.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (24 samples, 0.03%)</title><rect x="237.0" y="243.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="240.0" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (53 samples, 0.06%)</title><rect x="237.3" y="291.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="240.3" y="302.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (32 samples, 0.03%)</title><rect x="237.6" y="275.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="240.6" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (32 samples, 0.03%)</title><rect x="237.6" y="259.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="240.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (32 samples, 0.03%)</title><rect x="238.2" y="371.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="241.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (25 samples, 0.03%)</title><rect x="238.3" y="355.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="241.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (25 samples, 0.03%)</title><rect x="238.3" y="339.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="241.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (25 samples, 0.03%)</title><rect x="238.3" y="323.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="241.3" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (25 samples, 0.03%)</title><rect x="238.3" y="307.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="241.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (25 samples, 0.03%)</title><rect x="238.3" y="291.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="241.3" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (25 samples, 0.03%)</title><rect x="238.3" y="275.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="241.3" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (25 samples, 0.03%)</title><rect x="238.3" y="259.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="241.3" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (25 samples, 0.03%)</title><rect x="238.3" y="243.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="241.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (25 samples, 0.03%)</title><rect x="238.3" y="227.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="241.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (25 samples, 0.03%)</title><rect x="238.3" y="211.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="241.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (20 samples, 0.02%)</title><rect x="238.4" y="195.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="241.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (20 samples, 0.02%)</title><rect x="238.4" y="179.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="241.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (20 samples, 0.02%)</title><rect x="238.4" y="163.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="241.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (45 samples, 0.05%)</title><rect x="238.7" y="371.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="241.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (126 samples, 0.14%)</title><rect x="239.2" y="403.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="242.2" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (65 samples, 0.07%)</title><rect x="239.2" y="387.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="242.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (57 samples, 0.06%)</title><rect x="239.3" y="371.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="242.3" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (38 samples, 0.04%)</title><rect x="239.4" y="355.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="242.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (38 samples, 0.04%)</title><rect x="239.4" y="339.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="242.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (38 samples, 0.04%)</title><rect x="239.4" y="323.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="242.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (38 samples, 0.04%)</title><rect x="239.4" y="307.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="242.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (53 samples, 0.06%)</title><rect x="240.2" y="387.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="243.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (45 samples, 0.05%)</title><rect x="240.3" y="371.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="243.3" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (45 samples, 0.05%)</title><rect x="240.3" y="355.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="243.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (45 samples, 0.05%)</title><rect x="240.3" y="339.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="243.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (45 samples, 0.05%)</title><rect x="240.3" y="323.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="243.3" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (45 samples, 0.05%)</title><rect x="240.3" y="307.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="243.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (45 samples, 0.05%)</title><rect x="240.3" y="291.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="243.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (45 samples, 0.05%)</title><rect x="240.3" y="275.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="243.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (20 samples, 0.02%)</title><rect x="240.3" y="259.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="243.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (20 samples, 0.02%)</title><rect x="240.3" y="243.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="243.3" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (20 samples, 0.02%)</title><rect x="240.3" y="227.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="243.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (20 samples, 0.02%)</title><rect x="240.3" y="211.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="243.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (20 samples, 0.02%)</title><rect x="240.3" y="195.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="243.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (20 samples, 0.02%)</title><rect x="240.3" y="179.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="243.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (20 samples, 0.02%)</title><rect x="240.3" y="163.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="243.3" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (20 samples, 0.02%)</title><rect x="240.3" y="147.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="243.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (20 samples, 0.02%)</title><rect x="240.3" y="131.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="243.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (25 samples, 0.03%)</title><rect x="240.5" y="259.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="243.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (25 samples, 0.03%)</title><rect x="240.5" y="243.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="243.5" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (25 samples, 0.03%)</title><rect x="240.5" y="227.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="243.5" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (25 samples, 0.03%)</title><rect x="240.5" y="211.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="243.5" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (25 samples, 0.03%)</title><rect x="240.5" y="195.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="243.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.proxy (2,854 samples, 3.11%)</title><rect x="240.9" y="435.0" width="36.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="243.9" y="446.0">ru/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.02%)</title><rect x="240.9" y="419.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="243.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/373182087.invoke (21 samples, 0.02%)</title><rect x="240.9" y="403.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="243.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.02%)</title><rect x="240.9" y="387.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="243.9" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,833 samples, 3.08%)</title><rect x="241.1" y="419.0" width="36.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="244.1" y="430.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,833 samples, 3.08%)</title><rect x="241.1" y="403.0" width="36.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="244.1" y="414.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (2,680 samples, 2.92%)</title><rect x="241.2" y="387.0" width="34.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="244.2" y="398.0">on..</text>
</g>
<g>
<title>byte[] (723 samples, 0.79%)</title><rect x="241.2" y="371.0" width="9.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="244.2" y="382.0"></text>
</g>
<g>
<title>byte[] (1,957 samples, 2.13%)</title><rect x="250.5" y="371.0" width="25.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="253.5" y="382.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (105 samples, 0.11%)</title><rect x="275.7" y="387.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="278.7" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (83 samples, 0.09%)</title><rect x="275.8" y="371.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="278.8" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (83 samples, 0.09%)</title><rect x="275.8" y="355.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="278.8" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (83 samples, 0.09%)</title><rect x="275.8" y="339.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="278.8" y="350.0"></text>
</g>
<g>
<title>char[] (49 samples, 0.05%)</title><rect x="275.8" y="323.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="278.8" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (30 samples, 0.03%)</title><rect x="277.0" y="387.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="280.0" y="398.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (28 samples, 0.03%)</title><rect x="277.0" y="371.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="280.0" y="382.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.03%)</title><rect x="277.0" y="355.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="280.0" y="366.0"></text>
</g>
<g>
<title>[2020-highload-dht-thread-140 tid=17036] (3,407 samples, 3.71%)</title><rect x="277.5" y="563.0" width="43.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="280.5" y="574.0">[202..</text>
</g>
<g>
<title>java/lang/Thread.run (3,407 samples, 3.71%)</title><rect x="277.5" y="547.0" width="43.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="280.5" y="558.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,407 samples, 3.71%)</title><rect x="277.5" y="531.0" width="43.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="280.5" y="542.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,407 samples, 3.71%)</title><rect x="277.5" y="515.0" width="43.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="280.5" y="526.0">java..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.run (3,396 samples, 3.70%)</title><rect x="277.7" y="499.0" width="43.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="280.7" y="510.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$entity$1 (3,396 samples, 3.70%)</title><rect x="277.7" y="483.0" width="43.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="280.7" y="494.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleRequest (3,396 samples, 3.70%)</title><rect x="277.7" y="467.0" width="43.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="280.7" y="478.0">ru/m..</text>
</g>
<g>
<title>java/lang/String.getBytes (23 samples, 0.03%)</title><rect x="277.7" y="451.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="280.7" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (23 samples, 0.03%)</title><rect x="277.7" y="435.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="280.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (23 samples, 0.03%)</title><rect x="277.7" y="419.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="280.7" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (23 samples, 0.03%)</title><rect x="277.7" y="403.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="280.7" y="414.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.03%)</title><rect x="277.7" y="387.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="280.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleGet (3,361 samples, 3.66%)</title><rect x="278.1" y="451.0" width="43.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="281.1" y="462.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (53 samples, 0.06%)</title><rect x="278.1" y="435.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="281.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (53 samples, 0.06%)</title><rect x="278.1" y="419.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="281.1" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (40 samples, 0.04%)</title><rect x="278.1" y="403.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="281.1" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (32 samples, 0.03%)</title><rect x="278.2" y="387.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="281.2" y="398.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.03%)</title><rect x="278.2" y="371.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="281.2" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (29 samples, 0.03%)</title><rect x="278.8" y="435.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="281.8" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (26 samples, 0.03%)</title><rect x="278.8" y="419.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="281.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (510 samples, 0.56%)</title><rect x="279.2" y="435.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="282.2" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (84 samples, 0.09%)</title><rect x="279.2" y="419.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="282.2" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (84 samples, 0.09%)</title><rect x="279.2" y="403.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="282.2" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (84 samples, 0.09%)</title><rect x="279.2" y="387.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="282.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (84 samples, 0.09%)</title><rect x="279.2" y="371.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="282.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (84 samples, 0.09%)</title><rect x="279.2" y="355.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="282.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (65 samples, 0.07%)</title><rect x="279.2" y="339.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="282.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (65 samples, 0.07%)</title><rect x="279.2" y="323.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="282.2" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (65 samples, 0.07%)</title><rect x="279.2" y="307.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="282.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (65 samples, 0.07%)</title><rect x="279.2" y="291.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="282.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (65 samples, 0.07%)</title><rect x="279.2" y="275.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="282.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (65 samples, 0.07%)</title><rect x="279.2" y="259.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="282.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (32 samples, 0.03%)</title><rect x="279.2" y="243.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="282.2" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (32 samples, 0.03%)</title><rect x="279.2" y="227.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="282.2" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (32 samples, 0.03%)</title><rect x="279.2" y="211.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="282.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (32 samples, 0.03%)</title><rect x="279.2" y="195.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="282.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (32 samples, 0.03%)</title><rect x="279.2" y="179.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="282.2" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (32 samples, 0.03%)</title><rect x="279.2" y="163.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="282.2" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (32 samples, 0.03%)</title><rect x="279.2" y="147.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="282.2" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (32 samples, 0.03%)</title><rect x="279.2" y="131.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="282.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (32 samples, 0.03%)</title><rect x="279.2" y="115.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="282.2" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (23 samples, 0.03%)</title><rect x="279.3" y="99.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="282.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (23 samples, 0.03%)</title><rect x="279.3" y="83.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="282.3" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (23 samples, 0.03%)</title><rect x="279.3" y="67.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="282.3" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (33 samples, 0.04%)</title><rect x="279.6" y="243.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="282.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (33 samples, 0.04%)</title><rect x="279.6" y="227.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="282.6" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (33 samples, 0.04%)</title><rect x="279.6" y="211.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="282.6" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (33 samples, 0.04%)</title><rect x="279.6" y="195.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="282.6" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (33 samples, 0.04%)</title><rect x="279.6" y="179.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="282.6" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (27 samples, 0.03%)</title><rect x="280.3" y="419.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="283.3" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (27 samples, 0.03%)</title><rect x="280.3" y="403.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="283.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$151/1576841624.apply (27 samples, 0.03%)</title><rect x="280.3" y="387.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="283.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$3 (27 samples, 0.03%)</title><rect x="280.3" y="371.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="283.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (376 samples, 0.41%)</title><rect x="280.9" y="419.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="283.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (216 samples, 0.24%)</title><rect x="281.1" y="403.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="284.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (204 samples, 0.22%)</title><rect x="281.2" y="387.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="284.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (95 samples, 0.10%)</title><rect x="281.4" y="371.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="284.4" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (92 samples, 0.10%)</title><rect x="281.4" y="355.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="284.4" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (69 samples, 0.08%)</title><rect x="281.7" y="339.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="284.7" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (69 samples, 0.08%)</title><rect x="281.7" y="323.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="284.7" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (69 samples, 0.08%)</title><rect x="281.7" y="307.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="284.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (25 samples, 0.03%)</title><rect x="281.7" y="291.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="284.7" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (25 samples, 0.03%)</title><rect x="281.7" y="275.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="284.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (25 samples, 0.03%)</title><rect x="281.7" y="259.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="284.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (25 samples, 0.03%)</title><rect x="281.7" y="243.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="284.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (22 samples, 0.02%)</title><rect x="281.7" y="227.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="284.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (22 samples, 0.02%)</title><rect x="281.7" y="211.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="284.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (22 samples, 0.02%)</title><rect x="281.7" y="195.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="284.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (44 samples, 0.05%)</title><rect x="282.0" y="291.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="285.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (32 samples, 0.03%)</title><rect x="282.8" y="371.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="285.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (23 samples, 0.03%)</title><rect x="282.9" y="355.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="285.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (23 samples, 0.03%)</title><rect x="282.9" y="339.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="285.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (23 samples, 0.03%)</title><rect x="282.9" y="323.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="285.9" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (23 samples, 0.03%)</title><rect x="282.9" y="307.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="285.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (23 samples, 0.03%)</title><rect x="282.9" y="291.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="285.9" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (23 samples, 0.03%)</title><rect x="282.9" y="275.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="285.9" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (23 samples, 0.03%)</title><rect x="282.9" y="259.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="285.9" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (23 samples, 0.03%)</title><rect x="282.9" y="243.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="285.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (23 samples, 0.03%)</title><rect x="282.9" y="227.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="285.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (23 samples, 0.03%)</title><rect x="282.9" y="211.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="285.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (49 samples, 0.05%)</title><rect x="283.2" y="371.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="286.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (146 samples, 0.16%)</title><rect x="283.9" y="403.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="286.9" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (73 samples, 0.08%)</title><rect x="283.9" y="387.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="286.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (69 samples, 0.08%)</title><rect x="283.9" y="371.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="286.9" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (46 samples, 0.05%)</title><rect x="284.0" y="355.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="287.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (46 samples, 0.05%)</title><rect x="284.0" y="339.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="287.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (46 samples, 0.05%)</title><rect x="284.0" y="323.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="287.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (46 samples, 0.05%)</title><rect x="284.0" y="307.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="287.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (22 samples, 0.02%)</title><rect x="284.0" y="291.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="287.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (22 samples, 0.02%)</title><rect x="284.0" y="275.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="287.0" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (22 samples, 0.02%)</title><rect x="284.0" y="259.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="287.0" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (22 samples, 0.02%)</title><rect x="284.0" y="243.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="287.0" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (22 samples, 0.02%)</title><rect x="284.0" y="227.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="287.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (22 samples, 0.02%)</title><rect x="284.0" y="211.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="287.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (22 samples, 0.02%)</title><rect x="284.0" y="195.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="287.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (22 samples, 0.02%)</title><rect x="284.0" y="179.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="287.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (22 samples, 0.02%)</title><rect x="284.0" y="163.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="287.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (24 samples, 0.03%)</title><rect x="284.2" y="291.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="287.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (24 samples, 0.03%)</title><rect x="284.2" y="275.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="287.2" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (24 samples, 0.03%)</title><rect x="284.2" y="259.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="287.2" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (24 samples, 0.03%)</title><rect x="284.2" y="243.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="287.2" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (24 samples, 0.03%)</title><rect x="284.2" y="227.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="287.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (60 samples, 0.07%)</title><rect x="285.0" y="387.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="288.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (59 samples, 0.06%)</title><rect x="285.0" y="371.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="288.0" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (59 samples, 0.06%)</title><rect x="285.0" y="355.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="288.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (59 samples, 0.06%)</title><rect x="285.0" y="339.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="288.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (59 samples, 0.06%)</title><rect x="285.0" y="323.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="288.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (59 samples, 0.06%)</title><rect x="285.0" y="307.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="288.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (59 samples, 0.06%)</title><rect x="285.0" y="291.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="288.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (59 samples, 0.06%)</title><rect x="285.0" y="275.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="288.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (30 samples, 0.03%)</title><rect x="285.0" y="259.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="288.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (30 samples, 0.03%)</title><rect x="285.0" y="243.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="288.0" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (30 samples, 0.03%)</title><rect x="285.0" y="227.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="288.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (30 samples, 0.03%)</title><rect x="285.0" y="211.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="288.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (30 samples, 0.03%)</title><rect x="285.0" y="195.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="288.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (30 samples, 0.03%)</title><rect x="285.0" y="179.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="288.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (30 samples, 0.03%)</title><rect x="285.0" y="163.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="288.0" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (30 samples, 0.03%)</title><rect x="285.0" y="147.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="288.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (30 samples, 0.03%)</title><rect x="285.0" y="131.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="288.0" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (21 samples, 0.02%)</title><rect x="285.1" y="115.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="288.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (21 samples, 0.02%)</title><rect x="285.1" y="99.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="288.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (21 samples, 0.02%)</title><rect x="285.1" y="83.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="288.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (29 samples, 0.03%)</title><rect x="285.4" y="259.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="288.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (29 samples, 0.03%)</title><rect x="285.4" y="243.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="288.4" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (29 samples, 0.03%)</title><rect x="285.4" y="227.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="288.4" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (29 samples, 0.03%)</title><rect x="285.4" y="211.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="288.4" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (29 samples, 0.03%)</title><rect x="285.4" y="195.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="288.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.proxy (2,763 samples, 3.01%)</title><rect x="285.8" y="435.0" width="35.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="288.8" y="446.0">ru/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (24 samples, 0.03%)</title><rect x="285.8" y="419.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="288.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/373182087.invoke (24 samples, 0.03%)</title><rect x="285.8" y="403.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="288.8" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.03%)</title><rect x="285.8" y="387.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="288.8" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,739 samples, 2.98%)</title><rect x="286.1" y="419.0" width="35.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="289.1" y="430.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,739 samples, 2.98%)</title><rect x="286.1" y="403.0" width="35.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="289.1" y="414.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (2,556 samples, 2.78%)</title><rect x="286.2" y="387.0" width="32.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="289.2" y="398.0">on..</text>
</g>
<g>
<title>byte[] (674 samples, 0.73%)</title><rect x="286.2" y="371.0" width="8.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="289.2" y="382.0"></text>
</g>
<g>
<title>byte[] (1,882 samples, 2.05%)</title><rect x="294.9" y="371.0" width="24.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="297.9" y="382.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (122 samples, 0.13%)</title><rect x="319.1" y="387.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="322.1" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (80 samples, 0.09%)</title><rect x="319.3" y="371.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="322.3" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (80 samples, 0.09%)</title><rect x="319.3" y="355.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="322.3" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (80 samples, 0.09%)</title><rect x="319.3" y="339.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="322.3" y="350.0"></text>
</g>
<g>
<title>char[] (62 samples, 0.07%)</title><rect x="319.3" y="323.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="322.3" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (38 samples, 0.04%)</title><rect x="320.6" y="387.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="323.6" y="398.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (37 samples, 0.04%)</title><rect x="320.6" y="371.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="323.6" y="382.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.04%)</title><rect x="320.6" y="355.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="323.6" y="366.0"></text>
</g>
<g>
<title>[2020-highload-dht-thread-142 tid=17108] (3,477 samples, 3.79%)</title><rect x="321.3" y="563.0" width="44.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="324.3" y="574.0">[202..</text>
</g>
<g>
<title>java/lang/Thread.run (3,477 samples, 3.79%)</title><rect x="321.3" y="547.0" width="44.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="324.3" y="558.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,477 samples, 3.79%)</title><rect x="321.3" y="531.0" width="44.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="324.3" y="542.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,477 samples, 3.79%)</title><rect x="321.3" y="515.0" width="44.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="324.3" y="526.0">java..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.run (3,463 samples, 3.77%)</title><rect x="321.5" y="499.0" width="44.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="324.5" y="510.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$entity$1 (3,463 samples, 3.77%)</title><rect x="321.5" y="483.0" width="44.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="324.5" y="494.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleRequest (3,463 samples, 3.77%)</title><rect x="321.5" y="467.0" width="44.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="324.5" y="478.0">ru/m..</text>
</g>
<g>
<title>java/lang/String.getBytes (28 samples, 0.03%)</title><rect x="321.5" y="451.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="324.5" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (28 samples, 0.03%)</title><rect x="321.5" y="435.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="324.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (28 samples, 0.03%)</title><rect x="321.5" y="419.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="324.5" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (28 samples, 0.03%)</title><rect x="321.5" y="403.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="324.5" y="414.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.03%)</title><rect x="321.5" y="387.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="324.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleGet (3,420 samples, 3.72%)</title><rect x="322.0" y="451.0" width="44.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="325.0" y="462.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (51 samples, 0.06%)</title><rect x="322.0" y="435.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="325.0" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (51 samples, 0.06%)</title><rect x="322.0" y="419.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="325.0" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (43 samples, 0.05%)</title><rect x="322.0" y="403.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="325.0" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (34 samples, 0.04%)</title><rect x="322.2" y="387.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="325.2" y="398.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.04%)</title><rect x="322.2" y="371.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="325.2" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (29 samples, 0.03%)</title><rect x="322.7" y="435.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="325.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (26 samples, 0.03%)</title><rect x="322.7" y="419.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="325.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (488 samples, 0.53%)</title><rect x="323.1" y="435.0" width="6.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="326.1" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (63 samples, 0.07%)</title><rect x="323.1" y="419.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="326.1" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (63 samples, 0.07%)</title><rect x="323.1" y="403.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="326.1" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (63 samples, 0.07%)</title><rect x="323.1" y="387.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="326.1" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (63 samples, 0.07%)</title><rect x="323.1" y="371.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="326.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (63 samples, 0.07%)</title><rect x="323.1" y="355.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="326.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (47 samples, 0.05%)</title><rect x="323.1" y="339.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="326.1" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (47 samples, 0.05%)</title><rect x="323.1" y="323.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="326.1" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (47 samples, 0.05%)</title><rect x="323.1" y="307.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="326.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (47 samples, 0.05%)</title><rect x="323.1" y="291.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="326.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (47 samples, 0.05%)</title><rect x="323.1" y="275.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="326.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (47 samples, 0.05%)</title><rect x="323.1" y="259.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="326.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (28 samples, 0.03%)</title><rect x="323.3" y="243.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="326.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (28 samples, 0.03%)</title><rect x="323.3" y="227.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="326.3" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (28 samples, 0.03%)</title><rect x="323.3" y="211.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="326.3" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (28 samples, 0.03%)</title><rect x="323.3" y="195.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="326.3" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (28 samples, 0.03%)</title><rect x="323.3" y="179.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="326.3" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (30 samples, 0.03%)</title><rect x="323.9" y="419.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="326.9" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (30 samples, 0.03%)</title><rect x="323.9" y="403.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="326.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$151/1576841624.apply (30 samples, 0.03%)</title><rect x="323.9" y="387.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="326.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$3 (30 samples, 0.03%)</title><rect x="323.9" y="371.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="326.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (377 samples, 0.41%)</title><rect x="324.5" y="419.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="327.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (213 samples, 0.23%)</title><rect x="324.7" y="403.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="327.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (191 samples, 0.21%)</title><rect x="324.9" y="387.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="327.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (89 samples, 0.10%)</title><rect x="325.1" y="371.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="328.1" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (86 samples, 0.09%)</title><rect x="325.1" y="355.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="328.1" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (62 samples, 0.07%)</title><rect x="325.4" y="339.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="328.4" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (62 samples, 0.07%)</title><rect x="325.4" y="323.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="328.4" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (62 samples, 0.07%)</title><rect x="325.4" y="307.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="328.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (44 samples, 0.05%)</title><rect x="325.6" y="291.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="328.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (31 samples, 0.03%)</title><rect x="326.5" y="371.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="329.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (26 samples, 0.03%)</title><rect x="326.5" y="355.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="329.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (26 samples, 0.03%)</title><rect x="326.5" y="339.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="329.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (26 samples, 0.03%)</title><rect x="326.5" y="323.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="329.5" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (26 samples, 0.03%)</title><rect x="326.5" y="307.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="329.5" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (26 samples, 0.03%)</title><rect x="326.5" y="291.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="329.5" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (26 samples, 0.03%)</title><rect x="326.5" y="275.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="329.5" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (26 samples, 0.03%)</title><rect x="326.5" y="259.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="329.5" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (26 samples, 0.03%)</title><rect x="326.5" y="243.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="329.5" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (26 samples, 0.03%)</title><rect x="326.5" y="227.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="329.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (26 samples, 0.03%)</title><rect x="326.5" y="211.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="329.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (20 samples, 0.02%)</title><rect x="326.6" y="195.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="329.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (20 samples, 0.02%)</title><rect x="326.6" y="179.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="329.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (20 samples, 0.02%)</title><rect x="326.6" y="163.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="329.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (41 samples, 0.04%)</title><rect x="326.9" y="371.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="329.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (151 samples, 0.16%)</title><rect x="327.4" y="403.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="330.4" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (79 samples, 0.09%)</title><rect x="327.4" y="387.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="330.4" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (78 samples, 0.08%)</title><rect x="327.4" y="371.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="330.4" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (50 samples, 0.05%)</title><rect x="327.4" y="355.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="330.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (50 samples, 0.05%)</title><rect x="327.4" y="339.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="330.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (50 samples, 0.05%)</title><rect x="327.4" y="323.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="330.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (50 samples, 0.05%)</title><rect x="327.4" y="307.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="330.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (24 samples, 0.03%)</title><rect x="327.4" y="291.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="330.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (24 samples, 0.03%)</title><rect x="327.4" y="275.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="330.4" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (24 samples, 0.03%)</title><rect x="327.4" y="259.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="330.4" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (24 samples, 0.03%)</title><rect x="327.4" y="243.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="330.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (24 samples, 0.03%)</title><rect x="327.4" y="227.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="330.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (24 samples, 0.03%)</title><rect x="327.4" y="211.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="330.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (24 samples, 0.03%)</title><rect x="327.4" y="195.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="330.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (24 samples, 0.03%)</title><rect x="327.4" y="179.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="330.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (24 samples, 0.03%)</title><rect x="327.4" y="163.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="330.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (26 samples, 0.03%)</title><rect x="327.7" y="291.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="330.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (26 samples, 0.03%)</title><rect x="327.7" y="275.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="330.7" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (26 samples, 0.03%)</title><rect x="327.7" y="259.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="330.7" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (26 samples, 0.03%)</title><rect x="327.7" y="243.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="330.7" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (26 samples, 0.03%)</title><rect x="327.7" y="227.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="330.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (60 samples, 0.07%)</title><rect x="328.6" y="387.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="331.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (56 samples, 0.06%)</title><rect x="328.6" y="371.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="331.6" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (56 samples, 0.06%)</title><rect x="328.6" y="355.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="331.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (56 samples, 0.06%)</title><rect x="328.6" y="339.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="331.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (56 samples, 0.06%)</title><rect x="328.6" y="323.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="331.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (56 samples, 0.06%)</title><rect x="328.6" y="307.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="331.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (56 samples, 0.06%)</title><rect x="328.6" y="291.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="331.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (56 samples, 0.06%)</title><rect x="328.6" y="275.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="331.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (26 samples, 0.03%)</title><rect x="328.6" y="259.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="331.6" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (26 samples, 0.03%)</title><rect x="328.6" y="243.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="331.6" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (26 samples, 0.03%)</title><rect x="328.6" y="227.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="331.6" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (26 samples, 0.03%)</title><rect x="328.6" y="211.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="331.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (26 samples, 0.03%)</title><rect x="328.6" y="195.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="331.6" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (26 samples, 0.03%)</title><rect x="328.6" y="179.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="331.6" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (26 samples, 0.03%)</title><rect x="328.6" y="163.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="331.6" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (26 samples, 0.03%)</title><rect x="328.6" y="147.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="331.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (26 samples, 0.03%)</title><rect x="328.6" y="131.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="331.6" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (20 samples, 0.02%)</title><rect x="328.7" y="115.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="331.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (20 samples, 0.02%)</title><rect x="328.7" y="99.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="331.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (20 samples, 0.02%)</title><rect x="328.7" y="83.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="331.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (30 samples, 0.03%)</title><rect x="328.9" y="259.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="331.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (30 samples, 0.03%)</title><rect x="328.9" y="243.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="331.9" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (30 samples, 0.03%)</title><rect x="328.9" y="227.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="331.9" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (30 samples, 0.03%)</title><rect x="328.9" y="211.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="331.9" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (30 samples, 0.03%)</title><rect x="328.9" y="195.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="331.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.proxy (2,850 samples, 3.10%)</title><rect x="329.4" y="435.0" width="36.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="332.4" y="446.0">ru/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.02%)</title><rect x="329.4" y="419.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="332.4" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/373182087.invoke (20 samples, 0.02%)</title><rect x="329.4" y="403.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="332.4" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.02%)</title><rect x="329.4" y="387.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="332.4" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,830 samples, 3.08%)</title><rect x="329.6" y="419.0" width="36.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="332.6" y="430.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,830 samples, 3.08%)</title><rect x="329.6" y="403.0" width="36.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="332.6" y="414.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (2,665 samples, 2.90%)</title><rect x="329.8" y="387.0" width="34.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="332.8" y="398.0">on..</text>
</g>
<g>
<title>byte[] (718 samples, 0.78%)</title><rect x="329.8" y="371.0" width="9.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="332.8" y="382.0"></text>
</g>
<g>
<title>byte[] (1,947 samples, 2.12%)</title><rect x="339.0" y="371.0" width="25.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="342.0" y="382.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (103 samples, 0.11%)</title><rect x="364.0" y="387.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="367.0" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (79 samples, 0.09%)</title><rect x="364.2" y="371.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="367.2" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (79 samples, 0.09%)</title><rect x="364.2" y="355.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="367.2" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (79 samples, 0.09%)</title><rect x="364.2" y="339.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="367.2" y="350.0"></text>
</g>
<g>
<title>char[] (48 samples, 0.05%)</title><rect x="364.2" y="323.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="367.2" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (40 samples, 0.04%)</title><rect x="365.3" y="387.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="368.3" y="398.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (33 samples, 0.04%)</title><rect x="365.4" y="371.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="368.4" y="382.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.04%)</title><rect x="365.4" y="355.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="368.4" y="366.0"></text>
</g>
<g>
<title>[2020-highload-dht-thread-143 tid=17109] (3,467 samples, 3.78%)</title><rect x="366.0" y="563.0" width="44.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="369.0" y="574.0">[202..</text>
</g>
<g>
<title>java/lang/Thread.run (3,467 samples, 3.78%)</title><rect x="366.0" y="547.0" width="44.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="369.0" y="558.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,467 samples, 3.78%)</title><rect x="366.0" y="531.0" width="44.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="369.0" y="542.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,467 samples, 3.78%)</title><rect x="366.0" y="515.0" width="44.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="369.0" y="526.0">java..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.run (3,456 samples, 3.76%)</title><rect x="366.1" y="499.0" width="44.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="369.1" y="510.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$entity$1 (3,456 samples, 3.76%)</title><rect x="366.1" y="483.0" width="44.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="369.1" y="494.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleRequest (3,456 samples, 3.76%)</title><rect x="366.1" y="467.0" width="44.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="369.1" y="478.0">ru/m..</text>
</g>
<g>
<title>java/lang/String.getBytes (32 samples, 0.03%)</title><rect x="366.1" y="451.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="369.1" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (32 samples, 0.03%)</title><rect x="366.1" y="435.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="369.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (32 samples, 0.03%)</title><rect x="366.1" y="419.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="369.1" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (32 samples, 0.03%)</title><rect x="366.1" y="403.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="369.1" y="414.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.03%)</title><rect x="366.1" y="387.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="369.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleGet (3,408 samples, 3.71%)</title><rect x="366.7" y="451.0" width="43.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="369.7" y="462.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (56 samples, 0.06%)</title><rect x="366.7" y="435.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="369.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (56 samples, 0.06%)</title><rect x="366.7" y="419.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="369.7" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (35 samples, 0.04%)</title><rect x="366.7" y="403.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="369.7" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (30 samples, 0.03%)</title><rect x="366.8" y="387.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="369.8" y="398.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.03%)</title><rect x="366.8" y="371.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="369.8" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (21 samples, 0.02%)</title><rect x="367.2" y="403.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="370.2" y="414.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (21 samples, 0.02%)</title><rect x="367.2" y="387.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="370.2" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (32 samples, 0.03%)</title><rect x="367.5" y="435.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="370.5" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (24 samples, 0.03%)</title><rect x="367.6" y="419.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="370.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (532 samples, 0.58%)</title><rect x="367.9" y="435.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="370.9" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (81 samples, 0.09%)</title><rect x="367.9" y="419.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="370.9" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (81 samples, 0.09%)</title><rect x="367.9" y="403.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="370.9" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (81 samples, 0.09%)</title><rect x="367.9" y="387.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="370.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (81 samples, 0.09%)</title><rect x="367.9" y="371.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="370.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (81 samples, 0.09%)</title><rect x="367.9" y="355.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="370.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (61 samples, 0.07%)</title><rect x="367.9" y="339.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="370.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (61 samples, 0.07%)</title><rect x="367.9" y="323.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="370.9" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (61 samples, 0.07%)</title><rect x="367.9" y="307.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="370.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (61 samples, 0.07%)</title><rect x="367.9" y="291.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="370.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (61 samples, 0.07%)</title><rect x="367.9" y="275.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="370.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (61 samples, 0.07%)</title><rect x="367.9" y="259.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="370.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (27 samples, 0.03%)</title><rect x="367.9" y="243.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="370.9" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (27 samples, 0.03%)</title><rect x="367.9" y="227.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="370.9" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (27 samples, 0.03%)</title><rect x="367.9" y="211.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="370.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (27 samples, 0.03%)</title><rect x="367.9" y="195.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="370.9" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (27 samples, 0.03%)</title><rect x="367.9" y="179.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="370.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (27 samples, 0.03%)</title><rect x="367.9" y="163.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="370.9" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (27 samples, 0.03%)</title><rect x="367.9" y="147.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="370.9" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (27 samples, 0.03%)</title><rect x="367.9" y="131.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="370.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (27 samples, 0.03%)</title><rect x="367.9" y="115.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="370.9" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (24 samples, 0.03%)</title><rect x="367.9" y="99.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="370.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (24 samples, 0.03%)</title><rect x="367.9" y="83.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="370.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (24 samples, 0.03%)</title><rect x="367.9" y="67.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="370.9" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (34 samples, 0.04%)</title><rect x="368.2" y="243.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="371.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (34 samples, 0.04%)</title><rect x="368.2" y="227.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="371.2" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (34 samples, 0.04%)</title><rect x="368.2" y="211.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="371.2" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (34 samples, 0.04%)</title><rect x="368.2" y="195.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="371.2" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (34 samples, 0.04%)</title><rect x="368.2" y="179.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="371.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$140/499586134.apply (20 samples, 0.02%)</title><rect x="368.7" y="339.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="371.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (20 samples, 0.02%)</title><rect x="368.7" y="323.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="371.7" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (20 samples, 0.02%)</title><rect x="368.7" y="307.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="371.7" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (20 samples, 0.02%)</title><rect x="368.7" y="291.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="371.7" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (20 samples, 0.02%)</title><rect x="368.7" y="275.0" width="0.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="371.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (37 samples, 0.04%)</title><rect x="368.9" y="419.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="371.9" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (37 samples, 0.04%)</title><rect x="368.9" y="403.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="371.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$151/1576841624.apply (37 samples, 0.04%)</title><rect x="368.9" y="387.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="371.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$3 (37 samples, 0.04%)</title><rect x="368.9" y="371.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="371.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (396 samples, 0.43%)</title><rect x="369.6" y="419.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="372.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (226 samples, 0.25%)</title><rect x="369.8" y="403.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="372.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (200 samples, 0.22%)</title><rect x="370.1" y="387.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="373.1" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (107 samples, 0.12%)</title><rect x="370.2" y="371.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="373.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (106 samples, 0.12%)</title><rect x="370.2" y="355.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="373.2" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (76 samples, 0.08%)</title><rect x="370.6" y="339.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="373.6" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (76 samples, 0.08%)</title><rect x="370.6" y="323.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="373.6" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (76 samples, 0.08%)</title><rect x="370.6" y="307.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="373.6" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (25 samples, 0.03%)</title><rect x="370.6" y="291.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="373.6" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (25 samples, 0.03%)</title><rect x="370.6" y="275.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="373.6" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (25 samples, 0.03%)</title><rect x="370.6" y="259.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="373.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (25 samples, 0.03%)</title><rect x="370.6" y="243.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="373.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (20 samples, 0.02%)</title><rect x="370.6" y="227.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="373.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (20 samples, 0.02%)</title><rect x="370.6" y="211.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="373.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (20 samples, 0.02%)</title><rect x="370.6" y="195.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="373.6" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (51 samples, 0.06%)</title><rect x="370.9" y="291.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="373.9" y="302.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (26 samples, 0.03%)</title><rect x="371.2" y="275.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="374.2" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (26 samples, 0.03%)</title><rect x="371.2" y="259.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="374.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (25 samples, 0.03%)</title><rect x="371.8" y="371.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="374.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (21 samples, 0.02%)</title><rect x="371.9" y="355.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="374.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (21 samples, 0.02%)</title><rect x="371.9" y="339.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="374.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (21 samples, 0.02%)</title><rect x="371.9" y="323.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="374.9" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (21 samples, 0.02%)</title><rect x="371.9" y="307.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="374.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (21 samples, 0.02%)</title><rect x="371.9" y="291.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="374.9" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (21 samples, 0.02%)</title><rect x="371.9" y="275.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="374.9" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (21 samples, 0.02%)</title><rect x="371.9" y="259.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="374.9" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (21 samples, 0.02%)</title><rect x="371.9" y="243.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="374.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (21 samples, 0.02%)</title><rect x="371.9" y="227.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="374.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (21 samples, 0.02%)</title><rect x="371.9" y="211.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="374.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (43 samples, 0.05%)</title><rect x="372.1" y="371.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="375.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (156 samples, 0.17%)</title><rect x="372.7" y="403.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="375.7" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (83 samples, 0.09%)</title><rect x="372.7" y="387.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="375.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (82 samples, 0.09%)</title><rect x="372.7" y="371.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="375.7" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (51 samples, 0.06%)</title><rect x="372.8" y="355.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="375.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (51 samples, 0.06%)</title><rect x="372.8" y="339.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="375.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (51 samples, 0.06%)</title><rect x="372.8" y="323.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="375.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (51 samples, 0.06%)</title><rect x="372.8" y="307.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="375.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (33 samples, 0.04%)</title><rect x="373.1" y="291.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="376.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (33 samples, 0.04%)</title><rect x="373.1" y="275.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="376.1" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (33 samples, 0.04%)</title><rect x="373.1" y="259.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="376.1" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (33 samples, 0.04%)</title><rect x="373.1" y="243.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="376.1" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (33 samples, 0.04%)</title><rect x="373.1" y="227.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="376.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (54 samples, 0.06%)</title><rect x="374.0" y="387.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="377.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (49 samples, 0.05%)</title><rect x="374.1" y="371.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="377.1" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (49 samples, 0.05%)</title><rect x="374.1" y="355.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="377.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (49 samples, 0.05%)</title><rect x="374.1" y="339.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="377.1" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (49 samples, 0.05%)</title><rect x="374.1" y="323.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="377.1" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (49 samples, 0.05%)</title><rect x="374.1" y="307.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="377.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (49 samples, 0.05%)</title><rect x="374.1" y="291.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="377.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (49 samples, 0.05%)</title><rect x="374.1" y="275.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="377.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (23 samples, 0.03%)</title><rect x="374.1" y="259.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="377.1" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (23 samples, 0.03%)</title><rect x="374.1" y="243.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="377.1" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (23 samples, 0.03%)</title><rect x="374.1" y="227.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="377.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (23 samples, 0.03%)</title><rect x="374.1" y="211.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="377.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (23 samples, 0.03%)</title><rect x="374.1" y="195.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="377.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (23 samples, 0.03%)</title><rect x="374.1" y="179.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="377.1" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (23 samples, 0.03%)</title><rect x="374.1" y="163.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="377.1" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (23 samples, 0.03%)</title><rect x="374.1" y="147.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="377.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (23 samples, 0.03%)</title><rect x="374.1" y="131.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="377.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (26 samples, 0.03%)</title><rect x="374.4" y="259.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="377.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (26 samples, 0.03%)</title><rect x="374.4" y="243.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="377.4" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (26 samples, 0.03%)</title><rect x="374.4" y="227.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="377.4" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (26 samples, 0.03%)</title><rect x="374.4" y="211.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="377.4" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (26 samples, 0.03%)</title><rect x="374.4" y="195.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="377.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.proxy (2,783 samples, 3.03%)</title><rect x="374.8" y="435.0" width="35.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="377.8" y="446.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,766 samples, 3.01%)</title><rect x="375.0" y="419.0" width="35.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="378.0" y="430.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,766 samples, 3.01%)</title><rect x="375.0" y="403.0" width="35.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="378.0" y="414.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (2,620 samples, 2.85%)</title><rect x="375.1" y="387.0" width="33.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="378.1" y="398.0">on..</text>
</g>
<g>
<title>byte[] (667 samples, 0.73%)</title><rect x="375.1" y="371.0" width="8.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="378.1" y="382.0"></text>
</g>
<g>
<title>byte[] (1,953 samples, 2.13%)</title><rect x="383.7" y="371.0" width="25.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="386.7" y="382.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (98 samples, 0.11%)</title><rect x="408.8" y="387.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="411.8" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (71 samples, 0.08%)</title><rect x="409.0" y="371.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="412.0" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (71 samples, 0.08%)</title><rect x="409.0" y="355.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="412.0" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (71 samples, 0.08%)</title><rect x="409.0" y="339.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="412.0" y="350.0"></text>
</g>
<g>
<title>char[] (47 samples, 0.05%)</title><rect x="409.0" y="323.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="412.0" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (34 samples, 0.04%)</title><rect x="410.0" y="387.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="413.0" y="398.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (27 samples, 0.03%)</title><rect x="410.1" y="371.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="413.1" y="382.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.03%)</title><rect x="410.1" y="355.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="413.1" y="366.0"></text>
</g>
<g>
<title>[2020-highload-dht-thread-145 tid=17479] (3,426 samples, 3.73%)</title><rect x="410.5" y="563.0" width="44.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="413.5" y="574.0">[202..</text>
</g>
<g>
<title>java/lang/Thread.run (3,426 samples, 3.73%)</title><rect x="410.5" y="547.0" width="44.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="413.5" y="558.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,426 samples, 3.73%)</title><rect x="410.5" y="531.0" width="44.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="413.5" y="542.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,426 samples, 3.73%)</title><rect x="410.5" y="515.0" width="44.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="413.5" y="526.0">java..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.run (3,415 samples, 3.72%)</title><rect x="410.7" y="499.0" width="43.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="413.7" y="510.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$entity$1 (3,415 samples, 3.72%)</title><rect x="410.7" y="483.0" width="43.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="413.7" y="494.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleRequest (3,415 samples, 3.72%)</title><rect x="410.7" y="467.0" width="43.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="413.7" y="478.0">ru/m..</text>
</g>
<g>
<title>java/lang/String.getBytes (27 samples, 0.03%)</title><rect x="410.7" y="451.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="413.7" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (27 samples, 0.03%)</title><rect x="410.7" y="435.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="413.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (27 samples, 0.03%)</title><rect x="410.7" y="419.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="413.7" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (27 samples, 0.03%)</title><rect x="410.7" y="403.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="413.7" y="414.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.03%)</title><rect x="410.7" y="387.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="413.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleGet (3,370 samples, 3.67%)</title><rect x="411.2" y="451.0" width="43.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="414.2" y="462.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (67 samples, 0.07%)</title><rect x="411.2" y="435.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="414.2" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (67 samples, 0.07%)</title><rect x="411.2" y="419.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="414.2" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (52 samples, 0.06%)</title><rect x="411.2" y="403.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="414.2" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (40 samples, 0.04%)</title><rect x="411.4" y="387.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="414.4" y="398.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.04%)</title><rect x="411.4" y="371.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="414.4" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (26 samples, 0.03%)</title><rect x="412.1" y="435.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="415.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (23 samples, 0.03%)</title><rect x="412.1" y="419.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="415.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (481 samples, 0.52%)</title><rect x="412.4" y="435.0" width="6.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="415.4" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (69 samples, 0.08%)</title><rect x="412.4" y="419.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="415.4" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (69 samples, 0.08%)</title><rect x="412.4" y="403.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="415.4" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (69 samples, 0.08%)</title><rect x="412.4" y="387.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="415.4" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (69 samples, 0.08%)</title><rect x="412.4" y="371.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="415.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (69 samples, 0.08%)</title><rect x="412.4" y="355.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="415.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (42 samples, 0.05%)</title><rect x="412.4" y="339.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="415.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (42 samples, 0.05%)</title><rect x="412.4" y="323.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="415.4" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (42 samples, 0.05%)</title><rect x="412.4" y="307.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="415.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (42 samples, 0.05%)</title><rect x="412.4" y="291.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="415.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (42 samples, 0.05%)</title><rect x="412.4" y="275.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="415.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (42 samples, 0.05%)</title><rect x="412.4" y="259.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="415.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (23 samples, 0.03%)</title><rect x="412.7" y="243.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="415.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (23 samples, 0.03%)</title><rect x="412.7" y="227.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="415.7" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (23 samples, 0.03%)</title><rect x="412.7" y="211.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="415.7" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (23 samples, 0.03%)</title><rect x="412.7" y="195.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="415.7" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (23 samples, 0.03%)</title><rect x="412.7" y="179.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="415.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$140/499586134.apply (27 samples, 0.03%)</title><rect x="413.0" y="339.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="416.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (27 samples, 0.03%)</title><rect x="413.0" y="323.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="416.0" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (27 samples, 0.03%)</title><rect x="413.0" y="307.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="416.0" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (27 samples, 0.03%)</title><rect x="413.0" y="291.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="416.0" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (27 samples, 0.03%)</title><rect x="413.0" y="275.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="416.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (31 samples, 0.03%)</title><rect x="413.3" y="419.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="416.3" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (31 samples, 0.03%)</title><rect x="413.3" y="403.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="416.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$151/1576841624.apply (31 samples, 0.03%)</title><rect x="413.3" y="387.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="416.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$3 (31 samples, 0.03%)</title><rect x="413.3" y="371.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="416.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (366 samples, 0.40%)</title><rect x="413.9" y="419.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="416.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (228 samples, 0.25%)</title><rect x="414.0" y="403.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="417.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (200 samples, 0.22%)</title><rect x="414.3" y="387.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="417.3" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (94 samples, 0.10%)</title><rect x="414.4" y="371.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="417.4" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (94 samples, 0.10%)</title><rect x="414.4" y="355.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="417.4" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (65 samples, 0.07%)</title><rect x="414.8" y="339.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="417.8" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (65 samples, 0.07%)</title><rect x="414.8" y="323.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="417.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (65 samples, 0.07%)</title><rect x="414.8" y="307.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="417.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (22 samples, 0.02%)</title><rect x="414.8" y="291.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="417.8" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (22 samples, 0.02%)</title><rect x="414.8" y="275.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="417.8" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (22 samples, 0.02%)</title><rect x="414.8" y="259.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="417.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (22 samples, 0.02%)</title><rect x="414.8" y="243.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="417.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (43 samples, 0.05%)</title><rect x="415.1" y="291.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="418.1" y="302.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (25 samples, 0.03%)</title><rect x="415.3" y="275.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="418.3" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (25 samples, 0.03%)</title><rect x="415.3" y="259.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="418.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (27 samples, 0.03%)</title><rect x="415.9" y="371.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="418.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (25 samples, 0.03%)</title><rect x="415.9" y="355.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="418.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (25 samples, 0.03%)</title><rect x="415.9" y="339.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="418.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (25 samples, 0.03%)</title><rect x="415.9" y="323.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="418.9" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (25 samples, 0.03%)</title><rect x="415.9" y="307.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="418.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (25 samples, 0.03%)</title><rect x="415.9" y="291.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="418.9" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (25 samples, 0.03%)</title><rect x="415.9" y="275.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="418.9" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (25 samples, 0.03%)</title><rect x="415.9" y="259.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="418.9" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (25 samples, 0.03%)</title><rect x="415.9" y="243.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="418.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (25 samples, 0.03%)</title><rect x="415.9" y="227.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="418.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (25 samples, 0.03%)</title><rect x="415.9" y="211.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="418.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (49 samples, 0.05%)</title><rect x="416.3" y="371.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="419.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (135 samples, 0.15%)</title><rect x="416.9" y="403.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="419.9" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (60 samples, 0.07%)</title><rect x="416.9" y="387.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="419.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (59 samples, 0.06%)</title><rect x="416.9" y="371.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="419.9" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (37 samples, 0.04%)</title><rect x="416.9" y="355.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="419.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (37 samples, 0.04%)</title><rect x="416.9" y="339.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="419.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (37 samples, 0.04%)</title><rect x="416.9" y="323.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="419.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (37 samples, 0.04%)</title><rect x="416.9" y="307.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="419.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (57 samples, 0.06%)</title><rect x="417.9" y="387.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="420.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (56 samples, 0.06%)</title><rect x="417.9" y="371.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="420.9" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (56 samples, 0.06%)</title><rect x="417.9" y="355.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="420.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (56 samples, 0.06%)</title><rect x="417.9" y="339.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="420.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (56 samples, 0.06%)</title><rect x="417.9" y="323.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="420.9" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (56 samples, 0.06%)</title><rect x="417.9" y="307.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="420.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (56 samples, 0.06%)</title><rect x="417.9" y="291.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="420.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (56 samples, 0.06%)</title><rect x="417.9" y="275.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="420.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (30 samples, 0.03%)</title><rect x="417.9" y="259.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="420.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (30 samples, 0.03%)</title><rect x="417.9" y="243.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="420.9" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (30 samples, 0.03%)</title><rect x="417.9" y="227.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="420.9" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (30 samples, 0.03%)</title><rect x="417.9" y="211.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="420.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (30 samples, 0.03%)</title><rect x="417.9" y="195.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="420.9" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (30 samples, 0.03%)</title><rect x="417.9" y="179.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="420.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (30 samples, 0.03%)</title><rect x="417.9" y="163.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="420.9" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (30 samples, 0.03%)</title><rect x="417.9" y="147.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="420.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (30 samples, 0.03%)</title><rect x="417.9" y="131.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="420.9" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (22 samples, 0.02%)</title><rect x="418.0" y="115.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="421.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (22 samples, 0.02%)</title><rect x="418.0" y="99.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="421.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (22 samples, 0.02%)</title><rect x="418.0" y="83.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="421.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (26 samples, 0.03%)</title><rect x="418.3" y="259.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="421.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (26 samples, 0.03%)</title><rect x="418.3" y="243.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="421.3" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (26 samples, 0.03%)</title><rect x="418.3" y="227.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="421.3" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (26 samples, 0.03%)</title><rect x="418.3" y="211.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="421.3" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (26 samples, 0.03%)</title><rect x="418.3" y="195.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="421.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.proxy (2,788 samples, 3.04%)</title><rect x="418.7" y="435.0" width="35.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="421.7" y="446.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,771 samples, 3.02%)</title><rect x="418.9" y="419.0" width="35.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="421.9" y="430.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,771 samples, 3.02%)</title><rect x="418.9" y="403.0" width="35.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="421.9" y="414.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (2,624 samples, 2.86%)</title><rect x="419.0" y="387.0" width="33.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="422.0" y="398.0">on..</text>
</g>
<g>
<title>byte[] (728 samples, 0.79%)</title><rect x="419.0" y="371.0" width="9.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="422.0" y="382.0"></text>
</g>
<g>
<title>byte[] (1,896 samples, 2.06%)</title><rect x="428.4" y="371.0" width="24.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="431.4" y="382.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (89 samples, 0.10%)</title><rect x="452.8" y="387.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="455.8" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (59 samples, 0.06%)</title><rect x="452.9" y="371.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="455.9" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (59 samples, 0.06%)</title><rect x="452.9" y="355.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="455.9" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (59 samples, 0.06%)</title><rect x="452.9" y="339.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="455.9" y="350.0"></text>
</g>
<g>
<title>char[] (43 samples, 0.05%)</title><rect x="452.9" y="323.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="455.9" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (33 samples, 0.04%)</title><rect x="453.9" y="387.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="456.9" y="398.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (29 samples, 0.03%)</title><rect x="454.0" y="371.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="457.0" y="382.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.03%)</title><rect x="454.0" y="355.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="457.0" y="366.0"></text>
</g>
<g>
<title>[2020-highload-dht-thread-2 tid=13583] (1,734 samples, 1.89%)</title><rect x="454.5" y="563.0" width="22.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="457.5" y="574.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (1,734 samples, 1.89%)</title><rect x="454.5" y="547.0" width="22.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="457.5" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,734 samples, 1.89%)</title><rect x="454.5" y="531.0" width="22.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="457.5" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,734 samples, 1.89%)</title><rect x="454.5" y="515.0" width="22.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="457.5" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (23 samples, 0.03%)</title><rect x="454.5" y="499.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="457.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (23 samples, 0.03%)</title><rect x="454.5" y="483.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="457.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (23 samples, 0.03%)</title><rect x="454.5" y="467.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="457.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (23 samples, 0.03%)</title><rect x="454.5" y="451.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="457.5" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (23 samples, 0.03%)</title><rect x="454.5" y="435.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="457.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.run (1,711 samples, 1.86%)</title><rect x="454.8" y="499.0" width="22.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="457.8" y="510.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$entity$1 (1,711 samples, 1.86%)</title><rect x="454.8" y="483.0" width="22.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="457.8" y="494.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleRequest (1,711 samples, 1.86%)</title><rect x="454.8" y="467.0" width="22.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="457.8" y="478.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (45 samples, 0.05%)</title><rect x="454.8" y="451.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="457.8" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (45 samples, 0.05%)</title><rect x="454.8" y="435.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="457.8" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (45 samples, 0.05%)</title><rect x="454.8" y="419.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="457.8" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (45 samples, 0.05%)</title><rect x="454.8" y="403.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="457.8" y="414.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.05%)</title><rect x="454.8" y="387.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="457.8" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (24 samples, 0.03%)</title><rect x="455.4" y="451.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="458.4" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (24 samples, 0.03%)</title><rect x="455.4" y="435.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="458.4" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (24 samples, 0.03%)</title><rect x="455.4" y="419.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="458.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleGet (1,642 samples, 1.79%)</title><rect x="455.7" y="451.0" width="21.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="458.7" y="462.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (94 samples, 0.10%)</title><rect x="455.7" y="435.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="458.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (94 samples, 0.10%)</title><rect x="455.7" y="419.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="458.7" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (76 samples, 0.08%)</title><rect x="455.7" y="403.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="458.7" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (59 samples, 0.06%)</title><rect x="455.9" y="387.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="458.9" y="398.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.06%)</title><rect x="455.9" y="371.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="458.9" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (76 samples, 0.08%)</title><rect x="456.9" y="435.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="459.9" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (60 samples, 0.07%)</title><rect x="457.1" y="419.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="460.1" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (22 samples, 0.02%)</title><rect x="457.4" y="403.0" width="0.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="460.4" y="414.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.02%)</title><rect x="457.6" y="403.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="460.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,453 samples, 1.58%)</title><rect x="457.9" y="435.0" width="18.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="460.9" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (190 samples, 0.21%)</title><rect x="457.9" y="419.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="460.9" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (190 samples, 0.21%)</title><rect x="457.9" y="403.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="460.9" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (190 samples, 0.21%)</title><rect x="457.9" y="387.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="460.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (190 samples, 0.21%)</title><rect x="457.9" y="371.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="460.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (190 samples, 0.21%)</title><rect x="457.9" y="355.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="460.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (134 samples, 0.15%)</title><rect x="457.9" y="339.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="460.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (134 samples, 0.15%)</title><rect x="457.9" y="323.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="460.9" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (134 samples, 0.15%)</title><rect x="457.9" y="307.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="460.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (134 samples, 0.15%)</title><rect x="457.9" y="291.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="460.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (134 samples, 0.15%)</title><rect x="457.9" y="275.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="460.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (134 samples, 0.15%)</title><rect x="457.9" y="259.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="460.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (62 samples, 0.07%)</title><rect x="457.9" y="243.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="460.9" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (62 samples, 0.07%)</title><rect x="457.9" y="227.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="460.9" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (62 samples, 0.07%)</title><rect x="457.9" y="211.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="460.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (62 samples, 0.07%)</title><rect x="457.9" y="195.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="460.9" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (62 samples, 0.07%)</title><rect x="457.9" y="179.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="460.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (62 samples, 0.07%)</title><rect x="457.9" y="163.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="460.9" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (62 samples, 0.07%)</title><rect x="457.9" y="147.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="460.9" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (62 samples, 0.07%)</title><rect x="457.9" y="131.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="460.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (62 samples, 0.07%)</title><rect x="457.9" y="115.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="460.9" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (46 samples, 0.05%)</title><rect x="458.1" y="99.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="461.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (46 samples, 0.05%)</title><rect x="458.1" y="83.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="461.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (46 samples, 0.05%)</title><rect x="458.1" y="67.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="461.1" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (32 samples, 0.03%)</title><rect x="458.1" y="51.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="461.1" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (32 samples, 0.03%)</title><rect x="458.1" y="35.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="461.1" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (72 samples, 0.08%)</title><rect x="458.7" y="243.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="461.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (72 samples, 0.08%)</title><rect x="458.7" y="227.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="461.7" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (72 samples, 0.08%)</title><rect x="458.7" y="211.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="461.7" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (72 samples, 0.08%)</title><rect x="458.7" y="195.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="461.7" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (72 samples, 0.08%)</title><rect x="458.7" y="179.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="461.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$140/499586134.apply (56 samples, 0.06%)</title><rect x="459.6" y="339.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="462.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (56 samples, 0.06%)</title><rect x="459.6" y="323.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="462.6" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (56 samples, 0.06%)</title><rect x="459.6" y="307.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="462.6" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (56 samples, 0.06%)</title><rect x="459.6" y="291.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="462.6" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (56 samples, 0.06%)</title><rect x="459.6" y="275.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="462.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (81 samples, 0.09%)</title><rect x="460.4" y="419.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="463.4" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (81 samples, 0.09%)</title><rect x="460.4" y="403.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="463.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$151/1576841624.apply (81 samples, 0.09%)</title><rect x="460.4" y="387.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="463.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$3 (81 samples, 0.09%)</title><rect x="460.4" y="371.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="463.4" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (29 samples, 0.03%)</title><rect x="460.4" y="355.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="463.4" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (29 samples, 0.03%)</title><rect x="460.4" y="339.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="463.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (39 samples, 0.04%)</title><rect x="460.9" y="355.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="463.9" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (39 samples, 0.04%)</title><rect x="460.9" y="339.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="463.9" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (39 samples, 0.04%)</title><rect x="460.9" y="323.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="463.9" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (39 samples, 0.04%)</title><rect x="460.9" y="307.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="463.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (26 samples, 0.03%)</title><rect x="461.4" y="419.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="464.4" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (26 samples, 0.03%)</title><rect x="461.4" y="403.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="464.4" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (26 samples, 0.03%)</title><rect x="461.4" y="387.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="464.4" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (26 samples, 0.03%)</title><rect x="461.4" y="371.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="464.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (45 samples, 0.05%)</title><rect x="461.7" y="419.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="464.7" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (45 samples, 0.05%)</title><rect x="461.7" y="403.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="464.7" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (45 samples, 0.05%)</title><rect x="461.7" y="387.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="464.7" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (45 samples, 0.05%)</title><rect x="461.7" y="371.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="464.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (1,111 samples, 1.21%)</title><rect x="462.3" y="419.0" width="14.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="465.3" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (29 samples, 0.03%)</title><rect x="462.5" y="403.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="465.5" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (29 samples, 0.03%)</title><rect x="462.5" y="387.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="465.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (708 samples, 0.77%)</title><rect x="462.9" y="403.0" width="9.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="465.9" y="414.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (24 samples, 0.03%)</title><rect x="463.0" y="387.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="466.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (24 samples, 0.03%)</title><rect x="463.0" y="371.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="466.0" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (24 samples, 0.03%)</title><rect x="463.0" y="355.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="466.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (652 samples, 0.71%)</title><rect x="463.7" y="387.0" width="8.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="466.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (23 samples, 0.03%)</title><rect x="463.7" y="371.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="466.7" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (23 samples, 0.03%)</title><rect x="463.7" y="355.0" width="0.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="466.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (256 samples, 0.28%)</title><rect x="463.9" y="371.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="466.9" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (251 samples, 0.27%)</title><rect x="464.0" y="355.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="467.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (22 samples, 0.02%)</title><rect x="464.2" y="339.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="467.2" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (22 samples, 0.02%)</title><rect x="464.2" y="323.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="467.2" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (181 samples, 0.20%)</title><rect x="464.9" y="339.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="467.9" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (181 samples, 0.20%)</title><rect x="464.9" y="323.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="467.9" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (181 samples, 0.20%)</title><rect x="464.9" y="307.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="467.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (55 samples, 0.06%)</title><rect x="464.9" y="291.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="467.9" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (55 samples, 0.06%)</title><rect x="464.9" y="275.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="467.9" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (55 samples, 0.06%)</title><rect x="464.9" y="259.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="467.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (55 samples, 0.06%)</title><rect x="464.9" y="243.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="467.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (40 samples, 0.04%)</title><rect x="465.1" y="227.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="468.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (40 samples, 0.04%)</title><rect x="465.1" y="211.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="468.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (40 samples, 0.04%)</title><rect x="465.1" y="195.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="468.1" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (32 samples, 0.03%)</title><rect x="465.1" y="179.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="468.1" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (32 samples, 0.03%)</title><rect x="465.1" y="163.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="468.1" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (126 samples, 0.14%)</title><rect x="465.6" y="291.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="468.6" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (34 samples, 0.04%)</title><rect x="465.6" y="275.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="468.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.02%)</title><rect x="466.1" y="275.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="469.1" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.02%)</title><rect x="466.1" y="259.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="469.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (57 samples, 0.06%)</title><rect x="466.5" y="275.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="469.5" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (57 samples, 0.06%)</title><rect x="466.5" y="259.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="469.5" y="270.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (20 samples, 0.02%)</title><rect x="467.5" y="371.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="470.5" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (20 samples, 0.02%)</title><rect x="467.5" y="355.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="470.5" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$ValueIterator (20 samples, 0.02%)</title><rect x="467.5" y="339.0" width="0.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="470.5" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (29 samples, 0.03%)</title><rect x="468.2" y="371.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="471.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (85 samples, 0.09%)</title><rect x="468.6" y="371.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="471.6" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (21 samples, 0.02%)</title><rect x="468.6" y="355.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="471.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (64 samples, 0.07%)</title><rect x="468.8" y="355.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="471.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (64 samples, 0.07%)</title><rect x="468.8" y="339.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="471.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (64 samples, 0.07%)</title><rect x="468.8" y="323.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="471.8" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (64 samples, 0.07%)</title><rect x="468.8" y="307.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="471.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (64 samples, 0.07%)</title><rect x="468.8" y="291.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="471.8" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (64 samples, 0.07%)</title><rect x="468.8" y="275.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="471.8" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (64 samples, 0.07%)</title><rect x="468.8" y="259.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="471.8" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (64 samples, 0.07%)</title><rect x="468.8" y="243.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="471.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (64 samples, 0.07%)</title><rect x="468.8" y="227.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="471.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (64 samples, 0.07%)</title><rect x="468.8" y="211.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="471.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (49 samples, 0.05%)</title><rect x="469.0" y="195.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="472.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (49 samples, 0.05%)</title><rect x="469.0" y="179.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="472.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (49 samples, 0.05%)</title><rect x="469.0" y="163.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="472.0" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (36 samples, 0.04%)</title><rect x="469.0" y="147.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="472.0" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (36 samples, 0.04%)</title><rect x="469.0" y="131.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="472.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (184 samples, 0.20%)</title><rect x="469.7" y="371.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="472.7" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (52 samples, 0.06%)</title><rect x="469.7" y="355.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="472.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (22 samples, 0.02%)</title><rect x="469.7" y="339.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="472.7" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (22 samples, 0.02%)</title><rect x="469.7" y="323.0" width="0.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="472.7" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (30 samples, 0.03%)</title><rect x="469.9" y="339.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="472.9" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (30 samples, 0.03%)</title><rect x="469.9" y="323.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="472.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (33 samples, 0.04%)</title><rect x="470.4" y="355.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="473.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (33 samples, 0.04%)</title><rect x="470.4" y="339.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="473.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (33 samples, 0.04%)</title><rect x="470.4" y="323.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="473.4" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (33 samples, 0.04%)</title><rect x="470.4" y="307.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="473.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (52 samples, 0.06%)</title><rect x="470.8" y="355.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="473.8" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (46 samples, 0.05%)</title><rect x="470.9" y="339.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="473.9" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (34 samples, 0.04%)</title><rect x="471.1" y="323.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="474.1" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (34 samples, 0.04%)</title><rect x="471.1" y="307.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="474.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (41 samples, 0.04%)</title><rect x="471.5" y="355.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="474.5" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (41 samples, 0.04%)</title><rect x="471.5" y="339.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="474.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (354 samples, 0.39%)</title><rect x="472.0" y="403.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="475.0" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (196 samples, 0.21%)</title><rect x="472.0" y="387.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="475.0" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (182 samples, 0.20%)</title><rect x="472.2" y="371.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="475.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (124 samples, 0.14%)</title><rect x="472.4" y="355.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="475.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (124 samples, 0.14%)</title><rect x="472.4" y="339.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="475.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (124 samples, 0.14%)</title><rect x="472.4" y="323.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="475.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (124 samples, 0.14%)</title><rect x="472.4" y="307.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="475.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (63 samples, 0.07%)</title><rect x="472.4" y="291.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="475.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (63 samples, 0.07%)</title><rect x="472.4" y="275.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="475.4" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (63 samples, 0.07%)</title><rect x="472.4" y="259.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="475.4" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (63 samples, 0.07%)</title><rect x="472.4" y="243.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="475.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (63 samples, 0.07%)</title><rect x="472.4" y="227.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="475.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (63 samples, 0.07%)</title><rect x="472.4" y="211.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="475.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (63 samples, 0.07%)</title><rect x="472.4" y="195.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="475.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (63 samples, 0.07%)</title><rect x="472.4" y="179.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="475.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (63 samples, 0.07%)</title><rect x="472.4" y="163.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="475.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (20 samples, 0.02%)</title><rect x="472.4" y="147.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="475.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (20 samples, 0.02%)</title><rect x="472.4" y="131.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="475.4" y="142.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (20 samples, 0.02%)</title><rect x="472.4" y="115.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="475.4" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (43 samples, 0.05%)</title><rect x="472.7" y="147.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="475.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (43 samples, 0.05%)</title><rect x="472.7" y="131.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="475.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (43 samples, 0.05%)</title><rect x="472.7" y="115.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="475.7" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (23 samples, 0.03%)</title><rect x="472.7" y="99.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="475.7" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (23 samples, 0.03%)</title><rect x="472.7" y="83.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="475.7" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (20 samples, 0.02%)</title><rect x="473.0" y="99.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="476.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (61 samples, 0.07%)</title><rect x="473.2" y="291.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="476.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (61 samples, 0.07%)</title><rect x="473.2" y="275.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="476.2" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (61 samples, 0.07%)</title><rect x="473.2" y="259.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="476.2" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (61 samples, 0.07%)</title><rect x="473.2" y="243.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="476.2" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (61 samples, 0.07%)</title><rect x="473.2" y="227.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="476.2" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (22 samples, 0.02%)</title><rect x="474.7" y="387.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="477.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (124 samples, 0.14%)</title><rect x="475.0" y="387.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="478.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (113 samples, 0.12%)</title><rect x="475.1" y="371.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="478.1" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (113 samples, 0.12%)</title><rect x="475.1" y="355.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="478.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (113 samples, 0.12%)</title><rect x="475.1" y="339.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="478.1" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (113 samples, 0.12%)</title><rect x="475.1" y="323.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="478.1" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (113 samples, 0.12%)</title><rect x="475.1" y="307.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="478.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (113 samples, 0.12%)</title><rect x="475.1" y="291.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="478.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (113 samples, 0.12%)</title><rect x="475.1" y="275.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="478.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (59 samples, 0.06%)</title><rect x="475.1" y="259.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="478.1" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (59 samples, 0.06%)</title><rect x="475.1" y="243.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="478.1" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (59 samples, 0.06%)</title><rect x="475.1" y="227.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="478.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (59 samples, 0.06%)</title><rect x="475.1" y="211.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="478.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (59 samples, 0.06%)</title><rect x="475.1" y="195.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="478.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (59 samples, 0.06%)</title><rect x="475.1" y="179.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="478.1" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (59 samples, 0.06%)</title><rect x="475.1" y="163.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="478.1" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (59 samples, 0.06%)</title><rect x="475.1" y="147.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="478.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (59 samples, 0.06%)</title><rect x="475.1" y="131.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="478.1" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (45 samples, 0.05%)</title><rect x="475.3" y="115.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="478.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (45 samples, 0.05%)</title><rect x="475.3" y="99.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="478.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (45 samples, 0.05%)</title><rect x="475.3" y="83.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="478.3" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (30 samples, 0.03%)</title><rect x="475.3" y="67.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="478.3" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (30 samples, 0.03%)</title><rect x="475.3" y="51.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="478.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (54 samples, 0.06%)</title><rect x="475.9" y="259.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="478.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (54 samples, 0.06%)</title><rect x="475.9" y="243.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="478.9" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (54 samples, 0.06%)</title><rect x="475.9" y="227.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="478.9" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (54 samples, 0.06%)</title><rect x="475.9" y="211.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="478.9" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (54 samples, 0.06%)</title><rect x="475.9" y="195.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="478.9" y="206.0"></text>
</g>
<g>
<title>[2020-highload-dht-thread-2 tid=13585] (1,751 samples, 1.91%)</title><rect x="476.8" y="563.0" width="22.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="479.8" y="574.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (1,751 samples, 1.91%)</title><rect x="476.8" y="547.0" width="22.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="479.8" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,751 samples, 1.91%)</title><rect x="476.8" y="531.0" width="22.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="479.8" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,751 samples, 1.91%)</title><rect x="476.8" y="515.0" width="22.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="479.8" y="526.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.run (1,737 samples, 1.89%)</title><rect x="477.0" y="499.0" width="22.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="480.0" y="510.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$entity$1 (1,737 samples, 1.89%)</title><rect x="477.0" y="483.0" width="22.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="480.0" y="494.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleRequest (1,737 samples, 1.89%)</title><rect x="477.0" y="467.0" width="22.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="480.0" y="478.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (43 samples, 0.05%)</title><rect x="477.0" y="451.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="480.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (43 samples, 0.05%)</title><rect x="477.0" y="435.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="480.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (43 samples, 0.05%)</title><rect x="477.0" y="419.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="480.0" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (43 samples, 0.05%)</title><rect x="477.0" y="403.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="480.0" y="414.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.05%)</title><rect x="477.0" y="387.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="480.0" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (36 samples, 0.04%)</title><rect x="477.6" y="451.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="480.6" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (36 samples, 0.04%)</title><rect x="477.6" y="435.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="480.6" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (36 samples, 0.04%)</title><rect x="477.6" y="419.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="480.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleGet (1,658 samples, 1.81%)</title><rect x="478.0" y="451.0" width="21.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="481.0" y="462.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (94 samples, 0.10%)</title><rect x="478.0" y="435.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="481.0" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (94 samples, 0.10%)</title><rect x="478.0" y="419.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="481.0" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (64 samples, 0.07%)</title><rect x="478.0" y="403.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="481.0" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (58 samples, 0.06%)</title><rect x="478.1" y="387.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="481.1" y="398.0"></text>
</g>
<g>
<title>byte[] (58 samples, 0.06%)</title><rect x="478.1" y="371.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="481.1" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (30 samples, 0.03%)</title><rect x="478.8" y="403.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="481.8" y="414.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (30 samples, 0.03%)</title><rect x="478.8" y="387.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="481.8" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (87 samples, 0.09%)</title><rect x="479.2" y="435.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="482.2" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (76 samples, 0.08%)</title><rect x="479.4" y="419.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="482.4" y="430.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.03%)</title><rect x="479.4" y="403.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="482.4" y="414.0"></text>
</g>
<g>
<title>java.lang.String[] (25 samples, 0.03%)</title><rect x="479.7" y="403.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="482.7" y="414.0"></text>
</g>
<g>
<title>java.lang.String (22 samples, 0.02%)</title><rect x="480.1" y="403.0" width="0.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="483.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,458 samples, 1.59%)</title><rect x="480.3" y="435.0" width="18.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="483.3" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (188 samples, 0.20%)</title><rect x="480.3" y="419.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="483.3" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (188 samples, 0.20%)</title><rect x="480.3" y="403.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="483.3" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (188 samples, 0.20%)</title><rect x="480.3" y="387.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="483.3" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (188 samples, 0.20%)</title><rect x="480.3" y="371.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="483.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (188 samples, 0.20%)</title><rect x="480.3" y="355.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="483.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (127 samples, 0.14%)</title><rect x="480.3" y="339.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="483.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (127 samples, 0.14%)</title><rect x="480.3" y="323.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="483.3" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (127 samples, 0.14%)</title><rect x="480.3" y="307.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="483.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (127 samples, 0.14%)</title><rect x="480.3" y="291.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="483.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (127 samples, 0.14%)</title><rect x="480.3" y="275.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="483.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (127 samples, 0.14%)</title><rect x="480.3" y="259.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="483.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (61 samples, 0.07%)</title><rect x="480.3" y="243.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="483.3" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (61 samples, 0.07%)</title><rect x="480.3" y="227.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="483.3" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (61 samples, 0.07%)</title><rect x="480.3" y="211.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="483.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (61 samples, 0.07%)</title><rect x="480.3" y="195.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="483.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (61 samples, 0.07%)</title><rect x="480.3" y="179.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="483.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (61 samples, 0.07%)</title><rect x="480.3" y="163.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="483.3" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (61 samples, 0.07%)</title><rect x="480.3" y="147.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="483.3" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (61 samples, 0.07%)</title><rect x="480.3" y="131.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="483.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (61 samples, 0.07%)</title><rect x="480.3" y="115.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="483.3" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (43 samples, 0.05%)</title><rect x="480.6" y="99.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="483.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (43 samples, 0.05%)</title><rect x="480.6" y="83.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="483.6" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (43 samples, 0.05%)</title><rect x="480.6" y="67.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="483.6" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (31 samples, 0.03%)</title><rect x="480.6" y="51.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="483.6" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (31 samples, 0.03%)</title><rect x="480.6" y="35.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="483.6" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (66 samples, 0.07%)</title><rect x="481.1" y="243.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="484.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (66 samples, 0.07%)</title><rect x="481.1" y="227.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="484.1" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (66 samples, 0.07%)</title><rect x="481.1" y="211.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="484.1" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (66 samples, 0.07%)</title><rect x="481.1" y="195.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="484.1" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (66 samples, 0.07%)</title><rect x="481.1" y="179.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="484.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$140/499586134.apply (61 samples, 0.07%)</title><rect x="482.0" y="339.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="485.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (61 samples, 0.07%)</title><rect x="482.0" y="323.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="485.0" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (61 samples, 0.07%)</title><rect x="482.0" y="307.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="485.0" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (61 samples, 0.07%)</title><rect x="482.0" y="291.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="485.0" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (61 samples, 0.07%)</title><rect x="482.0" y="275.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="485.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (79 samples, 0.09%)</title><rect x="482.8" y="419.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="485.8" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (79 samples, 0.09%)</title><rect x="482.8" y="403.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="485.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$151/1576841624.apply (79 samples, 0.09%)</title><rect x="482.8" y="387.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="485.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$3 (79 samples, 0.09%)</title><rect x="482.8" y="371.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="485.8" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (37 samples, 0.04%)</title><rect x="482.8" y="355.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="485.8" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (37 samples, 0.04%)</title><rect x="482.8" y="339.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="485.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (30 samples, 0.03%)</title><rect x="483.4" y="355.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="486.4" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (30 samples, 0.03%)</title><rect x="483.4" y="339.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="486.4" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (30 samples, 0.03%)</title><rect x="483.4" y="323.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="486.4" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (30 samples, 0.03%)</title><rect x="483.4" y="307.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="486.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (27 samples, 0.03%)</title><rect x="483.8" y="419.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="486.8" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (27 samples, 0.03%)</title><rect x="483.8" y="403.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="486.8" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (27 samples, 0.03%)</title><rect x="483.8" y="387.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="486.8" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (27 samples, 0.03%)</title><rect x="483.8" y="371.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="486.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (27 samples, 0.03%)</title><rect x="484.1" y="419.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="487.1" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (27 samples, 0.03%)</title><rect x="484.1" y="403.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="487.1" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (27 samples, 0.03%)</title><rect x="484.1" y="387.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="487.1" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (27 samples, 0.03%)</title><rect x="484.1" y="371.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="487.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (1,137 samples, 1.24%)</title><rect x="484.5" y="419.0" width="14.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="487.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (21 samples, 0.02%)</title><rect x="484.5" y="403.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="487.5" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (21 samples, 0.02%)</title><rect x="484.5" y="387.0" width="0.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="487.5" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (25 samples, 0.03%)</title><rect x="484.7" y="403.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="487.7" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (25 samples, 0.03%)</title><rect x="484.7" y="387.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="487.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (705 samples, 0.77%)</title><rect x="485.1" y="403.0" width="9.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="488.1" y="414.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (23 samples, 0.03%)</title><rect x="485.2" y="387.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="488.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (23 samples, 0.03%)</title><rect x="485.2" y="371.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="488.2" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (23 samples, 0.03%)</title><rect x="485.2" y="355.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="488.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (639 samples, 0.70%)</title><rect x="485.9" y="387.0" width="8.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="488.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (240 samples, 0.26%)</title><rect x="486.2" y="371.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="489.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (224 samples, 0.24%)</title><rect x="486.4" y="355.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="489.4" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (162 samples, 0.18%)</title><rect x="487.2" y="339.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="490.2" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (162 samples, 0.18%)</title><rect x="487.2" y="323.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="490.2" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (162 samples, 0.18%)</title><rect x="487.2" y="307.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="490.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (49 samples, 0.05%)</title><rect x="487.2" y="291.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="490.2" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (49 samples, 0.05%)</title><rect x="487.2" y="275.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="490.2" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (49 samples, 0.05%)</title><rect x="487.2" y="259.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="490.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (49 samples, 0.05%)</title><rect x="487.2" y="243.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="490.2" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (36 samples, 0.04%)</title><rect x="487.3" y="227.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="490.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (36 samples, 0.04%)</title><rect x="487.3" y="211.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="490.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (36 samples, 0.04%)</title><rect x="487.3" y="195.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="490.3" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (28 samples, 0.03%)</title><rect x="487.3" y="179.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="490.3" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (28 samples, 0.03%)</title><rect x="487.3" y="163.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="490.3" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (113 samples, 0.12%)</title><rect x="487.8" y="291.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="490.8" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (30 samples, 0.03%)</title><rect x="487.8" y="275.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="490.8" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.02%)</title><rect x="488.2" y="275.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="491.2" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.02%)</title><rect x="488.2" y="259.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="491.2" y="270.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (45 samples, 0.05%)</title><rect x="488.7" y="275.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="491.7" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (45 samples, 0.05%)</title><rect x="488.7" y="259.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="491.7" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (26 samples, 0.03%)</title><rect x="490.0" y="371.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="493.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (81 samples, 0.09%)</title><rect x="490.4" y="371.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="493.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (63 samples, 0.07%)</title><rect x="490.6" y="355.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="493.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (63 samples, 0.07%)</title><rect x="490.6" y="339.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="493.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (63 samples, 0.07%)</title><rect x="490.6" y="323.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="493.6" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (63 samples, 0.07%)</title><rect x="490.6" y="307.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="493.6" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (63 samples, 0.07%)</title><rect x="490.6" y="291.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="493.6" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (63 samples, 0.07%)</title><rect x="490.6" y="275.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="493.6" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (63 samples, 0.07%)</title><rect x="490.6" y="259.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="493.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (63 samples, 0.07%)</title><rect x="490.6" y="243.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="493.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (63 samples, 0.07%)</title><rect x="490.6" y="227.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="493.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (63 samples, 0.07%)</title><rect x="490.6" y="211.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="493.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (46 samples, 0.05%)</title><rect x="490.9" y="195.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="493.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (46 samples, 0.05%)</title><rect x="490.9" y="179.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="493.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (46 samples, 0.05%)</title><rect x="490.9" y="163.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="493.9" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (31 samples, 0.03%)</title><rect x="490.9" y="147.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="493.9" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (31 samples, 0.03%)</title><rect x="490.9" y="131.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="493.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (209 samples, 0.23%)</title><rect x="491.5" y="371.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="494.5" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (53 samples, 0.06%)</title><rect x="491.5" y="355.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="494.5" y="366.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (39 samples, 0.04%)</title><rect x="491.6" y="339.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="494.6" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (39 samples, 0.04%)</title><rect x="491.6" y="323.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="494.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (39 samples, 0.04%)</title><rect x="492.4" y="355.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="495.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (39 samples, 0.04%)</title><rect x="492.4" y="339.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="495.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (39 samples, 0.04%)</title><rect x="492.4" y="323.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="495.4" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (39 samples, 0.04%)</title><rect x="492.4" y="307.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="495.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (56 samples, 0.06%)</title><rect x="492.9" y="355.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="495.9" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (39 samples, 0.04%)</title><rect x="493.1" y="339.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="496.1" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (32 samples, 0.03%)</title><rect x="493.2" y="323.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="496.2" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (32 samples, 0.03%)</title><rect x="493.2" y="307.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="496.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (43 samples, 0.05%)</title><rect x="493.6" y="355.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="496.6" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (43 samples, 0.05%)</title><rect x="493.6" y="339.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="496.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (384 samples, 0.42%)</title><rect x="494.1" y="403.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="497.1" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (213 samples, 0.23%)</title><rect x="494.1" y="387.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="497.1" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (200 samples, 0.22%)</title><rect x="494.3" y="371.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="497.3" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (129 samples, 0.14%)</title><rect x="494.5" y="355.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="497.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (129 samples, 0.14%)</title><rect x="494.5" y="339.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="497.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (129 samples, 0.14%)</title><rect x="494.5" y="323.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="497.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (129 samples, 0.14%)</title><rect x="494.5" y="307.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="497.5" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (64 samples, 0.07%)</title><rect x="494.5" y="291.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="497.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (64 samples, 0.07%)</title><rect x="494.5" y="275.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="497.5" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (64 samples, 0.07%)</title><rect x="494.5" y="259.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="497.5" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (64 samples, 0.07%)</title><rect x="494.5" y="243.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="497.5" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (64 samples, 0.07%)</title><rect x="494.5" y="227.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="497.5" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (64 samples, 0.07%)</title><rect x="494.5" y="211.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="497.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (64 samples, 0.07%)</title><rect x="494.5" y="195.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="497.5" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (64 samples, 0.07%)</title><rect x="494.5" y="179.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="497.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (64 samples, 0.07%)</title><rect x="494.5" y="163.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="497.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (20 samples, 0.02%)</title><rect x="494.5" y="147.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="497.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (20 samples, 0.02%)</title><rect x="494.5" y="131.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="497.5" y="142.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (20 samples, 0.02%)</title><rect x="494.5" y="115.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="497.5" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (44 samples, 0.05%)</title><rect x="494.8" y="147.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="497.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (44 samples, 0.05%)</title><rect x="494.8" y="131.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="497.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (44 samples, 0.05%)</title><rect x="494.8" y="115.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="497.8" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (30 samples, 0.03%)</title><rect x="494.8" y="99.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="497.8" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (30 samples, 0.03%)</title><rect x="494.8" y="83.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="497.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (65 samples, 0.07%)</title><rect x="495.4" y="291.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="498.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (65 samples, 0.07%)</title><rect x="495.4" y="275.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="498.4" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (65 samples, 0.07%)</title><rect x="495.4" y="259.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="498.4" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (65 samples, 0.07%)</title><rect x="495.4" y="243.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="498.4" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (65 samples, 0.07%)</title><rect x="495.4" y="227.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="498.4" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (23 samples, 0.03%)</title><rect x="497.1" y="387.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="500.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (134 samples, 0.15%)</title><rect x="497.4" y="387.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="500.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (122 samples, 0.13%)</title><rect x="497.5" y="371.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="500.5" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (122 samples, 0.13%)</title><rect x="497.5" y="355.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="500.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (122 samples, 0.13%)</title><rect x="497.5" y="339.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="500.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (122 samples, 0.13%)</title><rect x="497.5" y="323.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="500.5" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (122 samples, 0.13%)</title><rect x="497.5" y="307.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="500.5" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (122 samples, 0.13%)</title><rect x="497.5" y="291.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="500.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (122 samples, 0.13%)</title><rect x="497.5" y="275.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="500.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (59 samples, 0.06%)</title><rect x="497.5" y="259.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="500.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (59 samples, 0.06%)</title><rect x="497.5" y="243.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="500.5" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (59 samples, 0.06%)</title><rect x="497.5" y="227.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="500.5" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (59 samples, 0.06%)</title><rect x="497.5" y="211.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="500.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (59 samples, 0.06%)</title><rect x="497.5" y="195.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="500.5" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (59 samples, 0.06%)</title><rect x="497.5" y="179.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="500.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (59 samples, 0.06%)</title><rect x="497.5" y="163.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="500.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (59 samples, 0.06%)</title><rect x="497.5" y="147.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="500.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (59 samples, 0.06%)</title><rect x="497.5" y="131.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="500.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (20 samples, 0.02%)</title><rect x="497.5" y="115.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="500.5" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (20 samples, 0.02%)</title><rect x="497.5" y="99.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="500.5" y="110.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (20 samples, 0.02%)</title><rect x="497.5" y="83.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="500.5" y="94.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (39 samples, 0.04%)</title><rect x="497.8" y="115.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="500.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (39 samples, 0.04%)</title><rect x="497.8" y="99.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="500.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (39 samples, 0.04%)</title><rect x="497.8" y="83.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="500.8" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (31 samples, 0.03%)</title><rect x="497.8" y="67.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="500.8" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (31 samples, 0.03%)</title><rect x="497.8" y="51.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="500.8" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (63 samples, 0.07%)</title><rect x="498.3" y="259.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="501.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (63 samples, 0.07%)</title><rect x="498.3" y="243.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="501.3" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (63 samples, 0.07%)</title><rect x="498.3" y="227.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="501.3" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (63 samples, 0.07%)</title><rect x="498.3" y="211.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="501.3" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (63 samples, 0.07%)</title><rect x="498.3" y="195.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="501.3" y="206.0"></text>
</g>
<g>
<title>[2020-highload-dht-thread-3 tid=13581] (1,749 samples, 1.90%)</title><rect x="499.3" y="563.0" width="22.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="502.3" y="574.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (1,749 samples, 1.90%)</title><rect x="499.3" y="547.0" width="22.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="502.3" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,749 samples, 1.90%)</title><rect x="499.3" y="531.0" width="22.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="502.3" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,749 samples, 1.90%)</title><rect x="499.3" y="515.0" width="22.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="502.3" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (28 samples, 0.03%)</title><rect x="499.3" y="499.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="502.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (28 samples, 0.03%)</title><rect x="499.3" y="483.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="502.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (28 samples, 0.03%)</title><rect x="499.3" y="467.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="502.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (28 samples, 0.03%)</title><rect x="499.3" y="451.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="502.3" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (28 samples, 0.03%)</title><rect x="499.3" y="435.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="502.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.run (1,721 samples, 1.87%)</title><rect x="499.7" y="499.0" width="22.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="502.7" y="510.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$entity$1 (1,721 samples, 1.87%)</title><rect x="499.7" y="483.0" width="22.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="502.7" y="494.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleRequest (1,721 samples, 1.87%)</title><rect x="499.7" y="467.0" width="22.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="502.7" y="478.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (43 samples, 0.05%)</title><rect x="499.7" y="451.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="502.7" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (43 samples, 0.05%)</title><rect x="499.7" y="435.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="502.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (43 samples, 0.05%)</title><rect x="499.7" y="419.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="502.7" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (43 samples, 0.05%)</title><rect x="499.7" y="403.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="502.7" y="414.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.05%)</title><rect x="499.7" y="387.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="502.7" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (26 samples, 0.03%)</title><rect x="500.2" y="451.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="503.2" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (26 samples, 0.03%)</title><rect x="500.2" y="435.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="503.2" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (26 samples, 0.03%)</title><rect x="500.2" y="419.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="503.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleGet (1,652 samples, 1.80%)</title><rect x="500.6" y="451.0" width="21.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="503.6" y="462.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (87 samples, 0.09%)</title><rect x="500.6" y="435.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="503.6" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (87 samples, 0.09%)</title><rect x="500.6" y="419.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="503.6" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (65 samples, 0.07%)</title><rect x="500.6" y="403.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="503.6" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (53 samples, 0.06%)</title><rect x="500.7" y="387.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="503.7" y="398.0"></text>
</g>
<g>
<title>byte[] (53 samples, 0.06%)</title><rect x="500.7" y="371.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="503.7" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (22 samples, 0.02%)</title><rect x="501.4" y="403.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="504.4" y="414.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (22 samples, 0.02%)</title><rect x="501.4" y="387.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="504.4" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (79 samples, 0.09%)</title><rect x="501.7" y="435.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="504.7" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (24 samples, 0.03%)</title><rect x="501.7" y="419.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="504.7" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (55 samples, 0.06%)</title><rect x="502.0" y="419.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="505.0" y="430.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.03%)</title><rect x="502.0" y="403.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="505.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,454 samples, 1.58%)</title><rect x="502.7" y="435.0" width="18.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="505.7" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (186 samples, 0.20%)</title><rect x="502.7" y="419.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="505.7" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (186 samples, 0.20%)</title><rect x="502.7" y="403.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="505.7" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (186 samples, 0.20%)</title><rect x="502.7" y="387.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="505.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (186 samples, 0.20%)</title><rect x="502.7" y="371.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="505.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (186 samples, 0.20%)</title><rect x="502.7" y="355.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="505.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (118 samples, 0.13%)</title><rect x="502.7" y="339.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="505.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (118 samples, 0.13%)</title><rect x="502.7" y="323.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="505.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (118 samples, 0.13%)</title><rect x="502.7" y="307.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="505.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (118 samples, 0.13%)</title><rect x="502.7" y="291.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="505.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (118 samples, 0.13%)</title><rect x="502.7" y="275.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="505.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (118 samples, 0.13%)</title><rect x="502.7" y="259.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="505.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (59 samples, 0.06%)</title><rect x="502.7" y="243.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="505.7" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (59 samples, 0.06%)</title><rect x="502.7" y="227.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="505.7" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (59 samples, 0.06%)</title><rect x="502.7" y="211.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="505.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (59 samples, 0.06%)</title><rect x="502.7" y="195.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="505.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (59 samples, 0.06%)</title><rect x="502.7" y="179.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="505.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (59 samples, 0.06%)</title><rect x="502.7" y="163.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="505.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (59 samples, 0.06%)</title><rect x="502.7" y="147.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="505.7" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (59 samples, 0.06%)</title><rect x="502.7" y="131.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="505.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (59 samples, 0.06%)</title><rect x="502.7" y="115.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="505.7" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (41 samples, 0.04%)</title><rect x="502.9" y="99.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="505.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (41 samples, 0.04%)</title><rect x="502.9" y="83.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="505.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (41 samples, 0.04%)</title><rect x="502.9" y="67.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="505.9" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (24 samples, 0.03%)</title><rect x="502.9" y="51.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="505.9" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (24 samples, 0.03%)</title><rect x="502.9" y="35.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="505.9" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (59 samples, 0.06%)</title><rect x="503.5" y="243.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="506.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (59 samples, 0.06%)</title><rect x="503.5" y="227.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="506.5" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (59 samples, 0.06%)</title><rect x="503.5" y="211.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="506.5" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (59 samples, 0.06%)</title><rect x="503.5" y="195.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="506.5" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (59 samples, 0.06%)</title><rect x="503.5" y="179.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="506.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$140/499586134.apply (68 samples, 0.07%)</title><rect x="504.2" y="339.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="507.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (68 samples, 0.07%)</title><rect x="504.2" y="323.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="507.2" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (68 samples, 0.07%)</title><rect x="504.2" y="307.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="507.2" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (68 samples, 0.07%)</title><rect x="504.2" y="291.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="507.2" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (68 samples, 0.07%)</title><rect x="504.2" y="275.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="507.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (78 samples, 0.08%)</title><rect x="505.1" y="419.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="508.1" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (78 samples, 0.08%)</title><rect x="505.1" y="403.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="508.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$151/1576841624.apply (78 samples, 0.08%)</title><rect x="505.1" y="387.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="508.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$3 (78 samples, 0.08%)</title><rect x="505.1" y="371.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="508.1" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (33 samples, 0.04%)</title><rect x="505.1" y="355.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="508.1" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (33 samples, 0.04%)</title><rect x="505.1" y="339.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="508.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (32 samples, 0.03%)</title><rect x="505.7" y="355.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="508.7" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (32 samples, 0.03%)</title><rect x="505.7" y="339.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="508.7" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (32 samples, 0.03%)</title><rect x="505.7" y="323.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="508.7" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (32 samples, 0.03%)</title><rect x="505.7" y="307.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="508.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (29 samples, 0.03%)</title><rect x="506.1" y="419.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="509.1" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (29 samples, 0.03%)</title><rect x="506.1" y="403.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="509.1" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (29 samples, 0.03%)</title><rect x="506.1" y="387.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="509.1" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (29 samples, 0.03%)</title><rect x="506.1" y="371.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="509.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (40 samples, 0.04%)</title><rect x="506.5" y="419.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="509.5" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (40 samples, 0.04%)</title><rect x="506.5" y="403.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="509.5" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (40 samples, 0.04%)</title><rect x="506.5" y="387.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="509.5" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (40 samples, 0.04%)</title><rect x="506.5" y="371.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="509.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (1,121 samples, 1.22%)</title><rect x="507.0" y="419.0" width="14.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="510.0" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (26 samples, 0.03%)</title><rect x="507.0" y="403.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="510.0" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (26 samples, 0.03%)</title><rect x="507.0" y="387.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="510.0" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (26 samples, 0.03%)</title><rect x="507.3" y="403.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="510.3" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (26 samples, 0.03%)</title><rect x="507.3" y="387.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="510.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (715 samples, 0.78%)</title><rect x="507.7" y="403.0" width="9.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="510.7" y="414.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (20 samples, 0.02%)</title><rect x="507.8" y="387.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="510.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (20 samples, 0.02%)</title><rect x="507.8" y="371.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="510.8" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (20 samples, 0.02%)</title><rect x="507.8" y="355.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="510.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (660 samples, 0.72%)</title><rect x="508.4" y="387.0" width="8.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="511.4" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (21 samples, 0.02%)</title><rect x="508.4" y="371.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="511.4" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (21 samples, 0.02%)</title><rect x="508.4" y="355.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="511.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (267 samples, 0.29%)</title><rect x="508.7" y="371.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="511.7" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (262 samples, 0.29%)</title><rect x="508.7" y="355.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="511.7" y="366.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (20 samples, 0.02%)</title><rect x="509.1" y="339.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="512.1" y="350.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (196 samples, 0.21%)</title><rect x="509.6" y="339.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="512.6" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (196 samples, 0.21%)</title><rect x="509.6" y="323.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="512.6" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (196 samples, 0.21%)</title><rect x="509.6" y="307.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="512.6" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (63 samples, 0.07%)</title><rect x="509.6" y="291.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="512.6" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (63 samples, 0.07%)</title><rect x="509.6" y="275.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="512.6" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (63 samples, 0.07%)</title><rect x="509.6" y="259.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="512.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (63 samples, 0.07%)</title><rect x="509.6" y="243.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="512.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (44 samples, 0.05%)</title><rect x="509.8" y="227.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="512.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (44 samples, 0.05%)</title><rect x="509.8" y="211.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="512.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (44 samples, 0.05%)</title><rect x="509.8" y="195.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="512.8" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (35 samples, 0.04%)</title><rect x="509.8" y="179.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="512.8" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (35 samples, 0.04%)</title><rect x="509.8" y="163.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="512.8" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (133 samples, 0.14%)</title><rect x="510.4" y="291.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="513.4" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (32 samples, 0.03%)</title><rect x="510.4" y="275.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="513.4" y="286.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (64 samples, 0.07%)</title><rect x="511.3" y="275.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="514.3" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (64 samples, 0.07%)</title><rect x="511.3" y="259.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="514.3" y="270.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (27 samples, 0.03%)</title><rect x="512.3" y="371.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="515.3" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (27 samples, 0.03%)</title><rect x="512.3" y="355.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="515.3" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$ValueIterator (27 samples, 0.03%)</title><rect x="512.3" y="339.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="515.3" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (23 samples, 0.03%)</title><rect x="513.0" y="371.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="516.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (87 samples, 0.09%)</title><rect x="513.4" y="371.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="516.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (75 samples, 0.08%)</title><rect x="513.5" y="355.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="516.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (75 samples, 0.08%)</title><rect x="513.5" y="339.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="516.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (75 samples, 0.08%)</title><rect x="513.5" y="323.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="516.5" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (75 samples, 0.08%)</title><rect x="513.5" y="307.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="516.5" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (75 samples, 0.08%)</title><rect x="513.5" y="291.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="516.5" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (75 samples, 0.08%)</title><rect x="513.5" y="275.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="516.5" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (75 samples, 0.08%)</title><rect x="513.5" y="259.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="516.5" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (75 samples, 0.08%)</title><rect x="513.5" y="243.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="516.5" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (75 samples, 0.08%)</title><rect x="513.5" y="227.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="516.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (75 samples, 0.08%)</title><rect x="513.5" y="211.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="516.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (60 samples, 0.07%)</title><rect x="513.7" y="195.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="516.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (60 samples, 0.07%)</title><rect x="513.7" y="179.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="516.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (60 samples, 0.07%)</title><rect x="513.7" y="163.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="516.7" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (45 samples, 0.05%)</title><rect x="513.7" y="147.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="516.7" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (45 samples, 0.05%)</title><rect x="513.7" y="131.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="516.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (187 samples, 0.20%)</title><rect x="514.5" y="371.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="517.5" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (45 samples, 0.05%)</title><rect x="514.5" y="355.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="517.5" y="366.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (30 samples, 0.03%)</title><rect x="514.7" y="339.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="517.7" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (30 samples, 0.03%)</title><rect x="514.7" y="323.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="517.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (31 samples, 0.03%)</title><rect x="515.2" y="355.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="518.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (31 samples, 0.03%)</title><rect x="515.2" y="339.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="518.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (31 samples, 0.03%)</title><rect x="515.2" y="323.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="518.2" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (31 samples, 0.03%)</title><rect x="515.2" y="307.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="518.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (56 samples, 0.06%)</title><rect x="515.6" y="355.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="518.6" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (43 samples, 0.05%)</title><rect x="515.8" y="339.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="518.8" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (33 samples, 0.04%)</title><rect x="515.9" y="323.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="518.9" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (33 samples, 0.04%)</title><rect x="515.9" y="307.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="518.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (42 samples, 0.05%)</title><rect x="516.3" y="355.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="519.3" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (42 samples, 0.05%)</title><rect x="516.3" y="339.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="519.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (351 samples, 0.38%)</title><rect x="516.9" y="403.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="519.9" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (193 samples, 0.21%)</title><rect x="516.9" y="387.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="519.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (181 samples, 0.20%)</title><rect x="517.0" y="371.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="520.0" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (124 samples, 0.14%)</title><rect x="517.2" y="355.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="520.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (124 samples, 0.14%)</title><rect x="517.2" y="339.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="520.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (124 samples, 0.14%)</title><rect x="517.2" y="323.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="520.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (124 samples, 0.14%)</title><rect x="517.2" y="307.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="520.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (63 samples, 0.07%)</title><rect x="517.2" y="291.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="520.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (63 samples, 0.07%)</title><rect x="517.2" y="275.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="520.2" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (63 samples, 0.07%)</title><rect x="517.2" y="259.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="520.2" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (63 samples, 0.07%)</title><rect x="517.2" y="243.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="520.2" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (63 samples, 0.07%)</title><rect x="517.2" y="227.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="520.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (63 samples, 0.07%)</title><rect x="517.2" y="211.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="520.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (63 samples, 0.07%)</title><rect x="517.2" y="195.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="520.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (63 samples, 0.07%)</title><rect x="517.2" y="179.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="520.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (63 samples, 0.07%)</title><rect x="517.2" y="163.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="520.2" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (50 samples, 0.05%)</title><rect x="517.4" y="147.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="520.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (50 samples, 0.05%)</title><rect x="517.4" y="131.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="520.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (50 samples, 0.05%)</title><rect x="517.4" y="115.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="520.4" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (34 samples, 0.04%)</title><rect x="517.4" y="99.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="520.4" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (34 samples, 0.04%)</title><rect x="517.4" y="83.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="520.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (61 samples, 0.07%)</title><rect x="518.0" y="291.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="521.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (61 samples, 0.07%)</title><rect x="518.0" y="275.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="521.0" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (61 samples, 0.07%)</title><rect x="518.0" y="259.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="521.0" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (61 samples, 0.07%)</title><rect x="518.0" y="243.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="521.0" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (61 samples, 0.07%)</title><rect x="518.0" y="227.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="521.0" y="238.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (21 samples, 0.02%)</title><rect x="518.9" y="355.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="521.9" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (28 samples, 0.03%)</title><rect x="519.4" y="387.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="522.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (124 samples, 0.14%)</title><rect x="519.8" y="387.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="522.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (112 samples, 0.12%)</title><rect x="519.9" y="371.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="522.9" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (112 samples, 0.12%)</title><rect x="519.9" y="355.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="522.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (112 samples, 0.12%)</title><rect x="519.9" y="339.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="522.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (112 samples, 0.12%)</title><rect x="519.9" y="323.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="522.9" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (112 samples, 0.12%)</title><rect x="519.9" y="307.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="522.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (112 samples, 0.12%)</title><rect x="519.9" y="291.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="522.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (112 samples, 0.12%)</title><rect x="519.9" y="275.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="522.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (63 samples, 0.07%)</title><rect x="519.9" y="259.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="522.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (63 samples, 0.07%)</title><rect x="519.9" y="243.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="522.9" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (63 samples, 0.07%)</title><rect x="519.9" y="227.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="522.9" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (63 samples, 0.07%)</title><rect x="519.9" y="211.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="522.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (63 samples, 0.07%)</title><rect x="519.9" y="195.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="522.9" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (63 samples, 0.07%)</title><rect x="519.9" y="179.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="522.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (63 samples, 0.07%)</title><rect x="519.9" y="163.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="522.9" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (63 samples, 0.07%)</title><rect x="519.9" y="147.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="522.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (63 samples, 0.07%)</title><rect x="519.9" y="131.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="522.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (25 samples, 0.03%)</title><rect x="519.9" y="115.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="522.9" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (25 samples, 0.03%)</title><rect x="519.9" y="99.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="522.9" y="110.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (25 samples, 0.03%)</title><rect x="519.9" y="83.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="522.9" y="94.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (38 samples, 0.04%)</title><rect x="520.3" y="115.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="523.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (38 samples, 0.04%)</title><rect x="520.3" y="99.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="523.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (38 samples, 0.04%)</title><rect x="520.3" y="83.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="523.3" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (49 samples, 0.05%)</title><rect x="520.8" y="259.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="523.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (49 samples, 0.05%)</title><rect x="520.8" y="243.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="523.8" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (49 samples, 0.05%)</title><rect x="520.8" y="227.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="523.8" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (49 samples, 0.05%)</title><rect x="520.8" y="211.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="523.8" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (49 samples, 0.05%)</title><rect x="520.8" y="195.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="523.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.getBytesFromByteBuffer (32 samples, 0.03%)</title><rect x="521.4" y="435.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="524.4" y="446.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.03%)</title><rect x="521.4" y="419.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="524.4" y="430.0"></text>
</g>
<g>
<title>[2020-highload-dht-thread-3 tid=13582] (1,738 samples, 1.89%)</title><rect x="521.8" y="563.0" width="22.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="524.8" y="574.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (1,738 samples, 1.89%)</title><rect x="521.8" y="547.0" width="22.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="524.8" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,738 samples, 1.89%)</title><rect x="521.8" y="531.0" width="22.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="524.8" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,738 samples, 1.89%)</title><rect x="521.8" y="515.0" width="22.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="524.8" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (30 samples, 0.03%)</title><rect x="521.8" y="499.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="524.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (30 samples, 0.03%)</title><rect x="521.8" y="483.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="524.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (30 samples, 0.03%)</title><rect x="521.8" y="467.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="524.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (30 samples, 0.03%)</title><rect x="521.8" y="451.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="524.8" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (30 samples, 0.03%)</title><rect x="521.8" y="435.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="524.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.run (1,708 samples, 1.86%)</title><rect x="522.2" y="499.0" width="21.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="525.2" y="510.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$entity$1 (1,708 samples, 1.86%)</title><rect x="522.2" y="483.0" width="21.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="525.2" y="494.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleRequest (1,708 samples, 1.86%)</title><rect x="522.2" y="467.0" width="21.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="525.2" y="478.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (45 samples, 0.05%)</title><rect x="522.2" y="451.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="525.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (45 samples, 0.05%)</title><rect x="522.2" y="435.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="525.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (45 samples, 0.05%)</title><rect x="522.2" y="419.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="525.2" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (45 samples, 0.05%)</title><rect x="522.2" y="403.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="525.2" y="414.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.05%)</title><rect x="522.2" y="387.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="525.2" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (48 samples, 0.05%)</title><rect x="522.8" y="451.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="525.8" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (48 samples, 0.05%)</title><rect x="522.8" y="435.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="525.8" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (48 samples, 0.05%)</title><rect x="522.8" y="419.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="525.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleGet (1,615 samples, 1.76%)</title><rect x="523.4" y="451.0" width="20.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="526.4" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (91 samples, 0.10%)</title><rect x="523.4" y="435.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="526.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (91 samples, 0.10%)</title><rect x="523.4" y="419.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="526.4" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (65 samples, 0.07%)</title><rect x="523.4" y="403.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="526.4" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (57 samples, 0.06%)</title><rect x="523.5" y="387.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="526.5" y="398.0"></text>
</g>
<g>
<title>byte[] (57 samples, 0.06%)</title><rect x="523.5" y="371.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="526.5" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (26 samples, 0.03%)</title><rect x="524.2" y="403.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="527.2" y="414.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (26 samples, 0.03%)</title><rect x="524.2" y="387.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="527.2" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (72 samples, 0.08%)</title><rect x="524.5" y="435.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="527.5" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (59 samples, 0.06%)</title><rect x="524.7" y="419.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="527.7" y="430.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.03%)</title><rect x="524.7" y="403.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="527.7" y="414.0"></text>
</g>
<g>
<title>java.lang.String[] (23 samples, 0.03%)</title><rect x="525.0" y="403.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="528.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,422 samples, 1.55%)</title><rect x="525.5" y="435.0" width="18.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="528.5" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (180 samples, 0.20%)</title><rect x="525.5" y="419.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="528.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (180 samples, 0.20%)</title><rect x="525.5" y="403.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="528.5" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (180 samples, 0.20%)</title><rect x="525.5" y="387.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="528.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (180 samples, 0.20%)</title><rect x="525.5" y="371.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="528.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (180 samples, 0.20%)</title><rect x="525.5" y="355.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="528.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (121 samples, 0.13%)</title><rect x="525.5" y="339.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="528.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (121 samples, 0.13%)</title><rect x="525.5" y="323.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="528.5" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (121 samples, 0.13%)</title><rect x="525.5" y="307.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="528.5" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (121 samples, 0.13%)</title><rect x="525.5" y="291.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="528.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (121 samples, 0.13%)</title><rect x="525.5" y="275.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="528.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (121 samples, 0.13%)</title><rect x="525.5" y="259.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="528.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (56 samples, 0.06%)</title><rect x="525.5" y="243.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="528.5" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (56 samples, 0.06%)</title><rect x="525.5" y="227.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="528.5" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (56 samples, 0.06%)</title><rect x="525.5" y="211.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="528.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (56 samples, 0.06%)</title><rect x="525.5" y="195.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="528.5" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (56 samples, 0.06%)</title><rect x="525.5" y="179.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="528.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (56 samples, 0.06%)</title><rect x="525.5" y="163.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="528.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (56 samples, 0.06%)</title><rect x="525.5" y="147.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="528.5" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (56 samples, 0.06%)</title><rect x="525.5" y="131.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="528.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (56 samples, 0.06%)</title><rect x="525.5" y="115.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="528.5" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (43 samples, 0.05%)</title><rect x="525.6" y="99.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="528.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (43 samples, 0.05%)</title><rect x="525.6" y="83.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="528.6" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (43 samples, 0.05%)</title><rect x="525.6" y="67.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="528.6" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (27 samples, 0.03%)</title><rect x="525.6" y="51.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="528.6" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (27 samples, 0.03%)</title><rect x="525.6" y="35.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="528.6" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (65 samples, 0.07%)</title><rect x="526.2" y="243.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="529.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (65 samples, 0.07%)</title><rect x="526.2" y="227.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="529.2" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (65 samples, 0.07%)</title><rect x="526.2" y="211.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="529.2" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (65 samples, 0.07%)</title><rect x="526.2" y="195.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="529.2" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (65 samples, 0.07%)</title><rect x="526.2" y="179.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="529.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$140/499586134.apply (59 samples, 0.06%)</title><rect x="527.0" y="339.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="530.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (59 samples, 0.06%)</title><rect x="527.0" y="323.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="530.0" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (59 samples, 0.06%)</title><rect x="527.0" y="307.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="530.0" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (59 samples, 0.06%)</title><rect x="527.0" y="291.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="530.0" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (59 samples, 0.06%)</title><rect x="527.0" y="275.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="530.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (74 samples, 0.08%)</title><rect x="527.8" y="419.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="530.8" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (74 samples, 0.08%)</title><rect x="527.8" y="403.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="530.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$151/1576841624.apply (74 samples, 0.08%)</title><rect x="527.8" y="387.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="530.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$3 (74 samples, 0.08%)</title><rect x="527.8" y="371.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="530.8" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (37 samples, 0.04%)</title><rect x="527.8" y="355.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="530.8" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (37 samples, 0.04%)</title><rect x="527.8" y="339.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="530.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (26 samples, 0.03%)</title><rect x="528.4" y="355.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="531.4" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (26 samples, 0.03%)</title><rect x="528.4" y="339.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="531.4" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (26 samples, 0.03%)</title><rect x="528.4" y="323.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="531.4" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (26 samples, 0.03%)</title><rect x="528.4" y="307.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="531.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (28 samples, 0.03%)</title><rect x="528.7" y="419.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="531.7" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (28 samples, 0.03%)</title><rect x="528.7" y="403.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="531.7" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (28 samples, 0.03%)</title><rect x="528.7" y="387.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="531.7" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (28 samples, 0.03%)</title><rect x="528.7" y="371.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="531.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (36 samples, 0.04%)</title><rect x="529.1" y="419.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="532.1" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (36 samples, 0.04%)</title><rect x="529.1" y="403.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="532.1" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (36 samples, 0.04%)</title><rect x="529.1" y="387.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="532.1" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (36 samples, 0.04%)</title><rect x="529.1" y="371.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="532.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (1,104 samples, 1.20%)</title><rect x="529.6" y="419.0" width="14.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="532.6" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (22 samples, 0.02%)</title><rect x="529.8" y="403.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="532.8" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (22 samples, 0.02%)</title><rect x="529.8" y="387.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="532.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (697 samples, 0.76%)</title><rect x="530.1" y="403.0" width="8.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="533.1" y="414.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (30 samples, 0.03%)</title><rect x="530.3" y="387.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="533.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (30 samples, 0.03%)</title><rect x="530.3" y="371.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="533.3" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (30 samples, 0.03%)</title><rect x="530.3" y="355.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="533.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (625 samples, 0.68%)</title><rect x="531.0" y="387.0" width="8.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="534.0" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (22 samples, 0.02%)</title><rect x="531.0" y="371.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="534.0" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (22 samples, 0.02%)</title><rect x="531.0" y="355.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="534.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (247 samples, 0.27%)</title><rect x="531.3" y="371.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="534.3" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (235 samples, 0.26%)</title><rect x="531.4" y="355.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="534.4" y="366.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (24 samples, 0.03%)</title><rect x="531.8" y="339.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="534.8" y="350.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (170 samples, 0.19%)</title><rect x="532.3" y="339.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="535.3" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (170 samples, 0.19%)</title><rect x="532.3" y="323.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="535.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (170 samples, 0.19%)</title><rect x="532.3" y="307.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="535.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (61 samples, 0.07%)</title><rect x="532.3" y="291.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="535.3" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (61 samples, 0.07%)</title><rect x="532.3" y="275.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="535.3" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (61 samples, 0.07%)</title><rect x="532.3" y="259.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="535.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (61 samples, 0.07%)</title><rect x="532.3" y="243.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="535.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (46 samples, 0.05%)</title><rect x="532.5" y="227.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="535.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (46 samples, 0.05%)</title><rect x="532.5" y="211.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="535.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (46 samples, 0.05%)</title><rect x="532.5" y="195.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="535.5" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (29 samples, 0.03%)</title><rect x="532.5" y="179.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="535.5" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (29 samples, 0.03%)</title><rect x="532.5" y="163.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="535.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (109 samples, 0.12%)</title><rect x="533.0" y="291.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="536.0" y="302.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (63 samples, 0.07%)</title><rect x="533.6" y="275.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="536.6" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (63 samples, 0.07%)</title><rect x="533.6" y="259.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="536.6" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (20 samples, 0.02%)</title><rect x="535.2" y="371.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="538.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (82 samples, 0.09%)</title><rect x="535.5" y="371.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="538.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (68 samples, 0.07%)</title><rect x="535.6" y="355.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="538.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (68 samples, 0.07%)</title><rect x="535.6" y="339.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="538.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (68 samples, 0.07%)</title><rect x="535.6" y="323.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="538.6" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (68 samples, 0.07%)</title><rect x="535.6" y="307.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="538.6" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (68 samples, 0.07%)</title><rect x="535.6" y="291.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="538.6" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (68 samples, 0.07%)</title><rect x="535.6" y="275.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="538.6" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (68 samples, 0.07%)</title><rect x="535.6" y="259.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="538.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (68 samples, 0.07%)</title><rect x="535.6" y="243.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="538.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (68 samples, 0.07%)</title><rect x="535.6" y="227.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="538.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (68 samples, 0.07%)</title><rect x="535.6" y="211.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="538.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (21 samples, 0.02%)</title><rect x="535.6" y="195.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="538.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (21 samples, 0.02%)</title><rect x="535.6" y="179.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="538.6" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (21 samples, 0.02%)</title><rect x="535.6" y="163.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="538.6" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (47 samples, 0.05%)</title><rect x="535.9" y="195.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="538.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (47 samples, 0.05%)</title><rect x="535.9" y="179.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="538.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (47 samples, 0.05%)</title><rect x="535.9" y="163.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="538.9" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (33 samples, 0.04%)</title><rect x="535.9" y="147.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="538.9" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (33 samples, 0.04%)</title><rect x="535.9" y="131.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="538.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (195 samples, 0.21%)</title><rect x="536.5" y="371.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="539.5" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (57 samples, 0.06%)</title><rect x="536.5" y="355.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="539.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (22 samples, 0.02%)</title><rect x="536.5" y="339.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="539.5" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (22 samples, 0.02%)</title><rect x="536.5" y="323.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="539.5" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (35 samples, 0.04%)</title><rect x="536.8" y="339.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="539.8" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (35 samples, 0.04%)</title><rect x="536.8" y="323.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="539.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (26 samples, 0.03%)</title><rect x="537.4" y="355.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="540.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (26 samples, 0.03%)</title><rect x="537.4" y="339.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="540.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (26 samples, 0.03%)</title><rect x="537.4" y="323.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="540.4" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (26 samples, 0.03%)</title><rect x="537.4" y="307.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="540.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (62 samples, 0.07%)</title><rect x="537.7" y="355.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="540.7" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (49 samples, 0.05%)</title><rect x="537.9" y="339.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="540.9" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (33 samples, 0.04%)</title><rect x="538.1" y="323.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="541.1" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (33 samples, 0.04%)</title><rect x="538.1" y="307.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="541.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (40 samples, 0.04%)</title><rect x="538.5" y="355.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="541.5" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (40 samples, 0.04%)</title><rect x="538.5" y="339.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="541.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (367 samples, 0.40%)</title><rect x="539.0" y="403.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="542.0" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (193 samples, 0.21%)</title><rect x="539.0" y="387.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="542.0" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (186 samples, 0.20%)</title><rect x="539.1" y="371.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="542.1" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (119 samples, 0.13%)</title><rect x="539.3" y="355.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="542.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (119 samples, 0.13%)</title><rect x="539.3" y="339.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="542.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (119 samples, 0.13%)</title><rect x="539.3" y="323.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="542.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (119 samples, 0.13%)</title><rect x="539.3" y="307.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="542.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (58 samples, 0.06%)</title><rect x="539.3" y="291.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="542.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (58 samples, 0.06%)</title><rect x="539.3" y="275.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="542.3" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (58 samples, 0.06%)</title><rect x="539.3" y="259.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="542.3" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (58 samples, 0.06%)</title><rect x="539.3" y="243.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="542.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (58 samples, 0.06%)</title><rect x="539.3" y="227.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="542.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (58 samples, 0.06%)</title><rect x="539.3" y="211.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="542.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (58 samples, 0.06%)</title><rect x="539.3" y="195.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="542.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (58 samples, 0.06%)</title><rect x="539.3" y="179.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="542.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (58 samples, 0.06%)</title><rect x="539.3" y="163.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="542.3" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (41 samples, 0.04%)</title><rect x="539.5" y="147.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="542.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (41 samples, 0.04%)</title><rect x="539.5" y="131.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="542.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (41 samples, 0.04%)</title><rect x="539.5" y="115.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="542.5" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (27 samples, 0.03%)</title><rect x="539.5" y="99.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="542.5" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (27 samples, 0.03%)</title><rect x="539.5" y="83.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="542.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (61 samples, 0.07%)</title><rect x="540.0" y="291.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="543.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (61 samples, 0.07%)</title><rect x="540.0" y="275.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="543.0" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (61 samples, 0.07%)</title><rect x="540.0" y="259.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="543.0" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (61 samples, 0.07%)</title><rect x="540.0" y="243.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="543.0" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (61 samples, 0.07%)</title><rect x="540.0" y="227.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="543.0" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (21 samples, 0.02%)</title><rect x="541.2" y="355.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="544.2" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (21 samples, 0.02%)</title><rect x="541.2" y="339.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="544.2" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (31 samples, 0.03%)</title><rect x="541.7" y="387.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="544.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (131 samples, 0.14%)</title><rect x="542.1" y="387.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="545.1" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (22 samples, 0.02%)</title><rect x="542.1" y="371.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="545.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (109 samples, 0.12%)</title><rect x="542.3" y="371.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="545.3" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (109 samples, 0.12%)</title><rect x="542.3" y="355.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="545.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (109 samples, 0.12%)</title><rect x="542.3" y="339.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="545.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (109 samples, 0.12%)</title><rect x="542.3" y="323.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="545.3" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (109 samples, 0.12%)</title><rect x="542.3" y="307.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="545.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (109 samples, 0.12%)</title><rect x="542.3" y="291.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="545.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (109 samples, 0.12%)</title><rect x="542.3" y="275.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="545.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (54 samples, 0.06%)</title><rect x="542.3" y="259.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="545.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (54 samples, 0.06%)</title><rect x="542.3" y="243.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="545.3" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (54 samples, 0.06%)</title><rect x="542.3" y="227.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="545.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (54 samples, 0.06%)</title><rect x="542.3" y="211.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="545.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (54 samples, 0.06%)</title><rect x="542.3" y="195.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="545.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (54 samples, 0.06%)</title><rect x="542.3" y="179.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="545.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (54 samples, 0.06%)</title><rect x="542.3" y="163.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="545.3" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (54 samples, 0.06%)</title><rect x="542.3" y="147.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="545.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (54 samples, 0.06%)</title><rect x="542.3" y="131.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="545.3" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (38 samples, 0.04%)</title><rect x="542.5" y="115.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="545.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (38 samples, 0.04%)</title><rect x="542.5" y="99.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="545.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (38 samples, 0.04%)</title><rect x="542.5" y="83.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="545.5" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (23 samples, 0.03%)</title><rect x="542.5" y="67.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="545.5" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (23 samples, 0.03%)</title><rect x="542.5" y="51.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="545.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (55 samples, 0.06%)</title><rect x="543.0" y="259.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="546.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (55 samples, 0.06%)</title><rect x="543.0" y="243.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="546.0" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (55 samples, 0.06%)</title><rect x="543.0" y="227.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="546.0" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (55 samples, 0.06%)</title><rect x="543.0" y="211.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="546.0" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (55 samples, 0.06%)</title><rect x="543.0" y="195.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="546.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.getBytesFromByteBuffer (30 samples, 0.03%)</title><rect x="543.7" y="435.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="546.7" y="446.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.03%)</title><rect x="543.7" y="419.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="546.7" y="430.0"></text>
</g>
<g>
<title>[2020-highload-dht-thread-4 tid=13578] (1,746 samples, 1.90%)</title><rect x="544.1" y="563.0" width="22.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="547.1" y="574.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (1,746 samples, 1.90%)</title><rect x="544.1" y="547.0" width="22.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="547.1" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,746 samples, 1.90%)</title><rect x="544.1" y="531.0" width="22.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="547.1" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,746 samples, 1.90%)</title><rect x="544.1" y="515.0" width="22.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="547.1" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (27 samples, 0.03%)</title><rect x="544.1" y="499.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="547.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (27 samples, 0.03%)</title><rect x="544.1" y="483.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="547.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (27 samples, 0.03%)</title><rect x="544.1" y="467.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="547.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (27 samples, 0.03%)</title><rect x="544.1" y="451.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="547.1" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (27 samples, 0.03%)</title><rect x="544.1" y="435.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="547.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.run (1,719 samples, 1.87%)</title><rect x="544.5" y="499.0" width="22.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="547.5" y="510.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$entity$1 (1,719 samples, 1.87%)</title><rect x="544.5" y="483.0" width="22.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="547.5" y="494.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleRequest (1,719 samples, 1.87%)</title><rect x="544.5" y="467.0" width="22.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="547.5" y="478.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (42 samples, 0.05%)</title><rect x="544.5" y="451.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="547.5" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (42 samples, 0.05%)</title><rect x="544.5" y="435.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="547.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (42 samples, 0.05%)</title><rect x="544.5" y="419.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="547.5" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (42 samples, 0.05%)</title><rect x="544.5" y="403.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="547.5" y="414.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.05%)</title><rect x="544.5" y="387.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="547.5" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (41 samples, 0.04%)</title><rect x="545.0" y="451.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="548.0" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (41 samples, 0.04%)</title><rect x="545.0" y="435.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="548.0" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (41 samples, 0.04%)</title><rect x="545.0" y="419.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="548.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleGet (1,636 samples, 1.78%)</title><rect x="545.5" y="451.0" width="21.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="548.5" y="462.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (96 samples, 0.10%)</title><rect x="545.5" y="435.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="548.5" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (96 samples, 0.10%)</title><rect x="545.5" y="419.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="548.5" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (73 samples, 0.08%)</title><rect x="545.5" y="403.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="548.5" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (57 samples, 0.06%)</title><rect x="545.7" y="387.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="548.7" y="398.0"></text>
</g>
<g>
<title>byte[] (57 samples, 0.06%)</title><rect x="545.7" y="371.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="548.7" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (23 samples, 0.03%)</title><rect x="546.5" y="403.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="549.5" y="414.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (23 samples, 0.03%)</title><rect x="546.5" y="387.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="549.5" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (82 samples, 0.09%)</title><rect x="546.8" y="435.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="549.8" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (24 samples, 0.03%)</title><rect x="546.8" y="419.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="549.8" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (58 samples, 0.06%)</title><rect x="547.1" y="419.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="550.1" y="430.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.03%)</title><rect x="547.1" y="403.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="550.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,431 samples, 1.56%)</title><rect x="547.8" y="435.0" width="18.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="550.8" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (182 samples, 0.20%)</title><rect x="547.8" y="419.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="550.8" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (182 samples, 0.20%)</title><rect x="547.8" y="403.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="550.8" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (182 samples, 0.20%)</title><rect x="547.8" y="387.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="550.8" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (182 samples, 0.20%)</title><rect x="547.8" y="371.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="550.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (182 samples, 0.20%)</title><rect x="547.8" y="355.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="550.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (127 samples, 0.14%)</title><rect x="547.8" y="339.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="550.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (127 samples, 0.14%)</title><rect x="547.8" y="323.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="550.8" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (127 samples, 0.14%)</title><rect x="547.8" y="307.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="550.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (127 samples, 0.14%)</title><rect x="547.8" y="291.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="550.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (127 samples, 0.14%)</title><rect x="547.8" y="275.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="550.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (127 samples, 0.14%)</title><rect x="547.8" y="259.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="550.8" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (50 samples, 0.05%)</title><rect x="547.8" y="243.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="550.8" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (50 samples, 0.05%)</title><rect x="547.8" y="227.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="550.8" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (50 samples, 0.05%)</title><rect x="547.8" y="211.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="550.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (50 samples, 0.05%)</title><rect x="547.8" y="195.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="550.8" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (50 samples, 0.05%)</title><rect x="547.8" y="179.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="550.8" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (50 samples, 0.05%)</title><rect x="547.8" y="163.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="550.8" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (50 samples, 0.05%)</title><rect x="547.8" y="147.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="550.8" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (50 samples, 0.05%)</title><rect x="547.8" y="131.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="550.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (50 samples, 0.05%)</title><rect x="547.8" y="115.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="550.8" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (38 samples, 0.04%)</title><rect x="548.0" y="99.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="551.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (38 samples, 0.04%)</title><rect x="548.0" y="83.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="551.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (38 samples, 0.04%)</title><rect x="548.0" y="67.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="551.0" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (25 samples, 0.03%)</title><rect x="548.0" y="51.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="551.0" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (25 samples, 0.03%)</title><rect x="548.0" y="35.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="551.0" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (77 samples, 0.08%)</title><rect x="548.5" y="243.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="551.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (77 samples, 0.08%)</title><rect x="548.5" y="227.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="551.5" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (77 samples, 0.08%)</title><rect x="548.5" y="211.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="551.5" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (77 samples, 0.08%)</title><rect x="548.5" y="195.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="551.5" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (77 samples, 0.08%)</title><rect x="548.5" y="179.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="551.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$140/499586134.apply (55 samples, 0.06%)</title><rect x="549.5" y="339.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="552.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (55 samples, 0.06%)</title><rect x="549.5" y="323.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="552.5" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (55 samples, 0.06%)</title><rect x="549.5" y="307.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="552.5" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (55 samples, 0.06%)</title><rect x="549.5" y="291.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="552.5" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (55 samples, 0.06%)</title><rect x="549.5" y="275.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="552.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (70 samples, 0.08%)</title><rect x="550.2" y="419.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="553.2" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (70 samples, 0.08%)</title><rect x="550.2" y="403.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="553.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$151/1576841624.apply (70 samples, 0.08%)</title><rect x="550.2" y="387.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="553.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$3 (70 samples, 0.08%)</title><rect x="550.2" y="371.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="553.2" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (27 samples, 0.03%)</title><rect x="550.2" y="355.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="553.2" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (27 samples, 0.03%)</title><rect x="550.2" y="339.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="553.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (25 samples, 0.03%)</title><rect x="550.7" y="355.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="553.7" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (25 samples, 0.03%)</title><rect x="550.7" y="339.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="553.7" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (25 samples, 0.03%)</title><rect x="550.7" y="323.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="553.7" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (25 samples, 0.03%)</title><rect x="550.7" y="307.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="553.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (38 samples, 0.04%)</title><rect x="551.1" y="419.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="554.1" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (38 samples, 0.04%)</title><rect x="551.1" y="403.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="554.1" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (38 samples, 0.04%)</title><rect x="551.1" y="387.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="554.1" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (38 samples, 0.04%)</title><rect x="551.1" y="371.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="554.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (32 samples, 0.03%)</title><rect x="551.5" y="419.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="554.5" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (32 samples, 0.03%)</title><rect x="551.5" y="403.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="554.5" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (32 samples, 0.03%)</title><rect x="551.5" y="387.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="554.5" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (32 samples, 0.03%)</title><rect x="551.5" y="371.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="554.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (1,109 samples, 1.21%)</title><rect x="552.0" y="419.0" width="14.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="555.0" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (29 samples, 0.03%)</title><rect x="552.0" y="403.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="555.0" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (29 samples, 0.03%)</title><rect x="552.0" y="387.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="555.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (695 samples, 0.76%)</title><rect x="552.4" y="403.0" width="9.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="555.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (632 samples, 0.69%)</title><rect x="553.2" y="387.0" width="8.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="556.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (28 samples, 0.03%)</title><rect x="553.2" y="371.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="556.2" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (28 samples, 0.03%)</title><rect x="553.2" y="355.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="556.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (254 samples, 0.28%)</title><rect x="553.6" y="371.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="556.6" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (241 samples, 0.26%)</title><rect x="553.8" y="355.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="556.8" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (189 samples, 0.21%)</title><rect x="554.4" y="339.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="557.4" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (189 samples, 0.21%)</title><rect x="554.4" y="323.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="557.4" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (189 samples, 0.21%)</title><rect x="554.4" y="307.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="557.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (74 samples, 0.08%)</title><rect x="554.4" y="291.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="557.4" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (74 samples, 0.08%)</title><rect x="554.4" y="275.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="557.4" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (74 samples, 0.08%)</title><rect x="554.4" y="259.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="557.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (74 samples, 0.08%)</title><rect x="554.4" y="243.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="557.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (55 samples, 0.06%)</title><rect x="554.7" y="227.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="557.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (55 samples, 0.06%)</title><rect x="554.7" y="211.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="557.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (55 samples, 0.06%)</title><rect x="554.7" y="195.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="557.7" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (40 samples, 0.04%)</title><rect x="554.7" y="179.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="557.7" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (40 samples, 0.04%)</title><rect x="554.7" y="163.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="557.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (115 samples, 0.13%)</title><rect x="555.4" y="291.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="558.4" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (24 samples, 0.03%)</title><rect x="555.4" y="275.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="558.4" y="286.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (63 samples, 0.07%)</title><rect x="556.0" y="275.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="559.0" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (63 samples, 0.07%)</title><rect x="556.0" y="259.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="559.0" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (21 samples, 0.02%)</title><rect x="557.5" y="371.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="560.5" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (21 samples, 0.02%)</title><rect x="557.5" y="355.0" width="0.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="560.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (85 samples, 0.09%)</title><rect x="558.0" y="371.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="561.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (71 samples, 0.08%)</title><rect x="558.2" y="355.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="561.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (71 samples, 0.08%)</title><rect x="558.2" y="339.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="561.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (71 samples, 0.08%)</title><rect x="558.2" y="323.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="561.2" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (71 samples, 0.08%)</title><rect x="558.2" y="307.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="561.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (71 samples, 0.08%)</title><rect x="558.2" y="291.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="561.2" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (71 samples, 0.08%)</title><rect x="558.2" y="275.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="561.2" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (71 samples, 0.08%)</title><rect x="558.2" y="259.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="561.2" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (71 samples, 0.08%)</title><rect x="558.2" y="243.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="561.2" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (71 samples, 0.08%)</title><rect x="558.2" y="227.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="561.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (71 samples, 0.08%)</title><rect x="558.2" y="211.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="561.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (54 samples, 0.06%)</title><rect x="558.4" y="195.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="561.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (54 samples, 0.06%)</title><rect x="558.4" y="179.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="561.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (54 samples, 0.06%)</title><rect x="558.4" y="163.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="561.4" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (41 samples, 0.04%)</title><rect x="558.4" y="147.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="561.4" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (41 samples, 0.04%)</title><rect x="558.4" y="131.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="561.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (172 samples, 0.19%)</title><rect x="559.1" y="371.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="562.1" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (44 samples, 0.05%)</title><rect x="559.1" y="355.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="562.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (22 samples, 0.02%)</title><rect x="559.1" y="339.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="562.1" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (22 samples, 0.02%)</title><rect x="559.1" y="323.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="562.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (22 samples, 0.02%)</title><rect x="559.4" y="339.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="562.4" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (22 samples, 0.02%)</title><rect x="559.4" y="323.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="562.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (39 samples, 0.04%)</title><rect x="559.8" y="355.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="562.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (39 samples, 0.04%)</title><rect x="559.8" y="339.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="562.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (39 samples, 0.04%)</title><rect x="559.8" y="323.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="562.8" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (39 samples, 0.04%)</title><rect x="559.8" y="307.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="562.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (43 samples, 0.05%)</title><rect x="560.3" y="355.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="563.3" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (31 samples, 0.03%)</title><rect x="560.5" y="339.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="563.5" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (22 samples, 0.02%)</title><rect x="560.6" y="323.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="563.6" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (22 samples, 0.02%)</title><rect x="560.6" y="307.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="563.6" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (38 samples, 0.04%)</title><rect x="560.9" y="355.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="563.9" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (38 samples, 0.04%)</title><rect x="560.9" y="339.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="563.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (378 samples, 0.41%)</title><rect x="561.4" y="403.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="564.4" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (220 samples, 0.24%)</title><rect x="561.4" y="387.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="564.4" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (202 samples, 0.22%)</title><rect x="561.6" y="371.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="564.6" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (20 samples, 0.02%)</title><rect x="561.6" y="355.0" width="0.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="564.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (126 samples, 0.14%)</title><rect x="561.8" y="355.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="564.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (126 samples, 0.14%)</title><rect x="561.8" y="339.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="564.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (126 samples, 0.14%)</title><rect x="561.8" y="323.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="564.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (126 samples, 0.14%)</title><rect x="561.8" y="307.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="564.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (52 samples, 0.06%)</title><rect x="561.8" y="291.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="564.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (52 samples, 0.06%)</title><rect x="561.8" y="275.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="564.8" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (52 samples, 0.06%)</title><rect x="561.8" y="259.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="564.8" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (52 samples, 0.06%)</title><rect x="561.8" y="243.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="564.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (52 samples, 0.06%)</title><rect x="561.8" y="227.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="564.8" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (52 samples, 0.06%)</title><rect x="561.8" y="211.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="564.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (52 samples, 0.06%)</title><rect x="561.8" y="195.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="564.8" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (52 samples, 0.06%)</title><rect x="561.8" y="179.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="564.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (52 samples, 0.06%)</title><rect x="561.8" y="163.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="564.8" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (35 samples, 0.04%)</title><rect x="562.1" y="147.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="565.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (35 samples, 0.04%)</title><rect x="562.1" y="131.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="565.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (35 samples, 0.04%)</title><rect x="562.1" y="115.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="565.1" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (24 samples, 0.03%)</title><rect x="562.1" y="99.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="565.1" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (24 samples, 0.03%)</title><rect x="562.1" y="83.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="565.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (74 samples, 0.08%)</title><rect x="562.5" y="291.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="565.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (74 samples, 0.08%)</title><rect x="562.5" y="275.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="565.5" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (74 samples, 0.08%)</title><rect x="562.5" y="259.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="565.5" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (74 samples, 0.08%)</title><rect x="562.5" y="243.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="565.5" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (74 samples, 0.08%)</title><rect x="562.5" y="227.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="565.5" y="238.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (29 samples, 0.03%)</title><rect x="563.6" y="355.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="566.6" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (32 samples, 0.03%)</title><rect x="564.3" y="387.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="567.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (115 samples, 0.13%)</title><rect x="564.7" y="387.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="567.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (98 samples, 0.11%)</title><rect x="564.9" y="371.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="567.9" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (98 samples, 0.11%)</title><rect x="564.9" y="355.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="567.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (98 samples, 0.11%)</title><rect x="564.9" y="339.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="567.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (98 samples, 0.11%)</title><rect x="564.9" y="323.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="567.9" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (98 samples, 0.11%)</title><rect x="564.9" y="307.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="567.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (98 samples, 0.11%)</title><rect x="564.9" y="291.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="567.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (98 samples, 0.11%)</title><rect x="564.9" y="275.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="567.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (49 samples, 0.05%)</title><rect x="564.9" y="259.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="567.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (49 samples, 0.05%)</title><rect x="564.9" y="243.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="567.9" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (49 samples, 0.05%)</title><rect x="564.9" y="227.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="567.9" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (49 samples, 0.05%)</title><rect x="564.9" y="211.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="567.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (49 samples, 0.05%)</title><rect x="564.9" y="195.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="567.9" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (49 samples, 0.05%)</title><rect x="564.9" y="179.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="567.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (49 samples, 0.05%)</title><rect x="564.9" y="163.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="567.9" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (49 samples, 0.05%)</title><rect x="564.9" y="147.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="567.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (49 samples, 0.05%)</title><rect x="564.9" y="131.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="567.9" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (37 samples, 0.04%)</title><rect x="565.1" y="115.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="568.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (37 samples, 0.04%)</title><rect x="565.1" y="99.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="568.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (37 samples, 0.04%)</title><rect x="565.1" y="83.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="568.1" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (21 samples, 0.02%)</title><rect x="565.1" y="67.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="568.1" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (21 samples, 0.02%)</title><rect x="565.1" y="51.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="568.1" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (49 samples, 0.05%)</title><rect x="565.6" y="259.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="568.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (49 samples, 0.05%)</title><rect x="565.6" y="243.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="568.6" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (49 samples, 0.05%)</title><rect x="565.6" y="227.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="568.6" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (49 samples, 0.05%)</title><rect x="565.6" y="211.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="568.6" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (49 samples, 0.05%)</title><rect x="565.6" y="195.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="568.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.getBytesFromByteBuffer (27 samples, 0.03%)</title><rect x="566.2" y="435.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="569.2" y="446.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.03%)</title><rect x="566.2" y="419.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="569.2" y="430.0"></text>
</g>
<g>
<title>[2020-highload-dht-thread-4 tid=13580] (1,742 samples, 1.90%)</title><rect x="566.6" y="563.0" width="22.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="569.6" y="574.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (1,742 samples, 1.90%)</title><rect x="566.6" y="547.0" width="22.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="569.6" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,742 samples, 1.90%)</title><rect x="566.6" y="531.0" width="22.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="569.6" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,742 samples, 1.90%)</title><rect x="566.6" y="515.0" width="22.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="569.6" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (20 samples, 0.02%)</title><rect x="566.6" y="499.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="569.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (20 samples, 0.02%)</title><rect x="566.6" y="483.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="569.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (20 samples, 0.02%)</title><rect x="566.6" y="467.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="569.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (20 samples, 0.02%)</title><rect x="566.6" y="451.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="569.6" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (20 samples, 0.02%)</title><rect x="566.6" y="435.0" width="0.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="569.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.run (1,722 samples, 1.88%)</title><rect x="566.8" y="499.0" width="22.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="569.8" y="510.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$entity$1 (1,722 samples, 1.88%)</title><rect x="566.8" y="483.0" width="22.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="569.8" y="494.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleRequest (1,722 samples, 1.88%)</title><rect x="566.8" y="467.0" width="22.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="569.8" y="478.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (39 samples, 0.04%)</title><rect x="566.8" y="451.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="569.8" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (39 samples, 0.04%)</title><rect x="566.8" y="435.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="569.8" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (39 samples, 0.04%)</title><rect x="566.8" y="419.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="569.8" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (39 samples, 0.04%)</title><rect x="566.8" y="403.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="569.8" y="414.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.04%)</title><rect x="566.8" y="387.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="569.8" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (33 samples, 0.04%)</title><rect x="567.3" y="451.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="570.3" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (33 samples, 0.04%)</title><rect x="567.3" y="435.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="570.3" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (33 samples, 0.04%)</title><rect x="567.3" y="419.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="570.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleGet (1,650 samples, 1.80%)</title><rect x="567.7" y="451.0" width="21.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="570.7" y="462.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (105 samples, 0.11%)</title><rect x="567.7" y="435.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="570.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (105 samples, 0.11%)</title><rect x="567.7" y="419.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="570.7" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (73 samples, 0.08%)</title><rect x="567.7" y="403.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="570.7" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (60 samples, 0.07%)</title><rect x="567.9" y="387.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="570.9" y="398.0"></text>
</g>
<g>
<title>byte[] (60 samples, 0.07%)</title><rect x="567.9" y="371.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="570.9" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (32 samples, 0.03%)</title><rect x="568.7" y="403.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="571.7" y="414.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (32 samples, 0.03%)</title><rect x="568.7" y="387.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="571.7" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (72 samples, 0.08%)</title><rect x="569.1" y="435.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="572.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (57 samples, 0.06%)</title><rect x="569.3" y="419.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="572.3" y="430.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.03%)</title><rect x="569.3" y="403.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="572.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,455 samples, 1.58%)</title><rect x="570.0" y="435.0" width="18.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="573.0" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (191 samples, 0.21%)</title><rect x="570.0" y="419.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="573.0" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (191 samples, 0.21%)</title><rect x="570.0" y="403.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="573.0" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (191 samples, 0.21%)</title><rect x="570.0" y="387.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="573.0" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (191 samples, 0.21%)</title><rect x="570.0" y="371.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="573.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (191 samples, 0.21%)</title><rect x="570.0" y="355.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="573.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (123 samples, 0.13%)</title><rect x="570.0" y="339.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="573.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (123 samples, 0.13%)</title><rect x="570.0" y="323.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="573.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (123 samples, 0.13%)</title><rect x="570.0" y="307.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="573.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (123 samples, 0.13%)</title><rect x="570.0" y="291.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="573.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (123 samples, 0.13%)</title><rect x="570.0" y="275.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="573.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (123 samples, 0.13%)</title><rect x="570.0" y="259.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="573.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (62 samples, 0.07%)</title><rect x="570.0" y="243.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="573.0" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (62 samples, 0.07%)</title><rect x="570.0" y="227.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="573.0" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (62 samples, 0.07%)</title><rect x="570.0" y="211.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="573.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (62 samples, 0.07%)</title><rect x="570.0" y="195.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="573.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (62 samples, 0.07%)</title><rect x="570.0" y="179.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="573.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (62 samples, 0.07%)</title><rect x="570.0" y="163.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="573.0" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (62 samples, 0.07%)</title><rect x="570.0" y="147.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="573.0" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (62 samples, 0.07%)</title><rect x="570.0" y="131.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="573.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (62 samples, 0.07%)</title><rect x="570.0" y="115.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="573.0" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (43 samples, 0.05%)</title><rect x="570.3" y="99.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="573.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (43 samples, 0.05%)</title><rect x="570.3" y="83.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="573.3" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (43 samples, 0.05%)</title><rect x="570.3" y="67.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="573.3" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (27 samples, 0.03%)</title><rect x="570.3" y="51.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="573.3" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (27 samples, 0.03%)</title><rect x="570.3" y="35.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="573.3" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (61 samples, 0.07%)</title><rect x="570.8" y="243.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="573.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (61 samples, 0.07%)</title><rect x="570.8" y="227.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="573.8" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (61 samples, 0.07%)</title><rect x="570.8" y="211.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="573.8" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (61 samples, 0.07%)</title><rect x="570.8" y="195.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="573.8" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (61 samples, 0.07%)</title><rect x="570.8" y="179.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="573.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$140/499586134.apply (68 samples, 0.07%)</title><rect x="571.6" y="339.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="574.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (68 samples, 0.07%)</title><rect x="571.6" y="323.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="574.6" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (68 samples, 0.07%)</title><rect x="571.6" y="307.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="574.6" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (68 samples, 0.07%)</title><rect x="571.6" y="291.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="574.6" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (68 samples, 0.07%)</title><rect x="571.6" y="275.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="574.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (73 samples, 0.08%)</title><rect x="572.5" y="419.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="575.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (73 samples, 0.08%)</title><rect x="572.5" y="403.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="575.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$151/1576841624.apply (73 samples, 0.08%)</title><rect x="572.5" y="387.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="575.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$3 (73 samples, 0.08%)</title><rect x="572.5" y="371.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="575.5" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (27 samples, 0.03%)</title><rect x="572.5" y="355.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="575.5" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (27 samples, 0.03%)</title><rect x="572.5" y="339.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="575.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (28 samples, 0.03%)</title><rect x="573.0" y="355.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="576.0" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (28 samples, 0.03%)</title><rect x="573.0" y="339.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="576.0" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (28 samples, 0.03%)</title><rect x="573.0" y="323.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="576.0" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (28 samples, 0.03%)</title><rect x="573.0" y="307.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="576.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (32 samples, 0.03%)</title><rect x="573.4" y="419.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="576.4" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (32 samples, 0.03%)</title><rect x="573.4" y="403.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="576.4" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (32 samples, 0.03%)</title><rect x="573.4" y="387.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="576.4" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (32 samples, 0.03%)</title><rect x="573.4" y="371.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="576.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (29 samples, 0.03%)</title><rect x="573.8" y="419.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="576.8" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (29 samples, 0.03%)</title><rect x="573.8" y="403.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="576.8" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (29 samples, 0.03%)</title><rect x="573.8" y="387.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="576.8" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (29 samples, 0.03%)</title><rect x="573.8" y="371.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="576.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (1,130 samples, 1.23%)</title><rect x="574.2" y="419.0" width="14.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="577.2" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (23 samples, 0.03%)</title><rect x="574.2" y="403.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="577.2" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (23 samples, 0.03%)</title><rect x="574.2" y="387.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="577.2" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (35 samples, 0.04%)</title><rect x="574.5" y="403.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="577.5" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (35 samples, 0.04%)</title><rect x="574.5" y="387.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="577.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (701 samples, 0.76%)</title><rect x="574.9" y="403.0" width="9.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="577.9" y="414.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (23 samples, 0.03%)</title><rect x="575.1" y="387.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="578.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (23 samples, 0.03%)</title><rect x="575.1" y="371.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="578.1" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (23 samples, 0.03%)</title><rect x="575.1" y="355.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="578.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (631 samples, 0.69%)</title><rect x="575.8" y="387.0" width="8.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="578.8" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (21 samples, 0.02%)</title><rect x="575.8" y="371.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="578.8" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (21 samples, 0.02%)</title><rect x="575.8" y="355.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="578.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (233 samples, 0.25%)</title><rect x="576.1" y="371.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="579.1" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (221 samples, 0.24%)</title><rect x="576.3" y="355.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="579.3" y="366.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (21 samples, 0.02%)</title><rect x="576.6" y="339.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="579.6" y="350.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (158 samples, 0.17%)</title><rect x="577.1" y="339.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="580.1" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (158 samples, 0.17%)</title><rect x="577.1" y="323.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="580.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (158 samples, 0.17%)</title><rect x="577.1" y="307.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="580.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (53 samples, 0.06%)</title><rect x="577.1" y="291.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="580.1" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (53 samples, 0.06%)</title><rect x="577.1" y="275.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="580.1" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (53 samples, 0.06%)</title><rect x="577.1" y="259.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="580.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (53 samples, 0.06%)</title><rect x="577.1" y="243.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="580.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (45 samples, 0.05%)</title><rect x="577.2" y="227.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="580.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (45 samples, 0.05%)</title><rect x="577.2" y="211.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="580.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (45 samples, 0.05%)</title><rect x="577.2" y="195.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="580.2" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (23 samples, 0.03%)</title><rect x="577.2" y="179.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="580.2" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (23 samples, 0.03%)</title><rect x="577.2" y="163.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="580.2" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (22 samples, 0.02%)</title><rect x="577.5" y="179.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="580.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (105 samples, 0.11%)</title><rect x="577.8" y="291.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="580.8" y="302.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (59 samples, 0.06%)</title><rect x="578.4" y="275.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="581.4" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (59 samples, 0.06%)</title><rect x="578.4" y="259.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="581.4" y="270.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (20 samples, 0.02%)</title><rect x="579.3" y="371.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="582.3" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (20 samples, 0.02%)</title><rect x="579.3" y="355.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="582.3" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$ValueIterator (20 samples, 0.02%)</title><rect x="579.3" y="339.0" width="0.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="582.3" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (32 samples, 0.03%)</title><rect x="580.1" y="371.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="583.1" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (21 samples, 0.02%)</title><rect x="580.3" y="355.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="583.3" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.02%)</title><rect x="580.3" y="339.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="583.3" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.02%)</title><rect x="580.3" y="323.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="583.3" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$93/506024426.get$Lambda (21 samples, 0.02%)</title><rect x="580.3" y="307.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="583.3" y="318.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$93 (21 samples, 0.02%)</title><rect x="580.3" y="291.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="583.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (80 samples, 0.09%)</title><rect x="580.5" y="371.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="583.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (65 samples, 0.07%)</title><rect x="580.7" y="355.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="583.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (65 samples, 0.07%)</title><rect x="580.7" y="339.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="583.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (65 samples, 0.07%)</title><rect x="580.7" y="323.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="583.7" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (65 samples, 0.07%)</title><rect x="580.7" y="307.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="583.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (65 samples, 0.07%)</title><rect x="580.7" y="291.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="583.7" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (65 samples, 0.07%)</title><rect x="580.7" y="275.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="583.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (65 samples, 0.07%)</title><rect x="580.7" y="259.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="583.7" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (65 samples, 0.07%)</title><rect x="580.7" y="243.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="583.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (65 samples, 0.07%)</title><rect x="580.7" y="227.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="583.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (65 samples, 0.07%)</title><rect x="580.7" y="211.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="583.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (55 samples, 0.06%)</title><rect x="580.9" y="195.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="583.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (55 samples, 0.06%)</title><rect x="580.9" y="179.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="583.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (55 samples, 0.06%)</title><rect x="580.9" y="163.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="583.9" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (35 samples, 0.04%)</title><rect x="580.9" y="147.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="583.9" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (35 samples, 0.04%)</title><rect x="580.9" y="131.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="583.9" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (20 samples, 0.02%)</title><rect x="581.3" y="147.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="584.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (186 samples, 0.20%)</title><rect x="581.6" y="371.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="584.6" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (48 samples, 0.05%)</title><rect x="581.6" y="355.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="584.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (26 samples, 0.03%)</title><rect x="581.6" y="339.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="584.6" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (26 samples, 0.03%)</title><rect x="581.6" y="323.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="584.6" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (22 samples, 0.02%)</title><rect x="581.9" y="339.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="584.9" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (22 samples, 0.02%)</title><rect x="581.9" y="323.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="584.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (36 samples, 0.04%)</title><rect x="582.3" y="355.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="585.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (36 samples, 0.04%)</title><rect x="582.3" y="339.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="585.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (36 samples, 0.04%)</title><rect x="582.3" y="323.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="585.3" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (36 samples, 0.04%)</title><rect x="582.3" y="307.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="585.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (52 samples, 0.06%)</title><rect x="582.8" y="355.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="585.8" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (38 samples, 0.04%)</title><rect x="583.0" y="339.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="586.0" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (25 samples, 0.03%)</title><rect x="583.1" y="323.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="586.1" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (25 samples, 0.03%)</title><rect x="583.1" y="307.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="586.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (39 samples, 0.04%)</title><rect x="583.5" y="355.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="586.5" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (39 samples, 0.04%)</title><rect x="583.5" y="339.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="586.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (370 samples, 0.40%)</title><rect x="584.0" y="403.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="587.0" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (209 samples, 0.23%)</title><rect x="584.0" y="387.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="587.0" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (193 samples, 0.21%)</title><rect x="584.2" y="371.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="587.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (127 samples, 0.14%)</title><rect x="584.4" y="355.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="587.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (127 samples, 0.14%)</title><rect x="584.4" y="339.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="587.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (127 samples, 0.14%)</title><rect x="584.4" y="323.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="587.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (127 samples, 0.14%)</title><rect x="584.4" y="307.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="587.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (61 samples, 0.07%)</title><rect x="584.4" y="291.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="587.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (61 samples, 0.07%)</title><rect x="584.4" y="275.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="587.4" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (61 samples, 0.07%)</title><rect x="584.4" y="259.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="587.4" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (61 samples, 0.07%)</title><rect x="584.4" y="243.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="587.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (61 samples, 0.07%)</title><rect x="584.4" y="227.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="587.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (61 samples, 0.07%)</title><rect x="584.4" y="211.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="587.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (61 samples, 0.07%)</title><rect x="584.4" y="195.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="587.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (61 samples, 0.07%)</title><rect x="584.4" y="179.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="587.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (61 samples, 0.07%)</title><rect x="584.4" y="163.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="587.4" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (47 samples, 0.05%)</title><rect x="584.6" y="147.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="587.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (47 samples, 0.05%)</title><rect x="584.6" y="131.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="587.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (47 samples, 0.05%)</title><rect x="584.6" y="115.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="587.6" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (32 samples, 0.03%)</title><rect x="584.6" y="99.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="587.6" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (32 samples, 0.03%)</title><rect x="584.6" y="83.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="587.6" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (66 samples, 0.07%)</title><rect x="585.2" y="291.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="588.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (66 samples, 0.07%)</title><rect x="585.2" y="275.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="588.2" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (66 samples, 0.07%)</title><rect x="585.2" y="259.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="588.2" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (66 samples, 0.07%)</title><rect x="585.2" y="243.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="588.2" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (66 samples, 0.07%)</title><rect x="585.2" y="227.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="588.2" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (22 samples, 0.02%)</title><rect x="586.8" y="387.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="589.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (127 samples, 0.14%)</title><rect x="587.1" y="387.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="590.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (113 samples, 0.12%)</title><rect x="587.3" y="371.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="590.3" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (113 samples, 0.12%)</title><rect x="587.3" y="355.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="590.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (113 samples, 0.12%)</title><rect x="587.3" y="339.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="590.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (113 samples, 0.12%)</title><rect x="587.3" y="323.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="590.3" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (113 samples, 0.12%)</title><rect x="587.3" y="307.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="590.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (113 samples, 0.12%)</title><rect x="587.3" y="291.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="590.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (113 samples, 0.12%)</title><rect x="587.3" y="275.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="590.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (57 samples, 0.06%)</title><rect x="587.3" y="259.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="590.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (57 samples, 0.06%)</title><rect x="587.3" y="243.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="590.3" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (57 samples, 0.06%)</title><rect x="587.3" y="227.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="590.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (57 samples, 0.06%)</title><rect x="587.3" y="211.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="590.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (57 samples, 0.06%)</title><rect x="587.3" y="195.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="590.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (57 samples, 0.06%)</title><rect x="587.3" y="179.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="590.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (57 samples, 0.06%)</title><rect x="587.3" y="163.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="590.3" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (57 samples, 0.06%)</title><rect x="587.3" y="147.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="590.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (57 samples, 0.06%)</title><rect x="587.3" y="131.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="590.3" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (47 samples, 0.05%)</title><rect x="587.4" y="115.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="590.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (47 samples, 0.05%)</title><rect x="587.4" y="99.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="590.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (47 samples, 0.05%)</title><rect x="587.4" y="83.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="590.4" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (31 samples, 0.03%)</title><rect x="587.4" y="67.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="590.4" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (31 samples, 0.03%)</title><rect x="587.4" y="51.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="590.4" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (56 samples, 0.06%)</title><rect x="588.0" y="259.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="591.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (56 samples, 0.06%)</title><rect x="588.0" y="243.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="591.0" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (56 samples, 0.06%)</title><rect x="588.0" y="227.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="591.0" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (56 samples, 0.06%)</title><rect x="588.0" y="211.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="591.0" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (56 samples, 0.06%)</title><rect x="588.0" y="195.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="591.0" y="206.0"></text>
</g>
<g>
<title>[2020-highload-dht-thread-5 tid=13579] (1,747 samples, 1.90%)</title><rect x="588.9" y="563.0" width="22.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="591.9" y="574.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (1,747 samples, 1.90%)</title><rect x="588.9" y="547.0" width="22.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="591.9" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,747 samples, 1.90%)</title><rect x="588.9" y="531.0" width="22.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="591.9" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,747 samples, 1.90%)</title><rect x="588.9" y="515.0" width="22.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="591.9" y="526.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.run (1,730 samples, 1.88%)</title><rect x="589.2" y="499.0" width="22.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="592.2" y="510.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$entity$1 (1,730 samples, 1.88%)</title><rect x="589.2" y="483.0" width="22.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="592.2" y="494.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleRequest (1,730 samples, 1.88%)</title><rect x="589.2" y="467.0" width="22.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="592.2" y="478.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (46 samples, 0.05%)</title><rect x="589.2" y="451.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="592.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (46 samples, 0.05%)</title><rect x="589.2" y="435.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="592.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (46 samples, 0.05%)</title><rect x="589.2" y="419.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="592.2" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (46 samples, 0.05%)</title><rect x="589.2" y="403.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="592.2" y="414.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.05%)</title><rect x="589.2" y="387.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="592.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleGet (1,669 samples, 1.82%)</title><rect x="589.9" y="451.0" width="21.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="592.9" y="462.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (113 samples, 0.12%)</title><rect x="589.9" y="435.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="592.9" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (113 samples, 0.12%)</title><rect x="589.9" y="419.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="592.9" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (88 samples, 0.10%)</title><rect x="589.9" y="403.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="592.9" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (70 samples, 0.08%)</title><rect x="590.2" y="387.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="593.2" y="398.0"></text>
</g>
<g>
<title>byte[] (70 samples, 0.08%)</title><rect x="590.2" y="371.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="593.2" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (25 samples, 0.03%)</title><rect x="591.1" y="403.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="594.1" y="414.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (25 samples, 0.03%)</title><rect x="591.1" y="387.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="594.1" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (78 samples, 0.08%)</title><rect x="591.4" y="435.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="594.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (63 samples, 0.07%)</title><rect x="591.6" y="419.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="594.6" y="430.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.03%)</title><rect x="591.6" y="403.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="594.6" y="414.0"></text>
</g>
<g>
<title>java.lang.String[] (26 samples, 0.03%)</title><rect x="591.9" y="403.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="594.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,443 samples, 1.57%)</title><rect x="592.4" y="435.0" width="18.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="595.4" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (161 samples, 0.18%)</title><rect x="592.4" y="419.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="595.4" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (161 samples, 0.18%)</title><rect x="592.4" y="403.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="595.4" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (161 samples, 0.18%)</title><rect x="592.4" y="387.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="595.4" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (161 samples, 0.18%)</title><rect x="592.4" y="371.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="595.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (161 samples, 0.18%)</title><rect x="592.4" y="355.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="595.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (104 samples, 0.11%)</title><rect x="592.4" y="339.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="595.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (104 samples, 0.11%)</title><rect x="592.4" y="323.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="595.4" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (104 samples, 0.11%)</title><rect x="592.4" y="307.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="595.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (104 samples, 0.11%)</title><rect x="592.4" y="291.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="595.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (104 samples, 0.11%)</title><rect x="592.4" y="275.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="595.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (104 samples, 0.11%)</title><rect x="592.4" y="259.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="595.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (47 samples, 0.05%)</title><rect x="592.4" y="243.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="595.4" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (47 samples, 0.05%)</title><rect x="592.4" y="227.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="595.4" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (47 samples, 0.05%)</title><rect x="592.4" y="211.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="595.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (47 samples, 0.05%)</title><rect x="592.4" y="195.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="595.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (47 samples, 0.05%)</title><rect x="592.4" y="179.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="595.4" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (47 samples, 0.05%)</title><rect x="592.4" y="163.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="595.4" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (47 samples, 0.05%)</title><rect x="592.4" y="147.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="595.4" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (47 samples, 0.05%)</title><rect x="592.4" y="131.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="595.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (47 samples, 0.05%)</title><rect x="592.4" y="115.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="595.4" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (34 samples, 0.04%)</title><rect x="592.6" y="99.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="595.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (34 samples, 0.04%)</title><rect x="592.6" y="83.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="595.6" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (34 samples, 0.04%)</title><rect x="592.6" y="67.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="595.6" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (27 samples, 0.03%)</title><rect x="592.6" y="51.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="595.6" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (27 samples, 0.03%)</title><rect x="592.6" y="35.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="595.6" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (57 samples, 0.06%)</title><rect x="593.0" y="243.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="596.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (57 samples, 0.06%)</title><rect x="593.0" y="227.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="596.0" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (57 samples, 0.06%)</title><rect x="593.0" y="211.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="596.0" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (57 samples, 0.06%)</title><rect x="593.0" y="195.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="596.0" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (57 samples, 0.06%)</title><rect x="593.0" y="179.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="596.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$140/499586134.apply (57 samples, 0.06%)</title><rect x="593.7" y="339.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="596.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (57 samples, 0.06%)</title><rect x="593.7" y="323.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="596.7" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (57 samples, 0.06%)</title><rect x="593.7" y="307.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="596.7" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (57 samples, 0.06%)</title><rect x="593.7" y="291.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="596.7" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (57 samples, 0.06%)</title><rect x="593.7" y="275.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="596.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (81 samples, 0.09%)</title><rect x="594.5" y="419.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="597.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (81 samples, 0.09%)</title><rect x="594.5" y="403.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="597.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$151/1576841624.apply (81 samples, 0.09%)</title><rect x="594.5" y="387.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="597.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$3 (81 samples, 0.09%)</title><rect x="594.5" y="371.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="597.5" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (31 samples, 0.03%)</title><rect x="594.5" y="355.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="597.5" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (31 samples, 0.03%)</title><rect x="594.5" y="339.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="597.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (36 samples, 0.04%)</title><rect x="595.0" y="355.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="598.0" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (36 samples, 0.04%)</title><rect x="595.0" y="339.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="598.0" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (36 samples, 0.04%)</title><rect x="595.0" y="323.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="598.0" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (36 samples, 0.04%)</title><rect x="595.0" y="307.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="598.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (33 samples, 0.04%)</title><rect x="595.5" y="419.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="598.5" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (33 samples, 0.04%)</title><rect x="595.5" y="403.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="598.5" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (33 samples, 0.04%)</title><rect x="595.5" y="387.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="598.5" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (33 samples, 0.04%)</title><rect x="595.5" y="371.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="598.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (38 samples, 0.04%)</title><rect x="595.9" y="419.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="598.9" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (38 samples, 0.04%)</title><rect x="595.9" y="403.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="598.9" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (38 samples, 0.04%)</title><rect x="595.9" y="387.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="598.9" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (38 samples, 0.04%)</title><rect x="595.9" y="371.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="598.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (1,130 samples, 1.23%)</title><rect x="596.4" y="419.0" width="14.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="599.4" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (20 samples, 0.02%)</title><rect x="596.6" y="403.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="599.6" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (20 samples, 0.02%)</title><rect x="596.6" y="387.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="599.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (730 samples, 0.79%)</title><rect x="596.9" y="403.0" width="9.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="599.9" y="414.0"></text>
</g>
<g>
<title>java.util.ArrayList (23 samples, 0.03%)</title><rect x="596.9" y="387.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="599.9" y="398.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (20 samples, 0.02%)</title><rect x="597.2" y="387.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="600.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (20 samples, 0.02%)</title><rect x="597.2" y="371.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="600.2" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (20 samples, 0.02%)</title><rect x="597.2" y="355.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="600.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (663 samples, 0.72%)</title><rect x="597.8" y="387.0" width="8.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="600.8" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (26 samples, 0.03%)</title><rect x="597.8" y="371.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="600.8" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (26 samples, 0.03%)</title><rect x="597.8" y="355.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="600.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (254 samples, 0.28%)</title><rect x="598.1" y="371.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="601.1" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (244 samples, 0.27%)</title><rect x="598.2" y="355.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="601.2" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (181 samples, 0.20%)</title><rect x="599.0" y="339.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="602.0" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (181 samples, 0.20%)</title><rect x="599.0" y="323.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="602.0" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (181 samples, 0.20%)</title><rect x="599.0" y="307.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="602.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (64 samples, 0.07%)</title><rect x="599.0" y="291.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="602.0" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (64 samples, 0.07%)</title><rect x="599.0" y="275.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="602.0" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (64 samples, 0.07%)</title><rect x="599.0" y="259.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="602.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (64 samples, 0.07%)</title><rect x="599.0" y="243.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="602.0" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (53 samples, 0.06%)</title><rect x="599.2" y="227.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="602.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (53 samples, 0.06%)</title><rect x="599.2" y="211.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="602.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (53 samples, 0.06%)</title><rect x="599.2" y="195.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="602.2" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (39 samples, 0.04%)</title><rect x="599.2" y="179.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="602.2" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (39 samples, 0.04%)</title><rect x="599.2" y="163.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="602.2" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (117 samples, 0.13%)</title><rect x="599.9" y="291.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="602.9" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (25 samples, 0.03%)</title><rect x="599.9" y="275.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="602.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (24 samples, 0.03%)</title><rect x="600.2" y="275.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="603.2" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.03%)</title><rect x="600.2" y="259.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="603.2" y="270.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (21 samples, 0.02%)</title><rect x="600.5" y="275.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="603.5" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (21 samples, 0.02%)</title><rect x="600.5" y="259.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="603.5" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (21 samples, 0.02%)</title><rect x="600.5" y="243.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="603.5" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (47 samples, 0.05%)</title><rect x="600.8" y="275.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="603.8" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (47 samples, 0.05%)</title><rect x="600.8" y="259.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="603.8" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (20 samples, 0.02%)</title><rect x="601.4" y="371.0" width="0.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="604.4" y="382.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (21 samples, 0.02%)</title><rect x="601.6" y="371.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="604.6" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (21 samples, 0.02%)</title><rect x="601.6" y="355.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="604.6" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$ValueIterator (21 samples, 0.02%)</title><rect x="601.6" y="339.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="604.6" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (26 samples, 0.03%)</title><rect x="602.5" y="371.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="605.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (99 samples, 0.11%)</title><rect x="602.9" y="371.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="605.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (84 samples, 0.09%)</title><rect x="603.1" y="355.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="606.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (84 samples, 0.09%)</title><rect x="603.1" y="339.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="606.1" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (84 samples, 0.09%)</title><rect x="603.1" y="323.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="606.1" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (84 samples, 0.09%)</title><rect x="603.1" y="307.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="606.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (84 samples, 0.09%)</title><rect x="603.1" y="291.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="606.1" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (84 samples, 0.09%)</title><rect x="603.1" y="275.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="606.1" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (84 samples, 0.09%)</title><rect x="603.1" y="259.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="606.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (84 samples, 0.09%)</title><rect x="603.1" y="243.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="606.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (84 samples, 0.09%)</title><rect x="603.1" y="227.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="606.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (84 samples, 0.09%)</title><rect x="603.1" y="211.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="606.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (21 samples, 0.02%)</title><rect x="603.1" y="195.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="606.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (21 samples, 0.02%)</title><rect x="603.1" y="179.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="606.1" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (21 samples, 0.02%)</title><rect x="603.1" y="163.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="606.1" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (63 samples, 0.07%)</title><rect x="603.4" y="195.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="606.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (63 samples, 0.07%)</title><rect x="603.4" y="179.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="606.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (63 samples, 0.07%)</title><rect x="603.4" y="163.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="606.4" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (41 samples, 0.04%)</title><rect x="603.4" y="147.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="606.4" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (41 samples, 0.04%)</title><rect x="603.4" y="131.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="606.4" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (22 samples, 0.02%)</title><rect x="603.9" y="147.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="606.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (165 samples, 0.18%)</title><rect x="604.2" y="371.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="607.2" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (50 samples, 0.05%)</title><rect x="604.2" y="355.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="607.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (29 samples, 0.03%)</title><rect x="604.2" y="339.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="607.2" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (29 samples, 0.03%)</title><rect x="604.2" y="323.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="607.2" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (21 samples, 0.02%)</title><rect x="604.5" y="339.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="607.5" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (21 samples, 0.02%)</title><rect x="604.5" y="323.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="607.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (30 samples, 0.03%)</title><rect x="605.0" y="355.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="608.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (30 samples, 0.03%)</title><rect x="605.0" y="339.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="608.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (30 samples, 0.03%)</title><rect x="605.0" y="323.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="608.0" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (30 samples, 0.03%)</title><rect x="605.0" y="307.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="608.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (44 samples, 0.05%)</title><rect x="605.4" y="355.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="608.4" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (34 samples, 0.04%)</title><rect x="605.5" y="339.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="608.5" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (26 samples, 0.03%)</title><rect x="605.6" y="323.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="608.6" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (26 samples, 0.03%)</title><rect x="605.6" y="307.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="608.6" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (27 samples, 0.03%)</title><rect x="605.9" y="355.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="608.9" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (27 samples, 0.03%)</title><rect x="605.9" y="339.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="608.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (362 samples, 0.39%)</title><rect x="606.3" y="403.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="609.3" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (197 samples, 0.21%)</title><rect x="606.3" y="387.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="609.3" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (189 samples, 0.21%)</title><rect x="606.4" y="371.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="609.4" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (115 samples, 0.13%)</title><rect x="606.6" y="355.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="609.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (115 samples, 0.13%)</title><rect x="606.6" y="339.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="609.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (115 samples, 0.13%)</title><rect x="606.6" y="323.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="609.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (115 samples, 0.13%)</title><rect x="606.6" y="307.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="609.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (54 samples, 0.06%)</title><rect x="606.6" y="291.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="609.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (54 samples, 0.06%)</title><rect x="606.6" y="275.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="609.6" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (54 samples, 0.06%)</title><rect x="606.6" y="259.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="609.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (54 samples, 0.06%)</title><rect x="606.6" y="243.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="609.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (54 samples, 0.06%)</title><rect x="606.6" y="227.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="609.6" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (54 samples, 0.06%)</title><rect x="606.6" y="211.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="609.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (54 samples, 0.06%)</title><rect x="606.6" y="195.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="609.6" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (54 samples, 0.06%)</title><rect x="606.6" y="179.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="609.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (54 samples, 0.06%)</title><rect x="606.6" y="163.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="609.6" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (43 samples, 0.05%)</title><rect x="606.7" y="147.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="609.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (43 samples, 0.05%)</title><rect x="606.7" y="131.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="609.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (43 samples, 0.05%)</title><rect x="606.7" y="115.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="609.7" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (29 samples, 0.03%)</title><rect x="606.7" y="99.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="609.7" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (29 samples, 0.03%)</title><rect x="606.7" y="83.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="609.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (61 samples, 0.07%)</title><rect x="607.3" y="291.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="610.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (61 samples, 0.07%)</title><rect x="607.3" y="275.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="610.3" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (61 samples, 0.07%)</title><rect x="607.3" y="259.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="610.3" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (61 samples, 0.07%)</title><rect x="607.3" y="243.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="610.3" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (61 samples, 0.07%)</title><rect x="607.3" y="227.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="610.3" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (20 samples, 0.02%)</title><rect x="608.0" y="355.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="611.0" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (20 samples, 0.02%)</title><rect x="608.0" y="339.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="611.0" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (25 samples, 0.03%)</title><rect x="608.5" y="355.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="611.5" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (25 samples, 0.03%)</title><rect x="608.5" y="339.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="611.5" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (35 samples, 0.04%)</title><rect x="608.9" y="387.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="611.9" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (20 samples, 0.02%)</title><rect x="608.9" y="371.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="611.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.02%)</title><rect x="608.9" y="355.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="611.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.02%)</title><rect x="608.9" y="339.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="611.9" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$82/363190164.get$Lambda (20 samples, 0.02%)</title><rect x="608.9" y="323.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="611.9" y="334.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$82 (20 samples, 0.02%)</title><rect x="608.9" y="307.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="611.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (124 samples, 0.14%)</title><rect x="609.3" y="387.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="612.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (111 samples, 0.12%)</title><rect x="609.5" y="371.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="612.5" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (111 samples, 0.12%)</title><rect x="609.5" y="355.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="612.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (111 samples, 0.12%)</title><rect x="609.5" y="339.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="612.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (111 samples, 0.12%)</title><rect x="609.5" y="323.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="612.5" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (111 samples, 0.12%)</title><rect x="609.5" y="307.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="612.5" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (111 samples, 0.12%)</title><rect x="609.5" y="291.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="612.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (111 samples, 0.12%)</title><rect x="609.5" y="275.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="612.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (47 samples, 0.05%)</title><rect x="609.5" y="259.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="612.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (47 samples, 0.05%)</title><rect x="609.5" y="243.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="612.5" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (47 samples, 0.05%)</title><rect x="609.5" y="227.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="612.5" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (47 samples, 0.05%)</title><rect x="609.5" y="211.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="612.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (47 samples, 0.05%)</title><rect x="609.5" y="195.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="612.5" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (47 samples, 0.05%)</title><rect x="609.5" y="179.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="612.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (47 samples, 0.05%)</title><rect x="609.5" y="163.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="612.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (47 samples, 0.05%)</title><rect x="609.5" y="147.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="612.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (47 samples, 0.05%)</title><rect x="609.5" y="131.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="612.5" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (34 samples, 0.04%)</title><rect x="609.7" y="115.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="612.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (34 samples, 0.04%)</title><rect x="609.7" y="99.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="612.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (34 samples, 0.04%)</title><rect x="609.7" y="83.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="612.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (64 samples, 0.07%)</title><rect x="610.1" y="259.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="613.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (64 samples, 0.07%)</title><rect x="610.1" y="243.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="613.1" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (64 samples, 0.07%)</title><rect x="610.1" y="227.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="613.1" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (64 samples, 0.07%)</title><rect x="610.1" y="211.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="613.1" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (64 samples, 0.07%)</title><rect x="610.1" y="195.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="613.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.getBytesFromByteBuffer (35 samples, 0.04%)</title><rect x="610.9" y="435.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="613.9" y="446.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.04%)</title><rect x="610.9" y="419.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="613.9" y="430.0"></text>
</g>
<g>
<title>[2020-highload-dht-thread-5 tid=13587] (1,740 samples, 1.89%)</title><rect x="611.4" y="563.0" width="22.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="614.4" y="574.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (1,740 samples, 1.89%)</title><rect x="611.4" y="547.0" width="22.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="614.4" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,740 samples, 1.89%)</title><rect x="611.4" y="531.0" width="22.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="614.4" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,740 samples, 1.89%)</title><rect x="611.4" y="515.0" width="22.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="614.4" y="526.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.run (1,721 samples, 1.87%)</title><rect x="611.6" y="499.0" width="22.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="614.6" y="510.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$entity$1 (1,721 samples, 1.87%)</title><rect x="611.6" y="483.0" width="22.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="614.6" y="494.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleRequest (1,721 samples, 1.87%)</title><rect x="611.6" y="467.0" width="22.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="614.6" y="478.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (44 samples, 0.05%)</title><rect x="611.6" y="451.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="614.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (44 samples, 0.05%)</title><rect x="611.6" y="435.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="614.6" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (44 samples, 0.05%)</title><rect x="611.6" y="419.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="614.6" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (44 samples, 0.05%)</title><rect x="611.6" y="403.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="614.6" y="414.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.05%)</title><rect x="611.6" y="387.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="614.6" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (28 samples, 0.03%)</title><rect x="612.2" y="451.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="615.2" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (28 samples, 0.03%)</title><rect x="612.2" y="435.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="615.2" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (28 samples, 0.03%)</title><rect x="612.2" y="419.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="615.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleGet (1,649 samples, 1.80%)</title><rect x="612.6" y="451.0" width="21.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="615.6" y="462.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (95 samples, 0.10%)</title><rect x="612.6" y="435.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="615.6" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (95 samples, 0.10%)</title><rect x="612.6" y="419.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="615.6" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (69 samples, 0.08%)</title><rect x="612.6" y="403.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="615.6" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (54 samples, 0.06%)</title><rect x="612.7" y="387.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="615.7" y="398.0"></text>
</g>
<g>
<title>byte[] (54 samples, 0.06%)</title><rect x="612.7" y="371.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="615.7" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (26 samples, 0.03%)</title><rect x="613.4" y="403.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="616.4" y="414.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (26 samples, 0.03%)</title><rect x="613.4" y="387.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="616.4" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (66 samples, 0.07%)</title><rect x="613.8" y="435.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="616.8" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (50 samples, 0.05%)</title><rect x="614.0" y="419.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="617.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,462 samples, 1.59%)</title><rect x="614.6" y="435.0" width="18.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="617.6" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (172 samples, 0.19%)</title><rect x="614.6" y="419.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="617.6" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (172 samples, 0.19%)</title><rect x="614.6" y="403.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="617.6" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (172 samples, 0.19%)</title><rect x="614.6" y="387.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="617.6" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (172 samples, 0.19%)</title><rect x="614.6" y="371.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="617.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (172 samples, 0.19%)</title><rect x="614.6" y="355.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="617.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (124 samples, 0.14%)</title><rect x="614.6" y="339.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="617.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (124 samples, 0.14%)</title><rect x="614.6" y="323.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="617.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (124 samples, 0.14%)</title><rect x="614.6" y="307.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="617.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (124 samples, 0.14%)</title><rect x="614.6" y="291.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="617.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (124 samples, 0.14%)</title><rect x="614.6" y="275.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="617.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (124 samples, 0.14%)</title><rect x="614.6" y="259.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="617.6" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (65 samples, 0.07%)</title><rect x="614.6" y="243.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="617.6" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (65 samples, 0.07%)</title><rect x="614.6" y="227.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="617.6" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (65 samples, 0.07%)</title><rect x="614.6" y="211.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="617.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (65 samples, 0.07%)</title><rect x="614.6" y="195.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="617.6" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (65 samples, 0.07%)</title><rect x="614.6" y="179.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="617.6" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (65 samples, 0.07%)</title><rect x="614.6" y="163.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="617.6" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (65 samples, 0.07%)</title><rect x="614.6" y="147.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="617.6" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (65 samples, 0.07%)</title><rect x="614.6" y="131.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="617.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (65 samples, 0.07%)</title><rect x="614.6" y="115.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="617.6" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (21 samples, 0.02%)</title><rect x="614.6" y="99.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="617.6" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (21 samples, 0.02%)</title><rect x="614.6" y="83.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="617.6" y="94.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (21 samples, 0.02%)</title><rect x="614.6" y="67.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="617.6" y="78.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (44 samples, 0.05%)</title><rect x="614.9" y="99.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="617.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (44 samples, 0.05%)</title><rect x="614.9" y="83.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="617.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (44 samples, 0.05%)</title><rect x="614.9" y="67.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="617.9" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (30 samples, 0.03%)</title><rect x="614.9" y="51.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="617.9" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (30 samples, 0.03%)</title><rect x="614.9" y="35.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="617.9" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (59 samples, 0.06%)</title><rect x="615.5" y="243.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="618.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (59 samples, 0.06%)</title><rect x="615.5" y="227.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="618.5" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (59 samples, 0.06%)</title><rect x="615.5" y="211.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="618.5" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (59 samples, 0.06%)</title><rect x="615.5" y="195.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="618.5" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (59 samples, 0.06%)</title><rect x="615.5" y="179.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="618.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$140/499586134.apply (48 samples, 0.05%)</title><rect x="616.2" y="339.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="619.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (48 samples, 0.05%)</title><rect x="616.2" y="323.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="619.2" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (48 samples, 0.05%)</title><rect x="616.2" y="307.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="619.2" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (48 samples, 0.05%)</title><rect x="616.2" y="291.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="619.2" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (48 samples, 0.05%)</title><rect x="616.2" y="275.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="619.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (84 samples, 0.09%)</title><rect x="616.8" y="419.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="619.8" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (84 samples, 0.09%)</title><rect x="616.8" y="403.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="619.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$151/1576841624.apply (84 samples, 0.09%)</title><rect x="616.8" y="387.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="619.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$3 (84 samples, 0.09%)</title><rect x="616.8" y="371.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="619.8" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (32 samples, 0.03%)</title><rect x="616.8" y="355.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="619.8" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (32 samples, 0.03%)</title><rect x="616.8" y="339.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="619.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (33 samples, 0.04%)</title><rect x="617.5" y="355.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="620.5" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (33 samples, 0.04%)</title><rect x="617.5" y="339.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="620.5" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (33 samples, 0.04%)</title><rect x="617.5" y="323.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="620.5" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (33 samples, 0.04%)</title><rect x="617.5" y="307.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="620.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (25 samples, 0.03%)</title><rect x="617.9" y="419.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="620.9" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (25 samples, 0.03%)</title><rect x="617.9" y="403.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="620.9" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (25 samples, 0.03%)</title><rect x="617.9" y="387.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="620.9" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (25 samples, 0.03%)</title><rect x="617.9" y="371.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="620.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (33 samples, 0.04%)</title><rect x="618.2" y="419.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="621.2" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (33 samples, 0.04%)</title><rect x="618.2" y="403.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="621.2" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (33 samples, 0.04%)</title><rect x="618.2" y="387.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="621.2" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (33 samples, 0.04%)</title><rect x="618.2" y="371.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="621.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (1,148 samples, 1.25%)</title><rect x="618.7" y="419.0" width="14.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="621.7" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (29 samples, 0.03%)</title><rect x="618.7" y="403.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="621.7" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (29 samples, 0.03%)</title><rect x="618.7" y="387.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="621.7" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (31 samples, 0.03%)</title><rect x="619.0" y="403.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="622.0" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (31 samples, 0.03%)</title><rect x="619.0" y="387.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="622.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (720 samples, 0.78%)</title><rect x="619.4" y="403.0" width="9.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="622.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (657 samples, 0.72%)</title><rect x="620.2" y="387.0" width="8.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="623.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (23 samples, 0.03%)</title><rect x="620.2" y="371.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="623.2" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (23 samples, 0.03%)</title><rect x="620.2" y="355.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="623.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (254 samples, 0.28%)</title><rect x="620.5" y="371.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="623.5" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (248 samples, 0.27%)</title><rect x="620.6" y="355.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="623.6" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (22 samples, 0.02%)</title><rect x="620.6" y="339.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="623.6" y="350.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (24 samples, 0.03%)</title><rect x="621.1" y="339.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="624.1" y="350.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (173 samples, 0.19%)</title><rect x="621.6" y="339.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="624.6" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (173 samples, 0.19%)</title><rect x="621.6" y="323.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="624.6" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (173 samples, 0.19%)</title><rect x="621.6" y="307.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="624.6" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (61 samples, 0.07%)</title><rect x="621.6" y="291.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="624.6" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (61 samples, 0.07%)</title><rect x="621.6" y="275.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="624.6" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (61 samples, 0.07%)</title><rect x="621.6" y="259.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="624.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (61 samples, 0.07%)</title><rect x="621.6" y="243.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="624.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (48 samples, 0.05%)</title><rect x="621.7" y="227.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="624.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (48 samples, 0.05%)</title><rect x="621.7" y="211.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="624.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (48 samples, 0.05%)</title><rect x="621.7" y="195.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="624.7" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (33 samples, 0.04%)</title><rect x="621.7" y="179.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="624.7" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (33 samples, 0.04%)</title><rect x="621.7" y="163.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="624.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (112 samples, 0.12%)</title><rect x="622.4" y="291.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="625.4" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (23 samples, 0.03%)</title><rect x="622.4" y="275.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="625.4" y="286.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (55 samples, 0.06%)</title><rect x="623.1" y="275.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="626.1" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (55 samples, 0.06%)</title><rect x="623.1" y="259.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="626.1" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (22 samples, 0.02%)</title><rect x="624.6" y="371.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="627.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (82 samples, 0.09%)</title><rect x="624.9" y="371.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="627.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (63 samples, 0.07%)</title><rect x="625.1" y="355.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="628.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (63 samples, 0.07%)</title><rect x="625.1" y="339.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="628.1" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (63 samples, 0.07%)</title><rect x="625.1" y="323.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="628.1" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (63 samples, 0.07%)</title><rect x="625.1" y="307.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="628.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (63 samples, 0.07%)</title><rect x="625.1" y="291.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="628.1" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (63 samples, 0.07%)</title><rect x="625.1" y="275.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="628.1" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (63 samples, 0.07%)</title><rect x="625.1" y="259.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="628.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (63 samples, 0.07%)</title><rect x="625.1" y="243.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="628.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (63 samples, 0.07%)</title><rect x="625.1" y="227.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="628.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (63 samples, 0.07%)</title><rect x="625.1" y="211.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="628.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (52 samples, 0.06%)</title><rect x="625.3" y="195.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="628.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (52 samples, 0.06%)</title><rect x="625.3" y="179.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="628.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (52 samples, 0.06%)</title><rect x="625.3" y="163.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="628.3" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (40 samples, 0.04%)</title><rect x="625.3" y="147.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="628.3" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (40 samples, 0.04%)</title><rect x="625.3" y="131.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="628.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (212 samples, 0.23%)</title><rect x="626.0" y="371.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="629.0" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (58 samples, 0.06%)</title><rect x="626.0" y="355.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="629.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (23 samples, 0.03%)</title><rect x="626.0" y="339.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="629.0" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (23 samples, 0.03%)</title><rect x="626.0" y="323.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="629.0" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (35 samples, 0.04%)</title><rect x="626.2" y="339.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="629.2" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (35 samples, 0.04%)</title><rect x="626.2" y="323.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="629.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (28 samples, 0.03%)</title><rect x="626.9" y="355.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="629.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (28 samples, 0.03%)</title><rect x="626.9" y="339.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="629.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (28 samples, 0.03%)</title><rect x="626.9" y="323.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="629.9" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (28 samples, 0.03%)</title><rect x="626.9" y="307.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="629.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (66 samples, 0.07%)</title><rect x="627.3" y="355.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="630.3" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (23 samples, 0.03%)</title><rect x="627.3" y="339.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="630.3" y="350.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (23 samples, 0.03%)</title><rect x="627.3" y="323.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="630.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (43 samples, 0.05%)</title><rect x="627.6" y="339.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="630.6" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (33 samples, 0.04%)</title><rect x="627.7" y="323.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="630.7" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (33 samples, 0.04%)</title><rect x="627.7" y="307.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="630.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (44 samples, 0.05%)</title><rect x="628.1" y="355.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="631.1" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (44 samples, 0.05%)</title><rect x="628.1" y="339.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="631.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (368 samples, 0.40%)</title><rect x="628.7" y="403.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="631.7" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (197 samples, 0.21%)</title><rect x="628.7" y="387.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="631.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (190 samples, 0.21%)</title><rect x="628.8" y="371.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="631.8" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (118 samples, 0.13%)</title><rect x="629.0" y="355.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="632.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (118 samples, 0.13%)</title><rect x="629.0" y="339.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="632.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (118 samples, 0.13%)</title><rect x="629.0" y="323.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="632.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (118 samples, 0.13%)</title><rect x="629.0" y="307.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="632.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (56 samples, 0.06%)</title><rect x="629.0" y="291.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="632.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (56 samples, 0.06%)</title><rect x="629.0" y="275.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="632.0" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (56 samples, 0.06%)</title><rect x="629.0" y="259.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="632.0" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (56 samples, 0.06%)</title><rect x="629.0" y="243.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="632.0" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (56 samples, 0.06%)</title><rect x="629.0" y="227.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="632.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (56 samples, 0.06%)</title><rect x="629.0" y="211.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="632.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (56 samples, 0.06%)</title><rect x="629.0" y="195.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="632.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (56 samples, 0.06%)</title><rect x="629.0" y="179.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="632.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (56 samples, 0.06%)</title><rect x="629.0" y="163.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="632.0" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (46 samples, 0.05%)</title><rect x="629.1" y="147.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="632.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (46 samples, 0.05%)</title><rect x="629.1" y="131.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="632.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (46 samples, 0.05%)</title><rect x="629.1" y="115.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="632.1" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (31 samples, 0.03%)</title><rect x="629.1" y="99.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="632.1" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (31 samples, 0.03%)</title><rect x="629.1" y="83.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="632.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (62 samples, 0.07%)</title><rect x="629.7" y="291.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="632.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (62 samples, 0.07%)</title><rect x="629.7" y="275.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="632.7" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (62 samples, 0.07%)</title><rect x="629.7" y="259.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="632.7" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (62 samples, 0.07%)</title><rect x="629.7" y="243.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="632.7" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (62 samples, 0.07%)</title><rect x="629.7" y="227.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="632.7" y="238.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (21 samples, 0.02%)</title><rect x="630.7" y="355.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="633.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (142 samples, 0.15%)</title><rect x="631.6" y="387.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="634.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (128 samples, 0.14%)</title><rect x="631.8" y="371.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="634.8" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (128 samples, 0.14%)</title><rect x="631.8" y="355.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="634.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (128 samples, 0.14%)</title><rect x="631.8" y="339.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="634.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (128 samples, 0.14%)</title><rect x="631.8" y="323.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="634.8" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (128 samples, 0.14%)</title><rect x="631.8" y="307.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="634.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (128 samples, 0.14%)</title><rect x="631.8" y="291.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="634.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (128 samples, 0.14%)</title><rect x="631.8" y="275.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="634.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (65 samples, 0.07%)</title><rect x="631.8" y="259.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="634.8" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (65 samples, 0.07%)</title><rect x="631.8" y="243.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="634.8" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (65 samples, 0.07%)</title><rect x="631.8" y="227.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="634.8" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (65 samples, 0.07%)</title><rect x="631.8" y="211.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="634.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (65 samples, 0.07%)</title><rect x="631.8" y="195.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="634.8" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (65 samples, 0.07%)</title><rect x="631.8" y="179.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="634.8" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (65 samples, 0.07%)</title><rect x="631.8" y="163.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="634.8" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (65 samples, 0.07%)</title><rect x="631.8" y="147.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="634.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (65 samples, 0.07%)</title><rect x="631.8" y="131.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="634.8" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (52 samples, 0.06%)</title><rect x="631.9" y="115.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="634.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (52 samples, 0.06%)</title><rect x="631.9" y="99.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="634.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (52 samples, 0.06%)</title><rect x="631.9" y="83.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="634.9" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (34 samples, 0.04%)</title><rect x="631.9" y="67.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="634.9" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (34 samples, 0.04%)</title><rect x="631.9" y="51.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="634.9" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (63 samples, 0.07%)</title><rect x="632.6" y="259.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="635.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (63 samples, 0.07%)</title><rect x="632.6" y="243.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="635.6" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (63 samples, 0.07%)</title><rect x="632.6" y="227.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="635.6" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (63 samples, 0.07%)</title><rect x="632.6" y="211.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="635.6" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (63 samples, 0.07%)</title><rect x="632.6" y="195.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="635.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.getBytesFromByteBuffer (26 samples, 0.03%)</title><rect x="633.4" y="435.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="636.4" y="446.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.03%)</title><rect x="633.4" y="419.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="636.4" y="430.0"></text>
</g>
<g>
<title>[2020-highload-dht-thread-6 tid=13577] (1,750 samples, 1.91%)</title><rect x="633.7" y="563.0" width="22.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="636.7" y="574.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (1,750 samples, 1.91%)</title><rect x="633.7" y="547.0" width="22.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="636.7" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,750 samples, 1.91%)</title><rect x="633.7" y="531.0" width="22.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="636.7" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,750 samples, 1.91%)</title><rect x="633.7" y="515.0" width="22.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="636.7" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (26 samples, 0.03%)</title><rect x="633.7" y="499.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="636.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (26 samples, 0.03%)</title><rect x="633.7" y="483.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="636.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (26 samples, 0.03%)</title><rect x="633.7" y="467.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="636.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (26 samples, 0.03%)</title><rect x="633.7" y="451.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="636.7" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (26 samples, 0.03%)</title><rect x="633.7" y="435.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="636.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.run (1,724 samples, 1.88%)</title><rect x="634.1" y="499.0" width="22.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="637.1" y="510.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$entity$1 (1,724 samples, 1.88%)</title><rect x="634.1" y="483.0" width="22.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="637.1" y="494.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleRequest (1,724 samples, 1.88%)</title><rect x="634.1" y="467.0" width="22.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="637.1" y="478.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (35 samples, 0.04%)</title><rect x="634.1" y="451.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="637.1" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (35 samples, 0.04%)</title><rect x="634.1" y="435.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="637.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (35 samples, 0.04%)</title><rect x="634.1" y="419.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="637.1" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (35 samples, 0.04%)</title><rect x="634.1" y="403.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="637.1" y="414.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.04%)</title><rect x="634.1" y="387.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="637.1" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (33 samples, 0.04%)</title><rect x="634.5" y="451.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="637.5" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (33 samples, 0.04%)</title><rect x="634.5" y="435.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="637.5" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (33 samples, 0.04%)</title><rect x="634.5" y="419.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="637.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleGet (1,656 samples, 1.80%)</title><rect x="634.9" y="451.0" width="21.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="637.9" y="462.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (108 samples, 0.12%)</title><rect x="634.9" y="435.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="637.9" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (108 samples, 0.12%)</title><rect x="634.9" y="419.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="637.9" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (82 samples, 0.09%)</title><rect x="634.9" y="403.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="637.9" y="414.0"></text>
</g>
<g>
<title>one.nio.util.ByteArrayBuilder (20 samples, 0.02%)</title><rect x="634.9" y="387.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="637.9" y="398.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (62 samples, 0.07%)</title><rect x="635.2" y="387.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="638.2" y="398.0"></text>
</g>
<g>
<title>byte[] (62 samples, 0.07%)</title><rect x="635.2" y="371.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="638.2" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (26 samples, 0.03%)</title><rect x="636.0" y="403.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="639.0" y="414.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (26 samples, 0.03%)</title><rect x="636.0" y="387.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="639.0" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (78 samples, 0.08%)</title><rect x="636.3" y="435.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="639.3" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (62 samples, 0.07%)</title><rect x="636.5" y="419.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="639.5" y="430.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.03%)</title><rect x="636.5" y="403.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="639.5" y="414.0"></text>
</g>
<g>
<title>java.lang.String[] (23 samples, 0.03%)</title><rect x="636.8" y="403.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="639.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,451 samples, 1.58%)</title><rect x="637.3" y="435.0" width="18.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="640.3" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (196 samples, 0.21%)</title><rect x="637.3" y="419.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="640.3" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (196 samples, 0.21%)</title><rect x="637.3" y="403.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="640.3" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (196 samples, 0.21%)</title><rect x="637.3" y="387.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="640.3" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (196 samples, 0.21%)</title><rect x="637.3" y="371.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="640.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (196 samples, 0.21%)</title><rect x="637.3" y="355.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="640.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (137 samples, 0.15%)</title><rect x="637.3" y="339.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="640.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (137 samples, 0.15%)</title><rect x="637.3" y="323.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="640.3" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (137 samples, 0.15%)</title><rect x="637.3" y="307.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="640.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (137 samples, 0.15%)</title><rect x="637.3" y="291.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="640.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (137 samples, 0.15%)</title><rect x="637.3" y="275.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="640.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (137 samples, 0.15%)</title><rect x="637.3" y="259.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="640.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (79 samples, 0.09%)</title><rect x="637.3" y="243.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="640.3" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (79 samples, 0.09%)</title><rect x="637.3" y="227.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="640.3" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (79 samples, 0.09%)</title><rect x="637.3" y="211.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="640.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (79 samples, 0.09%)</title><rect x="637.3" y="195.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="640.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (79 samples, 0.09%)</title><rect x="637.3" y="179.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="640.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (79 samples, 0.09%)</title><rect x="637.3" y="163.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="640.3" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (79 samples, 0.09%)</title><rect x="637.3" y="147.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="640.3" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (79 samples, 0.09%)</title><rect x="637.3" y="131.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="640.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (79 samples, 0.09%)</title><rect x="637.3" y="115.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="640.3" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (21 samples, 0.02%)</title><rect x="637.3" y="99.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="640.3" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (21 samples, 0.02%)</title><rect x="637.3" y="83.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="640.3" y="94.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (21 samples, 0.02%)</title><rect x="637.3" y="67.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="640.3" y="78.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (58 samples, 0.06%)</title><rect x="637.6" y="99.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="640.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (58 samples, 0.06%)</title><rect x="637.6" y="83.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="640.6" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (58 samples, 0.06%)</title><rect x="637.6" y="67.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="640.6" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (43 samples, 0.05%)</title><rect x="637.6" y="51.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="640.6" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (43 samples, 0.05%)</title><rect x="637.6" y="35.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="640.6" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (58 samples, 0.06%)</title><rect x="638.4" y="243.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="641.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (58 samples, 0.06%)</title><rect x="638.4" y="227.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="641.4" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (58 samples, 0.06%)</title><rect x="638.4" y="211.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="641.4" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (58 samples, 0.06%)</title><rect x="638.4" y="195.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="641.4" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (58 samples, 0.06%)</title><rect x="638.4" y="179.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="641.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$140/499586134.apply (59 samples, 0.06%)</title><rect x="639.1" y="339.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="642.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (59 samples, 0.06%)</title><rect x="639.1" y="323.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="642.1" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (59 samples, 0.06%)</title><rect x="639.1" y="307.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="642.1" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (59 samples, 0.06%)</title><rect x="639.1" y="291.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="642.1" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (59 samples, 0.06%)</title><rect x="639.1" y="275.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="642.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (70 samples, 0.08%)</title><rect x="639.9" y="419.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="642.9" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (70 samples, 0.08%)</title><rect x="639.9" y="403.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="642.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$151/1576841624.apply (70 samples, 0.08%)</title><rect x="639.9" y="387.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="642.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$3 (70 samples, 0.08%)</title><rect x="639.9" y="371.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="642.9" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (30 samples, 0.03%)</title><rect x="639.9" y="355.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="642.9" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (30 samples, 0.03%)</title><rect x="639.9" y="339.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="642.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (30 samples, 0.03%)</title><rect x="640.4" y="355.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="643.4" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (30 samples, 0.03%)</title><rect x="640.4" y="339.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="643.4" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (30 samples, 0.03%)</title><rect x="640.4" y="323.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="643.4" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (30 samples, 0.03%)</title><rect x="640.4" y="307.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="643.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (31 samples, 0.03%)</title><rect x="640.8" y="419.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="643.8" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (31 samples, 0.03%)</title><rect x="640.8" y="403.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="643.8" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (31 samples, 0.03%)</title><rect x="640.8" y="387.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="643.8" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (31 samples, 0.03%)</title><rect x="640.8" y="371.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="643.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (25 samples, 0.03%)</title><rect x="641.2" y="419.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="644.2" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (25 samples, 0.03%)</title><rect x="641.2" y="403.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="644.2" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (25 samples, 0.03%)</title><rect x="641.2" y="387.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="644.2" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (25 samples, 0.03%)</title><rect x="641.2" y="371.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="644.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (1,129 samples, 1.23%)</title><rect x="641.5" y="419.0" width="14.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="644.5" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (30 samples, 0.03%)</title><rect x="641.7" y="403.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="644.7" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (30 samples, 0.03%)</title><rect x="641.7" y="387.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="644.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (718 samples, 0.78%)</title><rect x="642.1" y="403.0" width="9.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="645.1" y="414.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (20 samples, 0.02%)</title><rect x="642.3" y="387.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="645.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (20 samples, 0.02%)</title><rect x="642.3" y="371.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="645.3" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (20 samples, 0.02%)</title><rect x="642.3" y="355.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="645.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (659 samples, 0.72%)</title><rect x="642.9" y="387.0" width="8.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="645.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (20 samples, 0.02%)</title><rect x="642.9" y="371.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="645.9" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (20 samples, 0.02%)</title><rect x="642.9" y="355.0" width="0.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="645.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (272 samples, 0.30%)</title><rect x="643.1" y="371.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="646.1" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (261 samples, 0.28%)</title><rect x="643.3" y="355.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="646.3" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (23 samples, 0.03%)</title><rect x="643.3" y="339.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="646.3" y="350.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (21 samples, 0.02%)</title><rect x="643.8" y="339.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="646.8" y="350.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (182 samples, 0.20%)</title><rect x="644.3" y="339.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="647.3" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (182 samples, 0.20%)</title><rect x="644.3" y="323.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="647.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (182 samples, 0.20%)</title><rect x="644.3" y="307.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="647.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (62 samples, 0.07%)</title><rect x="644.3" y="291.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="647.3" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (62 samples, 0.07%)</title><rect x="644.3" y="275.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="647.3" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (62 samples, 0.07%)</title><rect x="644.3" y="259.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="647.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (62 samples, 0.07%)</title><rect x="644.3" y="243.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="647.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (46 samples, 0.05%)</title><rect x="644.5" y="227.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="647.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (46 samples, 0.05%)</title><rect x="644.5" y="211.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="647.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (46 samples, 0.05%)</title><rect x="644.5" y="195.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="647.5" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (33 samples, 0.04%)</title><rect x="644.5" y="179.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="647.5" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (33 samples, 0.04%)</title><rect x="644.5" y="163.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="647.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (120 samples, 0.13%)</title><rect x="645.1" y="291.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="648.1" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.02%)</title><rect x="645.3" y="275.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="648.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.02%)</title><rect x="645.3" y="259.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="648.3" y="270.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (28 samples, 0.03%)</title><rect x="645.6" y="275.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="648.6" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (28 samples, 0.03%)</title><rect x="645.6" y="259.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="648.6" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (28 samples, 0.03%)</title><rect x="645.6" y="243.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="648.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (53 samples, 0.06%)</title><rect x="645.9" y="275.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="648.9" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (53 samples, 0.06%)</title><rect x="645.9" y="259.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="648.9" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (20 samples, 0.02%)</title><rect x="647.5" y="371.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="650.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (85 samples, 0.09%)</title><rect x="647.8" y="371.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="650.8" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (21 samples, 0.02%)</title><rect x="647.8" y="355.0" width="0.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="650.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (64 samples, 0.07%)</title><rect x="648.0" y="355.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="651.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (64 samples, 0.07%)</title><rect x="648.0" y="339.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="651.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (64 samples, 0.07%)</title><rect x="648.0" y="323.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="651.0" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (64 samples, 0.07%)</title><rect x="648.0" y="307.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="651.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (64 samples, 0.07%)</title><rect x="648.0" y="291.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="651.0" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (64 samples, 0.07%)</title><rect x="648.0" y="275.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="651.0" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (64 samples, 0.07%)</title><rect x="648.0" y="259.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="651.0" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (64 samples, 0.07%)</title><rect x="648.0" y="243.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="651.0" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (64 samples, 0.07%)</title><rect x="648.0" y="227.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="651.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (64 samples, 0.07%)</title><rect x="648.0" y="211.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="651.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (45 samples, 0.05%)</title><rect x="648.3" y="195.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="651.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (45 samples, 0.05%)</title><rect x="648.3" y="179.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="651.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (45 samples, 0.05%)</title><rect x="648.3" y="163.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="651.3" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (29 samples, 0.03%)</title><rect x="648.3" y="147.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="651.3" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (29 samples, 0.03%)</title><rect x="648.3" y="131.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="651.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (193 samples, 0.21%)</title><rect x="648.8" y="371.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="651.8" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (58 samples, 0.06%)</title><rect x="648.8" y="355.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="651.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (23 samples, 0.03%)</title><rect x="648.8" y="339.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="651.8" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (23 samples, 0.03%)</title><rect x="648.8" y="323.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="651.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (35 samples, 0.04%)</title><rect x="649.1" y="339.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="652.1" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (35 samples, 0.04%)</title><rect x="649.1" y="323.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="652.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (25 samples, 0.03%)</title><rect x="649.8" y="355.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="652.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (25 samples, 0.03%)</title><rect x="649.8" y="339.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="652.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (25 samples, 0.03%)</title><rect x="649.8" y="323.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="652.8" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (25 samples, 0.03%)</title><rect x="649.8" y="307.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="652.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (55 samples, 0.06%)</title><rect x="650.1" y="355.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="653.1" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (45 samples, 0.05%)</title><rect x="650.2" y="339.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="653.2" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (36 samples, 0.04%)</title><rect x="650.3" y="323.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="653.3" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (36 samples, 0.04%)</title><rect x="650.3" y="307.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="653.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (41 samples, 0.04%)</title><rect x="650.8" y="355.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="653.8" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (41 samples, 0.04%)</title><rect x="650.8" y="339.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="653.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (362 samples, 0.39%)</title><rect x="651.3" y="403.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="654.3" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (188 samples, 0.20%)</title><rect x="651.3" y="387.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="654.3" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (181 samples, 0.20%)</title><rect x="651.4" y="371.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="654.4" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (115 samples, 0.13%)</title><rect x="651.6" y="355.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="654.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (115 samples, 0.13%)</title><rect x="651.6" y="339.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="654.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (115 samples, 0.13%)</title><rect x="651.6" y="323.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="654.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (115 samples, 0.13%)</title><rect x="651.6" y="307.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="654.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (53 samples, 0.06%)</title><rect x="651.6" y="291.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="654.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (53 samples, 0.06%)</title><rect x="651.6" y="275.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="654.6" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (53 samples, 0.06%)</title><rect x="651.6" y="259.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="654.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (53 samples, 0.06%)</title><rect x="651.6" y="243.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="654.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (53 samples, 0.06%)</title><rect x="651.6" y="227.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="654.6" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (53 samples, 0.06%)</title><rect x="651.6" y="211.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="654.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (53 samples, 0.06%)</title><rect x="651.6" y="195.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="654.6" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (53 samples, 0.06%)</title><rect x="651.6" y="179.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="654.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (53 samples, 0.06%)</title><rect x="651.6" y="163.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="654.6" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (39 samples, 0.04%)</title><rect x="651.8" y="147.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="654.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (39 samples, 0.04%)</title><rect x="651.8" y="131.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="654.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (39 samples, 0.04%)</title><rect x="651.8" y="115.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="654.8" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (25 samples, 0.03%)</title><rect x="651.8" y="99.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="654.8" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (25 samples, 0.03%)</title><rect x="651.8" y="83.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="654.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (62 samples, 0.07%)</title><rect x="652.3" y="291.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="655.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (62 samples, 0.07%)</title><rect x="652.3" y="275.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="655.3" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (62 samples, 0.07%)</title><rect x="652.3" y="259.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="655.3" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (62 samples, 0.07%)</title><rect x="652.3" y="243.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="655.3" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (62 samples, 0.07%)</title><rect x="652.3" y="227.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="655.3" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (27 samples, 0.03%)</title><rect x="653.1" y="355.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="656.1" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (27 samples, 0.03%)</title><rect x="653.1" y="339.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="656.1" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (31 samples, 0.03%)</title><rect x="653.8" y="387.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="656.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (135 samples, 0.15%)</title><rect x="654.2" y="387.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="657.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (129 samples, 0.14%)</title><rect x="654.3" y="371.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="657.3" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (129 samples, 0.14%)</title><rect x="654.3" y="355.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="657.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (129 samples, 0.14%)</title><rect x="654.3" y="339.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="657.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (129 samples, 0.14%)</title><rect x="654.3" y="323.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="657.3" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (129 samples, 0.14%)</title><rect x="654.3" y="307.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="657.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (129 samples, 0.14%)</title><rect x="654.3" y="291.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="657.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (129 samples, 0.14%)</title><rect x="654.3" y="275.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="657.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (58 samples, 0.06%)</title><rect x="654.3" y="259.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="657.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (58 samples, 0.06%)</title><rect x="654.3" y="243.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="657.3" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (58 samples, 0.06%)</title><rect x="654.3" y="227.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="657.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (58 samples, 0.06%)</title><rect x="654.3" y="211.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="657.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (58 samples, 0.06%)</title><rect x="654.3" y="195.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="657.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (58 samples, 0.06%)</title><rect x="654.3" y="179.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="657.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (58 samples, 0.06%)</title><rect x="654.3" y="163.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="657.3" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (58 samples, 0.06%)</title><rect x="654.3" y="147.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="657.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (58 samples, 0.06%)</title><rect x="654.3" y="131.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="657.3" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (43 samples, 0.05%)</title><rect x="654.5" y="115.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="657.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (43 samples, 0.05%)</title><rect x="654.5" y="99.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="657.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (43 samples, 0.05%)</title><rect x="654.5" y="83.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="657.5" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (29 samples, 0.03%)</title><rect x="654.5" y="67.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="657.5" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (29 samples, 0.03%)</title><rect x="654.5" y="51.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="657.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (71 samples, 0.08%)</title><rect x="655.1" y="259.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="658.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (71 samples, 0.08%)</title><rect x="655.1" y="243.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="658.1" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (71 samples, 0.08%)</title><rect x="655.1" y="227.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="658.1" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (71 samples, 0.08%)</title><rect x="655.1" y="211.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="658.1" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (71 samples, 0.08%)</title><rect x="655.1" y="195.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="658.1" y="206.0"></text>
</g>
<g>
<title>[2020-highload-dht-thread-6 tid=13590] (1,745 samples, 1.90%)</title><rect x="656.2" y="563.0" width="22.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="659.2" y="574.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (1,745 samples, 1.90%)</title><rect x="656.2" y="547.0" width="22.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="659.2" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,745 samples, 1.90%)</title><rect x="656.2" y="531.0" width="22.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="659.2" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,745 samples, 1.90%)</title><rect x="656.2" y="515.0" width="22.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="659.2" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (35 samples, 0.04%)</title><rect x="656.2" y="499.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="659.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (35 samples, 0.04%)</title><rect x="656.2" y="483.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="659.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (35 samples, 0.04%)</title><rect x="656.2" y="467.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="659.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (35 samples, 0.04%)</title><rect x="656.2" y="451.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="659.2" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (35 samples, 0.04%)</title><rect x="656.2" y="435.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="659.2" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.run (1,710 samples, 1.86%)</title><rect x="656.7" y="499.0" width="21.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="659.7" y="510.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$entity$1 (1,710 samples, 1.86%)</title><rect x="656.7" y="483.0" width="21.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="659.7" y="494.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleRequest (1,710 samples, 1.86%)</title><rect x="656.7" y="467.0" width="21.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="659.7" y="478.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (48 samples, 0.05%)</title><rect x="656.7" y="451.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="659.7" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (48 samples, 0.05%)</title><rect x="656.7" y="435.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="659.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (48 samples, 0.05%)</title><rect x="656.7" y="419.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="659.7" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (48 samples, 0.05%)</title><rect x="656.7" y="403.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="659.7" y="414.0"></text>
</g>
<g>
<title>byte[] (48 samples, 0.05%)</title><rect x="656.7" y="387.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="659.7" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (22 samples, 0.02%)</title><rect x="657.3" y="451.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="660.3" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (22 samples, 0.02%)</title><rect x="657.3" y="435.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="660.3" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (22 samples, 0.02%)</title><rect x="657.3" y="419.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="660.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleGet (1,640 samples, 1.79%)</title><rect x="657.6" y="451.0" width="21.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="660.6" y="462.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (110 samples, 0.12%)</title><rect x="657.6" y="435.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="660.6" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (110 samples, 0.12%)</title><rect x="657.6" y="419.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="660.6" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (79 samples, 0.09%)</title><rect x="657.6" y="403.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="660.6" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (61 samples, 0.07%)</title><rect x="657.8" y="387.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="660.8" y="398.0"></text>
</g>
<g>
<title>byte[] (61 samples, 0.07%)</title><rect x="657.8" y="371.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="660.8" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (31 samples, 0.03%)</title><rect x="658.6" y="403.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="661.6" y="414.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (31 samples, 0.03%)</title><rect x="658.6" y="387.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="661.6" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (66 samples, 0.07%)</title><rect x="659.0" y="435.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="662.0" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (53 samples, 0.06%)</title><rect x="659.2" y="419.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="662.2" y="430.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.03%)</title><rect x="659.2" y="403.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="662.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,448 samples, 1.58%)</title><rect x="659.8" y="435.0" width="18.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="662.8" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (165 samples, 0.18%)</title><rect x="659.8" y="419.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="662.8" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (165 samples, 0.18%)</title><rect x="659.8" y="403.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="662.8" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (165 samples, 0.18%)</title><rect x="659.8" y="387.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="662.8" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (165 samples, 0.18%)</title><rect x="659.8" y="371.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="662.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (165 samples, 0.18%)</title><rect x="659.8" y="355.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="662.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (117 samples, 0.13%)</title><rect x="659.8" y="339.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="662.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (117 samples, 0.13%)</title><rect x="659.8" y="323.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="662.8" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (117 samples, 0.13%)</title><rect x="659.8" y="307.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="662.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (117 samples, 0.13%)</title><rect x="659.8" y="291.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="662.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (117 samples, 0.13%)</title><rect x="659.8" y="275.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="662.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (117 samples, 0.13%)</title><rect x="659.8" y="259.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="662.8" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (42 samples, 0.05%)</title><rect x="659.8" y="243.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="662.8" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (42 samples, 0.05%)</title><rect x="659.8" y="227.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="662.8" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (42 samples, 0.05%)</title><rect x="659.8" y="211.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="662.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (42 samples, 0.05%)</title><rect x="659.8" y="195.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="662.8" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (42 samples, 0.05%)</title><rect x="659.8" y="179.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="662.8" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (42 samples, 0.05%)</title><rect x="659.8" y="163.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="662.8" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (42 samples, 0.05%)</title><rect x="659.8" y="147.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="662.8" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (42 samples, 0.05%)</title><rect x="659.8" y="131.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="662.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (42 samples, 0.05%)</title><rect x="659.8" y="115.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="662.8" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (36 samples, 0.04%)</title><rect x="659.9" y="99.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="662.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (36 samples, 0.04%)</title><rect x="659.9" y="83.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="662.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (36 samples, 0.04%)</title><rect x="659.9" y="67.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="662.9" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (28 samples, 0.03%)</title><rect x="659.9" y="51.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="662.9" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (28 samples, 0.03%)</title><rect x="659.9" y="35.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="662.9" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (75 samples, 0.08%)</title><rect x="660.4" y="243.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="663.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (75 samples, 0.08%)</title><rect x="660.4" y="227.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="663.4" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (75 samples, 0.08%)</title><rect x="660.4" y="211.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="663.4" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (75 samples, 0.08%)</title><rect x="660.4" y="195.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="663.4" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (75 samples, 0.08%)</title><rect x="660.4" y="179.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="663.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$140/499586134.apply (48 samples, 0.05%)</title><rect x="661.3" y="339.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="664.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (48 samples, 0.05%)</title><rect x="661.3" y="323.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="664.3" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (48 samples, 0.05%)</title><rect x="661.3" y="307.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="664.3" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (48 samples, 0.05%)</title><rect x="661.3" y="291.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="664.3" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (48 samples, 0.05%)</title><rect x="661.3" y="275.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="664.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (62 samples, 0.07%)</title><rect x="662.0" y="419.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="665.0" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (62 samples, 0.07%)</title><rect x="662.0" y="403.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="665.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$151/1576841624.apply (62 samples, 0.07%)</title><rect x="662.0" y="387.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="665.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$3 (62 samples, 0.07%)</title><rect x="662.0" y="371.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="665.0" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (22 samples, 0.02%)</title><rect x="662.0" y="355.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="665.0" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (22 samples, 0.02%)</title><rect x="662.0" y="339.0" width="0.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="665.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (22 samples, 0.02%)</title><rect x="662.5" y="355.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="665.5" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (22 samples, 0.02%)</title><rect x="662.5" y="339.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="665.5" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (22 samples, 0.02%)</title><rect x="662.5" y="323.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="665.5" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (22 samples, 0.02%)</title><rect x="662.5" y="307.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="665.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (32 samples, 0.03%)</title><rect x="662.8" y="419.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="665.8" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (32 samples, 0.03%)</title><rect x="662.8" y="403.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="665.8" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (32 samples, 0.03%)</title><rect x="662.8" y="387.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="665.8" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (32 samples, 0.03%)</title><rect x="662.8" y="371.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="665.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (35 samples, 0.04%)</title><rect x="663.2" y="419.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="666.2" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (35 samples, 0.04%)</title><rect x="663.2" y="403.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="666.2" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (35 samples, 0.04%)</title><rect x="663.2" y="387.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="666.2" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (35 samples, 0.04%)</title><rect x="663.2" y="371.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="666.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (1,154 samples, 1.26%)</title><rect x="663.6" y="419.0" width="14.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="666.6" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (22 samples, 0.02%)</title><rect x="663.6" y="403.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="666.6" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (22 samples, 0.02%)</title><rect x="663.6" y="387.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="666.6" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (26 samples, 0.03%)</title><rect x="663.9" y="403.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="666.9" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (26 samples, 0.03%)</title><rect x="663.9" y="387.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="666.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (705 samples, 0.77%)</title><rect x="664.2" y="403.0" width="9.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="667.2" y="414.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (28 samples, 0.03%)</title><rect x="664.4" y="387.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="667.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (28 samples, 0.03%)</title><rect x="664.4" y="371.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="667.4" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (28 samples, 0.03%)</title><rect x="664.4" y="355.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="667.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (628 samples, 0.68%)</title><rect x="665.2" y="387.0" width="8.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="668.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (25 samples, 0.03%)</title><rect x="665.2" y="371.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="668.2" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (25 samples, 0.03%)</title><rect x="665.2" y="355.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="668.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (238 samples, 0.26%)</title><rect x="665.6" y="371.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="668.6" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (225 samples, 0.24%)</title><rect x="665.7" y="355.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="668.7" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (172 samples, 0.19%)</title><rect x="666.4" y="339.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="669.4" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (172 samples, 0.19%)</title><rect x="666.4" y="323.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="669.4" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (172 samples, 0.19%)</title><rect x="666.4" y="307.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="669.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (56 samples, 0.06%)</title><rect x="666.4" y="291.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="669.4" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (56 samples, 0.06%)</title><rect x="666.4" y="275.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="669.4" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (56 samples, 0.06%)</title><rect x="666.4" y="259.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="669.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (56 samples, 0.06%)</title><rect x="666.4" y="243.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="669.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (42 samples, 0.05%)</title><rect x="666.6" y="227.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="669.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (42 samples, 0.05%)</title><rect x="666.6" y="211.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="669.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (42 samples, 0.05%)</title><rect x="666.6" y="195.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="669.6" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (30 samples, 0.03%)</title><rect x="666.6" y="179.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="669.6" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (30 samples, 0.03%)</title><rect x="666.6" y="163.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="669.6" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (116 samples, 0.13%)</title><rect x="667.1" y="291.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="670.1" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (27 samples, 0.03%)</title><rect x="667.1" y="275.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="670.1" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (24 samples, 0.03%)</title><rect x="667.5" y="275.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="670.5" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.03%)</title><rect x="667.5" y="259.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="670.5" y="270.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (23 samples, 0.03%)</title><rect x="667.8" y="275.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="670.8" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (23 samples, 0.03%)</title><rect x="667.8" y="259.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="670.8" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (23 samples, 0.03%)</title><rect x="667.8" y="243.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="670.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (42 samples, 0.05%)</title><rect x="668.1" y="275.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="671.1" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (42 samples, 0.05%)</title><rect x="668.1" y="259.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="671.1" y="270.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (24 samples, 0.03%)</title><rect x="668.8" y="371.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="671.8" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (24 samples, 0.03%)</title><rect x="668.8" y="355.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="671.8" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$ValueIterator (24 samples, 0.03%)</title><rect x="668.8" y="339.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="671.8" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (25 samples, 0.03%)</title><rect x="669.5" y="371.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="672.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (77 samples, 0.08%)</title><rect x="669.8" y="371.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="672.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (64 samples, 0.07%)</title><rect x="670.0" y="355.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="673.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (64 samples, 0.07%)</title><rect x="670.0" y="339.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="673.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (64 samples, 0.07%)</title><rect x="670.0" y="323.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="673.0" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (64 samples, 0.07%)</title><rect x="670.0" y="307.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="673.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (64 samples, 0.07%)</title><rect x="670.0" y="291.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="673.0" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (64 samples, 0.07%)</title><rect x="670.0" y="275.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="673.0" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (64 samples, 0.07%)</title><rect x="670.0" y="259.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="673.0" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (64 samples, 0.07%)</title><rect x="670.0" y="243.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="673.0" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (64 samples, 0.07%)</title><rect x="670.0" y="227.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="673.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (64 samples, 0.07%)</title><rect x="670.0" y="211.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="673.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (48 samples, 0.05%)</title><rect x="670.2" y="195.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="673.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (48 samples, 0.05%)</title><rect x="670.2" y="179.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="673.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (48 samples, 0.05%)</title><rect x="670.2" y="163.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="673.2" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (38 samples, 0.04%)</title><rect x="670.2" y="147.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="673.2" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (38 samples, 0.04%)</title><rect x="670.2" y="131.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="673.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (192 samples, 0.21%)</title><rect x="670.8" y="371.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="673.8" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (57 samples, 0.06%)</title><rect x="670.8" y="355.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="673.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (23 samples, 0.03%)</title><rect x="670.8" y="339.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="673.8" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (23 samples, 0.03%)</title><rect x="670.8" y="323.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="673.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (34 samples, 0.04%)</title><rect x="671.1" y="339.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="674.1" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (34 samples, 0.04%)</title><rect x="671.1" y="323.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="674.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (37 samples, 0.04%)</title><rect x="671.7" y="355.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="674.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (37 samples, 0.04%)</title><rect x="671.7" y="339.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="674.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (37 samples, 0.04%)</title><rect x="671.7" y="323.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="674.7" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (37 samples, 0.04%)</title><rect x="671.7" y="307.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="674.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (55 samples, 0.06%)</title><rect x="672.1" y="355.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="675.1" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (46 samples, 0.05%)</title><rect x="672.3" y="339.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="675.3" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (35 samples, 0.04%)</title><rect x="672.4" y="323.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="675.4" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (35 samples, 0.04%)</title><rect x="672.4" y="307.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="675.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (35 samples, 0.04%)</title><rect x="672.9" y="355.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="675.9" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (35 samples, 0.04%)</title><rect x="672.9" y="339.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="675.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (400 samples, 0.44%)</title><rect x="673.3" y="403.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="676.3" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (204 samples, 0.22%)</title><rect x="673.3" y="387.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="676.3" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (194 samples, 0.21%)</title><rect x="673.4" y="371.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="676.4" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (118 samples, 0.13%)</title><rect x="673.7" y="355.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="676.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (118 samples, 0.13%)</title><rect x="673.7" y="339.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="676.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (118 samples, 0.13%)</title><rect x="673.7" y="323.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="676.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (118 samples, 0.13%)</title><rect x="673.7" y="307.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="676.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (66 samples, 0.07%)</title><rect x="673.7" y="291.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="676.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (66 samples, 0.07%)</title><rect x="673.7" y="275.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="676.7" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (66 samples, 0.07%)</title><rect x="673.7" y="259.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="676.7" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (66 samples, 0.07%)</title><rect x="673.7" y="243.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="676.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (66 samples, 0.07%)</title><rect x="673.7" y="227.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="676.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (66 samples, 0.07%)</title><rect x="673.7" y="211.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="676.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (66 samples, 0.07%)</title><rect x="673.7" y="195.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="676.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (66 samples, 0.07%)</title><rect x="673.7" y="179.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="676.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (66 samples, 0.07%)</title><rect x="673.7" y="163.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="676.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (50 samples, 0.05%)</title><rect x="673.9" y="147.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="676.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (50 samples, 0.05%)</title><rect x="673.9" y="131.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="676.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (50 samples, 0.05%)</title><rect x="673.9" y="115.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="676.9" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (31 samples, 0.03%)</title><rect x="673.9" y="99.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="676.9" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (31 samples, 0.03%)</title><rect x="673.9" y="83.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="676.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (52 samples, 0.06%)</title><rect x="674.5" y="291.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="677.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (52 samples, 0.06%)</title><rect x="674.5" y="275.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="677.5" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (52 samples, 0.06%)</title><rect x="674.5" y="259.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="677.5" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (52 samples, 0.06%)</title><rect x="674.5" y="243.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="677.5" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (52 samples, 0.06%)</title><rect x="674.5" y="227.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="677.5" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (20 samples, 0.02%)</title><rect x="675.2" y="355.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="678.2" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (20 samples, 0.02%)</title><rect x="675.2" y="339.0" width="0.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="678.2" y="350.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (27 samples, 0.03%)</title><rect x="675.4" y="355.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="678.4" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (28 samples, 0.03%)</title><rect x="676.0" y="387.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="679.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (159 samples, 0.17%)</title><rect x="676.4" y="387.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="679.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (143 samples, 0.16%)</title><rect x="676.6" y="371.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="679.6" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (143 samples, 0.16%)</title><rect x="676.6" y="355.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="679.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (143 samples, 0.16%)</title><rect x="676.6" y="339.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="679.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (143 samples, 0.16%)</title><rect x="676.6" y="323.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="679.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (143 samples, 0.16%)</title><rect x="676.6" y="307.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="679.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (143 samples, 0.16%)</title><rect x="676.6" y="291.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="679.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (143 samples, 0.16%)</title><rect x="676.6" y="275.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="679.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (66 samples, 0.07%)</title><rect x="676.6" y="259.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="679.6" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (66 samples, 0.07%)</title><rect x="676.6" y="243.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="679.6" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (66 samples, 0.07%)</title><rect x="676.6" y="227.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="679.6" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (66 samples, 0.07%)</title><rect x="676.6" y="211.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="679.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (66 samples, 0.07%)</title><rect x="676.6" y="195.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="679.6" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (66 samples, 0.07%)</title><rect x="676.6" y="179.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="679.6" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (66 samples, 0.07%)</title><rect x="676.6" y="163.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="679.6" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (66 samples, 0.07%)</title><rect x="676.6" y="147.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="679.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (66 samples, 0.07%)</title><rect x="676.6" y="131.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="679.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (24 samples, 0.03%)</title><rect x="676.6" y="115.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="679.6" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (24 samples, 0.03%)</title><rect x="676.6" y="99.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="679.6" y="110.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (24 samples, 0.03%)</title><rect x="676.6" y="83.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="679.6" y="94.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (42 samples, 0.05%)</title><rect x="676.9" y="115.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="679.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (42 samples, 0.05%)</title><rect x="676.9" y="99.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="679.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (42 samples, 0.05%)</title><rect x="676.9" y="83.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="679.9" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (31 samples, 0.03%)</title><rect x="676.9" y="67.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="679.9" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (31 samples, 0.03%)</title><rect x="676.9" y="51.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="679.9" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (77 samples, 0.08%)</title><rect x="677.5" y="259.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="680.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (77 samples, 0.08%)</title><rect x="677.5" y="243.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="680.5" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (77 samples, 0.08%)</title><rect x="677.5" y="227.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="680.5" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (77 samples, 0.08%)</title><rect x="677.5" y="211.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="680.5" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (77 samples, 0.08%)</title><rect x="677.5" y="195.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="680.5" y="206.0"></text>
</g>
<g>
<title>[2020-highload-dht-thread-7 tid=13588] (1,742 samples, 1.90%)</title><rect x="678.6" y="563.0" width="22.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="681.6" y="574.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (1,742 samples, 1.90%)</title><rect x="678.6" y="547.0" width="22.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="681.6" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,742 samples, 1.90%)</title><rect x="678.6" y="531.0" width="22.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="681.6" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,742 samples, 1.90%)</title><rect x="678.6" y="515.0" width="22.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="681.6" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (31 samples, 0.03%)</title><rect x="678.6" y="499.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="681.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (31 samples, 0.03%)</title><rect x="678.6" y="483.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="681.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (31 samples, 0.03%)</title><rect x="678.6" y="467.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="681.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (31 samples, 0.03%)</title><rect x="678.6" y="451.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="681.6" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (31 samples, 0.03%)</title><rect x="678.6" y="435.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="681.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.run (1,711 samples, 1.86%)</title><rect x="679.0" y="499.0" width="22.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="682.0" y="510.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$entity$1 (1,711 samples, 1.86%)</title><rect x="679.0" y="483.0" width="22.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="682.0" y="494.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleRequest (1,711 samples, 1.86%)</title><rect x="679.0" y="467.0" width="22.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="682.0" y="478.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (35 samples, 0.04%)</title><rect x="679.0" y="451.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="682.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (35 samples, 0.04%)</title><rect x="679.0" y="435.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="682.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (35 samples, 0.04%)</title><rect x="679.0" y="419.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="682.0" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (35 samples, 0.04%)</title><rect x="679.0" y="403.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="682.0" y="414.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.04%)</title><rect x="679.0" y="387.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="682.0" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (32 samples, 0.03%)</title><rect x="679.5" y="451.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="682.5" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (32 samples, 0.03%)</title><rect x="679.5" y="435.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="682.5" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (32 samples, 0.03%)</title><rect x="679.5" y="419.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="682.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleGet (1,644 samples, 1.79%)</title><rect x="679.9" y="451.0" width="21.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="682.9" y="462.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (104 samples, 0.11%)</title><rect x="679.9" y="435.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="682.9" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (104 samples, 0.11%)</title><rect x="679.9" y="419.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="682.9" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (83 samples, 0.09%)</title><rect x="679.9" y="403.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="682.9" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (69 samples, 0.08%)</title><rect x="680.1" y="387.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="683.1" y="398.0"></text>
</g>
<g>
<title>byte[] (69 samples, 0.08%)</title><rect x="680.1" y="371.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="683.1" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (21 samples, 0.02%)</title><rect x="681.0" y="403.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="684.0" y="414.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (21 samples, 0.02%)</title><rect x="681.0" y="387.0" width="0.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="684.0" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (82 samples, 0.09%)</title><rect x="681.2" y="435.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="684.2" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (65 samples, 0.07%)</title><rect x="681.5" y="419.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="684.5" y="430.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.03%)</title><rect x="681.5" y="403.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="684.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,439 samples, 1.57%)</title><rect x="682.3" y="435.0" width="18.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="685.3" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (179 samples, 0.19%)</title><rect x="682.3" y="419.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="685.3" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (179 samples, 0.19%)</title><rect x="682.3" y="403.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="685.3" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (179 samples, 0.19%)</title><rect x="682.3" y="387.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="685.3" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (179 samples, 0.19%)</title><rect x="682.3" y="371.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="685.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (179 samples, 0.19%)</title><rect x="682.3" y="355.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="685.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (126 samples, 0.14%)</title><rect x="682.3" y="339.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="685.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (126 samples, 0.14%)</title><rect x="682.3" y="323.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="685.3" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (126 samples, 0.14%)</title><rect x="682.3" y="307.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="685.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (126 samples, 0.14%)</title><rect x="682.3" y="291.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="685.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (126 samples, 0.14%)</title><rect x="682.3" y="275.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="685.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (126 samples, 0.14%)</title><rect x="682.3" y="259.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="685.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (70 samples, 0.08%)</title><rect x="682.3" y="243.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="685.3" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (70 samples, 0.08%)</title><rect x="682.3" y="227.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="685.3" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (70 samples, 0.08%)</title><rect x="682.3" y="211.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="685.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (70 samples, 0.08%)</title><rect x="682.3" y="195.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="685.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (70 samples, 0.08%)</title><rect x="682.3" y="179.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="685.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (70 samples, 0.08%)</title><rect x="682.3" y="163.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="685.3" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (70 samples, 0.08%)</title><rect x="682.3" y="147.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="685.3" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (70 samples, 0.08%)</title><rect x="682.3" y="131.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="685.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (70 samples, 0.08%)</title><rect x="682.3" y="115.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="685.3" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (55 samples, 0.06%)</title><rect x="682.5" y="99.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="685.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (55 samples, 0.06%)</title><rect x="682.5" y="83.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="685.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (55 samples, 0.06%)</title><rect x="682.5" y="67.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="685.5" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (42 samples, 0.05%)</title><rect x="682.5" y="51.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="685.5" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (42 samples, 0.05%)</title><rect x="682.5" y="35.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="685.5" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (56 samples, 0.06%)</title><rect x="683.2" y="243.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="686.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (56 samples, 0.06%)</title><rect x="683.2" y="227.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="686.2" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (56 samples, 0.06%)</title><rect x="683.2" y="211.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="686.2" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (56 samples, 0.06%)</title><rect x="683.2" y="195.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="686.2" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (56 samples, 0.06%)</title><rect x="683.2" y="179.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="686.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$140/499586134.apply (53 samples, 0.06%)</title><rect x="683.9" y="339.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="686.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (53 samples, 0.06%)</title><rect x="683.9" y="323.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="686.9" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (53 samples, 0.06%)</title><rect x="683.9" y="307.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="686.9" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (53 samples, 0.06%)</title><rect x="683.9" y="291.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="686.9" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (53 samples, 0.06%)</title><rect x="683.9" y="275.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="686.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (70 samples, 0.08%)</title><rect x="684.6" y="419.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="687.6" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (70 samples, 0.08%)</title><rect x="684.6" y="403.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="687.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$151/1576841624.apply (70 samples, 0.08%)</title><rect x="684.6" y="387.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="687.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$3 (70 samples, 0.08%)</title><rect x="684.6" y="371.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="687.6" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (28 samples, 0.03%)</title><rect x="684.6" y="355.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="687.6" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (28 samples, 0.03%)</title><rect x="684.6" y="339.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="687.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (29 samples, 0.03%)</title><rect x="685.1" y="355.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="688.1" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (29 samples, 0.03%)</title><rect x="685.1" y="339.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="688.1" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (29 samples, 0.03%)</title><rect x="685.1" y="323.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="688.1" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (29 samples, 0.03%)</title><rect x="685.1" y="307.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="688.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (35 samples, 0.04%)</title><rect x="685.5" y="419.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="688.5" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (35 samples, 0.04%)</title><rect x="685.5" y="403.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="688.5" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (35 samples, 0.04%)</title><rect x="685.5" y="387.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="688.5" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (35 samples, 0.04%)</title><rect x="685.5" y="371.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="688.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (33 samples, 0.04%)</title><rect x="685.9" y="419.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="688.9" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (33 samples, 0.04%)</title><rect x="685.9" y="403.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="688.9" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (33 samples, 0.04%)</title><rect x="685.9" y="387.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="688.9" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (33 samples, 0.04%)</title><rect x="685.9" y="371.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="688.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (1,122 samples, 1.22%)</title><rect x="686.4" y="419.0" width="14.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="689.4" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (24 samples, 0.03%)</title><rect x="686.4" y="403.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="689.4" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (24 samples, 0.03%)</title><rect x="686.4" y="387.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="689.4" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (23 samples, 0.03%)</title><rect x="686.7" y="403.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="689.7" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (23 samples, 0.03%)</title><rect x="686.7" y="387.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="689.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (714 samples, 0.78%)</title><rect x="687.0" y="403.0" width="9.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="690.0" y="414.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (31 samples, 0.03%)</title><rect x="687.2" y="387.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="690.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (31 samples, 0.03%)</title><rect x="687.2" y="371.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="690.2" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (31 samples, 0.03%)</title><rect x="687.2" y="355.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="690.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (639 samples, 0.70%)</title><rect x="687.9" y="387.0" width="8.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="690.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (24 samples, 0.03%)</title><rect x="687.9" y="371.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="690.9" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (24 samples, 0.03%)</title><rect x="687.9" y="355.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="690.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (234 samples, 0.25%)</title><rect x="688.2" y="371.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="691.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (226 samples, 0.25%)</title><rect x="688.3" y="355.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="691.3" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (167 samples, 0.18%)</title><rect x="689.1" y="339.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="692.1" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (167 samples, 0.18%)</title><rect x="689.1" y="323.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="692.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (167 samples, 0.18%)</title><rect x="689.1" y="307.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="692.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (64 samples, 0.07%)</title><rect x="689.1" y="291.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="692.1" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (64 samples, 0.07%)</title><rect x="689.1" y="275.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="692.1" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (64 samples, 0.07%)</title><rect x="689.1" y="259.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="692.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (64 samples, 0.07%)</title><rect x="689.1" y="243.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="692.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (49 samples, 0.05%)</title><rect x="689.3" y="227.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="692.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (49 samples, 0.05%)</title><rect x="689.3" y="211.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="692.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (49 samples, 0.05%)</title><rect x="689.3" y="195.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="692.3" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (33 samples, 0.04%)</title><rect x="689.3" y="179.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="692.3" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (33 samples, 0.04%)</title><rect x="689.3" y="163.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="692.3" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (103 samples, 0.11%)</title><rect x="689.9" y="291.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="692.9" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (32 samples, 0.03%)</title><rect x="689.9" y="275.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="692.9" y="286.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (43 samples, 0.05%)</title><rect x="690.7" y="275.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="693.7" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (43 samples, 0.05%)</title><rect x="690.7" y="259.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="693.7" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (27 samples, 0.03%)</title><rect x="692.2" y="371.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="695.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (85 samples, 0.09%)</title><rect x="692.5" y="371.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="695.5" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (22 samples, 0.02%)</title><rect x="692.5" y="355.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="695.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (63 samples, 0.07%)</title><rect x="692.8" y="355.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="695.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (63 samples, 0.07%)</title><rect x="692.8" y="339.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="695.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (63 samples, 0.07%)</title><rect x="692.8" y="323.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="695.8" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (63 samples, 0.07%)</title><rect x="692.8" y="307.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="695.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (63 samples, 0.07%)</title><rect x="692.8" y="291.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="695.8" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (63 samples, 0.07%)</title><rect x="692.8" y="275.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="695.8" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (63 samples, 0.07%)</title><rect x="692.8" y="259.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="695.8" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (63 samples, 0.07%)</title><rect x="692.8" y="243.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="695.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (63 samples, 0.07%)</title><rect x="692.8" y="227.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="695.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (63 samples, 0.07%)</title><rect x="692.8" y="211.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="695.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (47 samples, 0.05%)</title><rect x="693.0" y="195.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="696.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (47 samples, 0.05%)</title><rect x="693.0" y="179.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="696.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (47 samples, 0.05%)</title><rect x="693.0" y="163.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="696.0" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (30 samples, 0.03%)</title><rect x="693.0" y="147.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="696.0" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (30 samples, 0.03%)</title><rect x="693.0" y="131.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="696.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (196 samples, 0.21%)</title><rect x="693.6" y="371.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="696.6" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (61 samples, 0.07%)</title><rect x="693.6" y="355.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="696.6" y="366.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (42 samples, 0.05%)</title><rect x="693.9" y="339.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="696.9" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (42 samples, 0.05%)</title><rect x="693.9" y="323.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="696.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (31 samples, 0.03%)</title><rect x="694.5" y="355.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="697.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (31 samples, 0.03%)</title><rect x="694.5" y="339.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="697.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (31 samples, 0.03%)</title><rect x="694.5" y="323.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="697.5" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (31 samples, 0.03%)</title><rect x="694.5" y="307.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="697.5" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (64 samples, 0.07%)</title><rect x="694.9" y="355.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="697.9" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (49 samples, 0.05%)</title><rect x="695.1" y="339.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="698.1" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (36 samples, 0.04%)</title><rect x="695.2" y="323.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="698.2" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (36 samples, 0.04%)</title><rect x="695.2" y="307.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="698.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (35 samples, 0.04%)</title><rect x="695.7" y="355.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="698.7" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (35 samples, 0.04%)</title><rect x="695.7" y="339.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="698.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (361 samples, 0.39%)</title><rect x="696.1" y="403.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="699.1" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (193 samples, 0.21%)</title><rect x="696.1" y="387.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="699.1" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (186 samples, 0.20%)</title><rect x="696.2" y="371.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="699.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (121 samples, 0.13%)</title><rect x="696.4" y="355.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="699.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (121 samples, 0.13%)</title><rect x="696.4" y="339.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="699.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (121 samples, 0.13%)</title><rect x="696.4" y="323.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="699.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (121 samples, 0.13%)</title><rect x="696.4" y="307.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="699.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (67 samples, 0.07%)</title><rect x="696.4" y="291.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="699.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (67 samples, 0.07%)</title><rect x="696.4" y="275.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="699.4" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (67 samples, 0.07%)</title><rect x="696.4" y="259.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="699.4" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (67 samples, 0.07%)</title><rect x="696.4" y="243.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="699.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (67 samples, 0.07%)</title><rect x="696.4" y="227.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="699.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (67 samples, 0.07%)</title><rect x="696.4" y="211.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="699.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (67 samples, 0.07%)</title><rect x="696.4" y="195.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="699.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (67 samples, 0.07%)</title><rect x="696.4" y="179.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="699.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (67 samples, 0.07%)</title><rect x="696.4" y="163.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="699.4" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (55 samples, 0.06%)</title><rect x="696.6" y="147.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="699.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (55 samples, 0.06%)</title><rect x="696.6" y="131.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="699.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (55 samples, 0.06%)</title><rect x="696.6" y="115.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="699.6" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (43 samples, 0.05%)</title><rect x="696.6" y="99.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="699.6" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (43 samples, 0.05%)</title><rect x="696.6" y="83.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="699.6" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (54 samples, 0.06%)</title><rect x="697.3" y="291.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="700.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (54 samples, 0.06%)</title><rect x="697.3" y="275.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="700.3" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (54 samples, 0.06%)</title><rect x="697.3" y="259.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="700.3" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (54 samples, 0.06%)</title><rect x="697.3" y="243.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="700.3" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (54 samples, 0.06%)</title><rect x="697.3" y="227.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="700.3" y="238.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (21 samples, 0.02%)</title><rect x="698.1" y="355.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="701.1" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (30 samples, 0.03%)</title><rect x="698.8" y="387.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="701.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (127 samples, 0.14%)</title><rect x="699.2" y="387.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="702.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (115 samples, 0.13%)</title><rect x="699.3" y="371.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="702.3" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (115 samples, 0.13%)</title><rect x="699.3" y="355.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="702.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (115 samples, 0.13%)</title><rect x="699.3" y="339.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="702.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (115 samples, 0.13%)</title><rect x="699.3" y="323.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="702.3" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (115 samples, 0.13%)</title><rect x="699.3" y="307.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="702.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (115 samples, 0.13%)</title><rect x="699.3" y="291.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="702.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (115 samples, 0.13%)</title><rect x="699.3" y="275.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="702.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (63 samples, 0.07%)</title><rect x="699.3" y="259.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="702.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (63 samples, 0.07%)</title><rect x="699.3" y="243.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="702.3" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (63 samples, 0.07%)</title><rect x="699.3" y="227.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="702.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (63 samples, 0.07%)</title><rect x="699.3" y="211.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="702.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (63 samples, 0.07%)</title><rect x="699.3" y="195.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="702.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (63 samples, 0.07%)</title><rect x="699.3" y="179.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="702.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (63 samples, 0.07%)</title><rect x="699.3" y="163.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="702.3" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (63 samples, 0.07%)</title><rect x="699.3" y="147.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="702.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (63 samples, 0.07%)</title><rect x="699.3" y="131.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="702.3" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (49 samples, 0.05%)</title><rect x="699.5" y="115.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="702.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (49 samples, 0.05%)</title><rect x="699.5" y="99.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="702.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (49 samples, 0.05%)</title><rect x="699.5" y="83.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="702.5" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (32 samples, 0.03%)</title><rect x="699.5" y="67.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="702.5" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (32 samples, 0.03%)</title><rect x="699.5" y="51.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="702.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (52 samples, 0.06%)</title><rect x="700.1" y="259.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="703.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (52 samples, 0.06%)</title><rect x="700.1" y="243.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="703.1" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (52 samples, 0.06%)</title><rect x="700.1" y="227.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="703.1" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (52 samples, 0.06%)</title><rect x="700.1" y="211.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="703.1" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (52 samples, 0.06%)</title><rect x="700.1" y="195.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="703.1" y="206.0"></text>
</g>
<g>
<title>[2020-highload-dht-thread-7 tid=13589] (1,748 samples, 1.90%)</title><rect x="701.0" y="563.0" width="22.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="704.0" y="574.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (1,748 samples, 1.90%)</title><rect x="701.0" y="547.0" width="22.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="704.0" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,748 samples, 1.90%)</title><rect x="701.0" y="531.0" width="22.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="704.0" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,748 samples, 1.90%)</title><rect x="701.0" y="515.0" width="22.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="704.0" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (30 samples, 0.03%)</title><rect x="701.0" y="499.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="704.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (30 samples, 0.03%)</title><rect x="701.0" y="483.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="704.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (29 samples, 0.03%)</title><rect x="701.0" y="467.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="704.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (29 samples, 0.03%)</title><rect x="701.0" y="451.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="704.0" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (29 samples, 0.03%)</title><rect x="701.0" y="435.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="704.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.run (1,718 samples, 1.87%)</title><rect x="701.4" y="499.0" width="22.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="704.4" y="510.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$entity$1 (1,718 samples, 1.87%)</title><rect x="701.4" y="483.0" width="22.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="704.4" y="494.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleRequest (1,718 samples, 1.87%)</title><rect x="701.4" y="467.0" width="22.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="704.4" y="478.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (42 samples, 0.05%)</title><rect x="701.4" y="451.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="704.4" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (42 samples, 0.05%)</title><rect x="701.4" y="435.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="704.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (42 samples, 0.05%)</title><rect x="701.4" y="419.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="704.4" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (42 samples, 0.05%)</title><rect x="701.4" y="403.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="704.4" y="414.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.05%)</title><rect x="701.4" y="387.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="704.4" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (30 samples, 0.03%)</title><rect x="702.0" y="451.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="705.0" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (30 samples, 0.03%)</title><rect x="702.0" y="435.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="705.0" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (30 samples, 0.03%)</title><rect x="702.0" y="419.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="705.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.handleGet (1,646 samples, 1.79%)</title><rect x="702.3" y="451.0" width="21.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="705.3" y="462.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (111 samples, 0.12%)</title><rect x="702.3" y="435.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="705.3" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (111 samples, 0.12%)</title><rect x="702.3" y="419.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="705.3" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (73 samples, 0.08%)</title><rect x="702.3" y="403.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="705.3" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (61 samples, 0.07%)</title><rect x="702.5" y="387.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="705.5" y="398.0"></text>
</g>
<g>
<title>byte[] (61 samples, 0.07%)</title><rect x="702.5" y="371.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="705.5" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (38 samples, 0.04%)</title><rect x="703.3" y="403.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="706.3" y="414.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (38 samples, 0.04%)</title><rect x="703.3" y="387.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="706.3" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (77 samples, 0.08%)</title><rect x="703.8" y="435.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="706.8" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (20 samples, 0.02%)</title><rect x="703.8" y="419.0" width="0.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="706.8" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (57 samples, 0.06%)</title><rect x="704.0" y="419.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="707.0" y="430.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.03%)</title><rect x="704.0" y="403.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="707.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,438 samples, 1.57%)</title><rect x="704.8" y="435.0" width="18.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="707.8" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (180 samples, 0.20%)</title><rect x="704.8" y="419.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="707.8" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (180 samples, 0.20%)</title><rect x="704.8" y="403.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="707.8" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (180 samples, 0.20%)</title><rect x="704.8" y="387.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="707.8" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (180 samples, 0.20%)</title><rect x="704.8" y="371.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="707.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (180 samples, 0.20%)</title><rect x="704.8" y="355.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="707.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (115 samples, 0.13%)</title><rect x="704.8" y="339.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="707.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (115 samples, 0.13%)</title><rect x="704.8" y="323.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="707.8" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (115 samples, 0.13%)</title><rect x="704.8" y="307.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="707.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (115 samples, 0.13%)</title><rect x="704.8" y="291.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="707.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (115 samples, 0.13%)</title><rect x="704.8" y="275.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="707.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (115 samples, 0.13%)</title><rect x="704.8" y="259.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="707.8" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (66 samples, 0.07%)</title><rect x="704.8" y="243.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="707.8" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (66 samples, 0.07%)</title><rect x="704.8" y="227.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="707.8" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (66 samples, 0.07%)</title><rect x="704.8" y="211.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="707.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (66 samples, 0.07%)</title><rect x="704.8" y="195.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="707.8" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (66 samples, 0.07%)</title><rect x="704.8" y="179.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="707.8" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (66 samples, 0.07%)</title><rect x="704.8" y="163.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="707.8" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (66 samples, 0.07%)</title><rect x="704.8" y="147.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="707.8" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (66 samples, 0.07%)</title><rect x="704.8" y="131.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="707.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (66 samples, 0.07%)</title><rect x="704.8" y="115.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="707.8" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (50 samples, 0.05%)</title><rect x="705.0" y="99.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="708.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (50 samples, 0.05%)</title><rect x="705.0" y="83.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="708.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (50 samples, 0.05%)</title><rect x="705.0" y="67.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="708.0" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (37 samples, 0.04%)</title><rect x="705.0" y="51.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="708.0" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (37 samples, 0.04%)</title><rect x="705.0" y="35.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="708.0" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (49 samples, 0.05%)</title><rect x="705.6" y="243.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="708.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (49 samples, 0.05%)</title><rect x="705.6" y="227.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="708.6" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (49 samples, 0.05%)</title><rect x="705.6" y="211.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="708.6" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (49 samples, 0.05%)</title><rect x="705.6" y="195.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="708.6" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (49 samples, 0.05%)</title><rect x="705.6" y="179.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="708.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$140/499586134.apply (65 samples, 0.07%)</title><rect x="706.2" y="339.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="709.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (65 samples, 0.07%)</title><rect x="706.2" y="323.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="709.2" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (65 samples, 0.07%)</title><rect x="706.2" y="307.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="709.2" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (65 samples, 0.07%)</title><rect x="706.2" y="291.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="709.2" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (65 samples, 0.07%)</title><rect x="706.2" y="275.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="709.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (94 samples, 0.10%)</title><rect x="707.1" y="419.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="710.1" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (94 samples, 0.10%)</title><rect x="707.1" y="403.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="710.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$151/1576841624.apply (94 samples, 0.10%)</title><rect x="707.1" y="387.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="710.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$3 (94 samples, 0.10%)</title><rect x="707.1" y="371.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="710.1" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (39 samples, 0.04%)</title><rect x="707.1" y="355.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="710.1" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (39 samples, 0.04%)</title><rect x="707.1" y="339.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="710.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (44 samples, 0.05%)</title><rect x="707.7" y="355.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="710.7" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (44 samples, 0.05%)</title><rect x="707.7" y="339.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="710.7" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (44 samples, 0.05%)</title><rect x="707.7" y="323.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="710.7" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (44 samples, 0.05%)</title><rect x="707.7" y="307.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="710.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (20 samples, 0.02%)</title><rect x="708.3" y="419.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="711.3" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (20 samples, 0.02%)</title><rect x="708.3" y="403.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="711.3" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (20 samples, 0.02%)</title><rect x="708.3" y="387.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="711.3" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (20 samples, 0.02%)</title><rect x="708.3" y="371.0" width="0.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="711.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (29 samples, 0.03%)</title><rect x="708.5" y="419.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="711.5" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (29 samples, 0.03%)</title><rect x="708.5" y="403.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="711.5" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (29 samples, 0.03%)</title><rect x="708.5" y="387.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="711.5" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (29 samples, 0.03%)</title><rect x="708.5" y="371.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="711.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (1,115 samples, 1.21%)</title><rect x="708.9" y="419.0" width="14.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="711.9" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (25 samples, 0.03%)</title><rect x="709.1" y="403.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="712.1" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (25 samples, 0.03%)</title><rect x="709.1" y="387.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="712.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (695 samples, 0.76%)</title><rect x="709.5" y="403.0" width="8.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="712.5" y="414.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (23 samples, 0.03%)</title><rect x="709.6" y="387.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="712.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (23 samples, 0.03%)</title><rect x="709.6" y="371.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="712.6" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (23 samples, 0.03%)</title><rect x="709.6" y="355.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="712.6" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (20 samples, 0.02%)</title><rect x="710.0" y="387.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="713.0" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (20 samples, 0.02%)</title><rect x="710.0" y="371.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="713.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (633 samples, 0.69%)</title><rect x="710.3" y="387.0" width="8.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="713.3" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (24 samples, 0.03%)</title><rect x="710.3" y="371.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="713.3" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (24 samples, 0.03%)</title><rect x="710.3" y="355.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="713.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (251 samples, 0.27%)</title><rect x="710.6" y="371.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="713.6" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (241 samples, 0.26%)</title><rect x="710.7" y="355.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="713.7" y="366.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (20 samples, 0.02%)</title><rect x="711.1" y="339.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="714.1" y="350.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (175 samples, 0.19%)</title><rect x="711.5" y="339.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="714.5" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (175 samples, 0.19%)</title><rect x="711.5" y="323.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="714.5" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (175 samples, 0.19%)</title><rect x="711.5" y="307.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="714.5" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (61 samples, 0.07%)</title><rect x="711.5" y="291.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="714.5" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (61 samples, 0.07%)</title><rect x="711.5" y="275.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="714.5" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (61 samples, 0.07%)</title><rect x="711.5" y="259.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="714.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (61 samples, 0.07%)</title><rect x="711.5" y="243.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="714.5" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (53 samples, 0.06%)</title><rect x="711.6" y="227.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="714.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (53 samples, 0.06%)</title><rect x="711.6" y="211.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="714.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (53 samples, 0.06%)</title><rect x="711.6" y="195.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="714.6" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (30 samples, 0.03%)</title><rect x="711.6" y="179.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="714.6" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (30 samples, 0.03%)</title><rect x="711.6" y="163.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="714.6" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (23 samples, 0.03%)</title><rect x="712.0" y="179.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="715.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (114 samples, 0.12%)</title><rect x="712.3" y="291.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="715.3" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (21 samples, 0.02%)</title><rect x="712.3" y="275.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="715.3" y="286.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (62 samples, 0.07%)</title><rect x="713.0" y="275.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="716.0" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (62 samples, 0.07%)</title><rect x="713.0" y="259.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="716.0" y="270.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (21 samples, 0.02%)</title><rect x="714.0" y="371.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="717.0" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (21 samples, 0.02%)</title><rect x="714.0" y="355.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="717.0" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$ValueIterator (21 samples, 0.02%)</title><rect x="714.0" y="339.0" width="0.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="717.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (79 samples, 0.09%)</title><rect x="715.0" y="371.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="718.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (61 samples, 0.07%)</title><rect x="715.2" y="355.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="718.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (61 samples, 0.07%)</title><rect x="715.2" y="339.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="718.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (61 samples, 0.07%)</title><rect x="715.2" y="323.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="718.2" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (61 samples, 0.07%)</title><rect x="715.2" y="307.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="718.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (61 samples, 0.07%)</title><rect x="715.2" y="291.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="718.2" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (61 samples, 0.07%)</title><rect x="715.2" y="275.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="718.2" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (61 samples, 0.07%)</title><rect x="715.2" y="259.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="718.2" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (61 samples, 0.07%)</title><rect x="715.2" y="243.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="718.2" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (61 samples, 0.07%)</title><rect x="715.2" y="227.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="718.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (61 samples, 0.07%)</title><rect x="715.2" y="211.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="718.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (45 samples, 0.05%)</title><rect x="715.4" y="195.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="718.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (45 samples, 0.05%)</title><rect x="715.4" y="179.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="718.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (45 samples, 0.05%)</title><rect x="715.4" y="163.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="718.4" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (27 samples, 0.03%)</title><rect x="715.4" y="147.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="718.4" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (27 samples, 0.03%)</title><rect x="715.4" y="131.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="718.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (187 samples, 0.20%)</title><rect x="716.0" y="371.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="719.0" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (56 samples, 0.06%)</title><rect x="716.0" y="355.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="719.0" y="366.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (39 samples, 0.04%)</title><rect x="716.2" y="339.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="719.2" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (39 samples, 0.04%)</title><rect x="716.2" y="323.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="719.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (28 samples, 0.03%)</title><rect x="716.8" y="355.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="719.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (28 samples, 0.03%)</title><rect x="716.8" y="339.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="719.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (28 samples, 0.03%)</title><rect x="716.8" y="323.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="719.8" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (28 samples, 0.03%)</title><rect x="716.8" y="307.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="719.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (63 samples, 0.07%)</title><rect x="717.2" y="355.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="720.2" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (45 samples, 0.05%)</title><rect x="717.4" y="339.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="720.4" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (35 samples, 0.04%)</title><rect x="717.5" y="323.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="720.5" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (35 samples, 0.04%)</title><rect x="717.5" y="307.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="720.5" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (33 samples, 0.04%)</title><rect x="718.0" y="355.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="721.0" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (33 samples, 0.04%)</title><rect x="718.0" y="339.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="721.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (377 samples, 0.41%)</title><rect x="718.4" y="403.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="721.4" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (203 samples, 0.22%)</title><rect x="718.4" y="387.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="721.4" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (193 samples, 0.21%)</title><rect x="718.5" y="371.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="721.5" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (114 samples, 0.12%)</title><rect x="718.7" y="355.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="721.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (114 samples, 0.12%)</title><rect x="718.7" y="339.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="721.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (114 samples, 0.12%)</title><rect x="718.7" y="323.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="721.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (114 samples, 0.12%)</title><rect x="718.7" y="307.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="721.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (56 samples, 0.06%)</title><rect x="718.7" y="291.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="721.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (56 samples, 0.06%)</title><rect x="718.7" y="275.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="721.7" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (56 samples, 0.06%)</title><rect x="718.7" y="259.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="721.7" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (56 samples, 0.06%)</title><rect x="718.7" y="243.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="721.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (56 samples, 0.06%)</title><rect x="718.7" y="227.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="721.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (56 samples, 0.06%)</title><rect x="718.7" y="211.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="721.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (56 samples, 0.06%)</title><rect x="718.7" y="195.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="721.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (56 samples, 0.06%)</title><rect x="718.7" y="179.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="721.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (56 samples, 0.06%)</title><rect x="718.7" y="163.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="721.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (41 samples, 0.04%)</title><rect x="718.9" y="147.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="721.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (41 samples, 0.04%)</title><rect x="718.9" y="131.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="721.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (41 samples, 0.04%)</title><rect x="718.9" y="115.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="721.9" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (22 samples, 0.02%)</title><rect x="718.9" y="99.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="721.9" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (22 samples, 0.02%)</title><rect x="718.9" y="83.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="721.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (58 samples, 0.06%)</title><rect x="719.5" y="291.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="722.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (58 samples, 0.06%)</title><rect x="719.5" y="275.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="722.5" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (58 samples, 0.06%)</title><rect x="719.5" y="259.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="722.5" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (58 samples, 0.06%)</title><rect x="719.5" y="243.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="722.5" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (58 samples, 0.06%)</title><rect x="719.5" y="227.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="722.5" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (20 samples, 0.02%)</title><rect x="720.2" y="355.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="723.2" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (20 samples, 0.02%)</title><rect x="720.2" y="339.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="723.2" y="350.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (29 samples, 0.03%)</title><rect x="720.5" y="355.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="723.5" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (21 samples, 0.02%)</title><rect x="721.0" y="387.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="724.0" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.02%)</title><rect x="721.0" y="371.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="724.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.02%)</title><rect x="721.0" y="355.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="724.0" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$82/363190164.get$Lambda (21 samples, 0.02%)</title><rect x="721.0" y="339.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="724.0" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$82 (21 samples, 0.02%)</title><rect x="721.0" y="323.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="724.0" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (30 samples, 0.03%)</title><rect x="721.3" y="387.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="724.3" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (20 samples, 0.02%)</title><rect x="721.4" y="371.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="724.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.02%)</title><rect x="721.4" y="355.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="724.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.02%)</title><rect x="721.4" y="339.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="724.4" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$93/506024426.get$Lambda (20 samples, 0.02%)</title><rect x="721.4" y="323.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="724.4" y="334.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$93 (20 samples, 0.02%)</title><rect x="721.4" y="307.0" width="0.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="724.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (123 samples, 0.13%)</title><rect x="721.6" y="387.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="724.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (107 samples, 0.12%)</title><rect x="721.9" y="371.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="724.9" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (107 samples, 0.12%)</title><rect x="721.9" y="355.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="724.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (107 samples, 0.12%)</title><rect x="721.9" y="339.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="724.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (107 samples, 0.12%)</title><rect x="721.9" y="323.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="724.9" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (107 samples, 0.12%)</title><rect x="721.9" y="307.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="724.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (107 samples, 0.12%)</title><rect x="721.9" y="291.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="724.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (107 samples, 0.12%)</title><rect x="721.9" y="275.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="724.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (52 samples, 0.06%)</title><rect x="721.9" y="259.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="724.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (52 samples, 0.06%)</title><rect x="721.9" y="243.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="724.9" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (52 samples, 0.06%)</title><rect x="721.9" y="227.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="724.9" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (52 samples, 0.06%)</title><rect x="721.9" y="211.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="724.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (52 samples, 0.06%)</title><rect x="721.9" y="195.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="724.9" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (52 samples, 0.06%)</title><rect x="721.9" y="179.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="724.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$107/267996914.getAsBoolean (52 samples, 0.06%)</title><rect x="721.9" y="163.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="724.9" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (52 samples, 0.06%)</title><rect x="721.9" y="147.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="724.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (52 samples, 0.06%)</title><rect x="721.9" y="131.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="724.9" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (34 samples, 0.04%)</title><rect x="722.1" y="115.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="725.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$71/853192791.apply (34 samples, 0.04%)</title><rect x="722.1" y="99.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="725.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (34 samples, 0.04%)</title><rect x="722.1" y="83.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="725.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$114/146570675.apply (55 samples, 0.06%)</title><rect x="722.5" y="259.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="725.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (55 samples, 0.06%)</title><rect x="722.5" y="243.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="725.5" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (55 samples, 0.06%)</title><rect x="722.5" y="227.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="725.5" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (55 samples, 0.06%)</title><rect x="722.5" y="211.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="725.5" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (55 samples, 0.06%)</title><rect x="722.5" y="195.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="725.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.getBytesFromByteBuffer (20 samples, 0.02%)</title><rect x="723.2" y="435.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="726.2" y="446.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.02%)</title><rect x="723.2" y="419.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="726.2" y="430.0"></text>
</g>
<g>
<title>[NIO Acceptor 0.0.0.0:8080 #0 tid=11761] (37 samples, 0.04%)</title><rect x="723.5" y="563.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="726.5" y="574.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (37 samples, 0.04%)</title><rect x="723.5" y="547.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="726.5" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (37 samples, 0.04%)</title><rect x="723.5" y="531.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="726.5" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (37 samples, 0.04%)</title><rect x="723.5" y="515.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="726.5" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (36 samples, 0.04%)</title><rect x="723.5" y="499.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="726.5" y="510.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.03%)</title><rect x="723.6" y="483.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="726.6" y="494.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=11753] (1,763 samples, 1.92%)</title><rect x="724.0" y="563.0" width="22.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="727.0" y="574.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,763 samples, 1.92%)</title><rect x="724.0" y="547.0" width="22.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="727.0" y="558.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (77 samples, 0.08%)</title><rect x="724.0" y="531.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="727.0" y="542.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (77 samples, 0.08%)</title><rect x="724.0" y="515.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="727.0" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,686 samples, 1.84%)</title><rect x="725.0" y="531.0" width="21.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="728.0" y="542.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,686 samples, 1.84%)</title><rect x="725.0" y="515.0" width="21.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="728.0" y="526.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,685 samples, 1.83%)</title><rect x="725.0" y="499.0" width="21.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="728.0" y="510.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (408 samples, 0.44%)</title><rect x="725.0" y="483.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="728.0" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (408 samples, 0.44%)</title><rect x="725.0" y="467.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="728.0" y="478.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (251 samples, 0.27%)</title><rect x="725.0" y="451.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="728.0" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (140 samples, 0.15%)</title><rect x="725.0" y="435.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="728.0" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (140 samples, 0.15%)</title><rect x="725.0" y="419.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="728.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (140 samples, 0.15%)</title><rect x="725.0" y="403.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="728.0" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (140 samples, 0.15%)</title><rect x="725.0" y="387.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="728.0" y="398.0"></text>
</g>
<g>
<title>java.lang.String (64 samples, 0.07%)</title><rect x="725.0" y="371.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="728.0" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (76 samples, 0.08%)</title><rect x="725.8" y="371.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="728.8" y="382.0"></text>
</g>
<g>
<title>byte[] (76 samples, 0.08%)</title><rect x="725.8" y="355.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="728.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.entity (111 samples, 0.12%)</title><rect x="726.7" y="435.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="729.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (108 samples, 0.12%)</title><rect x="726.7" y="419.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="729.7" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (108 samples, 0.12%)</title><rect x="726.7" y="403.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="729.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.get$Lambda (108 samples, 0.12%)</title><rect x="726.7" y="387.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="729.7" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.bmendli.MyService$$Lambda$68 (108 samples, 0.12%)</title><rect x="726.7" y="371.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="729.7" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (157 samples, 0.17%)</title><rect x="728.2" y="451.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="731.2" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (157 samples, 0.17%)</title><rect x="728.2" y="435.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="731.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (157 samples, 0.17%)</title><rect x="728.2" y="419.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="731.2" y="430.0"></text>
</g>
<g>
<title>java.lang.String (78 samples, 0.08%)</title><rect x="728.2" y="403.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="731.2" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (79 samples, 0.09%)</title><rect x="729.2" y="403.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="732.2" y="414.0"></text>
</g>
<g>
<title>byte[] (79 samples, 0.09%)</title><rect x="729.2" y="387.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="732.2" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (938 samples, 1.02%)</title><rect x="730.2" y="483.0" width="12.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="733.2" y="494.0"></text>
</g>
<g>
<title>one.nio.http.Request (147 samples, 0.16%)</title><rect x="730.2" y="467.0" width="1.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="733.2" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (362 samples, 0.39%)</title><rect x="732.1" y="467.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="735.1" y="478.0"></text>
</g>
<g>
<title>java.lang.String[] (362 samples, 0.39%)</title><rect x="732.1" y="451.0" width="4.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="735.1" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (429 samples, 0.47%)</title><rect x="736.7" y="467.0" width="5.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="739.7" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (429 samples, 0.47%)</title><rect x="736.7" y="451.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="739.7" y="462.0"></text>
</g>
<g>
<title>char[] (270 samples, 0.29%)</title><rect x="736.7" y="435.0" width="3.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="739.7" y="446.0"></text>
</g>
<g>
<title>java.lang.String (73 samples, 0.08%)</title><rect x="740.2" y="435.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="743.2" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (86 samples, 0.09%)</title><rect x="741.1" y="435.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="744.1" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (86 samples, 0.09%)</title><rect x="741.1" y="419.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="744.1" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (86 samples, 0.09%)</title><rect x="741.1" y="403.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="744.1" y="414.0"></text>
</g>
<g>
<title>byte[] (86 samples, 0.09%)</title><rect x="741.1" y="387.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="744.1" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (339 samples, 0.37%)</title><rect x="742.2" y="483.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="745.2" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (339 samples, 0.37%)</title><rect x="742.2" y="467.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="745.2" y="478.0"></text>
</g>
<g>
<title>char[] (155 samples, 0.17%)</title><rect x="742.2" y="451.0" width="2.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="745.2" y="462.0"></text>
</g>
<g>
<title>java.lang.String (89 samples, 0.10%)</title><rect x="744.2" y="451.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="747.2" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (95 samples, 0.10%)</title><rect x="745.4" y="451.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="748.4" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (95 samples, 0.10%)</title><rect x="745.4" y="435.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="748.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (95 samples, 0.10%)</title><rect x="745.4" y="419.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="748.4" y="430.0"></text>
</g>
<g>
<title>byte[] (95 samples, 0.10%)</title><rect x="745.4" y="403.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="748.4" y="414.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=11764] (2,094 samples, 2.28%)</title><rect x="746.6" y="563.0" width="26.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="749.6" y="574.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,094 samples, 2.28%)</title><rect x="746.6" y="547.0" width="26.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="749.6" y="558.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (2,094 samples, 2.28%)</title><rect x="746.6" y="531.0" width="26.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="749.6" y="542.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (2,094 samples, 2.28%)</title><rect x="746.6" y="515.0" width="26.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="749.6" y="526.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,094 samples, 2.28%)</title><rect x="746.6" y="499.0" width="26.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="749.6" y="510.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (407 samples, 0.44%)</title><rect x="746.6" y="483.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="749.6" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (407 samples, 0.44%)</title><rect x="746.6" y="467.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="749.6" y="478.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (223 samples, 0.24%)</title><rect x="746.6" y="451.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="749.6" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (162 samples, 0.18%)</title><rect x="746.6" y="435.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="749.6" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (162 samples, 0.18%)</title><rect x="746.6" y="419.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="749.6" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (162 samples, 0.18%)</title><rect x="746.6" y="403.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="749.6" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (162 samples, 0.18%)</title><rect x="746.6" y="387.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="749.6" y="398.0"></text>
</g>
<g>
<title>java.lang.String (67 samples, 0.07%)</title><rect x="746.6" y="371.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="749.6" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (95 samples, 0.10%)</title><rect x="747.5" y="371.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="750.5" y="382.0"></text>
</g>
<g>
<title>byte[] (95 samples, 0.10%)</title><rect x="747.5" y="355.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="750.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.entity (61 samples, 0.07%)</title><rect x="748.7" y="435.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="751.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (60 samples, 0.07%)</title><rect x="748.7" y="419.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="751.7" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (60 samples, 0.07%)</title><rect x="748.7" y="403.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="751.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.get$Lambda (60 samples, 0.07%)</title><rect x="748.7" y="387.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="751.7" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.bmendli.MyService$$Lambda$68 (60 samples, 0.07%)</title><rect x="748.7" y="371.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="751.7" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (184 samples, 0.20%)</title><rect x="749.5" y="451.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="752.5" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (184 samples, 0.20%)</title><rect x="749.5" y="435.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="752.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (184 samples, 0.20%)</title><rect x="749.5" y="419.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="752.5" y="430.0"></text>
</g>
<g>
<title>java.lang.String (83 samples, 0.09%)</title><rect x="749.5" y="403.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="752.5" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (101 samples, 0.11%)</title><rect x="750.5" y="403.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="753.5" y="414.0"></text>
</g>
<g>
<title>byte[] (101 samples, 0.11%)</title><rect x="750.5" y="387.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="753.5" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (817 samples, 0.89%)</title><rect x="751.8" y="483.0" width="10.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="754.8" y="494.0"></text>
</g>
<g>
<title>one.nio.http.Request (93 samples, 0.10%)</title><rect x="751.8" y="467.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="754.8" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (300 samples, 0.33%)</title><rect x="753.0" y="467.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="756.0" y="478.0"></text>
</g>
<g>
<title>java.lang.String[] (192 samples, 0.21%)</title><rect x="753.0" y="451.0" width="2.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="756.0" y="462.0"></text>
</g>
<g>
<title>java.lang.String[] (108 samples, 0.12%)</title><rect x="755.5" y="451.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="758.5" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (424 samples, 0.46%)</title><rect x="756.9" y="467.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="759.9" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (424 samples, 0.46%)</title><rect x="756.9" y="451.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="759.9" y="462.0"></text>
</g>
<g>
<title>char[] (266 samples, 0.29%)</title><rect x="756.9" y="435.0" width="3.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="759.9" y="446.0"></text>
</g>
<g>
<title>java.lang.String (48 samples, 0.05%)</title><rect x="760.4" y="435.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="763.4" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (102 samples, 0.11%)</title><rect x="761.0" y="435.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="764.0" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (102 samples, 0.11%)</title><rect x="761.0" y="419.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="764.0" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (102 samples, 0.11%)</title><rect x="761.0" y="403.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="764.0" y="414.0"></text>
</g>
<g>
<title>byte[] (102 samples, 0.11%)</title><rect x="761.0" y="387.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="764.0" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (870 samples, 0.95%)</title><rect x="762.3" y="483.0" width="11.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="765.3" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (870 samples, 0.95%)</title><rect x="762.3" y="467.0" width="11.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="765.3" y="478.0"></text>
</g>
<g>
<title>char[] (273 samples, 0.30%)</title><rect x="762.3" y="451.0" width="3.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="765.3" y="462.0"></text>
</g>
<g>
<title>char[] (132 samples, 0.14%)</title><rect x="765.8" y="451.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="768.8" y="462.0"></text>
</g>
<g>
<title>java.lang.String (148 samples, 0.16%)</title><rect x="767.5" y="451.0" width="1.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="770.5" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (317 samples, 0.35%)</title><rect x="769.4" y="451.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="772.4" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (317 samples, 0.35%)</title><rect x="769.4" y="435.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="772.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (317 samples, 0.35%)</title><rect x="769.4" y="419.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="772.4" y="430.0"></text>
</g>
<g>
<title>byte[] (317 samples, 0.35%)</title><rect x="769.4" y="403.0" width="4.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="772.4" y="414.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=11754] (1,798 samples, 1.96%)</title><rect x="773.5" y="563.0" width="23.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="776.5" y="574.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,798 samples, 1.96%)</title><rect x="773.5" y="547.0" width="23.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="776.5" y="558.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (171 samples, 0.19%)</title><rect x="773.5" y="531.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="776.5" y="542.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (171 samples, 0.19%)</title><rect x="773.5" y="515.0" width="2.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="776.5" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,627 samples, 1.77%)</title><rect x="775.7" y="531.0" width="20.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="778.7" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,627 samples, 1.77%)</title><rect x="775.7" y="515.0" width="20.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="778.7" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,626 samples, 1.77%)</title><rect x="775.7" y="499.0" width="20.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="778.7" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (445 samples, 0.48%)</title><rect x="775.7" y="483.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="778.7" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (445 samples, 0.48%)</title><rect x="775.7" y="467.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="778.7" y="478.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (281 samples, 0.31%)</title><rect x="775.7" y="451.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="778.7" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (156 samples, 0.17%)</title><rect x="775.7" y="435.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="778.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (156 samples, 0.17%)</title><rect x="775.7" y="419.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="778.7" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (156 samples, 0.17%)</title><rect x="775.7" y="403.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="778.7" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (156 samples, 0.17%)</title><rect x="775.7" y="387.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="778.7" y="398.0"></text>
</g>
<g>
<title>java.lang.String (71 samples, 0.08%)</title><rect x="775.7" y="371.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="778.7" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (85 samples, 0.09%)</title><rect x="776.6" y="371.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="779.6" y="382.0"></text>
</g>
<g>
<title>byte[] (85 samples, 0.09%)</title><rect x="776.6" y="355.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="779.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.entity (125 samples, 0.14%)</title><rect x="777.7" y="435.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="780.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (121 samples, 0.13%)</title><rect x="777.7" y="419.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="780.7" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (121 samples, 0.13%)</title><rect x="777.7" y="403.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="780.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.get$Lambda (121 samples, 0.13%)</title><rect x="777.7" y="387.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="780.7" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.bmendli.MyService$$Lambda$68 (121 samples, 0.13%)</title><rect x="777.7" y="371.0" width="1.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="780.7" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (164 samples, 0.18%)</title><rect x="779.3" y="451.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="782.3" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (164 samples, 0.18%)</title><rect x="779.3" y="435.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="782.3" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (164 samples, 0.18%)</title><rect x="779.3" y="419.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="782.3" y="430.0"></text>
</g>
<g>
<title>java.lang.String (65 samples, 0.07%)</title><rect x="779.3" y="403.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="782.3" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (99 samples, 0.11%)</title><rect x="780.2" y="403.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="783.2" y="414.0"></text>
</g>
<g>
<title>byte[] (99 samples, 0.11%)</title><rect x="780.2" y="387.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="783.2" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (814 samples, 0.89%)</title><rect x="781.4" y="483.0" width="10.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="784.4" y="494.0"></text>
</g>
<g>
<title>one.nio.http.Request (136 samples, 0.15%)</title><rect x="781.4" y="467.0" width="1.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="784.4" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (269 samples, 0.29%)</title><rect x="783.2" y="467.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="786.2" y="478.0"></text>
</g>
<g>
<title>java.lang.String[] (269 samples, 0.29%)</title><rect x="783.2" y="451.0" width="3.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="786.2" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (409 samples, 0.45%)</title><rect x="786.6" y="467.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="789.6" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (409 samples, 0.45%)</title><rect x="786.6" y="451.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="789.6" y="462.0"></text>
</g>
<g>
<title>char[] (181 samples, 0.20%)</title><rect x="786.6" y="435.0" width="2.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="789.6" y="446.0"></text>
</g>
<g>
<title>java.lang.String (105 samples, 0.11%)</title><rect x="789.0" y="435.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="792.0" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (123 samples, 0.13%)</title><rect x="790.3" y="435.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="793.3" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (123 samples, 0.13%)</title><rect x="790.3" y="419.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="793.3" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (123 samples, 0.13%)</title><rect x="790.3" y="403.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="793.3" y="414.0"></text>
</g>
<g>
<title>byte[] (123 samples, 0.13%)</title><rect x="790.3" y="387.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="793.3" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (367 samples, 0.40%)</title><rect x="791.9" y="483.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="794.9" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (367 samples, 0.40%)</title><rect x="791.9" y="467.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="794.9" y="478.0"></text>
</g>
<g>
<title>char[] (158 samples, 0.17%)</title><rect x="791.9" y="451.0" width="2.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="794.9" y="462.0"></text>
</g>
<g>
<title>java.lang.String (58 samples, 0.06%)</title><rect x="793.9" y="451.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="796.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (151 samples, 0.16%)</title><rect x="794.7" y="451.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="797.7" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (151 samples, 0.16%)</title><rect x="794.7" y="435.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="797.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (151 samples, 0.16%)</title><rect x="794.7" y="419.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="797.7" y="430.0"></text>
</g>
<g>
<title>byte[] (151 samples, 0.16%)</title><rect x="794.7" y="403.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="797.7" y="414.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=11776] (1,800 samples, 1.96%)</title><rect x="796.6" y="563.0" width="23.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="799.6" y="574.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,800 samples, 1.96%)</title><rect x="796.6" y="547.0" width="23.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="799.6" y="558.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (1,800 samples, 1.96%)</title><rect x="796.6" y="531.0" width="23.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="799.6" y="542.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,800 samples, 1.96%)</title><rect x="796.6" y="515.0" width="23.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="799.6" y="526.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,800 samples, 1.96%)</title><rect x="796.6" y="499.0" width="23.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="799.6" y="510.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (319 samples, 0.35%)</title><rect x="796.6" y="483.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="799.6" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (319 samples, 0.35%)</title><rect x="796.6" y="467.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="799.6" y="478.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (224 samples, 0.24%)</title><rect x="796.6" y="451.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="799.6" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (147 samples, 0.16%)</title><rect x="796.6" y="435.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="799.6" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (147 samples, 0.16%)</title><rect x="796.6" y="419.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="799.6" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (147 samples, 0.16%)</title><rect x="796.6" y="403.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="799.6" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (147 samples, 0.16%)</title><rect x="796.6" y="387.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="799.6" y="398.0"></text>
</g>
<g>
<title>java.lang.String (66 samples, 0.07%)</title><rect x="796.6" y="371.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="799.6" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (81 samples, 0.09%)</title><rect x="797.5" y="371.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="800.5" y="382.0"></text>
</g>
<g>
<title>byte[] (81 samples, 0.09%)</title><rect x="797.5" y="355.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="800.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.entity (77 samples, 0.08%)</title><rect x="798.5" y="435.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="801.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (77 samples, 0.08%)</title><rect x="798.5" y="419.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="801.5" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (77 samples, 0.08%)</title><rect x="798.5" y="403.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="801.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.get$Lambda (77 samples, 0.08%)</title><rect x="798.5" y="387.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="801.5" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.bmendli.MyService$$Lambda$68 (77 samples, 0.08%)</title><rect x="798.5" y="371.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="801.5" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (95 samples, 0.10%)</title><rect x="799.5" y="451.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="802.5" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (95 samples, 0.10%)</title><rect x="799.5" y="435.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="802.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (95 samples, 0.10%)</title><rect x="799.5" y="419.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="802.5" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (81 samples, 0.09%)</title><rect x="799.7" y="403.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="802.7" y="414.0"></text>
</g>
<g>
<title>byte[] (81 samples, 0.09%)</title><rect x="799.7" y="387.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="802.7" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (554 samples, 0.60%)</title><rect x="800.7" y="483.0" width="7.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="803.7" y="494.0"></text>
</g>
<g>
<title>one.nio.http.Request (117 samples, 0.13%)</title><rect x="800.7" y="467.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="803.7" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (178 samples, 0.19%)</title><rect x="802.2" y="467.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="805.2" y="478.0"></text>
</g>
<g>
<title>java.lang.String[] (100 samples, 0.11%)</title><rect x="802.2" y="451.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="805.2" y="462.0"></text>
</g>
<g>
<title>java.lang.String[] (78 samples, 0.08%)</title><rect x="803.5" y="451.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="806.5" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (259 samples, 0.28%)</title><rect x="804.5" y="467.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="807.5" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (259 samples, 0.28%)</title><rect x="804.5" y="451.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="807.5" y="462.0"></text>
</g>
<g>
<title>char[] (150 samples, 0.16%)</title><rect x="804.5" y="435.0" width="1.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="807.5" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (90 samples, 0.10%)</title><rect x="806.7" y="435.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="809.7" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (90 samples, 0.10%)</title><rect x="806.7" y="419.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="809.7" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (90 samples, 0.10%)</title><rect x="806.7" y="403.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="809.7" y="414.0"></text>
</g>
<g>
<title>byte[] (90 samples, 0.10%)</title><rect x="806.7" y="387.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="809.7" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (927 samples, 1.01%)</title><rect x="807.8" y="483.0" width="11.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="810.8" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (927 samples, 1.01%)</title><rect x="807.8" y="467.0" width="11.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="810.8" y="478.0"></text>
</g>
<g>
<title>char[] (330 samples, 0.36%)</title><rect x="807.8" y="451.0" width="4.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="810.8" y="462.0"></text>
</g>
<g>
<title>char[] (112 samples, 0.12%)</title><rect x="812.1" y="451.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="815.1" y="462.0"></text>
</g>
<g>
<title>java.lang.String (150 samples, 0.16%)</title><rect x="813.5" y="451.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="816.5" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (335 samples, 0.36%)</title><rect x="815.4" y="451.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="818.4" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (335 samples, 0.36%)</title><rect x="815.4" y="435.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="818.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (335 samples, 0.36%)</title><rect x="815.4" y="419.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="818.4" y="430.0"></text>
</g>
<g>
<title>byte[] (335 samples, 0.36%)</title><rect x="815.4" y="403.0" width="4.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="818.4" y="414.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=11755] (1,800 samples, 1.96%)</title><rect x="819.7" y="563.0" width="23.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="822.7" y="574.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,800 samples, 1.96%)</title><rect x="819.7" y="547.0" width="23.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="822.7" y="558.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (1,800 samples, 1.96%)</title><rect x="819.7" y="531.0" width="23.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="822.7" y="542.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,800 samples, 1.96%)</title><rect x="819.7" y="515.0" width="23.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="822.7" y="526.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,798 samples, 1.96%)</title><rect x="819.7" y="499.0" width="23.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="822.7" y="510.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (480 samples, 0.52%)</title><rect x="819.7" y="483.0" width="6.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="822.7" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (480 samples, 0.52%)</title><rect x="819.7" y="467.0" width="6.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="822.7" y="478.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (328 samples, 0.36%)</title><rect x="819.7" y="451.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="822.7" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (184 samples, 0.20%)</title><rect x="819.7" y="435.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="822.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (184 samples, 0.20%)</title><rect x="819.7" y="419.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="822.7" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (184 samples, 0.20%)</title><rect x="819.7" y="403.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="822.7" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (184 samples, 0.20%)</title><rect x="819.7" y="387.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="822.7" y="398.0"></text>
</g>
<g>
<title>java.lang.String (67 samples, 0.07%)</title><rect x="819.7" y="371.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="822.7" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (117 samples, 0.13%)</title><rect x="820.6" y="371.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="823.6" y="382.0"></text>
</g>
<g>
<title>byte[] (117 samples, 0.13%)</title><rect x="820.6" y="355.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="823.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.entity (144 samples, 0.16%)</title><rect x="822.1" y="435.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="825.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (142 samples, 0.15%)</title><rect x="822.1" y="419.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="825.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (142 samples, 0.15%)</title><rect x="822.1" y="403.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="825.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.get$Lambda (142 samples, 0.15%)</title><rect x="822.1" y="387.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="825.1" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.bmendli.MyService$$Lambda$68 (142 samples, 0.15%)</title><rect x="822.1" y="371.0" width="1.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="825.1" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (152 samples, 0.17%)</title><rect x="824.0" y="451.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="827.0" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (152 samples, 0.17%)</title><rect x="824.0" y="435.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="827.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (152 samples, 0.17%)</title><rect x="824.0" y="419.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="827.0" y="430.0"></text>
</g>
<g>
<title>java.lang.String (87 samples, 0.09%)</title><rect x="824.0" y="403.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="827.0" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (65 samples, 0.07%)</title><rect x="825.1" y="403.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="828.1" y="414.0"></text>
</g>
<g>
<title>byte[] (65 samples, 0.07%)</title><rect x="825.1" y="387.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="828.1" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (889 samples, 0.97%)</title><rect x="825.9" y="483.0" width="11.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="828.9" y="494.0"></text>
</g>
<g>
<title>one.nio.http.Request (166 samples, 0.18%)</title><rect x="825.9" y="467.0" width="2.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="828.9" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (325 samples, 0.35%)</title><rect x="828.0" y="467.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="831.0" y="478.0"></text>
</g>
<g>
<title>java.lang.String[] (325 samples, 0.35%)</title><rect x="828.0" y="451.0" width="4.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="831.0" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (398 samples, 0.43%)</title><rect x="832.2" y="467.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="835.2" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (398 samples, 0.43%)</title><rect x="832.2" y="451.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="835.2" y="462.0"></text>
</g>
<g>
<title>char[] (197 samples, 0.21%)</title><rect x="832.2" y="435.0" width="2.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="835.2" y="446.0"></text>
</g>
<g>
<title>java.lang.String (69 samples, 0.08%)</title><rect x="834.8" y="435.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="837.8" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (132 samples, 0.14%)</title><rect x="835.6" y="435.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="838.6" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (132 samples, 0.14%)</title><rect x="835.6" y="419.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="838.6" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (132 samples, 0.14%)</title><rect x="835.6" y="403.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="838.6" y="414.0"></text>
</g>
<g>
<title>byte[] (132 samples, 0.14%)</title><rect x="835.6" y="387.0" width="1.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="838.6" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (429 samples, 0.47%)</title><rect x="837.3" y="483.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="840.3" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (429 samples, 0.47%)</title><rect x="837.3" y="467.0" width="5.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="840.3" y="478.0"></text>
</g>
<g>
<title>char[] (193 samples, 0.21%)</title><rect x="837.3" y="451.0" width="2.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="840.3" y="462.0"></text>
</g>
<g>
<title>java.lang.String (73 samples, 0.08%)</title><rect x="839.8" y="451.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="842.8" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (163 samples, 0.18%)</title><rect x="840.8" y="451.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="843.8" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (163 samples, 0.18%)</title><rect x="840.8" y="435.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="843.8" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (163 samples, 0.18%)</title><rect x="840.8" y="419.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="843.8" y="430.0"></text>
</g>
<g>
<title>byte[] (163 samples, 0.18%)</title><rect x="840.8" y="403.0" width="2.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="843.8" y="414.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=11777] (2,001 samples, 2.18%)</title><rect x="842.9" y="563.0" width="25.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="845.9" y="574.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,001 samples, 2.18%)</title><rect x="842.9" y="547.0" width="25.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="845.9" y="558.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (200 samples, 0.22%)</title><rect x="842.9" y="531.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="845.9" y="542.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (200 samples, 0.22%)</title><rect x="842.9" y="515.0" width="2.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="845.9" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,801 samples, 1.96%)</title><rect x="845.4" y="531.0" width="23.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="848.4" y="542.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,801 samples, 1.96%)</title><rect x="845.4" y="515.0" width="23.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="848.4" y="526.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,801 samples, 1.96%)</title><rect x="845.4" y="499.0" width="23.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="848.4" y="510.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (343 samples, 0.37%)</title><rect x="845.4" y="483.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="848.4" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (343 samples, 0.37%)</title><rect x="845.4" y="467.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="848.4" y="478.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (238 samples, 0.26%)</title><rect x="845.4" y="451.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="848.4" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (105 samples, 0.11%)</title><rect x="845.4" y="435.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="848.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (105 samples, 0.11%)</title><rect x="845.4" y="419.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="848.4" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (105 samples, 0.11%)</title><rect x="845.4" y="403.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="848.4" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (105 samples, 0.11%)</title><rect x="845.4" y="387.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="848.4" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (87 samples, 0.09%)</title><rect x="845.7" y="371.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="848.7" y="382.0"></text>
</g>
<g>
<title>byte[] (87 samples, 0.09%)</title><rect x="845.7" y="355.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="848.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.entity (133 samples, 0.14%)</title><rect x="846.8" y="435.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="849.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (128 samples, 0.14%)</title><rect x="846.8" y="419.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="849.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (128 samples, 0.14%)</title><rect x="846.8" y="403.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="849.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.get$Lambda (128 samples, 0.14%)</title><rect x="846.8" y="387.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="849.8" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.bmendli.MyService$$Lambda$68 (128 samples, 0.14%)</title><rect x="846.8" y="371.0" width="1.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="849.8" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (105 samples, 0.11%)</title><rect x="848.5" y="451.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="851.5" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (105 samples, 0.11%)</title><rect x="848.5" y="435.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="851.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (105 samples, 0.11%)</title><rect x="848.5" y="419.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="851.5" y="430.0"></text>
</g>
<g>
<title>java.lang.String (64 samples, 0.07%)</title><rect x="848.5" y="403.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="851.5" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (41 samples, 0.04%)</title><rect x="849.3" y="403.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="852.3" y="414.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.04%)</title><rect x="849.3" y="387.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="852.3" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (604 samples, 0.66%)</title><rect x="849.9" y="483.0" width="7.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="852.9" y="494.0"></text>
</g>
<g>
<title>one.nio.http.Request (67 samples, 0.07%)</title><rect x="849.9" y="467.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="852.9" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (199 samples, 0.22%)</title><rect x="850.7" y="467.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="853.7" y="478.0"></text>
</g>
<g>
<title>java.lang.String[] (149 samples, 0.16%)</title><rect x="850.7" y="451.0" width="1.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="853.7" y="462.0"></text>
</g>
<g>
<title>java.lang.String[] (50 samples, 0.05%)</title><rect x="852.6" y="451.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="855.6" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (338 samples, 0.37%)</title><rect x="853.3" y="467.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="856.3" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (338 samples, 0.37%)</title><rect x="853.3" y="451.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="856.3" y="462.0"></text>
</g>
<g>
<title>char[] (206 samples, 0.22%)</title><rect x="853.3" y="435.0" width="2.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="856.3" y="446.0"></text>
</g>
<g>
<title>java.lang.String (59 samples, 0.06%)</title><rect x="856.0" y="435.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="859.0" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (70 samples, 0.08%)</title><rect x="856.7" y="435.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="859.7" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (70 samples, 0.08%)</title><rect x="856.7" y="419.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="859.7" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (70 samples, 0.08%)</title><rect x="856.7" y="403.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="859.7" y="414.0"></text>
</g>
<g>
<title>byte[] (70 samples, 0.08%)</title><rect x="856.7" y="387.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="859.7" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (854 samples, 0.93%)</title><rect x="857.6" y="483.0" width="11.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="860.6" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (854 samples, 0.93%)</title><rect x="857.6" y="467.0" width="11.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="860.6" y="478.0"></text>
</g>
<g>
<title>char[] (386 samples, 0.42%)</title><rect x="857.6" y="451.0" width="5.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="860.6" y="462.0"></text>
</g>
<g>
<title>java.lang.String (136 samples, 0.15%)</title><rect x="862.7" y="451.0" width="1.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="865.7" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (319 samples, 0.35%)</title><rect x="864.5" y="451.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="867.5" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (319 samples, 0.35%)</title><rect x="864.5" y="435.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="867.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (319 samples, 0.35%)</title><rect x="864.5" y="419.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="867.5" y="430.0"></text>
</g>
<g>
<title>byte[] (317 samples, 0.35%)</title><rect x="864.5" y="403.0" width="4.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="867.5" y="414.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=11756] (1,768 samples, 1.93%)</title><rect x="868.6" y="563.0" width="22.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="871.6" y="574.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,768 samples, 1.93%)</title><rect x="868.6" y="547.0" width="22.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="871.6" y="558.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (1,768 samples, 1.93%)</title><rect x="868.6" y="531.0" width="22.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="871.6" y="542.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,768 samples, 1.93%)</title><rect x="868.6" y="515.0" width="22.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="871.6" y="526.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,767 samples, 1.92%)</title><rect x="868.6" y="499.0" width="22.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="871.6" y="510.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (479 samples, 0.52%)</title><rect x="868.6" y="483.0" width="6.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="871.6" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (479 samples, 0.52%)</title><rect x="868.6" y="467.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="871.6" y="478.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (303 samples, 0.33%)</title><rect x="868.6" y="451.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="871.6" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (192 samples, 0.21%)</title><rect x="868.6" y="435.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="871.6" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (192 samples, 0.21%)</title><rect x="868.6" y="419.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="871.6" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (192 samples, 0.21%)</title><rect x="868.6" y="403.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="871.6" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (192 samples, 0.21%)</title><rect x="868.6" y="387.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="871.6" y="398.0"></text>
</g>
<g>
<title>java.lang.String (68 samples, 0.07%)</title><rect x="868.6" y="371.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="871.6" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (124 samples, 0.14%)</title><rect x="869.5" y="371.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="872.5" y="382.0"></text>
</g>
<g>
<title>byte[] (124 samples, 0.14%)</title><rect x="869.5" y="355.0" width="1.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="872.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.entity (111 samples, 0.12%)</title><rect x="871.1" y="435.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="874.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (111 samples, 0.12%)</title><rect x="871.1" y="419.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="874.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (111 samples, 0.12%)</title><rect x="871.1" y="403.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="874.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.get$Lambda (111 samples, 0.12%)</title><rect x="871.1" y="387.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="874.1" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.bmendli.MyService$$Lambda$68 (111 samples, 0.12%)</title><rect x="871.1" y="371.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="874.1" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (176 samples, 0.19%)</title><rect x="872.5" y="451.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="875.5" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (176 samples, 0.19%)</title><rect x="872.5" y="435.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="875.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (176 samples, 0.19%)</title><rect x="872.5" y="419.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="875.5" y="430.0"></text>
</g>
<g>
<title>java.lang.String (74 samples, 0.08%)</title><rect x="872.5" y="403.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="875.5" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (102 samples, 0.11%)</title><rect x="873.4" y="403.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="876.4" y="414.0"></text>
</g>
<g>
<title>byte[] (102 samples, 0.11%)</title><rect x="873.4" y="387.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="876.4" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (873 samples, 0.95%)</title><rect x="874.7" y="483.0" width="11.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="877.7" y="494.0"></text>
</g>
<g>
<title>one.nio.http.Request (165 samples, 0.18%)</title><rect x="874.7" y="467.0" width="2.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="877.7" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (277 samples, 0.30%)</title><rect x="876.9" y="467.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="879.9" y="478.0"></text>
</g>
<g>
<title>java.lang.String[] (277 samples, 0.30%)</title><rect x="876.9" y="451.0" width="3.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="879.9" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (431 samples, 0.47%)</title><rect x="880.4" y="467.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="883.4" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (431 samples, 0.47%)</title><rect x="880.4" y="451.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="883.4" y="462.0"></text>
</g>
<g>
<title>char[] (232 samples, 0.25%)</title><rect x="880.4" y="435.0" width="3.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="883.4" y="446.0"></text>
</g>
<g>
<title>java.lang.String (89 samples, 0.10%)</title><rect x="883.4" y="435.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="886.4" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (110 samples, 0.12%)</title><rect x="884.5" y="435.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="887.5" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (110 samples, 0.12%)</title><rect x="884.5" y="419.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="887.5" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (110 samples, 0.12%)</title><rect x="884.5" y="403.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="887.5" y="414.0"></text>
</g>
<g>
<title>byte[] (110 samples, 0.12%)</title><rect x="884.5" y="387.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="887.5" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (415 samples, 0.45%)</title><rect x="886.0" y="483.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="889.0" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (415 samples, 0.45%)</title><rect x="886.0" y="467.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="889.0" y="478.0"></text>
</g>
<g>
<title>char[] (176 samples, 0.19%)</title><rect x="886.0" y="451.0" width="2.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="889.0" y="462.0"></text>
</g>
<g>
<title>java.lang.String (74 samples, 0.08%)</title><rect x="888.2" y="451.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="891.2" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (165 samples, 0.18%)</title><rect x="889.2" y="451.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="892.2" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (165 samples, 0.18%)</title><rect x="889.2" y="435.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="892.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (165 samples, 0.18%)</title><rect x="889.2" y="419.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="892.2" y="430.0"></text>
</g>
<g>
<title>byte[] (165 samples, 0.18%)</title><rect x="889.2" y="403.0" width="2.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="892.2" y="414.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=11767] (2,109 samples, 2.30%)</title><rect x="891.3" y="563.0" width="27.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="894.3" y="574.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,109 samples, 2.30%)</title><rect x="891.3" y="547.0" width="27.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="894.3" y="558.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (2,109 samples, 2.30%)</title><rect x="891.3" y="531.0" width="27.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="894.3" y="542.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (2,109 samples, 2.30%)</title><rect x="891.3" y="515.0" width="27.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="894.3" y="526.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,109 samples, 2.30%)</title><rect x="891.3" y="499.0" width="27.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="894.3" y="510.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (303 samples, 0.33%)</title><rect x="891.3" y="483.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="894.3" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (303 samples, 0.33%)</title><rect x="891.3" y="467.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="894.3" y="478.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (197 samples, 0.21%)</title><rect x="891.3" y="451.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="894.3" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (114 samples, 0.12%)</title><rect x="891.3" y="435.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="894.3" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (114 samples, 0.12%)</title><rect x="891.3" y="419.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="894.3" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (114 samples, 0.12%)</title><rect x="891.3" y="403.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="894.3" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (114 samples, 0.12%)</title><rect x="891.3" y="387.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="894.3" y="398.0"></text>
</g>
<g>
<title>java.lang.String (55 samples, 0.06%)</title><rect x="891.3" y="371.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="894.3" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (59 samples, 0.06%)</title><rect x="892.0" y="371.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="895.0" y="382.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.06%)</title><rect x="892.0" y="355.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="895.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.entity (83 samples, 0.09%)</title><rect x="892.8" y="435.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="895.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (83 samples, 0.09%)</title><rect x="892.8" y="419.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="895.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (83 samples, 0.09%)</title><rect x="892.8" y="403.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="895.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.get$Lambda (83 samples, 0.09%)</title><rect x="892.8" y="387.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="895.8" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.bmendli.MyService$$Lambda$68 (83 samples, 0.09%)</title><rect x="892.8" y="371.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="895.8" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (106 samples, 0.12%)</title><rect x="893.8" y="451.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="896.8" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (106 samples, 0.12%)</title><rect x="893.8" y="435.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="896.8" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (106 samples, 0.12%)</title><rect x="893.8" y="419.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="896.8" y="430.0"></text>
</g>
<g>
<title>java.lang.String (48 samples, 0.05%)</title><rect x="893.8" y="403.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="896.8" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (58 samples, 0.06%)</title><rect x="894.4" y="403.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="897.4" y="414.0"></text>
</g>
<g>
<title>byte[] (58 samples, 0.06%)</title><rect x="894.4" y="387.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="897.4" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (829 samples, 0.90%)</title><rect x="895.2" y="483.0" width="10.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="898.2" y="494.0"></text>
</g>
<g>
<title>one.nio.http.Request (148 samples, 0.16%)</title><rect x="895.2" y="467.0" width="1.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="898.2" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (264 samples, 0.29%)</title><rect x="897.1" y="467.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="900.1" y="478.0"></text>
</g>
<g>
<title>java.lang.String[] (193 samples, 0.21%)</title><rect x="897.1" y="451.0" width="2.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="900.1" y="462.0"></text>
</g>
<g>
<title>java.lang.String[] (71 samples, 0.08%)</title><rect x="899.6" y="451.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="902.6" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (417 samples, 0.45%)</title><rect x="900.5" y="467.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="903.5" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (417 samples, 0.45%)</title><rect x="900.5" y="451.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="903.5" y="462.0"></text>
</g>
<g>
<title>char[] (221 samples, 0.24%)</title><rect x="900.5" y="435.0" width="2.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="903.5" y="446.0"></text>
</g>
<g>
<title>char[] (23 samples, 0.03%)</title><rect x="903.3" y="435.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="906.3" y="446.0"></text>
</g>
<g>
<title>java.lang.String (39 samples, 0.04%)</title><rect x="903.6" y="435.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="906.6" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (134 samples, 0.15%)</title><rect x="904.1" y="435.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="907.1" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (134 samples, 0.15%)</title><rect x="904.1" y="419.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="907.1" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (134 samples, 0.15%)</title><rect x="904.1" y="403.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="907.1" y="414.0"></text>
</g>
<g>
<title>byte[] (134 samples, 0.15%)</title><rect x="904.1" y="387.0" width="1.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="907.1" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (977 samples, 1.06%)</title><rect x="905.8" y="483.0" width="12.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="908.8" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (977 samples, 1.06%)</title><rect x="905.8" y="467.0" width="12.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="908.8" y="478.0"></text>
</g>
<g>
<title>char[] (318 samples, 0.35%)</title><rect x="905.8" y="451.0" width="4.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="908.8" y="462.0"></text>
</g>
<g>
<title>char[] (75 samples, 0.08%)</title><rect x="909.9" y="451.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="912.9" y="462.0"></text>
</g>
<g>
<title>java.lang.String (175 samples, 0.19%)</title><rect x="910.9" y="451.0" width="2.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="913.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (409 samples, 0.45%)</title><rect x="913.1" y="451.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="916.1" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (409 samples, 0.45%)</title><rect x="913.1" y="435.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="916.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (409 samples, 0.45%)</title><rect x="913.1" y="419.0" width="5.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="916.1" y="430.0"></text>
</g>
<g>
<title>byte[] (409 samples, 0.45%)</title><rect x="913.1" y="403.0" width="5.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="916.1" y="414.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=11778] (1,959 samples, 2.13%)</title><rect x="918.4" y="563.0" width="25.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="921.4" y="574.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,959 samples, 2.13%)</title><rect x="918.4" y="547.0" width="25.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="921.4" y="558.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (143 samples, 0.16%)</title><rect x="918.4" y="531.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="921.4" y="542.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (143 samples, 0.16%)</title><rect x="918.4" y="515.0" width="1.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="921.4" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,816 samples, 1.98%)</title><rect x="920.2" y="531.0" width="23.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="923.2" y="542.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,816 samples, 1.98%)</title><rect x="920.2" y="515.0" width="23.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="923.2" y="526.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,816 samples, 1.98%)</title><rect x="920.2" y="499.0" width="23.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="923.2" y="510.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (368 samples, 0.40%)</title><rect x="920.2" y="483.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="923.2" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (368 samples, 0.40%)</title><rect x="920.2" y="467.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="923.2" y="478.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (208 samples, 0.23%)</title><rect x="920.2" y="451.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="923.2" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (110 samples, 0.12%)</title><rect x="920.2" y="435.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="923.2" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (110 samples, 0.12%)</title><rect x="920.2" y="419.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="923.2" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (110 samples, 0.12%)</title><rect x="920.2" y="403.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="923.2" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (110 samples, 0.12%)</title><rect x="920.2" y="387.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="923.2" y="398.0"></text>
</g>
<g>
<title>java.lang.String (60 samples, 0.07%)</title><rect x="920.2" y="371.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="923.2" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (50 samples, 0.05%)</title><rect x="921.0" y="371.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="924.0" y="382.0"></text>
</g>
<g>
<title>byte[] (50 samples, 0.05%)</title><rect x="921.0" y="355.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="924.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.entity (98 samples, 0.11%)</title><rect x="921.6" y="435.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="924.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (98 samples, 0.11%)</title><rect x="921.6" y="419.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="924.6" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (98 samples, 0.11%)</title><rect x="921.6" y="403.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="924.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.get$Lambda (98 samples, 0.11%)</title><rect x="921.6" y="387.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="924.6" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.bmendli.MyService$$Lambda$68 (98 samples, 0.11%)</title><rect x="921.6" y="371.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="924.6" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (160 samples, 0.17%)</title><rect x="922.9" y="451.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="925.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (160 samples, 0.17%)</title><rect x="922.9" y="435.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="925.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (160 samples, 0.17%)</title><rect x="922.9" y="419.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="925.9" y="430.0"></text>
</g>
<g>
<title>java.lang.String (102 samples, 0.11%)</title><rect x="922.9" y="403.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="925.9" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (58 samples, 0.06%)</title><rect x="924.2" y="403.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="927.2" y="414.0"></text>
</g>
<g>
<title>byte[] (58 samples, 0.06%)</title><rect x="924.2" y="387.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="927.2" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (670 samples, 0.73%)</title><rect x="925.0" y="483.0" width="8.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="928.0" y="494.0"></text>
</g>
<g>
<title>one.nio.http.Request (131 samples, 0.14%)</title><rect x="925.0" y="467.0" width="1.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="928.0" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (227 samples, 0.25%)</title><rect x="926.6" y="467.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="929.6" y="478.0"></text>
</g>
<g>
<title>java.lang.String[] (227 samples, 0.25%)</title><rect x="926.6" y="451.0" width="3.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="929.6" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (312 samples, 0.34%)</title><rect x="929.6" y="467.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="932.6" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (312 samples, 0.34%)</title><rect x="929.6" y="451.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="932.6" y="462.0"></text>
</g>
<g>
<title>char[] (162 samples, 0.18%)</title><rect x="929.6" y="435.0" width="2.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="932.6" y="446.0"></text>
</g>
<g>
<title>java.lang.String (64 samples, 0.07%)</title><rect x="931.6" y="435.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="934.6" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (86 samples, 0.09%)</title><rect x="932.5" y="435.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="935.5" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (86 samples, 0.09%)</title><rect x="932.5" y="419.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="935.5" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (86 samples, 0.09%)</title><rect x="932.5" y="403.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="935.5" y="414.0"></text>
</g>
<g>
<title>byte[] (86 samples, 0.09%)</title><rect x="932.5" y="387.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="935.5" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (778 samples, 0.85%)</title><rect x="933.6" y="483.0" width="10.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="936.6" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (778 samples, 0.85%)</title><rect x="933.6" y="467.0" width="10.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="936.6" y="478.0"></text>
</g>
<g>
<title>char[] (385 samples, 0.42%)</title><rect x="933.6" y="451.0" width="4.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="936.6" y="462.0"></text>
</g>
<g>
<title>java.lang.String (139 samples, 0.15%)</title><rect x="938.6" y="451.0" width="1.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="941.6" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (245 samples, 0.27%)</title><rect x="940.4" y="451.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="943.4" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (245 samples, 0.27%)</title><rect x="940.4" y="435.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="943.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (245 samples, 0.27%)</title><rect x="940.4" y="419.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="943.4" y="430.0"></text>
</g>
<g>
<title>byte[] (245 samples, 0.27%)</title><rect x="940.4" y="403.0" width="3.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="943.4" y="414.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=11757] (1,769 samples, 1.93%)</title><rect x="943.6" y="563.0" width="22.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="946.6" y="574.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,769 samples, 1.93%)</title><rect x="943.6" y="547.0" width="22.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="946.6" y="558.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (1,764 samples, 1.92%)</title><rect x="943.6" y="531.0" width="22.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="946.6" y="542.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,764 samples, 1.92%)</title><rect x="943.6" y="515.0" width="22.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="946.6" y="526.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,762 samples, 1.92%)</title><rect x="943.6" y="499.0" width="22.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="946.6" y="510.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (496 samples, 0.54%)</title><rect x="943.6" y="483.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="946.6" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (496 samples, 0.54%)</title><rect x="943.6" y="467.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="946.6" y="478.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (276 samples, 0.30%)</title><rect x="943.6" y="451.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="946.6" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (166 samples, 0.18%)</title><rect x="943.6" y="435.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="946.6" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (166 samples, 0.18%)</title><rect x="943.6" y="419.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="946.6" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (166 samples, 0.18%)</title><rect x="943.6" y="403.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="946.6" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (166 samples, 0.18%)</title><rect x="943.6" y="387.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="946.6" y="398.0"></text>
</g>
<g>
<title>java.lang.String (58 samples, 0.06%)</title><rect x="943.6" y="371.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="946.6" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (108 samples, 0.12%)</title><rect x="944.4" y="371.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="947.4" y="382.0"></text>
</g>
<g>
<title>byte[] (108 samples, 0.12%)</title><rect x="944.4" y="355.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="947.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.entity (110 samples, 0.12%)</title><rect x="945.8" y="435.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="948.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (109 samples, 0.12%)</title><rect x="945.8" y="419.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="948.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (109 samples, 0.12%)</title><rect x="945.8" y="403.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="948.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.get$Lambda (109 samples, 0.12%)</title><rect x="945.8" y="387.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="948.8" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.bmendli.MyService$$Lambda$68 (109 samples, 0.12%)</title><rect x="945.8" y="371.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="948.8" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (220 samples, 0.24%)</title><rect x="947.2" y="451.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="950.2" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (220 samples, 0.24%)</title><rect x="947.2" y="435.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="950.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (220 samples, 0.24%)</title><rect x="947.2" y="419.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="950.2" y="430.0"></text>
</g>
<g>
<title>java.lang.String (75 samples, 0.08%)</title><rect x="947.2" y="403.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="950.2" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (145 samples, 0.16%)</title><rect x="948.1" y="403.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="951.1" y="414.0"></text>
</g>
<g>
<title>byte[] (145 samples, 0.16%)</title><rect x="948.1" y="387.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="951.1" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (884 samples, 0.96%)</title><rect x="950.0" y="483.0" width="11.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="953.0" y="494.0"></text>
</g>
<g>
<title>one.nio.http.Request (222 samples, 0.24%)</title><rect x="950.0" y="467.0" width="2.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="953.0" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (244 samples, 0.27%)</title><rect x="952.9" y="467.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="955.9" y="478.0"></text>
</g>
<g>
<title>java.lang.String[] (244 samples, 0.27%)</title><rect x="952.9" y="451.0" width="3.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="955.9" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (418 samples, 0.46%)</title><rect x="956.0" y="467.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="959.0" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (418 samples, 0.46%)</title><rect x="956.0" y="451.0" width="5.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="959.0" y="462.0"></text>
</g>
<g>
<title>char[] (253 samples, 0.28%)</title><rect x="956.0" y="435.0" width="3.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="959.0" y="446.0"></text>
</g>
<g>
<title>java.lang.String (83 samples, 0.09%)</title><rect x="959.2" y="435.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="962.2" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (82 samples, 0.09%)</title><rect x="960.3" y="435.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="963.3" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (82 samples, 0.09%)</title><rect x="960.3" y="419.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="963.3" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (82 samples, 0.09%)</title><rect x="960.3" y="403.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="963.3" y="414.0"></text>
</g>
<g>
<title>byte[] (82 samples, 0.09%)</title><rect x="960.3" y="387.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="963.3" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (382 samples, 0.42%)</title><rect x="961.4" y="483.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="964.4" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (382 samples, 0.42%)</title><rect x="961.4" y="467.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="964.4" y="478.0"></text>
</g>
<g>
<title>char[] (153 samples, 0.17%)</title><rect x="961.4" y="451.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="964.4" y="462.0"></text>
</g>
<g>
<title>java.lang.String (86 samples, 0.09%)</title><rect x="963.3" y="451.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="966.3" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (143 samples, 0.16%)</title><rect x="964.4" y="451.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="967.4" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (143 samples, 0.16%)</title><rect x="964.4" y="435.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="967.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (143 samples, 0.16%)</title><rect x="964.4" y="419.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="967.4" y="430.0"></text>
</g>
<g>
<title>byte[] (143 samples, 0.16%)</title><rect x="964.4" y="403.0" width="1.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="967.4" y="414.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=11768] (1,117 samples, 1.22%)</title><rect x="966.3" y="563.0" width="14.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="969.3" y="574.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,117 samples, 1.22%)</title><rect x="966.3" y="547.0" width="14.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="969.3" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (79 samples, 0.09%)</title><rect x="966.3" y="531.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="969.3" y="542.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (79 samples, 0.09%)</title><rect x="966.3" y="515.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="969.3" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,038 samples, 1.13%)</title><rect x="967.3" y="531.0" width="13.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="970.3" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,038 samples, 1.13%)</title><rect x="967.3" y="515.0" width="13.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="970.3" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,038 samples, 1.13%)</title><rect x="967.3" y="499.0" width="13.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="970.3" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (183 samples, 0.20%)</title><rect x="967.3" y="483.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="970.3" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (183 samples, 0.20%)</title><rect x="967.3" y="467.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="970.3" y="478.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (97 samples, 0.11%)</title><rect x="967.3" y="451.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="970.3" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (64 samples, 0.07%)</title><rect x="967.3" y="435.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="970.3" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (64 samples, 0.07%)</title><rect x="967.3" y="419.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="970.3" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (64 samples, 0.07%)</title><rect x="967.3" y="403.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="970.3" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (64 samples, 0.07%)</title><rect x="967.3" y="387.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="970.3" y="398.0"></text>
</g>
<g>
<title>java.lang.String (28 samples, 0.03%)</title><rect x="967.3" y="371.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="970.3" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (36 samples, 0.04%)</title><rect x="967.7" y="371.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="970.7" y="382.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.04%)</title><rect x="967.7" y="355.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="970.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.entity (33 samples, 0.04%)</title><rect x="968.1" y="435.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="971.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (33 samples, 0.04%)</title><rect x="968.1" y="419.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="971.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (33 samples, 0.04%)</title><rect x="968.1" y="403.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="971.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.get$Lambda (33 samples, 0.04%)</title><rect x="968.1" y="387.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="971.1" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.bmendli.MyService$$Lambda$68 (33 samples, 0.04%)</title><rect x="968.1" y="371.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="971.1" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (86 samples, 0.09%)</title><rect x="968.6" y="451.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="971.6" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (86 samples, 0.09%)</title><rect x="968.6" y="435.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="971.6" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (86 samples, 0.09%)</title><rect x="968.6" y="419.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="971.6" y="430.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.03%)</title><rect x="968.6" y="403.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="971.6" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (57 samples, 0.06%)</title><rect x="968.9" y="403.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="971.9" y="414.0"></text>
</g>
<g>
<title>byte[] (57 samples, 0.06%)</title><rect x="968.9" y="387.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="971.9" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (404 samples, 0.44%)</title><rect x="969.7" y="483.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="972.7" y="494.0"></text>
</g>
<g>
<title>one.nio.http.Request (38 samples, 0.04%)</title><rect x="969.7" y="467.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="972.7" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (107 samples, 0.12%)</title><rect x="970.2" y="467.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="973.2" y="478.0"></text>
</g>
<g>
<title>java.lang.String[] (73 samples, 0.08%)</title><rect x="970.2" y="451.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="973.2" y="462.0"></text>
</g>
<g>
<title>java.lang.String[] (34 samples, 0.04%)</title><rect x="971.1" y="451.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="974.1" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (259 samples, 0.28%)</title><rect x="971.5" y="467.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="974.5" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (259 samples, 0.28%)</title><rect x="971.5" y="451.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="974.5" y="462.0"></text>
</g>
<g>
<title>char[] (138 samples, 0.15%)</title><rect x="971.5" y="435.0" width="1.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="974.5" y="446.0"></text>
</g>
<g>
<title>java.lang.String (30 samples, 0.03%)</title><rect x="973.4" y="435.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="976.4" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (82 samples, 0.09%)</title><rect x="973.8" y="435.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="976.8" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (82 samples, 0.09%)</title><rect x="973.8" y="419.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="976.8" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (82 samples, 0.09%)</title><rect x="973.8" y="403.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="976.8" y="414.0"></text>
</g>
<g>
<title>byte[] (82 samples, 0.09%)</title><rect x="973.8" y="387.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="976.8" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (451 samples, 0.49%)</title><rect x="974.9" y="483.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="977.9" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (451 samples, 0.49%)</title><rect x="974.9" y="467.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="977.9" y="478.0"></text>
</g>
<g>
<title>char[] (200 samples, 0.22%)</title><rect x="974.9" y="451.0" width="2.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="977.9" y="462.0"></text>
</g>
<g>
<title>java.lang.String (93 samples, 0.10%)</title><rect x="977.5" y="451.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="980.5" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (154 samples, 0.17%)</title><rect x="978.7" y="451.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="981.7" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (154 samples, 0.17%)</title><rect x="978.7" y="435.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="981.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (154 samples, 0.17%)</title><rect x="978.7" y="419.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="981.7" y="430.0"></text>
</g>
<g>
<title>byte[] (154 samples, 0.17%)</title><rect x="978.7" y="403.0" width="1.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="981.7" y="414.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=11779] (1,856 samples, 2.02%)</title><rect x="980.6" y="563.0" width="23.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="983.6" y="574.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,856 samples, 2.02%)</title><rect x="980.6" y="547.0" width="23.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="983.6" y="558.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (1,856 samples, 2.02%)</title><rect x="980.6" y="531.0" width="23.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="983.6" y="542.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,856 samples, 2.02%)</title><rect x="980.6" y="515.0" width="23.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="983.6" y="526.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,856 samples, 2.02%)</title><rect x="980.6" y="499.0" width="23.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="983.6" y="510.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (294 samples, 0.32%)</title><rect x="980.6" y="483.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="983.6" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (294 samples, 0.32%)</title><rect x="980.6" y="467.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="983.6" y="478.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (158 samples, 0.17%)</title><rect x="980.6" y="451.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="983.6" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (107 samples, 0.12%)</title><rect x="980.6" y="435.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="983.6" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (107 samples, 0.12%)</title><rect x="980.6" y="419.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="983.6" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (107 samples, 0.12%)</title><rect x="980.6" y="403.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="983.6" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (107 samples, 0.12%)</title><rect x="980.6" y="387.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="983.6" y="398.0"></text>
</g>
<g>
<title>java.lang.String (50 samples, 0.05%)</title><rect x="980.6" y="371.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="983.6" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (57 samples, 0.06%)</title><rect x="981.3" y="371.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="984.3" y="382.0"></text>
</g>
<g>
<title>byte[] (57 samples, 0.06%)</title><rect x="981.3" y="355.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="984.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.entity (51 samples, 0.06%)</title><rect x="982.0" y="435.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="985.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (50 samples, 0.05%)</title><rect x="982.0" y="419.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="985.0" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (50 samples, 0.05%)</title><rect x="982.0" y="403.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="985.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.get$Lambda (50 samples, 0.05%)</title><rect x="982.0" y="387.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="985.0" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.bmendli.MyService$$Lambda$68 (50 samples, 0.05%)</title><rect x="982.0" y="371.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="985.0" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (136 samples, 0.15%)</title><rect x="982.7" y="451.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="985.7" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (136 samples, 0.15%)</title><rect x="982.7" y="435.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="985.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (136 samples, 0.15%)</title><rect x="982.7" y="419.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="985.7" y="430.0"></text>
</g>
<g>
<title>java.lang.String (66 samples, 0.07%)</title><rect x="982.7" y="403.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="985.7" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (70 samples, 0.08%)</title><rect x="983.5" y="403.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="986.5" y="414.0"></text>
</g>
<g>
<title>byte[] (70 samples, 0.08%)</title><rect x="983.5" y="387.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="986.5" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (719 samples, 0.78%)</title><rect x="984.4" y="483.0" width="9.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="987.4" y="494.0"></text>
</g>
<g>
<title>one.nio.http.Request (113 samples, 0.12%)</title><rect x="984.4" y="467.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="987.4" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (193 samples, 0.21%)</title><rect x="985.9" y="467.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="988.9" y="478.0"></text>
</g>
<g>
<title>java.lang.String[] (164 samples, 0.18%)</title><rect x="985.9" y="451.0" width="2.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="988.9" y="462.0"></text>
</g>
<g>
<title>java.lang.String[] (29 samples, 0.03%)</title><rect x="988.0" y="451.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="991.0" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (413 samples, 0.45%)</title><rect x="988.4" y="467.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="991.4" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (413 samples, 0.45%)</title><rect x="988.4" y="451.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="991.4" y="462.0"></text>
</g>
<g>
<title>char[] (202 samples, 0.22%)</title><rect x="988.4" y="435.0" width="2.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="991.4" y="446.0"></text>
</g>
<g>
<title>java.lang.String (66 samples, 0.07%)</title><rect x="991.0" y="435.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="994.0" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (145 samples, 0.16%)</title><rect x="991.8" y="435.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="994.8" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (145 samples, 0.16%)</title><rect x="991.8" y="419.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="994.8" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (145 samples, 0.16%)</title><rect x="991.8" y="403.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="994.8" y="414.0"></text>
</g>
<g>
<title>byte[] (145 samples, 0.16%)</title><rect x="991.8" y="387.0" width="1.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="994.8" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (843 samples, 0.92%)</title><rect x="993.7" y="483.0" width="10.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="996.7" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (843 samples, 0.92%)</title><rect x="993.7" y="467.0" width="10.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="996.7" y="478.0"></text>
</g>
<g>
<title>char[] (403 samples, 0.44%)</title><rect x="993.7" y="451.0" width="5.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="996.7" y="462.0"></text>
</g>
<g>
<title>char[] (60 samples, 0.07%)</title><rect x="998.8" y="451.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1001.8" y="462.0"></text>
</g>
<g>
<title>java.lang.String (143 samples, 0.16%)</title><rect x="999.6" y="451.0" width="1.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1002.6" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (237 samples, 0.26%)</title><rect x="1001.4" y="451.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1004.4" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (237 samples, 0.26%)</title><rect x="1001.4" y="435.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1004.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (237 samples, 0.26%)</title><rect x="1001.4" y="419.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1004.4" y="430.0"></text>
</g>
<g>
<title>byte[] (237 samples, 0.26%)</title><rect x="1001.4" y="403.0" width="3.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1004.4" y="414.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=11758] (1,778 samples, 1.94%)</title><rect x="1004.5" y="563.0" width="22.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1007.5" y="574.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,778 samples, 1.94%)</title><rect x="1004.5" y="547.0" width="22.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1007.5" y="558.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (1,773 samples, 1.93%)</title><rect x="1004.6" y="531.0" width="22.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1007.6" y="542.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,773 samples, 1.93%)</title><rect x="1004.6" y="515.0" width="22.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1007.6" y="526.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,772 samples, 1.93%)</title><rect x="1004.6" y="499.0" width="22.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1007.6" y="510.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (465 samples, 0.51%)</title><rect x="1004.6" y="483.0" width="5.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1007.6" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (465 samples, 0.51%)</title><rect x="1004.6" y="467.0" width="5.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1007.6" y="478.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (291 samples, 0.32%)</title><rect x="1004.6" y="451.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1007.6" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (177 samples, 0.19%)</title><rect x="1004.6" y="435.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1007.6" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (177 samples, 0.19%)</title><rect x="1004.6" y="419.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1007.6" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (177 samples, 0.19%)</title><rect x="1004.6" y="403.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1007.6" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (177 samples, 0.19%)</title><rect x="1004.6" y="387.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1007.6" y="398.0"></text>
</g>
<g>
<title>java.lang.String (56 samples, 0.06%)</title><rect x="1004.6" y="371.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1007.6" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (121 samples, 0.13%)</title><rect x="1005.3" y="371.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1008.3" y="382.0"></text>
</g>
<g>
<title>byte[] (121 samples, 0.13%)</title><rect x="1005.3" y="355.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1008.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.entity (114 samples, 0.12%)</title><rect x="1006.8" y="435.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1009.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (109 samples, 0.12%)</title><rect x="1006.8" y="419.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1009.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (109 samples, 0.12%)</title><rect x="1006.8" y="403.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1009.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.get$Lambda (109 samples, 0.12%)</title><rect x="1006.8" y="387.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1009.8" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.bmendli.MyService$$Lambda$68 (109 samples, 0.12%)</title><rect x="1006.8" y="371.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1009.8" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (174 samples, 0.19%)</title><rect x="1008.3" y="451.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1011.3" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (174 samples, 0.19%)</title><rect x="1008.3" y="435.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1011.3" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (174 samples, 0.19%)</title><rect x="1008.3" y="419.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1011.3" y="430.0"></text>
</g>
<g>
<title>java.lang.String (90 samples, 0.10%)</title><rect x="1008.3" y="403.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1011.3" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (84 samples, 0.09%)</title><rect x="1009.5" y="403.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1012.5" y="414.0"></text>
</g>
<g>
<title>byte[] (84 samples, 0.09%)</title><rect x="1009.5" y="387.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1012.5" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (922 samples, 1.00%)</title><rect x="1010.5" y="483.0" width="11.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1013.5" y="494.0"></text>
</g>
<g>
<title>one.nio.http.Request (188 samples, 0.20%)</title><rect x="1010.5" y="467.0" width="2.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1013.5" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (339 samples, 0.37%)</title><rect x="1012.9" y="467.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1015.9" y="478.0"></text>
</g>
<g>
<title>java.lang.String[] (339 samples, 0.37%)</title><rect x="1012.9" y="451.0" width="4.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1015.9" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (395 samples, 0.43%)</title><rect x="1017.3" y="467.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1020.3" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (395 samples, 0.43%)</title><rect x="1017.3" y="451.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1020.3" y="462.0"></text>
</g>
<g>
<title>char[] (217 samples, 0.24%)</title><rect x="1017.3" y="435.0" width="2.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1020.3" y="446.0"></text>
</g>
<g>
<title>java.lang.String (85 samples, 0.09%)</title><rect x="1020.1" y="435.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1023.1" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (93 samples, 0.10%)</title><rect x="1021.2" y="435.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1024.2" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (93 samples, 0.10%)</title><rect x="1021.2" y="419.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1024.2" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (93 samples, 0.10%)</title><rect x="1021.2" y="403.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1024.2" y="414.0"></text>
</g>
<g>
<title>byte[] (93 samples, 0.10%)</title><rect x="1021.2" y="387.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1024.2" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (385 samples, 0.42%)</title><rect x="1022.4" y="483.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1025.4" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (385 samples, 0.42%)</title><rect x="1022.4" y="467.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1025.4" y="478.0"></text>
</g>
<g>
<title>char[] (181 samples, 0.20%)</title><rect x="1022.4" y="451.0" width="2.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1025.4" y="462.0"></text>
</g>
<g>
<title>java.lang.String (76 samples, 0.08%)</title><rect x="1024.7" y="451.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1027.7" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (128 samples, 0.14%)</title><rect x="1025.7" y="451.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1028.7" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (128 samples, 0.14%)</title><rect x="1025.7" y="435.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1028.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (128 samples, 0.14%)</title><rect x="1025.7" y="419.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1028.7" y="430.0"></text>
</g>
<g>
<title>byte[] (128 samples, 0.14%)</title><rect x="1025.7" y="403.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1028.7" y="414.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=11769] (2,002 samples, 2.18%)</title><rect x="1027.3" y="563.0" width="25.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1030.3" y="574.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,002 samples, 2.18%)</title><rect x="1027.3" y="547.0" width="25.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1030.3" y="558.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (145 samples, 0.16%)</title><rect x="1027.3" y="531.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1030.3" y="542.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (145 samples, 0.16%)</title><rect x="1027.3" y="515.0" width="1.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1030.3" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,857 samples, 2.02%)</title><rect x="1029.2" y="531.0" width="23.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1032.2" y="542.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,857 samples, 2.02%)</title><rect x="1029.2" y="515.0" width="23.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1032.2" y="526.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,857 samples, 2.02%)</title><rect x="1029.2" y="499.0" width="23.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1032.2" y="510.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (365 samples, 0.40%)</title><rect x="1029.2" y="483.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1032.2" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (365 samples, 0.40%)</title><rect x="1029.2" y="467.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1032.2" y="478.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (190 samples, 0.21%)</title><rect x="1029.2" y="451.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1032.2" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (108 samples, 0.12%)</title><rect x="1029.2" y="435.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1032.2" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (108 samples, 0.12%)</title><rect x="1029.2" y="419.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1032.2" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (108 samples, 0.12%)</title><rect x="1029.2" y="403.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1032.2" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (108 samples, 0.12%)</title><rect x="1029.2" y="387.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1032.2" y="398.0"></text>
</g>
<g>
<title>java.lang.String (49 samples, 0.05%)</title><rect x="1029.2" y="371.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1032.2" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (59 samples, 0.06%)</title><rect x="1029.8" y="371.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1032.8" y="382.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.06%)</title><rect x="1029.8" y="355.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1032.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.entity (82 samples, 0.09%)</title><rect x="1030.6" y="435.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1033.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (82 samples, 0.09%)</title><rect x="1030.6" y="419.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1033.6" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (82 samples, 0.09%)</title><rect x="1030.6" y="403.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1033.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.get$Lambda (82 samples, 0.09%)</title><rect x="1030.6" y="387.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1033.6" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.bmendli.MyService$$Lambda$68 (82 samples, 0.09%)</title><rect x="1030.6" y="371.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1033.6" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (175 samples, 0.19%)</title><rect x="1031.6" y="451.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1034.6" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (175 samples, 0.19%)</title><rect x="1031.6" y="435.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1034.6" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (175 samples, 0.19%)</title><rect x="1031.6" y="419.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1034.6" y="430.0"></text>
</g>
<g>
<title>java.lang.String (77 samples, 0.08%)</title><rect x="1031.6" y="403.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1034.6" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (98 samples, 0.11%)</title><rect x="1032.6" y="403.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1035.6" y="414.0"></text>
</g>
<g>
<title>byte[] (98 samples, 0.11%)</title><rect x="1032.6" y="387.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1035.6" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (706 samples, 0.77%)</title><rect x="1033.9" y="483.0" width="9.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1036.9" y="494.0"></text>
</g>
<g>
<title>one.nio.http.Request (146 samples, 0.16%)</title><rect x="1033.9" y="467.0" width="1.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1036.9" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (184 samples, 0.20%)</title><rect x="1035.8" y="467.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1038.8" y="478.0"></text>
</g>
<g>
<title>java.lang.String[] (171 samples, 0.19%)</title><rect x="1035.8" y="451.0" width="2.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1038.8" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (376 samples, 0.41%)</title><rect x="1038.1" y="467.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1041.1" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (376 samples, 0.41%)</title><rect x="1038.1" y="451.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1041.1" y="462.0"></text>
</g>
<g>
<title>char[] (238 samples, 0.26%)</title><rect x="1038.1" y="435.0" width="3.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1041.1" y="446.0"></text>
</g>
<g>
<title>java.lang.String (38 samples, 0.04%)</title><rect x="1041.2" y="435.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1044.2" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (100 samples, 0.11%)</title><rect x="1041.7" y="435.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1044.7" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (100 samples, 0.11%)</title><rect x="1041.7" y="419.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1044.7" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (100 samples, 0.11%)</title><rect x="1041.7" y="403.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1044.7" y="414.0"></text>
</g>
<g>
<title>byte[] (100 samples, 0.11%)</title><rect x="1041.7" y="387.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1044.7" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (786 samples, 0.86%)</title><rect x="1043.0" y="483.0" width="10.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1046.0" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (786 samples, 0.86%)</title><rect x="1043.0" y="467.0" width="10.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1046.0" y="478.0"></text>
</g>
<g>
<title>char[] (378 samples, 0.41%)</title><rect x="1043.0" y="451.0" width="4.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1046.0" y="462.0"></text>
</g>
<g>
<title>java.lang.String (122 samples, 0.13%)</title><rect x="1047.9" y="451.0" width="1.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1050.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (277 samples, 0.30%)</title><rect x="1049.5" y="451.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1052.5" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (277 samples, 0.30%)</title><rect x="1049.5" y="435.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1052.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (277 samples, 0.30%)</title><rect x="1049.5" y="419.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1052.5" y="430.0"></text>
</g>
<g>
<title>byte[] (277 samples, 0.30%)</title><rect x="1049.5" y="403.0" width="3.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1052.5" y="414.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=11759] (1,794 samples, 1.95%)</title><rect x="1053.1" y="563.0" width="23.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1056.1" y="574.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,794 samples, 1.95%)</title><rect x="1053.1" y="547.0" width="23.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1056.1" y="558.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (1,794 samples, 1.95%)</title><rect x="1053.1" y="531.0" width="23.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1056.1" y="542.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,794 samples, 1.95%)</title><rect x="1053.1" y="515.0" width="23.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1056.1" y="526.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,793 samples, 1.95%)</title><rect x="1053.1" y="499.0" width="23.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1056.1" y="510.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (455 samples, 0.50%)</title><rect x="1053.1" y="483.0" width="5.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1056.1" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (455 samples, 0.50%)</title><rect x="1053.1" y="467.0" width="5.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1056.1" y="478.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (315 samples, 0.34%)</title><rect x="1053.1" y="451.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1056.1" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (178 samples, 0.19%)</title><rect x="1053.1" y="435.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1056.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (178 samples, 0.19%)</title><rect x="1053.1" y="419.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1056.1" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (178 samples, 0.19%)</title><rect x="1053.1" y="403.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1056.1" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (178 samples, 0.19%)</title><rect x="1053.1" y="387.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1056.1" y="398.0"></text>
</g>
<g>
<title>java.lang.String (78 samples, 0.08%)</title><rect x="1053.1" y="371.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1056.1" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (100 samples, 0.11%)</title><rect x="1054.1" y="371.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1057.1" y="382.0"></text>
</g>
<g>
<title>byte[] (100 samples, 0.11%)</title><rect x="1054.1" y="355.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1057.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.entity (137 samples, 0.15%)</title><rect x="1055.3" y="435.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1058.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (134 samples, 0.15%)</title><rect x="1055.3" y="419.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1058.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (134 samples, 0.15%)</title><rect x="1055.3" y="403.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1058.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.get$Lambda (134 samples, 0.15%)</title><rect x="1055.3" y="387.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1058.3" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.bmendli.MyService$$Lambda$68 (134 samples, 0.15%)</title><rect x="1055.3" y="371.0" width="1.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1058.3" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (140 samples, 0.15%)</title><rect x="1057.1" y="451.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1060.1" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (140 samples, 0.15%)</title><rect x="1057.1" y="435.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1060.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (140 samples, 0.15%)</title><rect x="1057.1" y="419.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1060.1" y="430.0"></text>
</g>
<g>
<title>java.lang.String (65 samples, 0.07%)</title><rect x="1057.1" y="403.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1060.1" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (75 samples, 0.08%)</title><rect x="1057.9" y="403.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1060.9" y="414.0"></text>
</g>
<g>
<title>byte[] (75 samples, 0.08%)</title><rect x="1057.9" y="387.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1060.9" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (957 samples, 1.04%)</title><rect x="1058.9" y="483.0" width="12.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1061.9" y="494.0"></text>
</g>
<g>
<title>one.nio.http.Request (164 samples, 0.18%)</title><rect x="1058.9" y="467.0" width="2.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1061.9" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (366 samples, 0.40%)</title><rect x="1061.0" y="467.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1064.0" y="478.0"></text>
</g>
<g>
<title>java.lang.String[] (366 samples, 0.40%)</title><rect x="1061.0" y="451.0" width="4.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1064.0" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (427 samples, 0.46%)</title><rect x="1065.7" y="467.0" width="5.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1068.7" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (427 samples, 0.46%)</title><rect x="1065.7" y="451.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1068.7" y="462.0"></text>
</g>
<g>
<title>char[] (212 samples, 0.23%)</title><rect x="1065.7" y="435.0" width="2.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1068.7" y="446.0"></text>
</g>
<g>
<title>java.lang.String (65 samples, 0.07%)</title><rect x="1068.4" y="435.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1071.4" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (150 samples, 0.16%)</title><rect x="1069.3" y="435.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1072.3" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (150 samples, 0.16%)</title><rect x="1069.3" y="419.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1072.3" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (150 samples, 0.16%)</title><rect x="1069.3" y="403.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1072.3" y="414.0"></text>
</g>
<g>
<title>byte[] (150 samples, 0.16%)</title><rect x="1069.3" y="387.0" width="1.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1072.3" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (381 samples, 0.41%)</title><rect x="1071.2" y="483.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1074.2" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (381 samples, 0.41%)</title><rect x="1071.2" y="467.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1074.2" y="478.0"></text>
</g>
<g>
<title>char[] (152 samples, 0.17%)</title><rect x="1071.2" y="451.0" width="2.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1074.2" y="462.0"></text>
</g>
<g>
<title>java.lang.String (99 samples, 0.11%)</title><rect x="1073.2" y="451.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1076.2" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (130 samples, 0.14%)</title><rect x="1074.4" y="451.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1077.4" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (130 samples, 0.14%)</title><rect x="1074.4" y="435.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1077.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (130 samples, 0.14%)</title><rect x="1074.4" y="419.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1077.4" y="430.0"></text>
</g>
<g>
<title>byte[] (130 samples, 0.14%)</title><rect x="1074.4" y="403.0" width="1.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1077.4" y="414.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=11770] (1,768 samples, 1.93%)</title><rect x="1076.1" y="563.0" width="22.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1079.1" y="574.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,768 samples, 1.93%)</title><rect x="1076.1" y="547.0" width="22.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1079.1" y="558.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (1,768 samples, 1.93%)</title><rect x="1076.1" y="531.0" width="22.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1079.1" y="542.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,768 samples, 1.93%)</title><rect x="1076.1" y="515.0" width="22.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1079.1" y="526.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,768 samples, 1.93%)</title><rect x="1076.1" y="499.0" width="22.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1079.1" y="510.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (356 samples, 0.39%)</title><rect x="1076.1" y="483.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1079.1" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (356 samples, 0.39%)</title><rect x="1076.1" y="467.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1079.1" y="478.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (217 samples, 0.24%)</title><rect x="1076.1" y="451.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1079.1" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (109 samples, 0.12%)</title><rect x="1076.1" y="435.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1079.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (109 samples, 0.12%)</title><rect x="1076.1" y="419.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1079.1" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (109 samples, 0.12%)</title><rect x="1076.1" y="403.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1079.1" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (109 samples, 0.12%)</title><rect x="1076.1" y="387.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1079.1" y="398.0"></text>
</g>
<g>
<title>java.lang.String (51 samples, 0.06%)</title><rect x="1076.1" y="371.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1079.1" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (58 samples, 0.06%)</title><rect x="1076.8" y="371.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1079.8" y="382.0"></text>
</g>
<g>
<title>byte[] (58 samples, 0.06%)</title><rect x="1076.8" y="355.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1079.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.entity (108 samples, 0.12%)</title><rect x="1077.5" y="435.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1080.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (107 samples, 0.12%)</title><rect x="1077.5" y="419.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1080.5" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (107 samples, 0.12%)</title><rect x="1077.5" y="403.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1080.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.get$Lambda (107 samples, 0.12%)</title><rect x="1077.5" y="387.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1080.5" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.bmendli.MyService$$Lambda$68 (107 samples, 0.12%)</title><rect x="1077.5" y="371.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1080.5" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (139 samples, 0.15%)</title><rect x="1078.9" y="451.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1081.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (139 samples, 0.15%)</title><rect x="1078.9" y="435.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1081.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (139 samples, 0.15%)</title><rect x="1078.9" y="419.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1081.9" y="430.0"></text>
</g>
<g>
<title>java.lang.String (61 samples, 0.07%)</title><rect x="1078.9" y="403.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1081.9" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (78 samples, 0.08%)</title><rect x="1079.7" y="403.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1082.7" y="414.0"></text>
</g>
<g>
<title>byte[] (78 samples, 0.08%)</title><rect x="1079.7" y="387.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1082.7" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (646 samples, 0.70%)</title><rect x="1080.7" y="483.0" width="8.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1083.7" y="494.0"></text>
</g>
<g>
<title>one.nio.http.Request (146 samples, 0.16%)</title><rect x="1080.7" y="467.0" width="1.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1083.7" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (177 samples, 0.19%)</title><rect x="1082.6" y="467.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1085.6" y="478.0"></text>
</g>
<g>
<title>java.lang.String[] (177 samples, 0.19%)</title><rect x="1082.6" y="451.0" width="2.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1085.6" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (323 samples, 0.35%)</title><rect x="1084.8" y="467.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1087.8" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (323 samples, 0.35%)</title><rect x="1084.8" y="451.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1087.8" y="462.0"></text>
</g>
<g>
<title>char[] (151 samples, 0.16%)</title><rect x="1084.8" y="435.0" width="2.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1087.8" y="446.0"></text>
</g>
<g>
<title>java.lang.String (72 samples, 0.08%)</title><rect x="1086.8" y="435.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1089.8" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (100 samples, 0.11%)</title><rect x="1087.7" y="435.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1090.7" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (100 samples, 0.11%)</title><rect x="1087.7" y="419.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1090.7" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (100 samples, 0.11%)</title><rect x="1087.7" y="403.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1090.7" y="414.0"></text>
</g>
<g>
<title>byte[] (100 samples, 0.11%)</title><rect x="1087.7" y="387.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1090.7" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (766 samples, 0.83%)</title><rect x="1089.0" y="483.0" width="9.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1092.0" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (766 samples, 0.83%)</title><rect x="1089.0" y="467.0" width="9.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1092.0" y="478.0"></text>
</g>
<g>
<title>char[] (439 samples, 0.48%)</title><rect x="1089.0" y="451.0" width="5.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1092.0" y="462.0"></text>
</g>
<g>
<title>java.lang.String (114 samples, 0.12%)</title><rect x="1094.6" y="451.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1097.6" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (213 samples, 0.23%)</title><rect x="1096.1" y="451.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1099.1" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (213 samples, 0.23%)</title><rect x="1096.1" y="435.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1099.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (213 samples, 0.23%)</title><rect x="1096.1" y="419.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1099.1" y="430.0"></text>
</g>
<g>
<title>byte[] (213 samples, 0.23%)</title><rect x="1096.1" y="403.0" width="2.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1099.1" y="414.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=11781] (1,876 samples, 2.04%)</title><rect x="1098.8" y="563.0" width="24.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1101.8" y="574.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,876 samples, 2.04%)</title><rect x="1098.8" y="547.0" width="24.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1101.8" y="558.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (87 samples, 0.09%)</title><rect x="1098.8" y="531.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1101.8" y="542.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (87 samples, 0.09%)</title><rect x="1098.8" y="515.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1101.8" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,789 samples, 1.95%)</title><rect x="1099.9" y="531.0" width="23.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1102.9" y="542.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,789 samples, 1.95%)</title><rect x="1099.9" y="515.0" width="23.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1102.9" y="526.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,789 samples, 1.95%)</title><rect x="1099.9" y="499.0" width="23.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1102.9" y="510.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (205 samples, 0.22%)</title><rect x="1099.9" y="483.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1102.9" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (205 samples, 0.22%)</title><rect x="1099.9" y="467.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1102.9" y="478.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (105 samples, 0.11%)</title><rect x="1099.9" y="451.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1102.9" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (70 samples, 0.08%)</title><rect x="1099.9" y="435.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1102.9" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (70 samples, 0.08%)</title><rect x="1099.9" y="419.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1102.9" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (70 samples, 0.08%)</title><rect x="1099.9" y="403.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1102.9" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (70 samples, 0.08%)</title><rect x="1099.9" y="387.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1102.9" y="398.0"></text>
</g>
<g>
<title>java.lang.String (34 samples, 0.04%)</title><rect x="1099.9" y="371.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1102.9" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (36 samples, 0.04%)</title><rect x="1100.4" y="371.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1103.4" y="382.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.04%)</title><rect x="1100.4" y="355.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1103.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.entity (35 samples, 0.04%)</title><rect x="1100.8" y="435.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1103.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (35 samples, 0.04%)</title><rect x="1100.8" y="419.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1103.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.04%)</title><rect x="1100.8" y="403.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1103.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.get$Lambda (35 samples, 0.04%)</title><rect x="1100.8" y="387.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1103.8" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.bmendli.MyService$$Lambda$68 (35 samples, 0.04%)</title><rect x="1100.8" y="371.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1103.8" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (100 samples, 0.11%)</title><rect x="1101.3" y="451.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1104.3" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (100 samples, 0.11%)</title><rect x="1101.3" y="435.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1104.3" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (100 samples, 0.11%)</title><rect x="1101.3" y="419.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1104.3" y="430.0"></text>
</g>
<g>
<title>java.lang.String (51 samples, 0.06%)</title><rect x="1101.3" y="403.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1104.3" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (49 samples, 0.05%)</title><rect x="1101.9" y="403.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1104.9" y="414.0"></text>
</g>
<g>
<title>byte[] (49 samples, 0.05%)</title><rect x="1101.9" y="387.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1104.9" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (525 samples, 0.57%)</title><rect x="1102.6" y="483.0" width="6.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1105.6" y="494.0"></text>
</g>
<g>
<title>one.nio.http.Request (53 samples, 0.06%)</title><rect x="1102.6" y="467.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1105.6" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (246 samples, 0.27%)</title><rect x="1103.3" y="467.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1106.3" y="478.0"></text>
</g>
<g>
<title>java.lang.String[] (102 samples, 0.11%)</title><rect x="1103.3" y="451.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1106.3" y="462.0"></text>
</g>
<g>
<title>java.lang.String[] (144 samples, 0.16%)</title><rect x="1104.6" y="451.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1107.6" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (226 samples, 0.25%)</title><rect x="1106.4" y="467.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1109.4" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (226 samples, 0.25%)</title><rect x="1106.4" y="451.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1109.4" y="462.0"></text>
</g>
<g>
<title>char[] (118 samples, 0.13%)</title><rect x="1106.4" y="435.0" width="1.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1109.4" y="446.0"></text>
</g>
<g>
<title>java.lang.String (51 samples, 0.06%)</title><rect x="1107.9" y="435.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1110.9" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (56 samples, 0.06%)</title><rect x="1108.6" y="435.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1111.6" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (56 samples, 0.06%)</title><rect x="1108.6" y="419.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1111.6" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (56 samples, 0.06%)</title><rect x="1108.6" y="403.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1111.6" y="414.0"></text>
</g>
<g>
<title>byte[] (56 samples, 0.06%)</title><rect x="1108.6" y="387.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1111.6" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,059 samples, 1.15%)</title><rect x="1109.3" y="483.0" width="13.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1112.3" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,059 samples, 1.15%)</title><rect x="1109.3" y="467.0" width="13.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1112.3" y="478.0"></text>
</g>
<g>
<title>char[] (697 samples, 0.76%)</title><rect x="1109.3" y="451.0" width="9.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1112.3" y="462.0"></text>
</g>
<g>
<title>char[] (68 samples, 0.07%)</title><rect x="1118.3" y="451.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1121.3" y="462.0"></text>
</g>
<g>
<title>java.lang.String (93 samples, 0.10%)</title><rect x="1119.2" y="451.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1122.2" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (201 samples, 0.22%)</title><rect x="1120.3" y="451.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1123.3" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (201 samples, 0.22%)</title><rect x="1120.3" y="435.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1123.3" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (201 samples, 0.22%)</title><rect x="1120.3" y="419.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1123.3" y="430.0"></text>
</g>
<g>
<title>byte[] (201 samples, 0.22%)</title><rect x="1120.3" y="403.0" width="2.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1123.3" y="414.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=11760] (1,792 samples, 1.95%)</title><rect x="1122.9" y="563.0" width="23.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1125.9" y="574.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,792 samples, 1.95%)</title><rect x="1122.9" y="547.0" width="23.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1125.9" y="558.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (1,790 samples, 1.95%)</title><rect x="1123.0" y="531.0" width="23.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1126.0" y="542.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,790 samples, 1.95%)</title><rect x="1123.0" y="515.0" width="23.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1126.0" y="526.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,788 samples, 1.95%)</title><rect x="1123.0" y="499.0" width="22.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1126.0" y="510.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (527 samples, 0.57%)</title><rect x="1123.0" y="483.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1126.0" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (527 samples, 0.57%)</title><rect x="1123.0" y="467.0" width="6.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1126.0" y="478.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (310 samples, 0.34%)</title><rect x="1123.0" y="451.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1126.0" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (192 samples, 0.21%)</title><rect x="1123.0" y="435.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1126.0" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (192 samples, 0.21%)</title><rect x="1123.0" y="419.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1126.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (192 samples, 0.21%)</title><rect x="1123.0" y="403.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1126.0" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (192 samples, 0.21%)</title><rect x="1123.0" y="387.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1126.0" y="398.0"></text>
</g>
<g>
<title>java.lang.String (104 samples, 0.11%)</title><rect x="1123.0" y="371.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1126.0" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (88 samples, 0.10%)</title><rect x="1124.3" y="371.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1127.3" y="382.0"></text>
</g>
<g>
<title>byte[] (88 samples, 0.10%)</title><rect x="1124.3" y="355.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1127.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.entity (118 samples, 0.13%)</title><rect x="1125.4" y="435.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1128.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (118 samples, 0.13%)</title><rect x="1125.4" y="419.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1128.4" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (118 samples, 0.13%)</title><rect x="1125.4" y="403.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1128.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.get$Lambda (118 samples, 0.13%)</title><rect x="1125.4" y="387.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1128.4" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.bmendli.MyService$$Lambda$68 (118 samples, 0.13%)</title><rect x="1125.4" y="371.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1128.4" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (217 samples, 0.24%)</title><rect x="1126.9" y="451.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1129.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (217 samples, 0.24%)</title><rect x="1126.9" y="435.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1129.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (217 samples, 0.24%)</title><rect x="1126.9" y="419.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1129.9" y="430.0"></text>
</g>
<g>
<title>java.lang.String (76 samples, 0.08%)</title><rect x="1126.9" y="403.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1129.9" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (141 samples, 0.15%)</title><rect x="1127.9" y="403.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1130.9" y="414.0"></text>
</g>
<g>
<title>byte[] (141 samples, 0.15%)</title><rect x="1127.9" y="387.0" width="1.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1130.9" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (836 samples, 0.91%)</title><rect x="1129.7" y="483.0" width="10.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1132.7" y="494.0"></text>
</g>
<g>
<title>one.nio.http.Request (103 samples, 0.11%)</title><rect x="1129.7" y="467.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1132.7" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (162 samples, 0.18%)</title><rect x="1131.1" y="467.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1134.1" y="478.0"></text>
</g>
<g>
<title>java.lang.String[] (162 samples, 0.18%)</title><rect x="1131.1" y="451.0" width="2.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1134.1" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (571 samples, 0.62%)</title><rect x="1133.1" y="467.0" width="7.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1136.1" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (571 samples, 0.62%)</title><rect x="1133.1" y="451.0" width="7.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1136.1" y="462.0"></text>
</g>
<g>
<title>char[] (377 samples, 0.41%)</title><rect x="1133.1" y="435.0" width="4.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1136.1" y="446.0"></text>
</g>
<g>
<title>java.lang.String (98 samples, 0.11%)</title><rect x="1138.0" y="435.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1141.0" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (96 samples, 0.10%)</title><rect x="1139.2" y="435.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1142.2" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (96 samples, 0.10%)</title><rect x="1139.2" y="419.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1142.2" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (96 samples, 0.10%)</title><rect x="1139.2" y="403.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1142.2" y="414.0"></text>
</g>
<g>
<title>byte[] (96 samples, 0.10%)</title><rect x="1139.2" y="387.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1142.2" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (425 samples, 0.46%)</title><rect x="1140.5" y="483.0" width="5.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1143.5" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (425 samples, 0.46%)</title><rect x="1140.5" y="467.0" width="5.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1143.5" y="478.0"></text>
</g>
<g>
<title>char[] (209 samples, 0.23%)</title><rect x="1140.5" y="451.0" width="2.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1143.5" y="462.0"></text>
</g>
<g>
<title>java.lang.String (80 samples, 0.09%)</title><rect x="1143.2" y="451.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1146.2" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (136 samples, 0.15%)</title><rect x="1144.2" y="451.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1147.2" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (136 samples, 0.15%)</title><rect x="1144.2" y="435.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1147.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (136 samples, 0.15%)</title><rect x="1144.2" y="419.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1147.2" y="430.0"></text>
</g>
<g>
<title>byte[] (136 samples, 0.15%)</title><rect x="1144.2" y="403.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1147.2" y="414.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=11771] (1,105 samples, 1.20%)</title><rect x="1146.0" y="563.0" width="14.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1149.0" y="574.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,105 samples, 1.20%)</title><rect x="1146.0" y="547.0" width="14.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1149.0" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (86 samples, 0.09%)</title><rect x="1146.0" y="531.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1149.0" y="542.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (86 samples, 0.09%)</title><rect x="1146.0" y="515.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1149.0" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,019 samples, 1.11%)</title><rect x="1147.1" y="531.0" width="13.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1150.1" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,019 samples, 1.11%)</title><rect x="1147.1" y="515.0" width="13.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1150.1" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,019 samples, 1.11%)</title><rect x="1147.1" y="499.0" width="13.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1150.1" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (109 samples, 0.12%)</title><rect x="1147.1" y="483.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1150.1" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (109 samples, 0.12%)</title><rect x="1147.1" y="467.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1150.1" y="478.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (47 samples, 0.05%)</title><rect x="1147.1" y="451.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1150.1" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (26 samples, 0.03%)</title><rect x="1147.1" y="435.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1150.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (26 samples, 0.03%)</title><rect x="1147.1" y="419.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1150.1" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (26 samples, 0.03%)</title><rect x="1147.1" y="403.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1150.1" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (26 samples, 0.03%)</title><rect x="1147.1" y="387.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1150.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.entity (21 samples, 0.02%)</title><rect x="1147.4" y="435.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1150.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.02%)</title><rect x="1147.4" y="419.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1150.4" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.02%)</title><rect x="1147.4" y="403.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1150.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.get$Lambda (21 samples, 0.02%)</title><rect x="1147.4" y="387.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1150.4" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.bmendli.MyService$$Lambda$68 (21 samples, 0.02%)</title><rect x="1147.4" y="371.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1150.4" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (62 samples, 0.07%)</title><rect x="1147.7" y="451.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1150.7" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (62 samples, 0.07%)</title><rect x="1147.7" y="435.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1150.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (62 samples, 0.07%)</title><rect x="1147.7" y="419.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1150.7" y="430.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.02%)</title><rect x="1147.7" y="403.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1150.7" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (41 samples, 0.04%)</title><rect x="1147.9" y="403.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1150.9" y="414.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.04%)</title><rect x="1147.9" y="387.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1150.9" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (373 samples, 0.41%)</title><rect x="1148.5" y="483.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1151.5" y="494.0"></text>
</g>
<g>
<title>one.nio.http.Request (34 samples, 0.04%)</title><rect x="1148.5" y="467.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1151.5" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (212 samples, 0.23%)</title><rect x="1148.9" y="467.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1151.9" y="478.0"></text>
</g>
<g>
<title>java.lang.String[] (154 samples, 0.17%)</title><rect x="1148.9" y="451.0" width="2.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1151.9" y="462.0"></text>
</g>
<g>
<title>java.lang.String[] (58 samples, 0.06%)</title><rect x="1150.9" y="451.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1153.9" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (127 samples, 0.14%)</title><rect x="1151.6" y="467.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1154.6" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (127 samples, 0.14%)</title><rect x="1151.6" y="451.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1154.6" y="462.0"></text>
</g>
<g>
<title>char[] (64 samples, 0.07%)</title><rect x="1151.6" y="435.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1154.6" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (48 samples, 0.05%)</title><rect x="1152.6" y="435.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1155.6" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (48 samples, 0.05%)</title><rect x="1152.6" y="419.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1155.6" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (48 samples, 0.05%)</title><rect x="1152.6" y="403.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1155.6" y="414.0"></text>
</g>
<g>
<title>byte[] (48 samples, 0.05%)</title><rect x="1152.6" y="387.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1155.6" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (537 samples, 0.58%)</title><rect x="1153.3" y="483.0" width="6.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1156.3" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (537 samples, 0.58%)</title><rect x="1153.3" y="467.0" width="6.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1156.3" y="478.0"></text>
</g>
<g>
<title>char[] (276 samples, 0.30%)</title><rect x="1153.3" y="451.0" width="3.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1156.3" y="462.0"></text>
</g>
<g>
<title>java.lang.String (110 samples, 0.12%)</title><rect x="1157.0" y="451.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1160.0" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (138 samples, 0.15%)</title><rect x="1158.4" y="451.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1161.4" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (138 samples, 0.15%)</title><rect x="1158.4" y="435.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1161.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (138 samples, 0.15%)</title><rect x="1158.4" y="419.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1161.4" y="430.0"></text>
</g>
<g>
<title>byte[] (138 samples, 0.15%)</title><rect x="1158.4" y="403.0" width="1.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1161.4" y="414.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=11782] (2,323 samples, 2.53%)</title><rect x="1160.2" y="563.0" width="29.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1163.2" y="574.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,323 samples, 2.53%)</title><rect x="1160.2" y="547.0" width="29.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1163.2" y="558.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (81 samples, 0.09%)</title><rect x="1160.2" y="531.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1163.2" y="542.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (81 samples, 0.09%)</title><rect x="1160.2" y="515.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1163.2" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (2,242 samples, 2.44%)</title><rect x="1161.2" y="531.0" width="28.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1164.2" y="542.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (2,242 samples, 2.44%)</title><rect x="1161.2" y="515.0" width="28.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1164.2" y="526.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,242 samples, 2.44%)</title><rect x="1161.2" y="499.0" width="28.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1164.2" y="510.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (309 samples, 0.34%)</title><rect x="1161.2" y="483.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1164.2" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (309 samples, 0.34%)</title><rect x="1161.2" y="467.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1164.2" y="478.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (176 samples, 0.19%)</title><rect x="1161.2" y="451.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1164.2" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (100 samples, 0.11%)</title><rect x="1161.2" y="435.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1164.2" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (100 samples, 0.11%)</title><rect x="1161.2" y="419.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1164.2" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (100 samples, 0.11%)</title><rect x="1161.2" y="403.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1164.2" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (100 samples, 0.11%)</title><rect x="1161.2" y="387.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1164.2" y="398.0"></text>
</g>
<g>
<title>java.lang.String (38 samples, 0.04%)</title><rect x="1161.2" y="371.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1164.2" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (62 samples, 0.07%)</title><rect x="1161.7" y="371.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1164.7" y="382.0"></text>
</g>
<g>
<title>byte[] (62 samples, 0.07%)</title><rect x="1161.7" y="355.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1164.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.entity (76 samples, 0.08%)</title><rect x="1162.5" y="435.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1165.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (76 samples, 0.08%)</title><rect x="1162.5" y="419.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1165.5" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (76 samples, 0.08%)</title><rect x="1162.5" y="403.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1165.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$68/638779840.get$Lambda (76 samples, 0.08%)</title><rect x="1162.5" y="387.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1165.5" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.bmendli.MyService$$Lambda$68 (76 samples, 0.08%)</title><rect x="1162.5" y="371.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1165.5" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (133 samples, 0.14%)</title><rect x="1163.5" y="451.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1166.5" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (133 samples, 0.14%)</title><rect x="1163.5" y="435.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1166.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (133 samples, 0.14%)</title><rect x="1163.5" y="419.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1166.5" y="430.0"></text>
</g>
<g>
<title>java.lang.String (91 samples, 0.10%)</title><rect x="1163.5" y="403.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1166.5" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (42 samples, 0.05%)</title><rect x="1164.6" y="403.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1167.6" y="414.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.05%)</title><rect x="1164.6" y="387.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1167.6" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (621 samples, 0.68%)</title><rect x="1165.2" y="483.0" width="7.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1168.2" y="494.0"></text>
</g>
<g>
<title>one.nio.http.Request (90 samples, 0.10%)</title><rect x="1165.2" y="467.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1168.2" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (273 samples, 0.30%)</title><rect x="1166.3" y="467.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1169.3" y="478.0"></text>
</g>
<g>
<title>java.lang.String[] (71 samples, 0.08%)</title><rect x="1166.3" y="451.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1169.3" y="462.0"></text>
</g>
<g>
<title>java.lang.String[] (202 samples, 0.22%)</title><rect x="1167.2" y="451.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1170.2" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (258 samples, 0.28%)</title><rect x="1169.8" y="467.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1172.8" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (258 samples, 0.28%)</title><rect x="1169.8" y="451.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1172.8" y="462.0"></text>
</g>
<g>
<title>char[] (65 samples, 0.07%)</title><rect x="1169.8" y="435.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1172.8" y="446.0"></text>
</g>
<g>
<title>java.lang.String (47 samples, 0.05%)</title><rect x="1170.7" y="435.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1173.7" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (146 samples, 0.16%)</title><rect x="1171.3" y="435.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1174.3" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (146 samples, 0.16%)</title><rect x="1171.3" y="419.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1174.3" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (146 samples, 0.16%)</title><rect x="1171.3" y="403.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1174.3" y="414.0"></text>
</g>
<g>
<title>byte[] (146 samples, 0.16%)</title><rect x="1171.3" y="387.0" width="1.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1174.3" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,312 samples, 1.43%)</title><rect x="1173.1" y="483.0" width="16.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1176.1" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,312 samples, 1.43%)</title><rect x="1173.1" y="467.0" width="16.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1176.1" y="478.0"></text>
</g>
<g>
<title>char[] (662 samples, 0.72%)</title><rect x="1173.1" y="451.0" width="8.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1176.1" y="462.0"></text>
</g>
<g>
<title>char[] (173 samples, 0.19%)</title><rect x="1181.6" y="451.0" width="2.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1184.6" y="462.0"></text>
</g>
<g>
<title>java.lang.String (151 samples, 0.16%)</title><rect x="1183.9" y="451.0" width="1.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1186.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (326 samples, 0.35%)</title><rect x="1185.8" y="451.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1188.8" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (326 samples, 0.35%)</title><rect x="1185.8" y="435.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1188.8" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (326 samples, 0.35%)</title><rect x="1185.8" y="419.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1188.8" y="430.0"></text>
</g>
<g>
<title>byte[] (322 samples, 0.35%)</title><rect x="1185.8" y="403.0" width="4.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1188.8" y="414.0"></text>
</g>
</g>
</svg>
