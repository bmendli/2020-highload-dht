<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="933"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="933"> </text>
<g id="frames">
<g>
<title>all (2,742 samples, 100.00%)</title><rect x="10.0" y="899.0" width="1180.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="13.0" y="910.0">all</text>
</g>
<g>
<title>[2020-highload-dht-thread-64 tid=22628] (232 samples, 8.46%)</title><rect x="10.0" y="883.0" width="99.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="894.0">[2020-highlo..</text>
</g>
<g>
<title>java/lang/Thread.run (232 samples, 8.46%)</title><rect x="10.0" y="867.0" width="99.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="878.0">java/lang/Th..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (232 samples, 8.46%)</title><rect x="10.0" y="851.0" width="99.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="862.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (232 samples, 8.46%)</title><rect x="10.0" y="835.0" width="99.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="846.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (64 samples, 2.33%)</title><rect x="10.0" y="819.0" width="27.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="830.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (63 samples, 2.30%)</title><rect x="10.0" y="803.0" width="27.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.dequeue (2 samples, 0.07%)</title><rect x="10.4" y="787.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (46 samples, 1.68%)</title><rect x="11.3" y="787.0" width="19.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="14.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (46 samples, 1.68%)</title><rect x="11.3" y="771.0" width="19.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="14.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (46 samples, 1.68%)</title><rect x="11.3" y="755.0" width="19.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="14.3" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (43 samples, 1.57%)</title><rect x="12.2" y="739.0" width="18.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="15.2" y="750.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.04%)</title><rect x="12.6" y="723.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="15.6" y="734.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (10 samples, 0.36%)</title><rect x="13.0" y="723.0" width="4.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="16.0" y="734.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.07%)</title><rect x="15.6" y="707.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="18.6" y="718.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="16.5" y="707.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="19.5" y="718.0"></text>
</g>
<g>
<title>__lll_unlock_wake (9 samples, 0.33%)</title><rect x="17.3" y="723.0" width="3.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="20.3" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.07%)</title><rect x="20.3" y="707.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="23.3" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="20.3" y="691.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="23.3" y="702.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.04%)</title><rect x="20.3" y="675.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="23.3" y="686.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="20.3" y="659.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="23.3" y="670.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.04%)</title><rect x="20.8" y="691.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="23.8" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_wait (19 samples, 0.69%)</title><rect x="21.2" y="723.0" width="8.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="24.2" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.47%)</title><rect x="23.8" y="707.0" width="5.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="26.8" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.44%)</title><rect x="23.8" y="691.0" width="5.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="26.8" y="702.0"></text>
</g>
<g>
<title>sys_futex (10 samples, 0.36%)</title><rect x="24.6" y="675.0" width="4.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="27.6" y="686.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.33%)</title><rect x="24.6" y="659.0" width="3.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="27.6" y="670.0"></text>
</g>
<g>
<title>futex_wait (9 samples, 0.33%)</title><rect x="24.6" y="643.0" width="3.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="27.6" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (7 samples, 0.26%)</title><rect x="25.1" y="627.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="28.1" y="638.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.18%)</title><rect x="25.9" y="611.0" width="2.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="28.9" y="622.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.18%)</title><rect x="25.9" y="595.0" width="2.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="28.9" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 0.18%)</title><rect x="25.9" y="579.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="28.9" y="590.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.04%)</title><rect x="28.1" y="627.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="31.1" y="638.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.04%)</title><rect x="28.1" y="611.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="31.1" y="622.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.04%)</title><rect x="28.5" y="659.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="31.5" y="670.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.04%)</title><rect x="28.9" y="691.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="31.9" y="702.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.07%)</title><rect x="29.4" y="723.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="32.4" y="734.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.04%)</title><rect x="30.2" y="723.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="33.2" y="734.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.04%)</title><rect x="30.7" y="739.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="33.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.07%)</title><rect x="31.1" y="787.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="34.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.07%)</title><rect x="31.1" y="771.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="34.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.04%)</title><rect x="31.1" y="755.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="34.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.04%)</title><rect x="31.1" y="739.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="34.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.04%)</title><rect x="31.1" y="723.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="34.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.04%)</title><rect x="31.1" y="707.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="34.1" y="718.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.04%)</title><rect x="31.1" y="691.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="34.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.04%)</title><rect x="31.5" y="755.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="34.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.04%)</title><rect x="31.5" y="739.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="34.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.04%)</title><rect x="31.5" y="723.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="34.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (12 samples, 0.44%)</title><rect x="31.9" y="787.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="34.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (12 samples, 0.44%)</title><rect x="31.9" y="771.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="34.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (12 samples, 0.44%)</title><rect x="31.9" y="755.0" width="5.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="34.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.44%)</title><rect x="31.9" y="739.0" width="5.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="34.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.44%)</title><rect x="31.9" y="723.0" width="5.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="34.9" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.18%)</title><rect x="31.9" y="707.0" width="2.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="34.9" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.07%)</title><rect x="31.9" y="691.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="34.9" y="702.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="32.8" y="691.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="35.8" y="702.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.04%)</title><rect x="33.2" y="691.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="36.2" y="702.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.04%)</title><rect x="33.7" y="691.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="36.7" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (7 samples, 0.26%)</title><rect x="34.1" y="707.0" width="3.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="37.1" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.18%)</title><rect x="35.0" y="691.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="38.0" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.18%)</title><rect x="35.0" y="675.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="38.0" y="686.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.15%)</title><rect x="35.4" y="659.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="38.4" y="670.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.15%)</title><rect x="35.4" y="643.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="38.4" y="654.0"></text>
</g>
<g>
<title>drop_futex_key_refs.isra.15 (1 samples, 0.04%)</title><rect x="35.4" y="627.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="38.4" y="638.0"></text>
</g>
<g>
<title>futex_wake_op (3 samples, 0.11%)</title><rect x="35.8" y="627.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="38.8" y="638.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.11%)</title><rect x="35.8" y="611.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="38.8" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.11%)</title><rect x="35.8" y="595.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="38.8" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.07%)</title><rect x="36.3" y="579.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="39.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.get (1 samples, 0.04%)</title><rect x="37.1" y="803.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="40.1" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$75/1549034997.run (168 samples, 6.13%)</title><rect x="37.5" y="819.0" width="72.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="40.5" y="830.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$get$1 (168 samples, 6.13%)</title><rect x="37.5" y="803.0" width="72.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="40.5" y="814.0">ru/mail/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="38.4" y="787.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="41.4" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="38.4" y="771.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="41.4" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="38.4" y="755.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="41.4" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (126 samples, 4.60%)</title><rect x="38.8" y="787.0" width="54.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="41.8" y="798.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (125 samples, 4.56%)</title><rect x="38.8" y="771.0" width="53.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="41.8" y="782.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.11%)</title><rect x="38.8" y="755.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="41.8" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.11%)</title><rect x="38.8" y="739.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="41.8" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.07%)</title><rect x="38.8" y="723.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="41.8" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="39.7" y="723.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="42.7" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="39.7" y="707.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="42.7" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="39.7" y="691.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="42.7" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (122 samples, 4.45%)</title><rect x="40.1" y="755.0" width="52.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="43.1" y="766.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (122 samples, 4.45%)</title><rect x="40.1" y="739.0" width="52.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="43.1" y="750.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (121 samples, 4.41%)</title><rect x="40.1" y="723.0" width="52.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="43.1" y="734.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (121 samples, 4.41%)</title><rect x="40.1" y="707.0" width="52.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="43.1" y="718.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (6 samples, 0.22%)</title><rect x="40.1" y="691.0" width="2.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="43.1" y="702.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="41.0" y="675.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="44.0" y="686.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned (1 samples, 0.04%)</title><rect x="41.4" y="675.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="44.4" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.07%)</title><rect x="41.8" y="675.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="44.8" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.04%)</title><rect x="42.3" y="659.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="45.3" y="670.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.04%)</title><rect x="42.7" y="691.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="45.7" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="43.1" y="691.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="46.1" y="702.0"></text>
</g>
<g>
<title>send (113 samples, 4.12%)</title><rect x="43.6" y="691.0" width="48.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="46.6" y="702.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (108 samples, 3.94%)</title><rect x="45.7" y="675.0" width="46.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="48.7" y="686.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (108 samples, 3.94%)</title><rect x="45.7" y="659.0" width="46.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="48.7" y="670.0">do_s..</text>
</g>
<g>
<title>sys_sendto (106 samples, 3.87%)</title><rect x="46.6" y="643.0" width="45.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="49.6" y="654.0">sys_..</text>
</g>
<g>
<title>SYSC_sendto (106 samples, 3.87%)</title><rect x="46.6" y="627.0" width="45.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="49.6" y="638.0">SYSC..</text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="47.0" y="611.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="50.0" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (104 samples, 3.79%)</title><rect x="47.4" y="611.0" width="44.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="50.4" y="622.0">sock..</text>
</g>
<g>
<title>inet_sendmsg (103 samples, 3.76%)</title><rect x="47.4" y="595.0" width="44.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="50.4" y="606.0">inet..</text>
</g>
<g>
<title>tcp_sendmsg (103 samples, 3.76%)</title><rect x="47.4" y="579.0" width="44.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="50.4" y="590.0">tcp_..</text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.04%)</title><rect x="47.4" y="563.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="50.4" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (102 samples, 3.72%)</title><rect x="47.9" y="563.0" width="43.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="50.9" y="574.0">tcp_..</text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.04%)</title><rect x="48.3" y="547.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="51.3" y="558.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.04%)</title><rect x="48.3" y="531.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="51.3" y="542.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.04%)</title><rect x="48.7" y="547.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="51.7" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.07%)</title><rect x="49.2" y="547.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="52.2" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.07%)</title><rect x="49.2" y="531.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="52.2" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.04%)</title><rect x="49.2" y="515.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="52.2" y="526.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.04%)</title><rect x="49.6" y="515.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="52.6" y="526.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.04%)</title><rect x="50.0" y="547.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="53.0" y="558.0"></text>
</g>
<g>
<title>tcp_push (92 samples, 3.36%)</title><rect x="50.5" y="547.0" width="39.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="53.5" y="558.0">tcp..</text>
</g>
<g>
<title>__tcp_push_pending_frames (92 samples, 3.36%)</title><rect x="50.5" y="531.0" width="39.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="53.5" y="542.0">__t..</text>
</g>
<g>
<title>tcp_write_xmit (92 samples, 3.36%)</title><rect x="50.5" y="515.0" width="39.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="53.5" y="526.0">tcp..</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.04%)</title><rect x="52.2" y="499.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="55.2" y="510.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (84 samples, 3.06%)</title><rect x="52.6" y="499.0" width="36.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="55.6" y="510.0">__t..</text>
</g>
<g>
<title>ip_queue_xmit (78 samples, 2.84%)</title><rect x="54.8" y="483.0" width="33.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="57.8" y="494.0">ip..</text>
</g>
<g>
<title>ip_local_out (77 samples, 2.81%)</title><rect x="54.8" y="467.0" width="33.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="57.8" y="478.0">ip..</text>
</g>
<g>
<title>__ip_local_out (11 samples, 0.40%)</title><rect x="54.8" y="451.0" width="4.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="57.8" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (11 samples, 0.40%)</title><rect x="54.8" y="435.0" width="4.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="57.8" y="446.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (3 samples, 0.11%)</title><rect x="54.8" y="419.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="57.8" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (3 samples, 0.11%)</title><rect x="54.8" y="403.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="57.8" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (8 samples, 0.29%)</title><rect x="56.0" y="419.0" width="3.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="59.0" y="430.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (1 samples, 0.04%)</title><rect x="56.0" y="403.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="59.0" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (6 samples, 0.22%)</title><rect x="56.5" y="403.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="59.5" y="414.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (2 samples, 0.07%)</title><rect x="56.5" y="387.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="59.5" y="398.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="57.3" y="387.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="60.3" y="398.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (3 samples, 0.11%)</title><rect x="57.8" y="387.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="60.8" y="398.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (1 samples, 0.04%)</title><rect x="59.1" y="403.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="62.1" y="414.0"></text>
</g>
<g>
<title>ip_output (65 samples, 2.37%)</title><rect x="59.5" y="451.0" width="28.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="62.5" y="462.0">i..</text>
</g>
<g>
<title>ip_finish_output (61 samples, 2.22%)</title><rect x="59.9" y="435.0" width="26.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="62.9" y="446.0">i..</text>
</g>
<g>
<title>ip_finish_output2 (61 samples, 2.22%)</title><rect x="59.9" y="419.0" width="26.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="62.9" y="430.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (54 samples, 1.97%)</title><rect x="60.8" y="403.0" width="23.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="63.8" y="414.0">_..</text>
</g>
<g>
<title>do_softirq.part.17 (54 samples, 1.97%)</title><rect x="60.8" y="387.0" width="23.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="63.8" y="398.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (53 samples, 1.93%)</title><rect x="61.2" y="371.0" width="22.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="64.2" y="382.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (53 samples, 1.93%)</title><rect x="61.2" y="355.0" width="22.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="64.2" y="366.0">_..</text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.04%)</title><rect x="61.6" y="339.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="64.6" y="350.0"></text>
</g>
<g>
<title>net_rx_action (50 samples, 1.82%)</title><rect x="62.1" y="339.0" width="21.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="65.1" y="350.0">n..</text>
</g>
<g>
<title>process_backlog (49 samples, 1.79%)</title><rect x="62.5" y="323.0" width="21.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="65.5" y="334.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (49 samples, 1.79%)</title><rect x="62.5" y="307.0" width="21.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="65.5" y="318.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (49 samples, 1.79%)</title><rect x="62.5" y="291.0" width="21.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="65.5" y="302.0">_..</text>
</g>
<g>
<title>ip_rcv (47 samples, 1.71%)</title><rect x="62.9" y="275.0" width="20.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="65.9" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (46 samples, 1.68%)</title><rect x="62.9" y="259.0" width="19.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="65.9" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (46 samples, 1.68%)</title><rect x="62.9" y="243.0" width="19.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="65.9" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (45 samples, 1.64%)</title><rect x="62.9" y="227.0" width="19.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="65.9" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (44 samples, 1.60%)</title><rect x="63.4" y="211.0" width="18.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="66.4" y="222.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (43 samples, 1.57%)</title><rect x="63.8" y="195.0" width="18.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="66.8" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (43 samples, 1.57%)</title><rect x="63.8" y="179.0" width="18.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="66.8" y="190.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.11%)</title><rect x="64.2" y="163.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="67.2" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.11%)</title><rect x="64.2" y="147.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="67.2" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.11%)</title><rect x="64.2" y="131.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="67.2" y="142.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.11%)</title><rect x="64.2" y="115.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="67.2" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.11%)</title><rect x="64.2" y="99.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="67.2" y="110.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.04%)</title><rect x="65.5" y="163.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="68.5" y="174.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.04%)</title><rect x="65.9" y="163.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="68.9" y="174.0"></text>
</g>
<g>
<title>sched_clock_cpu (1 samples, 0.04%)</title><rect x="66.4" y="163.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="69.4" y="174.0"></text>
</g>
<g>
<title>tcp_ack (8 samples, 0.29%)</title><rect x="66.8" y="163.0" width="3.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="69.8" y="174.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.04%)</title><rect x="68.1" y="147.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="71.1" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (4 samples, 0.15%)</title><rect x="68.5" y="147.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="71.5" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.15%)</title><rect x="68.5" y="131.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="71.5" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.04%)</title><rect x="68.5" y="115.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="71.5" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.04%)</title><rect x="68.5" y="99.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="71.5" y="110.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.11%)</title><rect x="69.0" y="115.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="72.0" y="126.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.11%)</title><rect x="69.0" y="99.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="72.0" y="110.0"></text>
</g>
<g>
<title>skb_free_head (3 samples, 0.11%)</title><rect x="69.0" y="83.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="72.0" y="94.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="69.0" y="67.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="72.0" y="78.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.07%)</title><rect x="69.4" y="67.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="72.4" y="78.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.07%)</title><rect x="69.4" y="51.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="72.4" y="62.0"></text>
</g>
<g>
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.04%)</title><rect x="69.8" y="35.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="72.8" y="46.0"></text>
</g>
<g>
<title>tcp_data_queue (28 samples, 1.02%)</title><rect x="70.2" y="163.0" width="12.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="73.2" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (27 samples, 0.98%)</title><rect x="70.7" y="147.0" width="11.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="73.7" y="158.0"></text>
</g>
<g>
<title>__wake_up_sync_key (24 samples, 0.88%)</title><rect x="72.0" y="131.0" width="10.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="75.0" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (24 samples, 0.88%)</title><rect x="72.0" y="115.0" width="10.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="75.0" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (24 samples, 0.88%)</title><rect x="72.0" y="99.0" width="10.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="75.0" y="110.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.04%)</title><rect x="82.3" y="227.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="85.3" y="238.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.04%)</title><rect x="82.7" y="259.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="85.7" y="270.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_in?[iptable_nat] (1 samples, 0.04%)</title><rect x="82.7" y="243.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="85.7" y="254.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat_ipv4] (1 samples, 0.04%)</title><rect x="82.7" y="227.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="85.7" y="238.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (1 samples, 0.04%)</title><rect x="82.7" y="211.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="85.7" y="222.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (1 samples, 0.04%)</title><rect x="82.7" y="195.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="85.7" y="206.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.04%)</title><rect x="83.2" y="275.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="86.2" y="286.0"></text>
</g>
<g>
<title>rcu_bh_qs (1 samples, 0.04%)</title><rect x="83.6" y="339.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="86.6" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (5 samples, 0.18%)</title><rect x="84.0" y="403.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="87.0" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.18%)</title><rect x="84.0" y="387.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="87.0" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.04%)</title><rect x="84.4" y="371.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="87.4" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.04%)</title><rect x="84.9" y="371.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="87.9" y="382.0"></text>
</g>
<g>
<title>netdev_pick_tx (1 samples, 0.04%)</title><rect x="85.3" y="371.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="88.3" y="382.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (1 samples, 0.04%)</title><rect x="85.7" y="371.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="88.7" y="382.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.11%)</title><rect x="86.2" y="435.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="89.2" y="446.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (2 samples, 0.07%)</title><rect x="86.6" y="419.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="89.6" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.07%)</title><rect x="86.6" y="403.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="89.6" y="414.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.04%)</title><rect x="87.5" y="451.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="90.5" y="462.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.04%)</title><rect x="87.9" y="467.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="90.9" y="478.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.04%)</title><rect x="88.3" y="483.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="91.3" y="494.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.04%)</title><rect x="88.3" y="467.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="91.3" y="478.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.04%)</title><rect x="88.8" y="499.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="91.8" y="510.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.04%)</title><rect x="89.2" y="499.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="92.2" y="510.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.04%)</title><rect x="89.6" y="499.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="92.6" y="510.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.04%)</title><rect x="90.0" y="547.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="93.0" y="558.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.11%)</title><rect x="90.5" y="547.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="93.5" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="90.5" y="531.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="93.5" y="542.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.04%)</title><rect x="90.9" y="531.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="93.9" y="542.0"></text>
</g>
<g>
<title>tcp_v4_md5_lookup (1 samples, 0.04%)</title><rect x="90.9" y="515.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="93.9" y="526.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.04%)</title><rect x="91.3" y="531.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="94.3" y="542.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.04%)</title><rect x="91.8" y="595.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="94.8" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.04%)</title><rect x="91.8" y="579.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="94.8" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.04%)</title><rect x="91.8" y="563.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="94.8" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.04%)</title><rect x="91.8" y="547.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="94.8" y="558.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="92.2" y="723.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="95.2" y="734.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="92.2" y="707.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="95.2" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="92.6" y="771.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="95.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (39 samples, 1.42%)</title><rect x="93.1" y="787.0" width="16.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="96.1" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (7 samples, 0.26%)</title><rect x="93.1" y="771.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="96.1" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (7 samples, 0.26%)</title><rect x="93.1" y="755.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="96.1" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (7 samples, 0.26%)</title><rect x="93.1" y="739.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="96.1" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (7 samples, 0.26%)</title><rect x="93.1" y="723.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="96.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (7 samples, 0.26%)</title><rect x="93.1" y="707.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="96.1" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.22%)</title><rect x="93.5" y="691.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="96.5" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (3 samples, 0.11%)</title><rect x="93.5" y="675.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="96.5" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (3 samples, 0.11%)</title><rect x="93.5" y="659.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="96.5" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (3 samples, 0.11%)</title><rect x="93.5" y="643.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="96.5" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (3 samples, 0.11%)</title><rect x="93.5" y="627.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="96.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3 samples, 0.11%)</title><rect x="93.5" y="611.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="96.5" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.07%)</title><rect x="93.5" y="595.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="96.5" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (2 samples, 0.07%)</title><rect x="93.5" y="579.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="96.5" y="590.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (2 samples, 0.07%)</title><rect x="93.5" y="563.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="96.5" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (2 samples, 0.07%)</title><rect x="93.5" y="547.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="96.5" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (2 samples, 0.07%)</title><rect x="93.5" y="531.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="96.5" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (1 samples, 0.04%)</title><rect x="93.9" y="515.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="96.9" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (1 samples, 0.04%)</title><rect x="93.9" y="499.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="96.9" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (1 samples, 0.04%)</title><rect x="93.9" y="483.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="96.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (1 samples, 0.04%)</title><rect x="93.9" y="467.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="96.9" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.04%)</title><rect x="93.9" y="451.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="96.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (1 samples, 0.04%)</title><rect x="93.9" y="435.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="96.9" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (1 samples, 0.04%)</title><rect x="93.9" y="419.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="96.9" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.04%)</title><rect x="93.9" y="403.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="96.9" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.04%)</title><rect x="93.9" y="387.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="96.9" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="93.9" y="371.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="96.9" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="93.9" y="355.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="96.9" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.04%)</title><rect x="94.3" y="595.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="97.3" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.04%)</title><rect x="94.3" y="579.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="97.3" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (2 samples, 0.07%)</title><rect x="94.8" y="675.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="97.8" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (2 samples, 0.07%)</title><rect x="94.8" y="659.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="97.8" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (2 samples, 0.07%)</title><rect x="94.8" y="643.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="97.8" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (2 samples, 0.07%)</title><rect x="94.8" y="627.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="97.8" y="638.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1 samples, 0.04%)</title><rect x="95.6" y="675.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="98.6" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1 samples, 0.04%)</title><rect x="95.6" y="659.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="98.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (1 samples, 0.04%)</title><rect x="95.6" y="643.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="98.6" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.04%)</title><rect x="96.1" y="771.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="99.1" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (1 samples, 0.04%)</title><rect x="96.1" y="755.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="99.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$191/1599205169.apply (1 samples, 0.04%)</title><rect x="96.1" y="739.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="99.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$3 (1 samples, 0.04%)</title><rect x="96.1" y="723.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="99.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (1 samples, 0.04%)</title><rect x="96.1" y="707.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="99.1" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (1 samples, 0.04%)</title><rect x="96.1" y="691.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="99.1" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.04%)</title><rect x="96.1" y="675.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="99.1" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (2 samples, 0.07%)</title><rect x="96.5" y="771.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="99.5" y="782.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.07%)</title><rect x="96.5" y="755.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="99.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (29 samples, 1.06%)</title><rect x="97.4" y="771.0" width="12.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="100.4" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.04%)</title><rect x="97.8" y="755.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="100.8" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="97.8" y="739.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="100.8" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="97.8" y="723.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="100.8" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="97.8" y="707.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="100.8" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="97.8" y="691.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="100.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.04%)</title><rect x="98.2" y="755.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="101.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.04%)</title><rect x="98.2" y="739.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="101.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.04%)</title><rect x="98.2" y="723.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="101.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (19 samples, 0.69%)</title><rect x="98.7" y="755.0" width="8.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="101.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (19 samples, 0.69%)</title><rect x="98.7" y="739.0" width="8.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="101.7" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (2 samples, 0.07%)</title><rect x="99.1" y="723.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="102.1" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2 samples, 0.07%)</title><rect x="99.1" y="707.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="102.1" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (1 samples, 0.04%)</title><rect x="99.1" y="691.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="102.1" y="702.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1 samples, 0.04%)</title><rect x="99.5" y="691.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="102.5" y="702.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1 samples, 0.04%)</title><rect x="99.5" y="675.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="102.5" y="686.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1 samples, 0.04%)</title><rect x="99.5" y="659.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="102.5" y="670.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (1 samples, 0.04%)</title><rect x="99.5" y="643.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="102.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1 samples, 0.04%)</title><rect x="99.9" y="723.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="102.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1 samples, 0.04%)</title><rect x="99.9" y="707.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="102.9" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.04%)</title><rect x="99.9" y="691.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="102.9" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (15 samples, 0.55%)</title><rect x="100.4" y="723.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="103.4" y="734.0"></text>
</g>
<g>
<title>java/util/Collection.stream (15 samples, 0.55%)</title><rect x="100.4" y="707.0" width="6.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="103.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (14 samples, 0.51%)</title><rect x="100.4" y="691.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="103.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (14 samples, 0.51%)</title><rect x="100.4" y="675.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="103.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (14 samples, 0.51%)</title><rect x="100.4" y="659.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="103.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (1 samples, 0.04%)</title><rect x="100.8" y="643.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="103.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (1 samples, 0.04%)</title><rect x="100.8" y="627.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="103.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.04%)</title><rect x="100.8" y="611.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="103.8" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="100.8" y="595.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="103.8" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="100.8" y="579.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="103.8" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.04%)</title><rect x="100.8" y="563.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="103.8" y="574.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.04%)</title><rect x="100.8" y="547.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="103.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (12 samples, 0.44%)</title><rect x="101.2" y="643.0" width="5.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="104.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (12 samples, 0.44%)</title><rect x="101.2" y="627.0" width="5.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="104.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.04%)</title><rect x="101.7" y="611.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="104.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (10 samples, 0.36%)</title><rect x="102.1" y="611.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="105.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (5 samples, 0.18%)</title><rect x="104.2" y="595.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="107.2" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.18%)</title><rect x="104.2" y="579.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="107.2" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.18%)</title><rect x="104.2" y="563.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="107.2" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.04%)</title><rect x="104.2" y="547.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="107.2" y="558.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.04%)</title><rect x="104.2" y="531.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="107.2" y="542.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.07%)</title><rect x="104.7" y="547.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="107.7" y="558.0"></text>
</g>
<g>
<title>vectorizedMismatch (2 samples, 0.07%)</title><rect x="104.7" y="531.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="107.7" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compare (1 samples, 0.04%)</title><rect x="105.5" y="547.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="108.5" y="558.0"></text>
</g>
<g>
<title>java/lang/Byte.compare (1 samples, 0.04%)</title><rect x="105.5" y="531.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="108.5" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.04%)</title><rect x="106.0" y="547.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="109.0" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.04%)</title><rect x="106.0" y="531.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="109.0" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.04%)</title><rect x="106.4" y="691.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="109.4" y="702.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (1 samples, 0.04%)</title><rect x="106.4" y="675.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="109.4" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (7 samples, 0.26%)</title><rect x="106.8" y="755.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="109.8" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (3 samples, 0.11%)</title><rect x="106.8" y="739.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="109.8" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (3 samples, 0.11%)</title><rect x="106.8" y="723.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="109.8" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (2 samples, 0.07%)</title><rect x="107.3" y="707.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="110.3" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (2 samples, 0.07%)</title><rect x="107.3" y="691.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="110.3" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (2 samples, 0.07%)</title><rect x="107.3" y="675.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="110.3" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2 samples, 0.07%)</title><rect x="107.3" y="659.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="110.3" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.04%)</title><rect x="107.7" y="643.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="110.7" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (1 samples, 0.04%)</title><rect x="107.7" y="627.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="110.7" y="638.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1 samples, 0.04%)</title><rect x="107.7" y="611.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="110.7" y="622.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1 samples, 0.04%)</title><rect x="107.7" y="595.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="110.7" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1 samples, 0.04%)</title><rect x="107.7" y="579.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="110.7" y="590.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (1 samples, 0.04%)</title><rect x="107.7" y="563.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="110.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="107.7" y="547.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="110.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="107.7" y="531.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="110.7" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$111/1835775400.get$Lambda (1 samples, 0.04%)</title><rect x="107.7" y="515.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="110.7" y="526.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (2 samples, 0.07%)</title><rect x="108.1" y="739.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="111.1" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.07%)</title><rect x="108.1" y="723.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="111.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (2 samples, 0.07%)</title><rect x="109.0" y="739.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="112.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (2 samples, 0.07%)</title><rect x="109.0" y="723.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="112.0" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.07%)</title><rect x="109.0" y="707.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="112.0" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (2 samples, 0.07%)</title><rect x="109.0" y="691.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="112.0" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (2 samples, 0.07%)</title><rect x="109.0" y="675.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="112.0" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (2 samples, 0.07%)</title><rect x="109.0" y="659.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="112.0" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (2 samples, 0.07%)</title><rect x="109.0" y="643.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="112.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2 samples, 0.07%)</title><rect x="109.0" y="627.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="112.0" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.07%)</title><rect x="109.0" y="611.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="112.0" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (1 samples, 0.04%)</title><rect x="109.0" y="595.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="112.0" y="606.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1 samples, 0.04%)</title><rect x="109.0" y="579.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="112.0" y="590.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1 samples, 0.04%)</title><rect x="109.0" y="563.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="112.0" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.04%)</title><rect x="109.4" y="595.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="112.4" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (1 samples, 0.04%)</title><rect x="109.4" y="579.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="112.4" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.04%)</title><rect x="109.4" y="563.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="112.4" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.04%)</title><rect x="109.4" y="547.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="112.4" y="558.0"></text>
</g>
<g>
<title>[2020-highload-dht-thread-86 tid=22652] (232 samples, 8.46%)</title><rect x="109.8" y="883.0" width="99.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="112.8" y="894.0">[2020-highlo..</text>
</g>
<g>
<title>java/lang/Thread.run (232 samples, 8.46%)</title><rect x="109.8" y="867.0" width="99.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="112.8" y="878.0">java/lang/Th..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (232 samples, 8.46%)</title><rect x="109.8" y="851.0" width="99.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="112.8" y="862.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (232 samples, 8.46%)</title><rect x="109.8" y="835.0" width="99.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="112.8" y="846.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (77 samples, 2.81%)</title><rect x="109.8" y="819.0" width="33.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="112.8" y="830.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (74 samples, 2.70%)</title><rect x="110.7" y="803.0" width="31.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="113.7" y="814.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (62 samples, 2.26%)</title><rect x="110.7" y="787.0" width="26.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="113.7" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.04%)</title><rect x="110.7" y="771.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="113.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.isHeldExclusively (1 samples, 0.04%)</title><rect x="110.7" y="755.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="113.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.07%)</title><rect x="111.1" y="771.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="114.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.07%)</title><rect x="111.1" y="755.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="114.1" y="766.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.04%)</title><rect x="111.1" y="739.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="114.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.04%)</title><rect x="111.6" y="739.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="114.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (7 samples, 0.26%)</title><rect x="112.0" y="771.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="115.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.26%)</title><rect x="112.0" y="755.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="115.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.26%)</title><rect x="112.0" y="739.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="115.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.26%)</title><rect x="112.0" y="723.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="115.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.26%)</title><rect x="112.0" y="707.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="115.0" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (7 samples, 0.26%)</title><rect x="112.0" y="691.0" width="3.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="115.0" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.26%)</title><rect x="112.0" y="675.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="115.0" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.26%)</title><rect x="112.0" y="659.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="115.0" y="670.0"></text>
</g>
<g>
<title>sys_futex (7 samples, 0.26%)</title><rect x="112.0" y="643.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="115.0" y="654.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.26%)</title><rect x="112.0" y="627.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="115.0" y="638.0"></text>
</g>
<g>
<title>futex_wake_op (7 samples, 0.26%)</title><rect x="112.0" y="611.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="115.0" y="622.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.22%)</title><rect x="112.4" y="595.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="115.4" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.22%)</title><rect x="112.4" y="579.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="115.4" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.22%)</title><rect x="112.4" y="563.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="115.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (52 samples, 1.90%)</title><rect x="115.0" y="771.0" width="22.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="118.0" y="782.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (52 samples, 1.90%)</title><rect x="115.0" y="755.0" width="22.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="118.0" y="766.0">j..</text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="115.9" y="739.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="118.9" y="750.0"></text>
</g>
<g>
<title>Unsafe_Park (49 samples, 1.79%)</title><rect x="116.3" y="739.0" width="21.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="119.3" y="750.0">U..</text>
</g>
<g>
<title>Parker::park(bool, long) (12 samples, 0.44%)</title><rect x="118.4" y="723.0" width="5.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="121.4" y="734.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.07%)</title><rect x="121.5" y="707.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="124.5" y="718.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.07%)</title><rect x="122.3" y="707.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="125.3" y="718.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="123.2" y="707.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="126.2" y="718.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="123.6" y="723.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="126.6" y="734.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="124.0" y="723.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="127.0" y="734.0"></text>
</g>
<g>
<title>__lll_unlock_wake (6 samples, 0.22%)</title><rect x="124.5" y="723.0" width="2.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="127.5" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.07%)</title><rect x="126.2" y="707.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="129.2" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.07%)</title><rect x="126.2" y="691.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="129.2" y="702.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.04%)</title><rect x="126.6" y="675.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="129.6" y="686.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="126.6" y="659.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="129.6" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_wait (21 samples, 0.77%)</title><rect x="127.1" y="723.0" width="9.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="130.1" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.44%)</title><rect x="130.9" y="707.0" width="5.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="133.9" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.44%)</title><rect x="130.9" y="691.0" width="5.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="133.9" y="702.0"></text>
</g>
<g>
<title>sys_futex (9 samples, 0.33%)</title><rect x="132.2" y="675.0" width="3.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="135.2" y="686.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.29%)</title><rect x="132.6" y="659.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="135.6" y="670.0"></text>
</g>
<g>
<title>futex_wait (8 samples, 0.29%)</title><rect x="132.6" y="643.0" width="3.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="135.6" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (6 samples, 0.22%)</title><rect x="132.6" y="627.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="135.6" y="638.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.22%)</title><rect x="132.6" y="611.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="135.6" y="622.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.18%)</title><rect x="133.1" y="595.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="136.1" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.11%)</title><rect x="133.9" y="579.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="136.9" y="590.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.04%)</title><rect x="135.2" y="627.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="138.2" y="638.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.04%)</title><rect x="135.7" y="627.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="138.7" y="638.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (2 samples, 0.07%)</title><rect x="136.1" y="723.0" width="0.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="139.1" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="137.0" y="723.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="140.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (4 samples, 0.15%)</title><rect x="137.4" y="787.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="140.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (4 samples, 0.15%)</title><rect x="137.4" y="771.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="140.4" y="782.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.04%)</title><rect x="137.4" y="755.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="140.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.07%)</title><rect x="137.8" y="755.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="140.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.07%)</title><rect x="137.8" y="739.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="140.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.07%)</title><rect x="137.8" y="723.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="140.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.07%)</title><rect x="137.8" y="707.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="140.8" y="718.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.07%)</title><rect x="137.8" y="691.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="140.8" y="702.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.04%)</title><rect x="137.8" y="675.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="140.8" y="686.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.04%)</title><rect x="137.8" y="659.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="140.8" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.04%)</title><rect x="138.2" y="675.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="141.2" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="138.2" y="659.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="141.2" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="138.2" y="643.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="141.2" y="654.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.04%)</title><rect x="138.2" y="627.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="141.2" y="638.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="138.2" y="611.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="141.2" y="622.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.04%)</title><rect x="138.2" y="595.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="141.2" y="606.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.04%)</title><rect x="138.2" y="579.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="141.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.04%)</title><rect x="138.7" y="755.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="141.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.04%)</title><rect x="138.7" y="739.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="141.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.04%)</title><rect x="138.7" y="723.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="141.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.04%)</title><rect x="138.7" y="707.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="141.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.29%)</title><rect x="139.1" y="787.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="142.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.29%)</title><rect x="139.1" y="771.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="142.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.29%)</title><rect x="139.1" y="755.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="142.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.29%)</title><rect x="139.1" y="739.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="142.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.29%)</title><rect x="139.1" y="723.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="142.1" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (8 samples, 0.29%)</title><rect x="139.1" y="707.0" width="3.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="142.1" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.22%)</title><rect x="140.0" y="691.0" width="2.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="143.0" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.22%)</title><rect x="140.0" y="675.0" width="2.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="143.0" y="686.0"></text>
</g>
<g>
<title>sys_futex (6 samples, 0.22%)</title><rect x="140.0" y="659.0" width="2.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="143.0" y="670.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.22%)</title><rect x="140.0" y="643.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="143.0" y="654.0"></text>
</g>
<g>
<title>futex_wake_op (6 samples, 0.22%)</title><rect x="140.0" y="627.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="143.0" y="638.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.15%)</title><rect x="140.8" y="611.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="143.8" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.15%)</title><rect x="140.8" y="595.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="143.8" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.15%)</title><rect x="140.8" y="579.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="143.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.get (1 samples, 0.04%)</title><rect x="142.5" y="803.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="145.5" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$75/1549034997.run (155 samples, 5.65%)</title><rect x="143.0" y="819.0" width="66.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="146.0" y="830.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$get$1 (154 samples, 5.62%)</title><rect x="143.4" y="803.0" width="66.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="146.4" y="814.0">ru/mail..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="143.4" y="787.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="146.4" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="143.4" y="771.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="146.4" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="143.4" y="755.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="146.4" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="143.4" y="739.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="146.4" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="143.4" y="723.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="146.4" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="143.4" y="707.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="146.4" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="143.4" y="691.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="146.4" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.04%)</title><rect x="143.4" y="675.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="146.4" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (121 samples, 4.41%)</title><rect x="143.8" y="787.0" width="52.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="146.8" y="798.0">one/n..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.04%)</title><rect x="144.3" y="771.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="147.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="144.3" y="755.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="147.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="144.3" y="739.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="147.3" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (119 samples, 4.34%)</title><rect x="144.7" y="771.0" width="51.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="147.7" y="782.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.15%)</title><rect x="144.7" y="755.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="147.7" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.15%)</title><rect x="144.7" y="739.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="147.7" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.11%)</title><rect x="144.7" y="723.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="147.7" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="146.0" y="723.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="149.0" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="146.0" y="707.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="149.0" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="146.0" y="691.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="149.0" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (115 samples, 4.19%)</title><rect x="146.4" y="755.0" width="49.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="149.4" y="766.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (115 samples, 4.19%)</title><rect x="146.4" y="739.0" width="49.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="149.4" y="750.0">one/n..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="146.4" y="723.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="149.4" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (114 samples, 4.16%)</title><rect x="146.8" y="723.0" width="49.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="149.8" y="734.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (114 samples, 4.16%)</title><rect x="146.8" y="707.0" width="49.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="149.8" y="718.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.15%)</title><rect x="147.7" y="691.0" width="1.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="150.7" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.04%)</title><rect x="149.0" y="675.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="152.0" y="686.0"></text>
</g>
<g>
<title>send (108 samples, 3.94%)</title><rect x="149.4" y="691.0" width="46.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="152.4" y="702.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (104 samples, 3.79%)</title><rect x="151.2" y="675.0" width="44.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="154.2" y="686.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (104 samples, 3.79%)</title><rect x="151.2" y="659.0" width="44.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="154.2" y="670.0">do_s..</text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="151.2" y="643.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="154.2" y="654.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="151.2" y="627.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="154.2" y="638.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="151.2" y="611.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="154.2" y="622.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.04%)</title><rect x="151.2" y="595.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="154.2" y="606.0"></text>
</g>
<g>
<title>sys_sendto (103 samples, 3.76%)</title><rect x="151.6" y="643.0" width="44.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="154.6" y="654.0">sys_..</text>
</g>
<g>
<title>SYSC_sendto (103 samples, 3.76%)</title><rect x="151.6" y="627.0" width="44.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="154.6" y="638.0">SYSC..</text>
</g>
<g>
<title>sock_sendmsg (99 samples, 3.61%)</title><rect x="152.0" y="611.0" width="42.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="155.0" y="622.0">sock..</text>
</g>
<g>
<title>inet_sendmsg (98 samples, 3.57%)</title><rect x="152.0" y="595.0" width="42.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="155.0" y="606.0">inet..</text>
</g>
<g>
<title>tcp_sendmsg (98 samples, 3.57%)</title><rect x="152.0" y="579.0" width="42.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="155.0" y="590.0">tcp_..</text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="152.0" y="563.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="155.0" y="574.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="152.4" y="563.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="155.4" y="574.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="152.4" y="547.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="155.4" y="558.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.04%)</title><rect x="152.9" y="563.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="155.9" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (95 samples, 3.46%)</title><rect x="153.3" y="563.0" width="40.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="156.3" y="574.0">tcp..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.04%)</title><rect x="155.0" y="547.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="158.0" y="558.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="155.0" y="531.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="158.0" y="542.0"></text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.07%)</title><rect x="155.5" y="547.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="158.5" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (8 samples, 0.29%)</title><rect x="156.3" y="547.0" width="3.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="159.3" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.18%)</title><rect x="157.6" y="531.0" width="2.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="160.6" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.11%)</title><rect x="158.0" y="515.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="161.0" y="526.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.04%)</title><rect x="159.3" y="515.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="162.3" y="526.0"></text>
</g>
<g>
<title>tcp_push (79 samples, 2.88%)</title><rect x="159.8" y="547.0" width="34.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="162.8" y="558.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (79 samples, 2.88%)</title><rect x="159.8" y="531.0" width="34.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="162.8" y="542.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (79 samples, 2.88%)</title><rect x="159.8" y="515.0" width="34.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="162.8" y="526.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (76 samples, 2.77%)</title><rect x="160.2" y="499.0" width="32.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="163.2" y="510.0">__..</text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.04%)</title><rect x="160.6" y="483.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="163.6" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (74 samples, 2.70%)</title><rect x="161.1" y="483.0" width="31.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="164.1" y="494.0">ip..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.04%)</title><rect x="161.5" y="467.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="164.5" y="478.0"></text>
</g>
<g>
<title>ip_local_out (72 samples, 2.63%)</title><rect x="161.9" y="467.0" width="31.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="164.9" y="478.0">ip..</text>
</g>
<g>
<title>__ip_local_out (16 samples, 0.58%)</title><rect x="162.3" y="451.0" width="6.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="165.3" y="462.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn?[iptable_nat] (2 samples, 0.07%)</title><rect x="162.3" y="435.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="165.3" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (1 samples, 0.04%)</title><rect x="163.2" y="435.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="166.2" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (13 samples, 0.47%)</title><rect x="163.6" y="435.0" width="5.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="166.6" y="446.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.07%)</title><rect x="163.6" y="419.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="166.6" y="430.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (2 samples, 0.07%)</title><rect x="164.5" y="419.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="167.5" y="430.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn?[iptable_nat] (1 samples, 0.04%)</title><rect x="165.4" y="419.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="168.4" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (1 samples, 0.04%)</title><rect x="165.4" y="403.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="168.4" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (8 samples, 0.29%)</title><rect x="165.8" y="419.0" width="3.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="168.8" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (5 samples, 0.18%)</title><rect x="165.8" y="403.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="168.8" y="414.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (2 samples, 0.07%)</title><rect x="166.2" y="387.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="169.2" y="398.0"></text>
</g>
<g>
<title>tcp_error?[nf_conntrack] (1 samples, 0.04%)</title><rect x="167.1" y="387.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="170.1" y="398.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (1 samples, 0.04%)</title><rect x="167.5" y="387.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="170.5" y="398.0"></text>
</g>
<g>
<title>tcp_error?[nf_conntrack] (2 samples, 0.07%)</title><rect x="167.9" y="403.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="170.9" y="414.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (1 samples, 0.04%)</title><rect x="168.8" y="403.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="171.8" y="414.0"></text>
</g>
<g>
<title>ip_output (55 samples, 2.01%)</title><rect x="169.2" y="451.0" width="23.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="172.2" y="462.0">i..</text>
</g>
<g>
<title>__indirect_thunk_start (1 samples, 0.04%)</title><rect x="169.2" y="435.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="172.2" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.04%)</title><rect x="169.7" y="435.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="172.7" y="446.0"></text>
</g>
<g>
<title>ip_finish_output (52 samples, 1.90%)</title><rect x="170.1" y="435.0" width="22.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="173.1" y="446.0">i..</text>
</g>
<g>
<title>ip_finish_output2 (49 samples, 1.79%)</title><rect x="170.9" y="419.0" width="21.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="173.9" y="430.0">i..</text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.04%)</title><rect x="170.9" y="403.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="173.9" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (44 samples, 1.60%)</title><rect x="171.4" y="403.0" width="18.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="174.4" y="414.0"></text>
</g>
<g>
<title>do_softirq.part.17 (44 samples, 1.60%)</title><rect x="171.4" y="387.0" width="18.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="174.4" y="398.0"></text>
</g>
<g>
<title>do_softirq_own_stack (42 samples, 1.53%)</title><rect x="172.2" y="371.0" width="18.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="175.2" y="382.0"></text>
</g>
<g>
<title>__softirqentry_text_start (42 samples, 1.53%)</title><rect x="172.2" y="355.0" width="18.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="175.2" y="366.0"></text>
</g>
<g>
<title>__indirect_thunk_start (1 samples, 0.04%)</title><rect x="173.5" y="339.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="176.5" y="350.0"></text>
</g>
<g>
<title>net_rx_action (38 samples, 1.39%)</title><rect x="174.0" y="339.0" width="16.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="177.0" y="350.0"></text>
</g>
<g>
<title>process_backlog (38 samples, 1.39%)</title><rect x="174.0" y="323.0" width="16.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="177.0" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb (37 samples, 1.35%)</title><rect x="174.4" y="307.0" width="15.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="177.4" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (37 samples, 1.35%)</title><rect x="174.4" y="291.0" width="15.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="177.4" y="302.0"></text>
</g>
<g>
<title>ip_rcv (36 samples, 1.31%)</title><rect x="174.8" y="275.0" width="15.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="177.8" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (35 samples, 1.28%)</title><rect x="175.3" y="259.0" width="15.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="178.3" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (33 samples, 1.20%)</title><rect x="175.7" y="243.0" width="14.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="178.7" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (30 samples, 1.09%)</title><rect x="175.7" y="227.0" width="12.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="178.7" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (30 samples, 1.09%)</title><rect x="175.7" y="211.0" width="12.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="178.7" y="222.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (29 samples, 1.06%)</title><rect x="176.1" y="195.0" width="12.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="179.1" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (29 samples, 1.06%)</title><rect x="176.1" y="179.0" width="12.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="179.1" y="190.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.07%)</title><rect x="176.5" y="163.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="179.5" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.07%)</title><rect x="176.5" y="147.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="179.5" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.07%)</title><rect x="176.5" y="131.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="179.5" y="142.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.07%)</title><rect x="176.5" y="115.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="179.5" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.07%)</title><rect x="176.5" y="99.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="179.5" y="110.0"></text>
</g>
<g>
<title>tcp_ack (5 samples, 0.18%)</title><rect x="177.4" y="163.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="180.4" y="174.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (5 samples, 0.18%)</title><rect x="177.4" y="147.0" width="2.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="180.4" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.07%)</title><rect x="177.8" y="131.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="180.8" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.04%)</title><rect x="177.8" y="115.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="180.8" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.04%)</title><rect x="177.8" y="99.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="180.8" y="110.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="178.3" y="115.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="181.3" y="126.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="178.3" y="99.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="181.3" y="110.0"></text>
</g>
<g>
<title>minmax_running_min (1 samples, 0.04%)</title><rect x="178.7" y="131.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="181.7" y="142.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.04%)</title><rect x="179.1" y="131.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="182.1" y="142.0"></text>
</g>
<g>
<title>tcp_data_queue (19 samples, 0.69%)</title><rect x="179.6" y="163.0" width="8.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="182.6" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (19 samples, 0.69%)</title><rect x="179.6" y="147.0" width="8.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="182.6" y="158.0"></text>
</g>
<g>
<title>__wake_up_sync_key (19 samples, 0.69%)</title><rect x="179.6" y="131.0" width="8.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="182.6" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (19 samples, 0.69%)</title><rect x="179.6" y="115.0" width="8.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="182.6" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (19 samples, 0.69%)</title><rect x="179.6" y="99.0" width="8.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="182.6" y="110.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.07%)</title><rect x="187.7" y="163.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="190.7" y="174.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.04%)</title><rect x="188.6" y="227.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="191.6" y="238.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.04%)</title><rect x="189.0" y="227.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="192.0" y="238.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (1 samples, 0.04%)</title><rect x="189.0" y="211.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="192.0" y="222.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.04%)</title><rect x="189.0" y="195.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="192.0" y="206.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.04%)</title><rect x="189.5" y="227.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="192.5" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.04%)</title><rect x="189.9" y="243.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="192.9" y="254.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 0.15%)</title><rect x="190.3" y="403.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="193.3" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.15%)</title><rect x="190.3" y="387.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="193.3" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.11%)</title><rect x="190.3" y="371.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="193.3" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.07%)</title><rect x="190.3" y="355.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="193.3" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.04%)</title><rect x="190.3" y="339.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="193.3" y="350.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.04%)</title><rect x="190.7" y="339.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="193.7" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.04%)</title><rect x="190.7" y="323.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="193.7" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.04%)</title><rect x="190.7" y="307.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="193.7" y="318.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.04%)</title><rect x="191.2" y="355.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="194.2" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.04%)</title><rect x="191.6" y="371.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="194.6" y="382.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="192.0" y="419.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="195.0" y="430.0"></text>
</g>
<g>
<title>ipv4_helper?[nf_conntrack_ipv4] (1 samples, 0.04%)</title><rect x="192.5" y="435.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="195.5" y="446.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.04%)</title><rect x="192.9" y="499.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="195.9" y="510.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.04%)</title><rect x="193.3" y="499.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="196.3" y="510.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.04%)</title><rect x="193.8" y="547.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="196.8" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.04%)</title><rect x="193.8" y="531.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="196.8" y="542.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.04%)</title><rect x="194.2" y="595.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="197.2" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.04%)</title><rect x="194.2" y="579.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="197.2" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.04%)</title><rect x="194.2" y="563.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="197.2" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.11%)</title><rect x="194.6" y="611.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="197.6" y="622.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.07%)</title><rect x="194.6" y="595.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="197.6" y="606.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.07%)</title><rect x="194.6" y="579.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="197.6" y="590.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.07%)</title><rect x="194.6" y="563.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="197.6" y="574.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="195.5" y="595.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="198.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (32 samples, 1.17%)</title><rect x="195.9" y="787.0" width="13.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="198.9" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (1 samples, 0.04%)</title><rect x="195.9" y="771.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="198.9" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.04%)</title><rect x="195.9" y="755.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="198.9" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.04%)</title><rect x="195.9" y="739.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="198.9" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1 samples, 0.04%)</title><rect x="195.9" y="723.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="198.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.04%)</title><rect x="195.9" y="707.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="198.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$177/786148505.apply (1 samples, 0.04%)</title><rect x="195.9" y="691.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="198.9" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (1 samples, 0.04%)</title><rect x="195.9" y="675.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="198.9" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (1 samples, 0.04%)</title><rect x="195.9" y="659.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="198.9" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.04%)</title><rect x="195.9" y="643.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="198.9" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.04%)</title><rect x="195.9" y="627.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="198.9" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="195.9" y="611.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="198.9" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="195.9" y="595.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="198.9" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="195.9" y="579.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="198.9" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="195.9" y="563.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="198.9" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.04%)</title><rect x="196.3" y="771.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="199.3" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (1 samples, 0.04%)</title><rect x="196.3" y="755.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="199.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$191/1599205169.apply (1 samples, 0.04%)</title><rect x="196.3" y="739.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="199.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$3 (1 samples, 0.04%)</title><rect x="196.3" y="723.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="199.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (1 samples, 0.04%)</title><rect x="196.3" y="707.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="199.3" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (1 samples, 0.04%)</title><rect x="196.3" y="691.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="199.3" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.04%)</title><rect x="196.3" y="675.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="199.3" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.04%)</title><rect x="196.3" y="659.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="199.3" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="196.3" y="643.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="199.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (30 samples, 1.09%)</title><rect x="196.8" y="771.0" width="12.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="199.8" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (26 samples, 0.95%)</title><rect x="197.2" y="755.0" width="11.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="200.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (26 samples, 0.95%)</title><rect x="197.2" y="739.0" width="11.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="200.2" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (3 samples, 0.11%)</title><rect x="197.6" y="723.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="200.6" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (3 samples, 0.11%)</title><rect x="197.6" y="707.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="200.6" y="718.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (3 samples, 0.11%)</title><rect x="197.6" y="691.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="200.6" y="702.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (2 samples, 0.07%)</title><rect x="198.1" y="675.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="201.1" y="686.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (2 samples, 0.07%)</title><rect x="198.1" y="659.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="201.1" y="670.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (1 samples, 0.04%)</title><rect x="198.5" y="643.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="201.5" y="654.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (1 samples, 0.04%)</title><rect x="198.5" y="627.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="201.5" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (1 samples, 0.04%)</title><rect x="198.5" y="611.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="201.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (1 samples, 0.04%)</title><rect x="198.5" y="595.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="201.5" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.04%)</title><rect x="198.5" y="579.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="201.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (1 samples, 0.04%)</title><rect x="198.5" y="563.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="201.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (1 samples, 0.04%)</title><rect x="198.5" y="547.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="201.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (3 samples, 0.11%)</title><rect x="198.9" y="723.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="201.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (3 samples, 0.11%)</title><rect x="198.9" y="707.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="201.9" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.11%)</title><rect x="198.9" y="691.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="201.9" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (3 samples, 0.11%)</title><rect x="198.9" y="675.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="201.9" y="686.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (3 samples, 0.11%)</title><rect x="198.9" y="659.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="201.9" y="670.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (3 samples, 0.11%)</title><rect x="198.9" y="643.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="201.9" y="654.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (3 samples, 0.11%)</title><rect x="198.9" y="627.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="201.9" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (2 samples, 0.07%)</title><rect x="198.9" y="611.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="201.9" y="622.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (2 samples, 0.07%)</title><rect x="198.9" y="595.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="201.9" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (2 samples, 0.07%)</title><rect x="198.9" y="579.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="201.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (2 samples, 0.07%)</title><rect x="198.9" y="563.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="201.9" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2 samples, 0.07%)</title><rect x="198.9" y="547.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="201.9" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$111/1835775400.accept (1 samples, 0.04%)</title><rect x="198.9" y="531.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="201.9" y="542.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.accept (1 samples, 0.04%)</title><rect x="198.9" y="515.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="201.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (1 samples, 0.04%)</title><rect x="199.4" y="531.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="202.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (1 samples, 0.04%)</title><rect x="199.4" y="515.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="202.4" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (1 samples, 0.04%)</title><rect x="199.8" y="611.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="202.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="199.8" y="595.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="202.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="199.8" y="579.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="202.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (19 samples, 0.69%)</title><rect x="200.2" y="723.0" width="8.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="203.2" y="734.0"></text>
</g>
<g>
<title>java/util/Collection.stream (19 samples, 0.69%)</title><rect x="200.2" y="707.0" width="8.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="203.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (18 samples, 0.66%)</title><rect x="200.2" y="691.0" width="7.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="203.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (17 samples, 0.62%)</title><rect x="200.6" y="675.0" width="7.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="203.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (17 samples, 0.62%)</title><rect x="200.6" y="659.0" width="7.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="203.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (1 samples, 0.04%)</title><rect x="201.5" y="643.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="204.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (1 samples, 0.04%)</title><rect x="201.5" y="627.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="204.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.04%)</title><rect x="201.5" y="611.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="204.5" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="201.5" y="595.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="204.5" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="201.5" y="579.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="204.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (14 samples, 0.51%)</title><rect x="201.9" y="643.0" width="6.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="204.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (14 samples, 0.51%)</title><rect x="201.9" y="627.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="204.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.04%)</title><rect x="201.9" y="611.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="204.9" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="201.9" y="595.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="204.9" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="201.9" y="579.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="204.9" y="590.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.04%)</title><rect x="201.9" y="563.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="204.9" y="574.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.04%)</title><rect x="201.9" y="547.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="204.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (13 samples, 0.47%)</title><rect x="202.4" y="611.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="205.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (5 samples, 0.18%)</title><rect x="205.8" y="595.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="208.8" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.15%)</title><rect x="206.2" y="579.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="209.2" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.15%)</title><rect x="206.2" y="563.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="209.2" y="574.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.07%)</title><rect x="206.2" y="547.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="209.2" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.04%)</title><rect x="206.2" y="531.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="209.2" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.04%)</title><rect x="206.2" y="515.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="209.2" y="526.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.04%)</title><rect x="206.7" y="531.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="209.7" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.07%)</title><rect x="207.1" y="547.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="210.1" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.04%)</title><rect x="207.1" y="531.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="210.1" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.04%)</title><rect x="207.5" y="531.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="210.5" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.04%)</title><rect x="208.0" y="691.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="211.0" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (1 samples, 0.04%)</title><rect x="208.0" y="675.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="211.0" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.04%)</title><rect x="208.0" y="659.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="211.0" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.04%)</title><rect x="208.0" y="643.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="211.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (3 samples, 0.11%)</title><rect x="208.4" y="755.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="211.4" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (2 samples, 0.07%)</title><rect x="208.4" y="739.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="211.4" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2 samples, 0.07%)</title><rect x="208.4" y="723.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="211.4" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (2 samples, 0.07%)</title><rect x="208.4" y="707.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="211.4" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (2 samples, 0.07%)</title><rect x="208.4" y="691.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="211.4" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (2 samples, 0.07%)</title><rect x="208.4" y="675.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="211.4" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2 samples, 0.07%)</title><rect x="208.4" y="659.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="211.4" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$125/991073477.apply (1 samples, 0.04%)</title><rect x="208.8" y="643.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="211.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (1 samples, 0.04%)</title><rect x="208.8" y="627.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="211.8" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (1 samples, 0.04%)</title><rect x="208.8" y="611.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="211.8" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.04%)</title><rect x="208.8" y="595.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="211.8" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.04%)</title><rect x="208.8" y="579.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="211.8" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="208.8" y="563.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="211.8" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="208.8" y="547.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="211.8" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="208.8" y="531.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="211.8" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="208.8" y="515.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="211.8" y="526.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (1 samples, 0.04%)</title><rect x="209.2" y="739.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="212.2" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="209.2" y="723.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="212.2" y="734.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="209.2" y="707.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="212.2" y="718.0"></text>
</g>
<g>
<title>[2020-highload-dht-thread-91 tid=22735] (232 samples, 8.46%)</title><rect x="209.7" y="883.0" width="99.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="212.7" y="894.0">[2020-highlo..</text>
</g>
<g>
<title>java/lang/Thread.run (232 samples, 8.46%)</title><rect x="209.7" y="867.0" width="99.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="212.7" y="878.0">java/lang/Th..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (232 samples, 8.46%)</title><rect x="209.7" y="851.0" width="99.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="212.7" y="862.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (232 samples, 8.46%)</title><rect x="209.7" y="835.0" width="99.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="212.7" y="846.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (63 samples, 2.30%)</title><rect x="209.7" y="819.0" width="27.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="212.7" y="830.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (62 samples, 2.26%)</title><rect x="210.1" y="803.0" width="26.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="213.1" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (53 samples, 1.93%)</title><rect x="210.5" y="787.0" width="22.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="213.5" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2 samples, 0.07%)</title><rect x="210.5" y="771.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="213.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.isHeldExclusively (1 samples, 0.04%)</title><rect x="211.0" y="755.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="214.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.04%)</title><rect x="211.4" y="771.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="214.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.04%)</title><rect x="211.4" y="755.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="214.4" y="766.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.04%)</title><rect x="211.4" y="739.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="214.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (3 samples, 0.11%)</title><rect x="211.8" y="771.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="214.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.11%)</title><rect x="211.8" y="755.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="214.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.11%)</title><rect x="211.8" y="739.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="214.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.11%)</title><rect x="211.8" y="723.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="214.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.11%)</title><rect x="211.8" y="707.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="214.8" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.11%)</title><rect x="211.8" y="691.0" width="1.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="214.8" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.11%)</title><rect x="211.8" y="675.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="214.8" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.11%)</title><rect x="211.8" y="659.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="214.8" y="670.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.11%)</title><rect x="211.8" y="643.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="214.8" y="654.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.11%)</title><rect x="211.8" y="627.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="214.8" y="638.0"></text>
</g>
<g>
<title>futex_wake_op (3 samples, 0.11%)</title><rect x="211.8" y="611.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="214.8" y="622.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.11%)</title><rect x="211.8" y="595.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="214.8" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.11%)</title><rect x="211.8" y="579.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="214.8" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.11%)</title><rect x="211.8" y="563.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="214.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (1 samples, 0.04%)</title><rect x="213.1" y="771.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="216.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (1 samples, 0.04%)</title><rect x="213.1" y="755.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="216.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (46 samples, 1.68%)</title><rect x="213.6" y="771.0" width="19.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="216.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (46 samples, 1.68%)</title><rect x="213.6" y="755.0" width="19.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="216.6" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (44 samples, 1.60%)</title><rect x="214.0" y="739.0" width="18.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="217.0" y="750.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.04%)</title><rect x="215.7" y="723.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="218.7" y="734.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (6 samples, 0.22%)</title><rect x="216.1" y="723.0" width="2.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="219.1" y="734.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.11%)</title><rect x="216.1" y="707.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="219.1" y="718.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="217.4" y="707.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="220.4" y="718.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.04%)</title><rect x="218.3" y="707.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="221.3" y="718.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="218.7" y="723.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="221.7" y="734.0"></text>
</g>
<g>
<title>__lll_unlock_wake (13 samples, 0.47%)</title><rect x="219.1" y="723.0" width="5.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="222.1" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.18%)</title><rect x="222.6" y="707.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="225.6" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.11%)</title><rect x="222.6" y="691.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="225.6" y="702.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.04%)</title><rect x="223.5" y="675.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="226.5" y="686.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="223.5" y="659.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="226.5" y="670.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="223.5" y="643.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="226.5" y="654.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.07%)</title><rect x="223.9" y="691.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="226.9" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_wait (18 samples, 0.66%)</title><rect x="224.7" y="723.0" width="7.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="227.7" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.47%)</title><rect x="226.9" y="707.0" width="5.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="229.9" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.47%)</title><rect x="226.9" y="691.0" width="5.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="229.9" y="702.0"></text>
</g>
<g>
<title>sys_futex (13 samples, 0.47%)</title><rect x="226.9" y="675.0" width="5.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="229.9" y="686.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.44%)</title><rect x="227.3" y="659.0" width="5.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="230.3" y="670.0"></text>
</g>
<g>
<title>futex_wait (12 samples, 0.44%)</title><rect x="227.3" y="643.0" width="5.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="230.3" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (11 samples, 0.40%)</title><rect x="227.3" y="627.0" width="4.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="230.3" y="638.0"></text>
</g>
<g>
<title>plist_add (2 samples, 0.07%)</title><rect x="227.3" y="611.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="230.3" y="622.0"></text>
</g>
<g>
<title>schedule (9 samples, 0.33%)</title><rect x="228.2" y="611.0" width="3.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="231.2" y="622.0"></text>
</g>
<g>
<title>__schedule (9 samples, 0.33%)</title><rect x="228.2" y="595.0" width="3.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="231.2" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (9 samples, 0.33%)</title><rect x="228.2" y="579.0" width="3.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="231.2" y="590.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.04%)</title><rect x="232.1" y="627.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="235.1" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="232.5" y="723.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="235.5" y="734.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.04%)</title><rect x="232.9" y="739.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="235.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.04%)</title><rect x="233.3" y="787.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="236.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.04%)</title><rect x="233.3" y="771.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="236.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.04%)</title><rect x="233.3" y="755.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="236.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.04%)</title><rect x="233.3" y="739.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="236.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.04%)</title><rect x="233.3" y="723.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="236.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.26%)</title><rect x="233.8" y="787.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="236.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.26%)</title><rect x="233.8" y="771.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="236.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.26%)</title><rect x="233.8" y="755.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="236.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.26%)</title><rect x="233.8" y="739.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="236.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.26%)</title><rect x="233.8" y="723.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="236.8" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.04%)</title><rect x="233.8" y="707.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="236.8" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.04%)</title><rect x="233.8" y="691.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="236.8" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.22%)</title><rect x="234.2" y="707.0" width="2.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="237.2" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.22%)</title><rect x="234.2" y="691.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="237.2" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.22%)</title><rect x="234.2" y="675.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="237.2" y="686.0"></text>
</g>
<g>
<title>sys_futex (6 samples, 0.22%)</title><rect x="234.2" y="659.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="237.2" y="670.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.22%)</title><rect x="234.2" y="643.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="237.2" y="654.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="234.2" y="627.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="237.2" y="638.0"></text>
</g>
<g>
<title>futex_wake_op (5 samples, 0.18%)</title><rect x="234.6" y="627.0" width="2.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="237.6" y="638.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.18%)</title><rect x="234.6" y="611.0" width="2.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="237.6" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.18%)</title><rect x="234.6" y="595.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="237.6" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.11%)</title><rect x="234.6" y="579.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="237.6" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.07%)</title><rect x="235.9" y="579.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="238.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$75/1549034997.run (169 samples, 6.16%)</title><rect x="236.8" y="819.0" width="72.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="239.8" y="830.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$get$1 (168 samples, 6.13%)</title><rect x="237.2" y="803.0" width="72.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="240.2" y="814.0">ru/mail/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.07%)</title><rect x="237.2" y="787.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="240.2" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.07%)</title><rect x="237.2" y="771.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="240.2" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.07%)</title><rect x="237.2" y="755.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="240.2" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.07%)</title><rect x="237.2" y="739.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="240.2" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.07%)</title><rect x="237.2" y="723.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="240.2" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (121 samples, 4.41%)</title><rect x="238.1" y="787.0" width="52.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="241.1" y="798.0">one/n..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.04%)</title><rect x="238.5" y="771.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="241.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="238.5" y="755.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="241.5" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="238.5" y="739.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="241.5" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (118 samples, 4.30%)</title><rect x="238.9" y="771.0" width="50.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="241.9" y="782.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.22%)</title><rect x="238.9" y="755.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="241.9" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.11%)</title><rect x="240.2" y="739.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="243.2" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.11%)</title><rect x="240.2" y="723.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="243.2" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.07%)</title><rect x="240.7" y="707.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="243.7" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (112 samples, 4.08%)</title><rect x="241.5" y="755.0" width="48.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="244.5" y="766.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (112 samples, 4.08%)</title><rect x="241.5" y="739.0" width="48.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="244.5" y="750.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (110 samples, 4.01%)</title><rect x="241.5" y="723.0" width="47.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="244.5" y="734.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (110 samples, 4.01%)</title><rect x="241.5" y="707.0" width="47.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="244.5" y="718.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.15%)</title><rect x="242.4" y="691.0" width="1.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="245.4" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="243.2" y="675.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="246.2" y="686.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="243.2" y="659.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="246.2" y="670.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.04%)</title><rect x="243.7" y="675.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="246.7" y="686.0"></text>
</g>
<g>
<title>send (103 samples, 3.76%)</title><rect x="244.1" y="691.0" width="44.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="247.1" y="702.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (98 samples, 3.57%)</title><rect x="246.3" y="675.0" width="42.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="249.3" y="686.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (98 samples, 3.57%)</title><rect x="246.3" y="659.0" width="42.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="249.3" y="670.0">do_s..</text>
</g>
<g>
<title>sys_sendto (97 samples, 3.54%)</title><rect x="246.7" y="643.0" width="41.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="249.7" y="654.0">sys..</text>
</g>
<g>
<title>SYSC_sendto (97 samples, 3.54%)</title><rect x="246.7" y="627.0" width="41.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="249.7" y="638.0">SYS..</text>
</g>
<g>
<title>sock_sendmsg (96 samples, 3.50%)</title><rect x="246.7" y="611.0" width="41.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="249.7" y="622.0">soc..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.04%)</title><rect x="246.7" y="595.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="249.7" y="606.0"></text>
</g>
<g>
<title>inet_sendmsg (92 samples, 3.36%)</title><rect x="247.1" y="595.0" width="39.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="250.1" y="606.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (92 samples, 3.36%)</title><rect x="247.1" y="579.0" width="39.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="250.1" y="590.0">tcp..</text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="247.1" y="563.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="250.1" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.04%)</title><rect x="247.1" y="547.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="250.1" y="558.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="247.1" y="531.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="250.1" y="542.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (90 samples, 3.28%)</title><rect x="247.5" y="563.0" width="38.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="250.5" y="574.0">tcp..</text>
</g>
<g>
<title>copyin (1 samples, 0.04%)</title><rect x="247.5" y="547.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="250.5" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (3 samples, 0.11%)</title><rect x="248.0" y="547.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="251.0" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.11%)</title><rect x="248.0" y="531.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="251.0" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.11%)</title><rect x="248.0" y="515.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="251.0" y="526.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.04%)</title><rect x="248.8" y="499.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="251.8" y="510.0"></text>
</g>
<g>
<title>tcp_push (85 samples, 3.10%)</title><rect x="249.3" y="547.0" width="36.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="252.3" y="558.0">tcp..</text>
</g>
<g>
<title>__tcp_push_pending_frames (85 samples, 3.10%)</title><rect x="249.3" y="531.0" width="36.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="252.3" y="542.0">__t..</text>
</g>
<g>
<title>tcp_write_xmit (85 samples, 3.10%)</title><rect x="249.3" y="515.0" width="36.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="252.3" y="526.0">tcp..</text>
</g>
<g>
<title>__tcp_transmit_skb (81 samples, 2.95%)</title><rect x="249.3" y="499.0" width="34.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="252.3" y="510.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (78 samples, 2.84%)</title><rect x="250.1" y="483.0" width="33.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="253.1" y="494.0">ip..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.04%)</title><rect x="251.4" y="467.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="254.4" y="478.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.04%)</title><rect x="251.4" y="451.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="254.4" y="462.0"></text>
</g>
<g>
<title>ip_local_out (73 samples, 2.66%)</title><rect x="251.9" y="467.0" width="31.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="254.9" y="478.0">ip..</text>
</g>
<g>
<title>__ip_local_out (12 samples, 0.44%)</title><rect x="251.9" y="451.0" width="5.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="254.9" y="462.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (1 samples, 0.04%)</title><rect x="251.9" y="435.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="254.9" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (1 samples, 0.04%)</title><rect x="252.3" y="435.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="255.3" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (10 samples, 0.36%)</title><rect x="252.7" y="435.0" width="4.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="255.7" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.07%)</title><rect x="253.1" y="419.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="256.1" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.07%)</title><rect x="253.1" y="403.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="256.1" y="414.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (1 samples, 0.04%)</title><rect x="254.0" y="419.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="257.0" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.04%)</title><rect x="254.0" y="403.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="257.0" y="414.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn?[iptable_nat] (1 samples, 0.04%)</title><rect x="254.4" y="419.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="257.4" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (1 samples, 0.04%)</title><rect x="254.4" y="403.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="257.4" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (1 samples, 0.04%)</title><rect x="254.4" y="387.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="257.4" y="398.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (1 samples, 0.04%)</title><rect x="254.4" y="371.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="257.4" y="382.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (5 samples, 0.18%)</title><rect x="254.9" y="419.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="257.9" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (5 samples, 0.18%)</title><rect x="254.9" y="403.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="257.9" y="414.0"></text>
</g>
<g>
<title>ipv4_get_l4proto?[nf_conntrack_ipv4] (1 samples, 0.04%)</title><rect x="255.3" y="387.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="258.3" y="398.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (2 samples, 0.07%)</title><rect x="255.7" y="387.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="258.7" y="398.0"></text>
</g>
<g>
<title>ipv4_pkt_to_tuple?[nf_conntrack_ipv4] (1 samples, 0.04%)</title><rect x="255.7" y="371.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="258.7" y="382.0"></text>
</g>
<g>
<title>tcp_pkt_to_tuple?[nf_conntrack] (1 samples, 0.04%)</title><rect x="256.2" y="371.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="259.2" y="382.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (1 samples, 0.04%)</title><rect x="256.6" y="387.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="259.6" y="398.0"></text>
</g>
<g>
<title>ip_output (61 samples, 2.22%)</title><rect x="257.0" y="451.0" width="26.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="260.0" y="462.0">i..</text>
</g>
<g>
<title>ip_finish_output (59 samples, 2.15%)</title><rect x="257.0" y="435.0" width="25.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="260.0" y="446.0">i..</text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.04%)</title><rect x="257.4" y="419.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="260.4" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (57 samples, 2.08%)</title><rect x="257.9" y="419.0" width="24.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="260.9" y="430.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (52 samples, 1.90%)</title><rect x="257.9" y="403.0" width="22.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="260.9" y="414.0">_..</text>
</g>
<g>
<title>do_softirq.part.17 (52 samples, 1.90%)</title><rect x="257.9" y="387.0" width="22.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="260.9" y="398.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (51 samples, 1.86%)</title><rect x="258.3" y="371.0" width="22.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="261.3" y="382.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (51 samples, 1.86%)</title><rect x="258.3" y="355.0" width="22.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="261.3" y="366.0">_..</text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.07%)</title><rect x="259.6" y="339.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="262.6" y="350.0"></text>
</g>
<g>
<title>net_rx_action (46 samples, 1.68%)</title><rect x="260.5" y="339.0" width="19.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="263.5" y="350.0"></text>
</g>
<g>
<title>process_backlog (46 samples, 1.68%)</title><rect x="260.5" y="323.0" width="19.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="263.5" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb (46 samples, 1.68%)</title><rect x="260.5" y="307.0" width="19.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="263.5" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (46 samples, 1.68%)</title><rect x="260.5" y="291.0" width="19.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="263.5" y="302.0"></text>
</g>
<g>
<title>ip_rcv (46 samples, 1.68%)</title><rect x="260.5" y="275.0" width="19.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="263.5" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (44 samples, 1.60%)</title><rect x="260.5" y="259.0" width="18.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="263.5" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (44 samples, 1.60%)</title><rect x="260.5" y="243.0" width="18.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="263.5" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (41 samples, 1.50%)</title><rect x="260.5" y="227.0" width="17.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="263.5" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (40 samples, 1.46%)</title><rect x="260.9" y="211.0" width="17.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="263.9" y="222.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.07%)</title><rect x="261.8" y="195.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="264.8" y="206.0"></text>
</g>
<g>
<title>__xfrm_policy_check2.constprop.33 (2 samples, 0.07%)</title><rect x="262.6" y="195.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="265.6" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.11%)</title><rect x="263.5" y="195.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="266.5" y="206.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (2 samples, 0.07%)</title><rect x="263.5" y="179.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="266.5" y="190.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.04%)</title><rect x="264.3" y="179.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="267.3" y="190.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (1 samples, 0.04%)</title><rect x="264.8" y="195.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="267.8" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (30 samples, 1.09%)</title><rect x="265.2" y="195.0" width="12.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="268.2" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (30 samples, 1.09%)</title><rect x="265.2" y="179.0" width="12.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="268.2" y="190.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.04%)</title><rect x="265.6" y="163.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="268.6" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.04%)</title><rect x="265.6" y="147.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="268.6" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="265.6" y="131.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="268.6" y="142.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="265.6" y="115.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="268.6" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="265.6" y="99.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="268.6" y="110.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.04%)</title><rect x="266.1" y="163.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="269.1" y="174.0"></text>
</g>
<g>
<title>tcp_ack (7 samples, 0.26%)</title><rect x="266.5" y="163.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="269.5" y="174.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.04%)</title><rect x="267.3" y="147.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="270.3" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (3 samples, 0.11%)</title><rect x="267.8" y="147.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="270.8" y="158.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.41 (2 samples, 0.07%)</title><rect x="268.2" y="131.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="271.2" y="142.0"></text>
</g>
<g>
<title>minmax_running_min (1 samples, 0.04%)</title><rect x="268.6" y="115.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="271.6" y="126.0"></text>
</g>
<g>
<title>minmax_subwin_update (1 samples, 0.04%)</title><rect x="268.6" y="99.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="271.6" y="110.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.04%)</title><rect x="269.1" y="147.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="272.1" y="158.0"></text>
</g>
<g>
<title>tcp_data_queue (18 samples, 0.66%)</title><rect x="269.5" y="163.0" width="7.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="272.5" y="174.0"></text>
</g>
<g>
<title>dst_release (3 samples, 0.11%)</title><rect x="269.5" y="147.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="272.5" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (14 samples, 0.51%)</title><rect x="270.8" y="147.0" width="6.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="273.8" y="158.0"></text>
</g>
<g>
<title>__wake_up_sync_key (14 samples, 0.51%)</title><rect x="270.8" y="131.0" width="6.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="273.8" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (14 samples, 0.51%)</title><rect x="270.8" y="115.0" width="6.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="273.8" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (14 samples, 0.51%)</title><rect x="270.8" y="99.0" width="6.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="273.8" y="110.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.04%)</title><rect x="276.8" y="147.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="279.8" y="158.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.04%)</title><rect x="277.2" y="163.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="280.2" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.04%)</title><rect x="277.7" y="163.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="280.7" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.07%)</title><rect x="278.1" y="227.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="281.1" y="238.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.07%)</title><rect x="278.1" y="211.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="281.1" y="222.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.07%)</title><rect x="278.1" y="195.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="281.1" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.04%)</title><rect x="279.0" y="227.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="282.0" y="238.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.07%)</title><rect x="279.4" y="259.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="282.4" y="270.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (1 samples, 0.04%)</title><rect x="279.4" y="243.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="282.4" y="254.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.04%)</title><rect x="279.4" y="227.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="282.4" y="238.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat_ipv4] (1 samples, 0.04%)</title><rect x="279.8" y="243.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="282.8" y="254.0"></text>
</g>
<g>
<title>dev_queue_xmit (5 samples, 0.18%)</title><rect x="280.3" y="403.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="283.3" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.18%)</title><rect x="280.3" y="387.0" width="2.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="283.3" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="281.1" y="371.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="284.1" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.04%)</title><rect x="281.5" y="371.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="284.5" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.04%)</title><rect x="281.5" y="355.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="284.5" y="366.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.04%)</title><rect x="281.5" y="339.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="284.5" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.04%)</title><rect x="282.0" y="371.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="285.0" y="382.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.07%)</title><rect x="282.4" y="435.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="285.4" y="446.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (1 samples, 0.04%)</title><rect x="282.8" y="419.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="285.8" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.04%)</title><rect x="282.8" y="403.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="285.8" y="414.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.04%)</title><rect x="283.3" y="467.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="286.3" y="478.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.04%)</title><rect x="283.7" y="483.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="286.7" y="494.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.04%)</title><rect x="283.7" y="467.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="286.7" y="478.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (2 samples, 0.07%)</title><rect x="284.1" y="499.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="287.1" y="510.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.04%)</title><rect x="285.0" y="499.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="288.0" y="510.0"></text>
</g>
<g>
<title>tcp_tso_segs (1 samples, 0.04%)</title><rect x="285.4" y="499.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="288.4" y="510.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.04%)</title><rect x="285.8" y="547.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="288.8" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.04%)</title><rect x="285.8" y="531.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="288.8" y="542.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="285.8" y="515.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="288.8" y="526.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.04%)</title><rect x="286.3" y="563.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="289.3" y="574.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.04%)</title><rect x="286.7" y="595.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="289.7" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.04%)</title><rect x="286.7" y="579.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="289.7" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.04%)</title><rect x="286.7" y="563.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="289.7" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.07%)</title><rect x="287.1" y="595.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="290.1" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="288.0" y="611.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="291.0" y="622.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="288.0" y="595.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="291.0" y="606.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="288.0" y="579.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="291.0" y="590.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="288.0" y="563.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="291.0" y="574.0"></text>
</g>
<g>
<title>send@plt (1 samples, 0.04%)</title><rect x="288.4" y="691.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="291.4" y="702.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.07%)</title><rect x="288.9" y="723.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="291.9" y="734.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="288.9" y="707.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="291.9" y="718.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="289.3" y="707.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="292.3" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="289.7" y="771.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="292.7" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (45 samples, 1.64%)</title><rect x="290.2" y="787.0" width="19.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="293.2" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (4 samples, 0.15%)</title><rect x="290.2" y="771.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="293.2" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (4 samples, 0.15%)</title><rect x="290.2" y="755.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="293.2" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (4 samples, 0.15%)</title><rect x="290.2" y="739.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="293.2" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (4 samples, 0.15%)</title><rect x="290.2" y="723.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="293.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4 samples, 0.15%)</title><rect x="290.2" y="707.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="293.2" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.15%)</title><rect x="290.2" y="691.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="293.2" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (3 samples, 0.11%)</title><rect x="290.2" y="675.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="293.2" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (3 samples, 0.11%)</title><rect x="290.2" y="659.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="293.2" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (3 samples, 0.11%)</title><rect x="290.2" y="643.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="293.2" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (3 samples, 0.11%)</title><rect x="290.2" y="627.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="293.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3 samples, 0.11%)</title><rect x="290.2" y="611.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="293.2" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.11%)</title><rect x="290.2" y="595.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="293.2" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (3 samples, 0.11%)</title><rect x="290.2" y="579.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="293.2" y="590.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (3 samples, 0.11%)</title><rect x="290.2" y="563.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="293.2" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (3 samples, 0.11%)</title><rect x="290.2" y="547.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="293.2" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (3 samples, 0.11%)</title><rect x="290.2" y="531.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="293.2" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (2 samples, 0.07%)</title><rect x="290.6" y="515.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="293.6" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (2 samples, 0.07%)</title><rect x="290.6" y="499.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="293.6" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (2 samples, 0.07%)</title><rect x="290.6" y="483.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="293.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (2 samples, 0.07%)</title><rect x="290.6" y="467.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="293.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.04%)</title><rect x="290.6" y="451.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="293.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.04%)</title><rect x="290.6" y="435.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="293.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (1 samples, 0.04%)</title><rect x="290.6" y="419.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="293.6" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.04%)</title><rect x="291.0" y="451.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="294.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (1 samples, 0.04%)</title><rect x="291.0" y="435.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="294.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (1 samples, 0.04%)</title><rect x="291.0" y="419.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="294.0" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.04%)</title><rect x="291.0" y="403.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="294.0" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.04%)</title><rect x="291.0" y="387.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="294.0" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="291.0" y="371.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="294.0" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="291.0" y="355.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="294.0" y="366.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="291.0" y="339.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="294.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.04%)</title><rect x="291.4" y="675.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="294.4" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (1 samples, 0.04%)</title><rect x="291.4" y="659.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="294.4" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.04%)</title><rect x="291.4" y="643.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="294.4" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.04%)</title><rect x="291.4" y="627.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="294.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Value.isExpired (1 samples, 0.04%)</title><rect x="291.4" y="611.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="294.4" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.04%)</title><rect x="291.9" y="771.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="294.9" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (1 samples, 0.04%)</title><rect x="291.9" y="755.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="294.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$191/1599205169.apply (1 samples, 0.04%)</title><rect x="291.9" y="739.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="294.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$3 (1 samples, 0.04%)</title><rect x="291.9" y="723.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="294.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (1 samples, 0.04%)</title><rect x="291.9" y="707.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="294.9" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (1 samples, 0.04%)</title><rect x="291.9" y="691.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="294.9" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.04%)</title><rect x="291.9" y="675.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="294.9" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.04%)</title><rect x="291.9" y="659.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="294.9" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="291.9" y="643.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="294.9" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="291.9" y="627.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="294.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (40 samples, 1.46%)</title><rect x="292.3" y="771.0" width="17.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="295.3" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.04%)</title><rect x="292.7" y="755.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="295.7" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="292.7" y="739.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="295.7" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="292.7" y="723.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="295.7" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="292.7" y="707.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="295.7" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="292.7" y="691.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="295.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (30 samples, 1.09%)</title><rect x="293.2" y="755.0" width="12.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="296.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (30 samples, 1.09%)</title><rect x="293.2" y="739.0" width="12.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="296.2" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (3 samples, 0.11%)</title><rect x="294.5" y="723.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="297.5" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2 samples, 0.07%)</title><rect x="294.5" y="707.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="297.5" y="718.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1 samples, 0.04%)</title><rect x="294.9" y="691.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="297.9" y="702.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1 samples, 0.04%)</title><rect x="294.9" y="675.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="297.9" y="686.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1 samples, 0.04%)</title><rect x="294.9" y="659.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="297.9" y="670.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (1 samples, 0.04%)</title><rect x="294.9" y="643.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="297.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (1 samples, 0.04%)</title><rect x="295.3" y="707.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="298.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (1 samples, 0.04%)</title><rect x="295.3" y="691.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="298.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (1 samples, 0.04%)</title><rect x="295.3" y="675.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="298.3" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.04%)</title><rect x="295.3" y="659.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="298.3" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (1 samples, 0.04%)</title><rect x="295.3" y="643.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="298.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (1 samples, 0.04%)</title><rect x="295.3" y="627.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="298.3" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.04%)</title><rect x="295.3" y="611.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="298.3" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.04%)</title><rect x="295.3" y="595.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="298.3" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="295.3" y="579.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="298.3" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="295.3" y="563.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="298.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.04%)</title><rect x="295.7" y="723.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="298.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.04%)</title><rect x="295.7" y="707.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="298.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.04%)</title><rect x="295.7" y="691.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="298.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$NonfairSync.readerShouldBlock (1 samples, 0.04%)</title><rect x="295.7" y="675.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="298.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.apparentlyFirstQueuedIsExclusive (1 samples, 0.04%)</title><rect x="295.7" y="659.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="298.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (1 samples, 0.04%)</title><rect x="296.2" y="723.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="299.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (1 samples, 0.04%)</title><rect x="296.2" y="707.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="299.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared (1 samples, 0.04%)</title><rect x="296.2" y="691.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="299.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (22 samples, 0.80%)</title><rect x="296.6" y="723.0" width="9.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="299.6" y="734.0"></text>
</g>
<g>
<title>java/util/Collection.stream (22 samples, 0.80%)</title><rect x="296.6" y="707.0" width="9.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="299.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (21 samples, 0.77%)</title><rect x="296.6" y="691.0" width="9.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="299.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (21 samples, 0.77%)</title><rect x="296.6" y="675.0" width="9.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="299.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (21 samples, 0.77%)</title><rect x="296.6" y="659.0" width="9.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="299.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (21 samples, 0.77%)</title><rect x="296.6" y="643.0" width="9.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="299.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (21 samples, 0.77%)</title><rect x="296.6" y="627.0" width="9.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="299.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.04%)</title><rect x="296.6" y="611.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="299.6" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="296.6" y="595.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="299.6" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="296.6" y="579.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="299.6" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.04%)</title><rect x="296.6" y="563.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="299.6" y="574.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.04%)</title><rect x="296.6" y="547.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="299.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (20 samples, 0.73%)</title><rect x="297.0" y="611.0" width="8.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="300.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (12 samples, 0.44%)</title><rect x="300.5" y="595.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="303.5" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.33%)</title><rect x="301.8" y="579.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="304.8" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.26%)</title><rect x="302.6" y="563.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="305.6" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.07%)</title><rect x="302.6" y="547.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="305.6" y="558.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.04%)</title><rect x="303.1" y="531.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="306.1" y="542.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.15%)</title><rect x="303.5" y="547.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="306.5" y="558.0"></text>
</g>
<g>
<title>vectorizedMismatch (2 samples, 0.07%)</title><rect x="304.4" y="531.0" width="0.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="307.4" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.04%)</title><rect x="305.2" y="547.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="308.2" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.04%)</title><rect x="305.2" y="531.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="308.2" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.04%)</title><rect x="305.6" y="691.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="308.6" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (1 samples, 0.04%)</title><rect x="305.6" y="675.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="308.6" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.04%)</title><rect x="305.6" y="659.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="308.6" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.04%)</title><rect x="305.6" y="643.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="308.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (8 samples, 0.29%)</title><rect x="306.1" y="755.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="309.1" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (7 samples, 0.26%)</title><rect x="306.1" y="739.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="309.1" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (7 samples, 0.26%)</title><rect x="306.1" y="723.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="309.1" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (7 samples, 0.26%)</title><rect x="306.1" y="707.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="309.1" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (7 samples, 0.26%)</title><rect x="306.1" y="691.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="309.1" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (7 samples, 0.26%)</title><rect x="306.1" y="675.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="309.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (7 samples, 0.26%)</title><rect x="306.1" y="659.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="309.1" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7 samples, 0.26%)</title><rect x="306.1" y="643.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="309.1" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (5 samples, 0.18%)</title><rect x="306.1" y="627.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="309.1" y="638.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (5 samples, 0.18%)</title><rect x="306.1" y="611.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="309.1" y="622.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (5 samples, 0.18%)</title><rect x="306.1" y="595.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="309.1" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (5 samples, 0.18%)</title><rect x="306.1" y="579.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="309.1" y="590.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (2 samples, 0.07%)</title><rect x="306.1" y="563.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="309.1" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (2 samples, 0.07%)</title><rect x="306.1" y="547.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="309.1" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (2 samples, 0.07%)</title><rect x="306.1" y="531.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="309.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (2 samples, 0.07%)</title><rect x="306.1" y="515.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="309.1" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2 samples, 0.07%)</title><rect x="306.1" y="499.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="309.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (2 samples, 0.07%)</title><rect x="306.1" y="483.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="309.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (2 samples, 0.07%)</title><rect x="306.1" y="467.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="309.1" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (3 samples, 0.11%)</title><rect x="306.9" y="563.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="309.9" y="574.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.04%)</title><rect x="306.9" y="547.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="309.9" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (1 samples, 0.04%)</title><rect x="306.9" y="531.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="309.9" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.&lt;init&gt; (1 samples, 0.04%)</title><rect x="306.9" y="515.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="309.9" y="526.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (1 samples, 0.04%)</title><rect x="306.9" y="499.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="309.9" y="510.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.04%)</title><rect x="306.9" y="483.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="309.9" y="494.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (2 samples, 0.07%)</title><rect x="307.4" y="547.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="310.4" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractSpinedBuffer.&lt;init&gt; (2 samples, 0.07%)</title><rect x="307.4" y="531.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="310.4" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (2 samples, 0.07%)</title><rect x="308.2" y="627.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="311.2" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (2 samples, 0.07%)</title><rect x="308.2" y="611.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="311.2" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (2 samples, 0.07%)</title><rect x="308.2" y="595.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="311.2" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (2 samples, 0.07%)</title><rect x="308.2" y="579.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="311.2" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1 samples, 0.04%)</title><rect x="308.7" y="563.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="311.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.04%)</title><rect x="308.7" y="547.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="311.7" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="308.7" y="531.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="311.7" y="542.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="309.1" y="739.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="312.1" y="750.0"></text>
</g>
<g>
<title>[2020-highload-dht-thread-93 tid=30294] (231 samples, 8.42%)</title><rect x="309.5" y="883.0" width="99.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="312.5" y="894.0">[2020-highlo..</text>
</g>
<g>
<title>java/lang/Thread.run (231 samples, 8.42%)</title><rect x="309.5" y="867.0" width="99.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="312.5" y="878.0">java/lang/Th..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (231 samples, 8.42%)</title><rect x="309.5" y="851.0" width="99.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="312.5" y="862.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (231 samples, 8.42%)</title><rect x="309.5" y="835.0" width="99.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="312.5" y="846.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (70 samples, 2.55%)</title><rect x="309.5" y="819.0" width="30.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="312.5" y="830.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (67 samples, 2.44%)</title><rect x="310.4" y="803.0" width="28.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="313.4" y="814.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.dequeue (2 samples, 0.07%)</title><rect x="310.8" y="787.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="313.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (53 samples, 1.93%)</title><rect x="311.7" y="787.0" width="22.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="314.7" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.04%)</title><rect x="311.7" y="771.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="314.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.07%)</title><rect x="312.1" y="771.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="315.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.07%)</title><rect x="312.1" y="755.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="315.1" y="766.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (2 samples, 0.07%)</title><rect x="312.1" y="739.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="315.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.04%)</title><rect x="313.0" y="771.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="316.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.04%)</title><rect x="313.0" y="755.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="316.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.04%)</title><rect x="313.0" y="739.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="316.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.04%)</title><rect x="313.0" y="723.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="316.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.04%)</title><rect x="313.0" y="707.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="316.0" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.04%)</title><rect x="313.0" y="691.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="316.0" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="313.0" y="675.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="316.0" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="313.0" y="659.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="316.0" y="670.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.04%)</title><rect x="313.0" y="643.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="316.0" y="654.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="313.0" y="627.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="316.0" y="638.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="313.0" y="611.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="316.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (49 samples, 1.79%)</title><rect x="313.4" y="771.0" width="21.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="316.4" y="782.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (49 samples, 1.79%)</title><rect x="313.4" y="755.0" width="21.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="316.4" y="766.0">j..</text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.04%)</title><rect x="316.0" y="739.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="319.0" y="750.0"></text>
</g>
<g>
<title>Unsafe_Park (42 samples, 1.53%)</title><rect x="316.4" y="739.0" width="18.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="319.4" y="750.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (8 samples, 0.29%)</title><rect x="319.0" y="723.0" width="3.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="322.0" y="734.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.07%)</title><rect x="319.8" y="707.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="322.8" y="718.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.07%)</title><rect x="320.7" y="707.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="323.7" y="718.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="321.6" y="707.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="324.6" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.228] (1 samples, 0.04%)</title><rect x="322.4" y="723.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="325.4" y="734.0"></text>
</g>
<g>
<title>__lll_unlock_wake (4 samples, 0.15%)</title><rect x="322.9" y="723.0" width="1.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="325.9" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.07%)</title><rect x="323.7" y="707.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="326.7" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.07%)</title><rect x="323.7" y="691.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="326.7" y="702.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.04%)</title><rect x="324.2" y="675.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="327.2" y="686.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="324.2" y="659.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="327.2" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_wait (21 samples, 0.77%)</title><rect x="324.6" y="723.0" width="9.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="327.6" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.55%)</title><rect x="327.2" y="707.0" width="6.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="330.2" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.55%)</title><rect x="327.2" y="691.0" width="6.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="330.2" y="702.0"></text>
</g>
<g>
<title>sys_futex (13 samples, 0.47%)</title><rect x="328.0" y="675.0" width="5.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="331.0" y="686.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.44%)</title><rect x="328.5" y="659.0" width="5.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="331.5" y="670.0"></text>
</g>
<g>
<title>futex_wait (12 samples, 0.44%)</title><rect x="328.5" y="643.0" width="5.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="331.5" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (7 samples, 0.26%)</title><rect x="329.3" y="627.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="332.3" y="638.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.04%)</title><rect x="329.7" y="611.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="332.7" y="622.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.18%)</title><rect x="330.2" y="611.0" width="2.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="333.2" y="622.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.18%)</title><rect x="330.2" y="595.0" width="2.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="333.2" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 0.18%)</title><rect x="330.2" y="579.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="333.2" y="590.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.11%)</title><rect x="332.3" y="627.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="335.3" y="638.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.9 (1 samples, 0.04%)</title><rect x="333.2" y="611.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="336.2" y="622.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.04%)</title><rect x="333.6" y="723.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="336.6" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="334.0" y="723.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="337.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.04%)</title><rect x="334.5" y="787.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="337.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.04%)</title><rect x="334.5" y="771.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="337.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.04%)</title><rect x="334.5" y="755.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="337.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.04%)</title><rect x="334.5" y="739.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="337.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.04%)</title><rect x="334.5" y="723.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="337.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 0.36%)</title><rect x="334.9" y="787.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="337.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.36%)</title><rect x="334.9" y="771.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="337.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.36%)</title><rect x="334.9" y="755.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="337.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.36%)</title><rect x="334.9" y="739.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="337.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.36%)</title><rect x="334.9" y="723.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="337.9" y="734.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.04%)</title><rect x="334.9" y="707.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="337.9" y="718.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.15%)</title><rect x="335.3" y="707.0" width="1.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="338.3" y="718.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="335.3" y="691.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="338.3" y="702.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.04%)</title><rect x="335.8" y="691.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="338.8" y="702.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.04%)</title><rect x="336.2" y="691.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="339.2" y="702.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.04%)</title><rect x="336.6" y="691.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="339.6" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.18%)</title><rect x="337.1" y="707.0" width="2.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="340.1" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.15%)</title><rect x="337.5" y="691.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="340.5" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.15%)</title><rect x="337.5" y="675.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="340.5" y="686.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.15%)</title><rect x="337.5" y="659.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="340.5" y="670.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.15%)</title><rect x="337.5" y="643.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="340.5" y="654.0"></text>
</g>
<g>
<title>futex_wake_op (4 samples, 0.15%)</title><rect x="337.5" y="627.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="340.5" y="638.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.15%)</title><rect x="337.5" y="611.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="340.5" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.15%)</title><rect x="337.5" y="595.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="340.5" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.15%)</title><rect x="337.5" y="579.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="340.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (1 samples, 0.04%)</title><rect x="339.2" y="803.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="342.2" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$75/1549034997.run (161 samples, 5.87%)</title><rect x="339.6" y="819.0" width="69.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="342.6" y="830.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$get$1 (161 samples, 5.87%)</title><rect x="339.6" y="803.0" width="69.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="342.6" y="814.0">ru/mail..</text>
</g>
<g>
<title>java/lang/String.isBlank (1 samples, 0.04%)</title><rect x="339.6" y="787.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="342.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (108 samples, 3.94%)</title><rect x="340.1" y="787.0" width="46.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="343.1" y="798.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (107 samples, 3.90%)</title><rect x="340.5" y="771.0" width="46.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="343.5" y="782.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.22%)</title><rect x="340.5" y="755.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="343.5" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.04%)</title><rect x="340.9" y="739.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="343.9" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="340.9" y="723.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="343.9" y="734.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.04%)</title><rect x="340.9" y="707.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="343.9" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="340.9" y="691.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="343.9" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="340.9" y="675.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="343.9" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="340.9" y="659.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="343.9" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.04%)</title><rect x="340.9" y="643.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="343.9" y="654.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.04%)</title><rect x="340.9" y="627.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="343.9" y="638.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.04%)</title><rect x="340.9" y="611.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="343.9" y="622.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (1 samples, 0.04%)</title><rect x="340.9" y="595.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="343.9" y="606.0"></text>
</g>
<g>
<title>MasterFreeRegionListMtSafeChecker::check() (1 samples, 0.04%)</title><rect x="340.9" y="579.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="343.9" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.15%)</title><rect x="341.4" y="739.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="344.4" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.11%)</title><rect x="341.4" y="723.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="344.4" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="342.7" y="723.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="345.7" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="342.7" y="707.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="345.7" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="342.7" y="691.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="345.7" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (101 samples, 3.68%)</title><rect x="343.1" y="755.0" width="43.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="346.1" y="766.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (101 samples, 3.68%)</title><rect x="343.1" y="739.0" width="43.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="346.1" y="750.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (101 samples, 3.68%)</title><rect x="343.1" y="723.0" width="43.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="346.1" y="734.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (101 samples, 3.68%)</title><rect x="343.1" y="707.0" width="43.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="346.1" y="718.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.07%)</title><rect x="343.9" y="691.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="346.9" y="702.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="344.4" y="675.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="347.4" y="686.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.04%)</title><rect x="344.8" y="691.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="347.8" y="702.0"></text>
</g>
<g>
<title>send (96 samples, 3.50%)</title><rect x="345.2" y="691.0" width="41.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="348.2" y="702.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (90 samples, 3.28%)</title><rect x="347.8" y="675.0" width="38.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="350.8" y="686.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (90 samples, 3.28%)</title><rect x="347.8" y="659.0" width="38.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="350.8" y="670.0">do_..</text>
</g>
<g>
<title>sys_sendto (87 samples, 3.17%)</title><rect x="349.1" y="643.0" width="37.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="352.1" y="654.0">sys..</text>
</g>
<g>
<title>SYSC_sendto (87 samples, 3.17%)</title><rect x="349.1" y="627.0" width="37.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="352.1" y="638.0">SYS..</text>
</g>
<g>
<title>sock_sendmsg (84 samples, 3.06%)</title><rect x="349.1" y="611.0" width="36.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="352.1" y="622.0">soc..</text>
</g>
<g>
<title>inet_sendmsg (83 samples, 3.03%)</title><rect x="349.1" y="595.0" width="35.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="352.1" y="606.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (82 samples, 2.99%)</title><rect x="349.5" y="579.0" width="35.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="352.5" y="590.0">tcp..</text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="349.5" y="563.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="352.5" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (81 samples, 2.95%)</title><rect x="350.0" y="563.0" width="34.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="353.0" y="574.0">tc..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.04%)</title><rect x="350.0" y="547.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="353.0" y="558.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="350.0" y="531.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="353.0" y="542.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.04%)</title><rect x="350.4" y="547.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="353.4" y="558.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.04%)</title><rect x="350.4" y="531.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="353.4" y="542.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (5 samples, 0.18%)</title><rect x="350.8" y="547.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="353.8" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.15%)</title><rect x="351.3" y="531.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="354.3" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (1 samples, 0.04%)</title><rect x="351.3" y="515.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="354.3" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.04%)</title><rect x="351.3" y="499.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="354.3" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.11%)</title><rect x="351.7" y="515.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="354.7" y="526.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.07%)</title><rect x="352.1" y="499.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="355.1" y="510.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.07%)</title><rect x="353.0" y="547.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="356.0" y="558.0"></text>
</g>
<g>
<title>tcp_push (68 samples, 2.48%)</title><rect x="353.8" y="547.0" width="29.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="356.8" y="558.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (67 samples, 2.44%)</title><rect x="353.8" y="531.0" width="28.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="356.8" y="542.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (67 samples, 2.44%)</title><rect x="353.8" y="515.0" width="28.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="356.8" y="526.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (66 samples, 2.41%)</title><rect x="353.8" y="499.0" width="28.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="356.8" y="510.0">__..</text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.04%)</title><rect x="355.1" y="483.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="358.1" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (59 samples, 2.15%)</title><rect x="355.6" y="483.0" width="25.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="358.6" y="494.0">i..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.04%)</title><rect x="355.6" y="467.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="358.6" y="478.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.04%)</title><rect x="355.6" y="451.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="358.6" y="462.0"></text>
</g>
<g>
<title>ip_local_out (57 samples, 2.08%)</title><rect x="356.0" y="467.0" width="24.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="359.0" y="478.0">i..</text>
</g>
<g>
<title>__ip_local_out (16 samples, 0.58%)</title><rect x="356.0" y="451.0" width="6.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="359.0" y="462.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.04%)</title><rect x="356.0" y="435.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="359.0" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (1 samples, 0.04%)</title><rect x="356.4" y="435.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="359.4" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (14 samples, 0.51%)</title><rect x="356.9" y="435.0" width="6.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="359.9" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (3 samples, 0.11%)</title><rect x="357.3" y="419.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="360.3" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (3 samples, 0.11%)</title><rect x="357.3" y="403.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="360.3" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (10 samples, 0.36%)</title><rect x="358.6" y="419.0" width="4.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="361.6" y="430.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (1 samples, 0.04%)</title><rect x="358.6" y="403.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="361.6" y="414.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (1 samples, 0.04%)</title><rect x="359.0" y="403.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="362.0" y="414.0"></text>
</g>
<g>
<title>ipv4_get_l4proto?[nf_conntrack_ipv4] (1 samples, 0.04%)</title><rect x="359.4" y="403.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="362.4" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (6 samples, 0.22%)</title><rect x="359.9" y="403.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="362.9" y="414.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (2 samples, 0.07%)</title><rect x="360.3" y="387.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="363.3" y="398.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (3 samples, 0.11%)</title><rect x="361.2" y="387.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="364.2" y="398.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct?[nf_conntrack] (1 samples, 0.04%)</title><rect x="361.2" y="371.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="364.2" y="382.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (2 samples, 0.07%)</title><rect x="361.6" y="371.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="364.6" y="382.0"></text>
</g>
<g>
<title>tcp_error?[nf_conntrack] (1 samples, 0.04%)</title><rect x="362.5" y="403.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="365.5" y="414.0"></text>
</g>
<g>
<title>ip_output (39 samples, 1.42%)</title><rect x="362.9" y="451.0" width="16.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="365.9" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (39 samples, 1.42%)</title><rect x="362.9" y="435.0" width="16.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="365.9" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (39 samples, 1.42%)</title><rect x="362.9" y="419.0" width="16.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="365.9" y="430.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (33 samples, 1.20%)</title><rect x="362.9" y="403.0" width="14.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="365.9" y="414.0"></text>
</g>
<g>
<title>do_softirq.part.17 (33 samples, 1.20%)</title><rect x="362.9" y="387.0" width="14.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="365.9" y="398.0"></text>
</g>
<g>
<title>do_softirq_own_stack (33 samples, 1.20%)</title><rect x="362.9" y="371.0" width="14.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="365.9" y="382.0"></text>
</g>
<g>
<title>__softirqentry_text_start (33 samples, 1.20%)</title><rect x="362.9" y="355.0" width="14.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="365.9" y="366.0"></text>
</g>
<g>
<title>net_rx_action (33 samples, 1.20%)</title><rect x="362.9" y="339.0" width="14.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="365.9" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.04%)</title><rect x="362.9" y="323.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="365.9" y="334.0"></text>
</g>
<g>
<title>process_backlog (32 samples, 1.17%)</title><rect x="363.3" y="323.0" width="13.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="366.3" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb (32 samples, 1.17%)</title><rect x="363.3" y="307.0" width="13.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="366.3" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (31 samples, 1.13%)</title><rect x="363.7" y="291.0" width="13.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="366.7" y="302.0"></text>
</g>
<g>
<title>ip_rcv (29 samples, 1.06%)</title><rect x="364.6" y="275.0" width="12.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="367.6" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.04%)</title><rect x="364.6" y="259.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="367.6" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (25 samples, 0.91%)</title><rect x="365.0" y="259.0" width="10.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="368.0" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (25 samples, 0.91%)</title><rect x="365.0" y="243.0" width="10.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="368.0" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (21 samples, 0.77%)</title><rect x="365.0" y="227.0" width="9.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="368.0" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (20 samples, 0.73%)</title><rect x="365.5" y="211.0" width="8.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="368.5" y="222.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.04%)</title><rect x="365.5" y="195.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="368.5" y="206.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.04%)</title><rect x="365.5" y="179.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="368.5" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (19 samples, 0.69%)</title><rect x="365.9" y="195.0" width="8.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="368.9" y="206.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.04%)</title><rect x="365.9" y="179.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="368.9" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (18 samples, 0.66%)</title><rect x="366.3" y="179.0" width="7.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="369.3" y="190.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.04%)</title><rect x="366.8" y="163.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="369.8" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.04%)</title><rect x="366.8" y="147.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="369.8" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="366.8" y="131.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="369.8" y="142.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.04%)</title><rect x="366.8" y="115.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="369.8" y="126.0"></text>
</g>
<g>
<title>tcp_ack (5 samples, 0.18%)</title><rect x="367.2" y="163.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="370.2" y="174.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (4 samples, 0.15%)</title><rect x="367.6" y="147.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="370.6" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.07%)</title><rect x="367.6" y="131.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="370.6" y="142.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.07%)</title><rect x="367.6" y="115.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="370.6" y="126.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="367.6" y="99.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="370.6" y="110.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.04%)</title><rect x="367.6" y="83.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="370.6" y="94.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.04%)</title><rect x="368.0" y="99.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="371.0" y="110.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.04%)</title><rect x="368.5" y="131.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="371.5" y="142.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.04%)</title><rect x="368.9" y="131.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="371.9" y="142.0"></text>
</g>
<g>
<title>tcp_data_queue (11 samples, 0.40%)</title><rect x="369.3" y="163.0" width="4.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="372.3" y="174.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.04%)</title><rect x="369.8" y="147.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="372.8" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (8 samples, 0.29%)</title><rect x="370.2" y="147.0" width="3.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="373.2" y="158.0"></text>
</g>
<g>
<title>__wake_up_sync_key (8 samples, 0.29%)</title><rect x="370.2" y="131.0" width="3.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="373.2" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (8 samples, 0.29%)</title><rect x="370.2" y="115.0" width="3.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="373.2" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (8 samples, 0.29%)</title><rect x="370.2" y="99.0" width="3.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="373.2" y="110.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.04%)</title><rect x="373.6" y="147.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="376.6" y="158.0"></text>
</g>
<g>
<title>ipv4_helper?[nf_conntrack_ipv4] (1 samples, 0.04%)</title><rect x="374.1" y="227.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="377.1" y="238.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.11%)</title><rect x="374.5" y="227.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="377.5" y="238.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.07%)</title><rect x="374.5" y="211.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="377.5" y="222.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.04%)</title><rect x="374.9" y="195.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="377.9" y="206.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack_ipv4] (1 samples, 0.04%)</title><rect x="375.4" y="211.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="378.4" y="222.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (1 samples, 0.04%)</title><rect x="375.4" y="195.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="378.4" y="206.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.11%)</title><rect x="375.8" y="259.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="378.8" y="270.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (1 samples, 0.04%)</title><rect x="376.2" y="243.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="379.2" y="254.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.04%)</title><rect x="376.2" y="227.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="379.2" y="238.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat_ipv4] (1 samples, 0.04%)</title><rect x="376.7" y="243.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="379.7" y="254.0"></text>
</g>
<g>
<title>dev_queue_xmit (6 samples, 0.22%)</title><rect x="377.1" y="403.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="380.1" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (6 samples, 0.22%)</title><rect x="377.1" y="387.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="380.1" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.07%)</title><rect x="377.9" y="371.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="380.9" y="382.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.04%)</title><rect x="377.9" y="355.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="380.9" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.04%)</title><rect x="378.4" y="355.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="381.4" y="366.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.04%)</title><rect x="378.4" y="339.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="381.4" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.04%)</title><rect x="378.8" y="371.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="381.8" y="382.0"></text>
</g>
<g>
<title>netdev_pick_tx (1 samples, 0.04%)</title><rect x="379.2" y="371.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="382.2" y="382.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.07%)</title><rect x="379.7" y="451.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="382.7" y="462.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.04%)</title><rect x="380.5" y="467.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="383.5" y="478.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.07%)</title><rect x="381.0" y="483.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="384.0" y="494.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.07%)</title><rect x="381.0" y="467.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="384.0" y="478.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.04%)</title><rect x="381.4" y="451.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="384.4" y="462.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.04%)</title><rect x="381.8" y="483.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="384.8" y="494.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.04%)</title><rect x="381.8" y="467.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="384.8" y="478.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.04%)</title><rect x="382.2" y="499.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="385.2" y="510.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.04%)</title><rect x="382.7" y="531.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="385.7" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.15%)</title><rect x="383.1" y="547.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="386.1" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="383.1" y="531.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="386.1" y="542.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.11%)</title><rect x="383.5" y="531.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="386.5" y="542.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="384.0" y="515.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="387.0" y="526.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.04%)</title><rect x="384.4" y="515.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="387.4" y="526.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.04%)</title><rect x="384.8" y="595.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="387.8" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.04%)</title><rect x="384.8" y="579.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="387.8" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.04%)</title><rect x="384.8" y="563.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="387.8" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.11%)</title><rect x="385.3" y="611.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="388.3" y="622.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.07%)</title><rect x="385.3" y="595.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="388.3" y="606.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.07%)</title><rect x="385.3" y="579.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="388.3" y="590.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.07%)</title><rect x="385.3" y="563.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="388.3" y="574.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="386.1" y="595.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="389.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (52 samples, 1.90%)</title><rect x="386.5" y="787.0" width="22.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="389.5" y="798.0">r..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (5 samples, 0.18%)</title><rect x="386.5" y="771.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="389.5" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (5 samples, 0.18%)</title><rect x="386.5" y="755.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="389.5" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (5 samples, 0.18%)</title><rect x="386.5" y="739.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="389.5" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (5 samples, 0.18%)</title><rect x="386.5" y="723.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="389.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (5 samples, 0.18%)</title><rect x="386.5" y="707.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="389.5" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.07%)</title><rect x="387.0" y="691.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="390.0" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (1 samples, 0.04%)</title><rect x="387.0" y="675.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="390.0" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.04%)</title><rect x="387.0" y="659.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="390.0" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.04%)</title><rect x="387.0" y="643.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="390.0" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1 samples, 0.04%)</title><rect x="387.0" y="627.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="390.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.04%)</title><rect x="387.0" y="611.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="390.0" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.04%)</title><rect x="387.0" y="595.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="390.0" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (1 samples, 0.04%)</title><rect x="387.0" y="579.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="390.0" y="590.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1 samples, 0.04%)</title><rect x="387.0" y="563.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="390.0" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1 samples, 0.04%)</title><rect x="387.0" y="547.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="390.0" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1 samples, 0.04%)</title><rect x="387.0" y="531.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="390.0" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (1 samples, 0.04%)</title><rect x="387.0" y="515.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="390.0" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.04%)</title><rect x="387.4" y="675.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="390.4" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (1 samples, 0.04%)</title><rect x="387.4" y="659.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="390.4" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.04%)</title><rect x="387.4" y="643.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="390.4" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.04%)</title><rect x="387.4" y="627.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="390.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Value.isExpired (1 samples, 0.04%)</title><rect x="387.4" y="611.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="390.4" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.04%)</title><rect x="387.8" y="691.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="390.8" y="702.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.04%)</title><rect x="387.8" y="675.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="390.8" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.04%)</title><rect x="387.8" y="659.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="390.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$177/786148505.apply (1 samples, 0.04%)</title><rect x="388.3" y="691.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="391.3" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (1 samples, 0.04%)</title><rect x="388.3" y="675.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="391.3" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (1 samples, 0.04%)</title><rect x="388.3" y="659.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="391.3" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.04%)</title><rect x="388.3" y="643.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="391.3" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.04%)</title><rect x="388.3" y="627.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="391.3" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="388.3" y="611.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="391.3" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="388.3" y="595.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="391.3" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="388.3" y="579.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="391.3" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="388.3" y="563.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="391.3" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.04%)</title><rect x="388.7" y="771.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="391.7" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (1 samples, 0.04%)</title><rect x="388.7" y="755.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="391.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$191/1599205169.apply (1 samples, 0.04%)</title><rect x="388.7" y="739.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="391.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$3 (1 samples, 0.04%)</title><rect x="388.7" y="723.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="391.7" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (1 samples, 0.04%)</title><rect x="388.7" y="707.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="391.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (46 samples, 1.68%)</title><rect x="389.1" y="771.0" width="19.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="392.1" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.07%)</title><rect x="389.1" y="755.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="392.1" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.07%)</title><rect x="389.1" y="739.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="392.1" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.07%)</title><rect x="389.1" y="723.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="392.1" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.07%)</title><rect x="389.1" y="707.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="392.1" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="389.6" y="691.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="392.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.04%)</title><rect x="390.0" y="755.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="393.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.04%)</title><rect x="390.0" y="739.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="393.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.04%)</title><rect x="390.0" y="723.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="393.0" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.04%)</title><rect x="390.0" y="707.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="393.0" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.04%)</title><rect x="390.0" y="691.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="393.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (1 samples, 0.04%)</title><rect x="390.0" y="675.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="393.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (1 samples, 0.04%)</title><rect x="390.0" y="659.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="393.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (32 samples, 1.17%)</title><rect x="390.4" y="755.0" width="13.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="393.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (32 samples, 1.17%)</title><rect x="390.4" y="739.0" width="13.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="393.4" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (4 samples, 0.15%)</title><rect x="391.7" y="723.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="394.7" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (4 samples, 0.15%)</title><rect x="391.7" y="707.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="394.7" y="718.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (3 samples, 0.11%)</title><rect x="392.1" y="691.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="395.1" y="702.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (3 samples, 0.11%)</title><rect x="392.1" y="675.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="395.1" y="686.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (3 samples, 0.11%)</title><rect x="392.1" y="659.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="395.1" y="670.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (1 samples, 0.04%)</title><rect x="392.1" y="643.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="395.1" y="654.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (2 samples, 0.07%)</title><rect x="392.6" y="643.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="395.6" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.04%)</title><rect x="393.0" y="627.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="396.0" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.04%)</title><rect x="393.4" y="723.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="396.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.07%)</title><rect x="393.9" y="723.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="396.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.07%)</title><rect x="393.9" y="707.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="396.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (2 samples, 0.07%)</title><rect x="393.9" y="691.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="396.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.04%)</title><rect x="393.9" y="675.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="396.9" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.04%)</title><rect x="393.9" y="659.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="396.9" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="393.9" y="643.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="396.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$NonfairSync.readerShouldBlock (1 samples, 0.04%)</title><rect x="394.3" y="675.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="397.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.apparentlyFirstQueuedIsExclusive (1 samples, 0.04%)</title><rect x="394.3" y="659.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="397.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (1 samples, 0.04%)</title><rect x="394.7" y="723.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="397.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (1 samples, 0.04%)</title><rect x="394.7" y="707.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="397.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (1 samples, 0.04%)</title><rect x="394.7" y="691.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="397.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1 samples, 0.04%)</title><rect x="395.2" y="723.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="398.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1 samples, 0.04%)</title><rect x="395.2" y="707.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="398.2" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.04%)</title><rect x="395.2" y="691.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="398.2" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1 samples, 0.04%)</title><rect x="395.2" y="675.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="398.2" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1 samples, 0.04%)</title><rect x="395.2" y="659.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="398.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (20 samples, 0.73%)</title><rect x="395.6" y="723.0" width="8.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="398.6" y="734.0"></text>
</g>
<g>
<title>java/util/Collection.stream (19 samples, 0.69%)</title><rect x="395.6" y="707.0" width="8.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="398.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (19 samples, 0.69%)</title><rect x="395.6" y="691.0" width="8.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="398.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (19 samples, 0.69%)</title><rect x="395.6" y="675.0" width="8.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="398.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (18 samples, 0.66%)</title><rect x="396.0" y="659.0" width="7.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="399.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (2 samples, 0.07%)</title><rect x="396.4" y="643.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="399.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (2 samples, 0.07%)</title><rect x="396.4" y="627.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="399.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.07%)</title><rect x="396.4" y="611.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="399.4" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.07%)</title><rect x="396.4" y="595.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="399.4" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.07%)</title><rect x="396.4" y="579.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="399.4" y="590.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.04%)</title><rect x="396.9" y="563.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="399.9" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.04%)</title><rect x="396.9" y="547.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="399.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (15 samples, 0.55%)</title><rect x="397.3" y="643.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="400.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (15 samples, 0.55%)</title><rect x="397.3" y="627.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="400.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.04%)</title><rect x="397.3" y="611.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="400.3" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="397.3" y="595.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="400.3" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="397.3" y="579.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="400.3" y="590.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.04%)</title><rect x="397.3" y="563.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="400.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (14 samples, 0.51%)</title><rect x="397.7" y="611.0" width="6.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="400.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.15%)</title><rect x="402.0" y="595.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="405.0" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.11%)</title><rect x="402.5" y="579.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="405.5" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.11%)</title><rect x="402.5" y="563.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="405.5" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.04%)</title><rect x="402.5" y="547.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="405.5" y="558.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.07%)</title><rect x="402.9" y="547.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="405.9" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.04%)</title><rect x="403.3" y="531.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="406.3" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.04%)</title><rect x="403.3" y="515.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="406.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.04%)</title><rect x="403.8" y="707.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="406.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.04%)</title><rect x="403.8" y="691.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="406.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.04%)</title><rect x="403.8" y="675.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="406.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (11 samples, 0.40%)</title><rect x="404.2" y="755.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="407.2" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (7 samples, 0.26%)</title><rect x="404.2" y="739.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="407.2" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (7 samples, 0.26%)</title><rect x="404.2" y="723.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="407.2" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (6 samples, 0.22%)</title><rect x="404.2" y="707.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="407.2" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (5 samples, 0.18%)</title><rect x="404.6" y="691.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="407.6" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (5 samples, 0.18%)</title><rect x="404.6" y="675.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="407.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (5 samples, 0.18%)</title><rect x="404.6" y="659.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="407.6" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.04%)</title><rect x="404.6" y="643.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="407.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$125/991073477.apply (4 samples, 0.15%)</title><rect x="405.1" y="643.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="408.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (4 samples, 0.15%)</title><rect x="405.1" y="627.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="408.1" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (4 samples, 0.15%)</title><rect x="405.1" y="611.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="408.1" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (4 samples, 0.15%)</title><rect x="405.1" y="595.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="408.1" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (4 samples, 0.15%)</title><rect x="405.1" y="579.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="408.1" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.15%)</title><rect x="405.1" y="563.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="408.1" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.15%)</title><rect x="405.1" y="547.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="408.1" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.11%)</title><rect x="405.1" y="531.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="408.1" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.11%)</title><rect x="405.1" y="515.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="408.1" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="406.3" y="531.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="409.3" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (1 samples, 0.04%)</title><rect x="406.8" y="707.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="409.8" y="718.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (1 samples, 0.04%)</title><rect x="407.2" y="739.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="410.2" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="407.2" y="723.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="410.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (3 samples, 0.11%)</title><rect x="407.6" y="739.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="410.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (3 samples, 0.11%)</title><rect x="407.6" y="723.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="410.6" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.11%)</title><rect x="407.6" y="707.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="410.6" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (3 samples, 0.11%)</title><rect x="407.6" y="691.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="410.6" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (3 samples, 0.11%)</title><rect x="407.6" y="675.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="410.6" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (3 samples, 0.11%)</title><rect x="407.6" y="659.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="410.6" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (3 samples, 0.11%)</title><rect x="407.6" y="643.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="410.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3 samples, 0.11%)</title><rect x="407.6" y="627.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="410.6" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.11%)</title><rect x="407.6" y="611.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="410.6" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (3 samples, 0.11%)</title><rect x="407.6" y="595.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="410.6" y="606.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (3 samples, 0.11%)</title><rect x="407.6" y="579.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="410.6" y="590.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (3 samples, 0.11%)</title><rect x="407.6" y="563.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="410.6" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (3 samples, 0.11%)</title><rect x="407.6" y="547.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="410.6" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (1 samples, 0.04%)</title><rect x="407.6" y="531.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="410.6" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (1 samples, 0.04%)</title><rect x="407.6" y="515.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="410.6" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (1 samples, 0.04%)</title><rect x="407.6" y="499.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="410.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (1 samples, 0.04%)</title><rect x="407.6" y="483.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="410.6" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.04%)</title><rect x="407.6" y="467.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="410.6" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (1 samples, 0.04%)</title><rect x="407.6" y="451.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="410.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (1 samples, 0.04%)</title><rect x="407.6" y="435.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="410.6" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.04%)</title><rect x="407.6" y="419.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="410.6" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.04%)</title><rect x="407.6" y="403.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="410.6" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="407.6" y="387.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="410.6" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="407.6" y="371.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="410.6" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (2 samples, 0.07%)</title><rect x="408.1" y="531.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="411.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.07%)</title><rect x="408.1" y="515.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="411.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.07%)</title><rect x="408.1" y="499.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="411.1" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$111/1835775400.get$Lambda (1 samples, 0.04%)</title><rect x="408.5" y="483.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="411.5" y="494.0"></text>
</g>
<g>
<title>[2020-highload-dht-thread-94 tid=30292] (231 samples, 8.42%)</title><rect x="408.9" y="883.0" width="99.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="411.9" y="894.0">[2020-highlo..</text>
</g>
<g>
<title>java/lang/Thread.run (231 samples, 8.42%)</title><rect x="408.9" y="867.0" width="99.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="411.9" y="878.0">java/lang/Th..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (231 samples, 8.42%)</title><rect x="408.9" y="851.0" width="99.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="411.9" y="862.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (231 samples, 8.42%)</title><rect x="408.9" y="835.0" width="99.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="411.9" y="846.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (1 samples, 0.04%)</title><rect x="408.9" y="819.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="411.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.04%)</title><rect x="408.9" y="803.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="411.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (1 samples, 0.04%)</title><rect x="408.9" y="787.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="411.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.04%)</title><rect x="408.9" y="771.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="411.9" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.04%)</title><rect x="408.9" y="755.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="411.9" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="408.9" y="739.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="411.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (71 samples, 2.59%)</title><rect x="409.4" y="819.0" width="30.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="412.4" y="830.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (69 samples, 2.52%)</title><rect x="410.2" y="803.0" width="29.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="413.2" y="814.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.dequeue (1 samples, 0.04%)</title><rect x="410.2" y="787.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="413.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (54 samples, 1.97%)</title><rect x="410.6" y="787.0" width="23.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="413.6" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.04%)</title><rect x="411.1" y="771.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="414.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.04%)</title><rect x="411.1" y="755.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="414.1" y="766.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.04%)</title><rect x="411.1" y="739.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="414.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.07%)</title><rect x="411.5" y="771.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="414.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.07%)</title><rect x="411.5" y="755.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="414.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.07%)</title><rect x="411.5" y="739.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="414.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.07%)</title><rect x="411.5" y="723.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="414.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.07%)</title><rect x="411.5" y="707.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="414.5" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.07%)</title><rect x="411.5" y="691.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="414.5" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.07%)</title><rect x="411.5" y="675.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="414.5" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.07%)</title><rect x="411.5" y="659.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="414.5" y="670.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.07%)</title><rect x="411.5" y="643.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="414.5" y="654.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.07%)</title><rect x="411.5" y="627.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="414.5" y="638.0"></text>
</g>
<g>
<title>futex_wake_op (2 samples, 0.07%)</title><rect x="411.5" y="611.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="414.5" y="622.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.07%)</title><rect x="411.5" y="595.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="414.5" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.07%)</title><rect x="411.5" y="579.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="414.5" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.07%)</title><rect x="411.5" y="563.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="414.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (1 samples, 0.04%)</title><rect x="412.4" y="771.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="415.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (1 samples, 0.04%)</title><rect x="412.4" y="755.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="415.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (49 samples, 1.79%)</title><rect x="412.8" y="771.0" width="21.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="415.8" y="782.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (49 samples, 1.79%)</title><rect x="412.8" y="755.0" width="21.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="415.8" y="766.0">j..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.228] (1 samples, 0.04%)</title><rect x="415.0" y="739.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="418.0" y="750.0"></text>
</g>
<g>
<title>Unsafe_Park (40 samples, 1.46%)</title><rect x="415.4" y="739.0" width="17.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="418.4" y="750.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.04%)</title><rect x="416.7" y="723.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="419.7" y="734.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (11 samples, 0.40%)</title><rect x="417.1" y="723.0" width="4.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="420.1" y="734.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.04%)</title><rect x="420.1" y="707.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="423.1" y="718.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="420.5" y="707.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="423.5" y="718.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.04%)</title><rect x="421.4" y="707.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="424.4" y="718.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="421.8" y="723.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="424.8" y="734.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_unlock (2 samples, 0.07%)</title><rect x="422.3" y="723.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="425.3" y="734.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 0.11%)</title><rect x="423.1" y="723.0" width="1.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="426.1" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.07%)</title><rect x="423.6" y="707.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="426.6" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="423.6" y="691.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="426.6" y="702.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.04%)</title><rect x="424.0" y="691.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="427.0" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_wait (14 samples, 0.51%)</title><rect x="424.4" y="723.0" width="6.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="427.4" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.29%)</title><rect x="427.0" y="707.0" width="3.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="430.0" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.29%)</title><rect x="427.0" y="691.0" width="3.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="430.0" y="702.0"></text>
</g>
<g>
<title>sys_futex (8 samples, 0.29%)</title><rect x="427.0" y="675.0" width="3.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="430.0" y="686.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.29%)</title><rect x="427.0" y="659.0" width="3.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="430.0" y="670.0"></text>
</g>
<g>
<title>futex_wait (7 samples, 0.26%)</title><rect x="427.0" y="643.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="430.0" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (4 samples, 0.15%)</title><rect x="427.4" y="627.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="430.4" y="638.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.15%)</title><rect x="427.4" y="611.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="430.4" y="622.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.11%)</title><rect x="427.9" y="595.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="430.9" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.11%)</title><rect x="427.9" y="579.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="430.9" y="590.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.04%)</title><rect x="429.2" y="627.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="432.2" y="638.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.04%)</title><rect x="429.2" y="611.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="432.2" y="622.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.04%)</title><rect x="429.6" y="627.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="432.6" y="638.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.04%)</title><rect x="430.0" y="643.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="433.0" y="654.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.04%)</title><rect x="430.4" y="723.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="433.4" y="734.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.04%)</title><rect x="430.9" y="723.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="433.9" y="734.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.07%)</title><rect x="431.3" y="723.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="434.3" y="734.0"></text>
</g>
<g>
<title>pthread_cond_wait@plt (1 samples, 0.04%)</title><rect x="432.2" y="723.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="435.2" y="734.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.11%)</title><rect x="432.6" y="739.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="435.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (4 samples, 0.15%)</title><rect x="433.9" y="787.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="436.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (4 samples, 0.15%)</title><rect x="433.9" y="771.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="436.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.04%)</title><rect x="433.9" y="755.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="436.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.predecessor (1 samples, 0.04%)</title><rect x="433.9" y="739.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="436.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (3 samples, 0.11%)</title><rect x="434.3" y="755.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="437.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (3 samples, 0.11%)</title><rect x="434.3" y="739.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="437.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (3 samples, 0.11%)</title><rect x="434.3" y="723.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="437.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.04%)</title><rect x="435.2" y="707.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="438.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 0.36%)</title><rect x="435.6" y="787.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="438.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.36%)</title><rect x="435.6" y="771.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="438.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.36%)</title><rect x="435.6" y="755.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="438.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.36%)</title><rect x="435.6" y="739.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="438.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.36%)</title><rect x="435.6" y="723.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="438.6" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.07%)</title><rect x="436.0" y="707.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="439.0" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.04%)</title><rect x="436.0" y="691.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="439.0" y="702.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.04%)</title><rect x="436.5" y="691.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="439.5" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (7 samples, 0.26%)</title><rect x="436.9" y="707.0" width="3.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="439.9" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.26%)</title><rect x="436.9" y="691.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="439.9" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.26%)</title><rect x="436.9" y="675.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="439.9" y="686.0"></text>
</g>
<g>
<title>sys_futex (7 samples, 0.26%)</title><rect x="436.9" y="659.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="439.9" y="670.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.26%)</title><rect x="436.9" y="643.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="439.9" y="654.0"></text>
</g>
<g>
<title>futex_wake_op (7 samples, 0.26%)</title><rect x="436.9" y="627.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="439.9" y="638.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.04%)</title><rect x="436.9" y="611.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="439.9" y="622.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.9 (1 samples, 0.04%)</title><rect x="436.9" y="595.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="439.9" y="606.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.04%)</title><rect x="437.3" y="611.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="440.3" y="622.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.18%)</title><rect x="437.8" y="611.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="440.8" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.18%)</title><rect x="437.8" y="595.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="440.8" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.18%)</title><rect x="437.8" y="579.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="440.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$75/1549034997.run (159 samples, 5.80%)</title><rect x="439.9" y="819.0" width="68.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="442.9" y="830.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$get$1 (159 samples, 5.80%)</title><rect x="439.9" y="803.0" width="68.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="442.9" y="814.0">ru/mail..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="439.9" y="787.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="442.9" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="439.9" y="771.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="442.9" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="439.9" y="755.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="442.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (1 samples, 0.04%)</title><rect x="439.9" y="739.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="442.9" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (117 samples, 4.27%)</title><rect x="440.3" y="787.0" width="50.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="443.3" y="798.0">one/n..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.07%)</title><rect x="440.8" y="771.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="443.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.07%)</title><rect x="440.8" y="755.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="443.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.07%)</title><rect x="440.8" y="739.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="443.8" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (113 samples, 4.12%)</title><rect x="441.6" y="771.0" width="48.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="444.6" y="782.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.15%)</title><rect x="441.6" y="755.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="444.6" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.11%)</title><rect x="442.1" y="739.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="445.1" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.07%)</title><rect x="442.1" y="723.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="445.1" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="442.9" y="723.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="445.9" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="442.9" y="707.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="445.9" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="442.9" y="691.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="445.9" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (109 samples, 3.98%)</title><rect x="443.4" y="755.0" width="46.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="446.4" y="766.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (109 samples, 3.98%)</title><rect x="443.4" y="739.0" width="46.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="446.4" y="750.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (108 samples, 3.94%)</title><rect x="443.8" y="723.0" width="46.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="446.8" y="734.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (107 samples, 3.90%)</title><rect x="444.2" y="707.0" width="46.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="447.2" y="718.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.15%)</title><rect x="445.5" y="691.0" width="1.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="448.5" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.04%)</title><rect x="445.5" y="675.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="448.5" y="686.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned (1 samples, 0.04%)</title><rect x="445.9" y="675.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="448.9" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="446.4" y="675.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="449.4" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.04%)</title><rect x="446.4" y="659.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="449.4" y="670.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.04%)</title><rect x="446.8" y="675.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="449.8" y="686.0"></text>
</g>
<g>
<title>send (100 samples, 3.65%)</title><rect x="447.2" y="691.0" width="43.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="450.2" y="702.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (95 samples, 3.46%)</title><rect x="449.4" y="675.0" width="40.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="452.4" y="686.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (95 samples, 3.46%)</title><rect x="449.4" y="659.0" width="40.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="452.4" y="670.0">do_..</text>
</g>
<g>
<title>sys_sendto (93 samples, 3.39%)</title><rect x="450.2" y="643.0" width="40.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="453.2" y="654.0">sys..</text>
</g>
<g>
<title>SYSC_sendto (93 samples, 3.39%)</title><rect x="450.2" y="627.0" width="40.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="453.2" y="638.0">SYS..</text>
</g>
<g>
<title>sock_sendmsg (91 samples, 3.32%)</title><rect x="450.2" y="611.0" width="39.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="453.2" y="622.0">soc..</text>
</g>
<g>
<title>inet_sendmsg (89 samples, 3.25%)</title><rect x="450.2" y="595.0" width="38.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="453.2" y="606.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (89 samples, 3.25%)</title><rect x="450.2" y="579.0" width="38.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="453.2" y="590.0">tcp..</text>
</g>
<g>
<title>tcp_sendmsg_locked (88 samples, 3.21%)</title><rect x="450.2" y="563.0" width="37.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="453.2" y="574.0">tcp..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.04%)</title><rect x="451.5" y="547.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="454.5" y="558.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="451.5" y="531.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="454.5" y="542.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.04%)</title><rect x="452.0" y="547.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="455.0" y="558.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.04%)</title><rect x="452.0" y="531.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="455.0" y="542.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (3 samples, 0.11%)</title><rect x="452.4" y="547.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="455.4" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.11%)</title><rect x="452.4" y="531.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="455.4" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (3 samples, 0.11%)</title><rect x="452.4" y="515.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="455.4" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.11%)</title><rect x="452.4" y="499.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="455.4" y="510.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.04%)</title><rect x="453.3" y="483.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="456.3" y="494.0"></text>
</g>
<g>
<title>tcp_push (78 samples, 2.84%)</title><rect x="453.7" y="547.0" width="33.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="456.7" y="558.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (78 samples, 2.84%)</title><rect x="453.7" y="531.0" width="33.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="456.7" y="542.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (78 samples, 2.84%)</title><rect x="453.7" y="515.0" width="33.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="456.7" y="526.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (76 samples, 2.77%)</title><rect x="453.7" y="499.0" width="32.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="456.7" y="510.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (75 samples, 2.74%)</title><rect x="454.1" y="483.0" width="32.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="457.1" y="494.0">ip..</text>
</g>
<g>
<title>ip_local_out (75 samples, 2.74%)</title><rect x="454.1" y="467.0" width="32.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="457.1" y="478.0">ip..</text>
</g>
<g>
<title>__ip_local_out (15 samples, 0.55%)</title><rect x="454.1" y="451.0" width="6.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="457.1" y="462.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (2 samples, 0.07%)</title><rect x="454.1" y="435.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="457.1" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (13 samples, 0.47%)</title><rect x="455.0" y="435.0" width="5.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="458.0" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.04%)</title><rect x="455.0" y="419.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="458.0" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.04%)</title><rect x="455.0" y="403.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="458.0" y="414.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (1 samples, 0.04%)</title><rect x="455.4" y="419.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="458.4" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.04%)</title><rect x="455.4" y="403.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="458.4" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (11 samples, 0.40%)</title><rect x="455.8" y="419.0" width="4.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="458.8" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (10 samples, 0.36%)</title><rect x="455.8" y="403.0" width="4.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="458.8" y="414.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (1 samples, 0.04%)</title><rect x="456.7" y="387.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="459.7" y="398.0"></text>
</g>
<g>
<title>ipv4_get_l4proto?[nf_conntrack_ipv4] (2 samples, 0.07%)</title><rect x="457.1" y="387.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="460.1" y="398.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (5 samples, 0.18%)</title><rect x="458.0" y="387.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="461.0" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="458.8" y="371.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="461.8" y="382.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (1 samples, 0.04%)</title><rect x="459.3" y="371.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="462.3" y="382.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (1 samples, 0.04%)</title><rect x="459.7" y="371.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="462.7" y="382.0"></text>
</g>
<g>
<title>tcp_error?[nf_conntrack] (1 samples, 0.04%)</title><rect x="460.1" y="403.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="463.1" y="414.0"></text>
</g>
<g>
<title>ip_output (60 samples, 2.19%)</title><rect x="460.6" y="451.0" width="25.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="463.6" y="462.0">i..</text>
</g>
<g>
<title>ip_finish_output (56 samples, 2.04%)</title><rect x="460.6" y="435.0" width="24.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="463.6" y="446.0">i..</text>
</g>
<g>
<title>ip_finish_output2 (54 samples, 1.97%)</title><rect x="461.4" y="419.0" width="23.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="464.4" y="430.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (50 samples, 1.82%)</title><rect x="462.7" y="403.0" width="21.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="465.7" y="414.0">_..</text>
</g>
<g>
<title>do_softirq.part.17 (50 samples, 1.82%)</title><rect x="462.7" y="387.0" width="21.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="465.7" y="398.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (50 samples, 1.82%)</title><rect x="462.7" y="371.0" width="21.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="465.7" y="382.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (50 samples, 1.82%)</title><rect x="462.7" y="355.0" width="21.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="465.7" y="366.0">_..</text>
</g>
<g>
<title>net_rx_action (49 samples, 1.79%)</title><rect x="463.2" y="339.0" width="21.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="466.2" y="350.0">n..</text>
</g>
<g>
<title>process_backlog (49 samples, 1.79%)</title><rect x="463.2" y="323.0" width="21.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="466.2" y="334.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (49 samples, 1.79%)</title><rect x="463.2" y="307.0" width="21.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="466.2" y="318.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (47 samples, 1.71%)</title><rect x="463.2" y="291.0" width="20.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="466.2" y="302.0"></text>
</g>
<g>
<title>ip_rcv (44 samples, 1.60%)</title><rect x="464.0" y="275.0" width="18.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="467.0" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (38 samples, 1.39%)</title><rect x="464.9" y="259.0" width="16.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="467.9" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (37 samples, 1.35%)</title><rect x="465.3" y="243.0" width="15.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="468.3" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (36 samples, 1.31%)</title><rect x="465.3" y="227.0" width="15.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="468.3" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (36 samples, 1.31%)</title><rect x="465.3" y="211.0" width="15.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="468.3" y="222.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.07%)</title><rect x="465.3" y="195.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="468.3" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.04%)</title><rect x="466.2" y="195.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="469.2" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (32 samples, 1.17%)</title><rect x="466.6" y="195.0" width="13.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="469.6" y="206.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.04%)</title><rect x="466.6" y="179.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="469.6" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (31 samples, 1.13%)</title><rect x="467.0" y="179.0" width="13.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="470.0" y="190.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.04%)</title><rect x="467.5" y="163.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="470.5" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.04%)</title><rect x="467.5" y="147.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="470.5" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="467.5" y="131.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="470.5" y="142.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="467.5" y="115.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="470.5" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="467.5" y="99.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="470.5" y="110.0"></text>
</g>
<g>
<title>sched_clock_cpu (1 samples, 0.04%)</title><rect x="467.9" y="163.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="470.9" y="174.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.04%)</title><rect x="467.9" y="147.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="470.9" y="158.0"></text>
</g>
<g>
<title>tcp_ack (8 samples, 0.29%)</title><rect x="468.3" y="163.0" width="3.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="471.3" y="174.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (4 samples, 0.15%)</title><rect x="470.0" y="147.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="473.0" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.04%)</title><rect x="470.5" y="131.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="473.5" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.04%)</title><rect x="470.5" y="115.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="473.5" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.04%)</title><rect x="470.5" y="99.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="473.5" y="110.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.04%)</title><rect x="470.9" y="131.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="473.9" y="142.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.04%)</title><rect x="471.3" y="131.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="474.3" y="142.0"></text>
</g>
<g>
<title>tcp_data_queue (20 samples, 0.73%)</title><rect x="471.8" y="163.0" width="8.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="474.8" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (17 samples, 0.62%)</title><rect x="472.6" y="147.0" width="7.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="475.6" y="158.0"></text>
</g>
<g>
<title>__wake_up_sync_key (17 samples, 0.62%)</title><rect x="472.6" y="131.0" width="7.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="475.6" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (17 samples, 0.62%)</title><rect x="472.6" y="115.0" width="7.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="475.6" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (17 samples, 0.62%)</title><rect x="472.6" y="99.0" width="7.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="475.6" y="110.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.04%)</title><rect x="479.9" y="147.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="482.9" y="158.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.04%)</title><rect x="480.4" y="195.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="483.4" y="206.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack_ipv4] (1 samples, 0.04%)</title><rect x="480.8" y="227.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="483.8" y="238.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (2 samples, 0.07%)</title><rect x="481.2" y="259.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="484.2" y="270.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack_ipv4] (1 samples, 0.04%)</title><rect x="482.1" y="259.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="485.1" y="270.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.04%)</title><rect x="482.5" y="259.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="485.5" y="270.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (1 samples, 0.04%)</title><rect x="482.5" y="243.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="485.5" y="254.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.04%)</title><rect x="482.5" y="227.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="485.5" y="238.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.04%)</title><rect x="482.9" y="275.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="485.9" y="286.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.07%)</title><rect x="483.4" y="291.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="486.4" y="302.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.04%)</title><rect x="484.2" y="403.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="487.2" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.04%)</title><rect x="484.2" y="387.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="487.2" y="398.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (1 samples, 0.04%)</title><rect x="484.7" y="435.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="487.7" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.11%)</title><rect x="485.1" y="435.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="488.1" y="446.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (2 samples, 0.07%)</title><rect x="485.1" y="419.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="488.1" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.07%)</title><rect x="485.1" y="403.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="488.1" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat_ipv4] (1 samples, 0.04%)</title><rect x="486.0" y="419.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="489.0" y="430.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.04%)</title><rect x="486.4" y="499.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="489.4" y="510.0"></text>
</g>
<g>
<title>tcp_tso_segs (1 samples, 0.04%)</title><rect x="486.8" y="499.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="489.8" y="510.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.07%)</title><rect x="487.3" y="547.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="490.3" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="487.3" y="531.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="490.3" y="542.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.04%)</title><rect x="487.7" y="531.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="490.7" y="542.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.04%)</title><rect x="487.7" y="515.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="490.7" y="526.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.04%)</title><rect x="488.1" y="563.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="491.1" y="574.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.07%)</title><rect x="488.5" y="595.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="491.5" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.04%)</title><rect x="489.0" y="579.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="492.0" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.04%)</title><rect x="489.0" y="563.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="492.0" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.04%)</title><rect x="489.0" y="547.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="492.0" y="558.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.07%)</title><rect x="489.4" y="611.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="492.4" y="622.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.07%)</title><rect x="489.4" y="595.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="492.4" y="606.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.07%)</title><rect x="489.4" y="579.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="492.4" y="590.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.07%)</title><rect x="489.4" y="563.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="492.4" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="490.3" y="771.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="493.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="490.3" y="755.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="493.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="490.3" y="739.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="493.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (41 samples, 1.50%)</title><rect x="490.7" y="787.0" width="17.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="493.7" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (6 samples, 0.22%)</title><rect x="490.7" y="771.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="493.7" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (6 samples, 0.22%)</title><rect x="490.7" y="755.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="493.7" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (6 samples, 0.22%)</title><rect x="490.7" y="739.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="493.7" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (6 samples, 0.22%)</title><rect x="490.7" y="723.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="493.7" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (6 samples, 0.22%)</title><rect x="490.7" y="707.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="493.7" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.18%)</title><rect x="491.1" y="691.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="494.1" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (3 samples, 0.11%)</title><rect x="491.1" y="675.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="494.1" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (3 samples, 0.11%)</title><rect x="491.1" y="659.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="494.1" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (3 samples, 0.11%)</title><rect x="491.1" y="643.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="494.1" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (2 samples, 0.07%)</title><rect x="491.1" y="627.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="494.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2 samples, 0.07%)</title><rect x="491.1" y="611.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="494.1" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.hasNext (1 samples, 0.04%)</title><rect x="491.1" y="595.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="494.1" y="606.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.isEmpty (1 samples, 0.04%)</title><rect x="491.1" y="579.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="494.1" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.04%)</title><rect x="491.6" y="595.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="494.6" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (1 samples, 0.04%)</title><rect x="491.6" y="579.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="494.6" y="590.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1 samples, 0.04%)</title><rect x="491.6" y="563.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="494.6" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1 samples, 0.04%)</title><rect x="491.6" y="547.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="494.6" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1 samples, 0.04%)</title><rect x="491.6" y="531.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="494.6" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (1 samples, 0.04%)</title><rect x="491.6" y="515.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="494.6" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (1 samples, 0.04%)</title><rect x="491.6" y="499.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="494.6" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (1 samples, 0.04%)</title><rect x="491.6" y="483.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="494.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (1 samples, 0.04%)</title><rect x="491.6" y="467.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="494.6" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.04%)</title><rect x="491.6" y="451.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="494.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (1 samples, 0.04%)</title><rect x="491.6" y="435.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="494.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (1 samples, 0.04%)</title><rect x="491.6" y="419.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="494.6" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.04%)</title><rect x="492.0" y="627.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="495.0" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (2 samples, 0.07%)</title><rect x="492.4" y="675.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="495.4" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (2 samples, 0.07%)</title><rect x="492.4" y="659.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="495.4" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (2 samples, 0.07%)</title><rect x="492.4" y="643.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="495.4" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (2 samples, 0.07%)</title><rect x="492.4" y="627.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="495.4" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1 samples, 0.04%)</title><rect x="492.4" y="611.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="495.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.04%)</title><rect x="492.4" y="595.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="495.4" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="492.4" y="579.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="495.4" y="590.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.isEmpty (1 samples, 0.04%)</title><rect x="492.8" y="611.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="495.8" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.04%)</title><rect x="493.3" y="771.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="496.3" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (1 samples, 0.04%)</title><rect x="493.3" y="755.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="496.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$191/1599205169.apply (1 samples, 0.04%)</title><rect x="493.3" y="739.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="496.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$3 (1 samples, 0.04%)</title><rect x="493.3" y="723.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="496.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (1 samples, 0.04%)</title><rect x="493.3" y="707.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="496.3" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (1 samples, 0.04%)</title><rect x="493.3" y="691.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="496.3" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.04%)</title><rect x="493.3" y="675.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="496.3" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.04%)</title><rect x="493.3" y="659.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="496.3" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="493.3" y="643.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="496.3" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="493.3" y="627.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="496.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (34 samples, 1.24%)</title><rect x="493.7" y="771.0" width="14.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="496.7" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.04%)</title><rect x="494.1" y="755.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="497.1" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="494.1" y="739.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="497.1" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="494.1" y="723.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="497.1" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="494.1" y="707.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="497.1" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="494.1" y="691.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="497.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (1 samples, 0.04%)</title><rect x="494.6" y="755.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="497.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (1 samples, 0.04%)</title><rect x="494.6" y="739.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="497.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (1 samples, 0.04%)</title><rect x="494.6" y="723.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="497.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.04%)</title><rect x="494.6" y="707.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="497.6" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.04%)</title><rect x="494.6" y="691.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="497.6" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="494.6" y="675.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="497.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (21 samples, 0.77%)</title><rect x="495.0" y="755.0" width="9.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="498.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (21 samples, 0.77%)</title><rect x="495.0" y="739.0" width="9.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="498.0" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1 samples, 0.04%)</title><rect x="495.4" y="723.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="498.4" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1 samples, 0.04%)</title><rect x="495.4" y="707.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="498.4" y="718.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1 samples, 0.04%)</title><rect x="495.4" y="691.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="498.4" y="702.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1 samples, 0.04%)</title><rect x="495.4" y="675.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="498.4" y="686.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1 samples, 0.04%)</title><rect x="495.4" y="659.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="498.4" y="670.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (1 samples, 0.04%)</title><rect x="495.4" y="643.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="498.4" y="654.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (1 samples, 0.04%)</title><rect x="495.4" y="627.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="498.4" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (1 samples, 0.04%)</title><rect x="495.4" y="611.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="498.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (1 samples, 0.04%)</title><rect x="495.4" y="595.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="498.4" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.04%)</title><rect x="495.4" y="579.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="498.4" y="590.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (1 samples, 0.04%)</title><rect x="495.9" y="723.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="498.9" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="495.9" y="707.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="498.9" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="495.9" y="691.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="498.9" y="702.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$95/683319954.get$Lambda (1 samples, 0.04%)</title><rect x="495.9" y="675.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="498.9" y="686.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$95/683319954.&lt;init&gt; (1 samples, 0.04%)</title><rect x="495.9" y="659.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="498.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.04%)</title><rect x="496.3" y="723.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="499.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.04%)</title><rect x="496.3" y="707.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="499.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.04%)</title><rect x="496.3" y="691.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="499.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.04%)</title><rect x="496.3" y="675.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="499.3" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.04%)</title><rect x="496.3" y="659.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="499.3" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="496.3" y="643.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="499.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1 samples, 0.04%)</title><rect x="496.7" y="723.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="499.7" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1 samples, 0.04%)</title><rect x="496.7" y="707.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="499.7" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.04%)</title><rect x="496.7" y="691.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="499.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (16 samples, 0.58%)</title><rect x="497.1" y="723.0" width="6.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="500.1" y="734.0"></text>
</g>
<g>
<title>java/util/Collection.stream (16 samples, 0.58%)</title><rect x="497.1" y="707.0" width="6.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="500.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (16 samples, 0.58%)</title><rect x="497.1" y="691.0" width="6.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="500.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (16 samples, 0.58%)</title><rect x="497.1" y="675.0" width="6.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="500.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (16 samples, 0.58%)</title><rect x="497.1" y="659.0" width="6.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="500.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (14 samples, 0.51%)</title><rect x="498.0" y="643.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="501.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (14 samples, 0.51%)</title><rect x="498.0" y="627.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="501.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (12 samples, 0.44%)</title><rect x="498.9" y="611.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="501.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.15%)</title><rect x="502.3" y="595.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="505.3" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.11%)</title><rect x="502.7" y="579.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="505.7" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.11%)</title><rect x="502.7" y="563.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="505.7" y="574.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.07%)</title><rect x="502.7" y="547.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="505.7" y="558.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.04%)</title><rect x="503.2" y="531.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="506.2" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compare (1 samples, 0.04%)</title><rect x="503.6" y="547.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="506.6" y="558.0"></text>
</g>
<g>
<title>java/lang/Byte.compare (1 samples, 0.04%)</title><rect x="503.6" y="531.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="506.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (10 samples, 0.36%)</title><rect x="504.0" y="755.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="507.0" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (7 samples, 0.26%)</title><rect x="504.0" y="739.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="507.0" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (7 samples, 0.26%)</title><rect x="504.0" y="723.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="507.0" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (7 samples, 0.26%)</title><rect x="504.0" y="707.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="507.0" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (6 samples, 0.22%)</title><rect x="504.5" y="691.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="507.5" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (6 samples, 0.22%)</title><rect x="504.5" y="675.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="507.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (6 samples, 0.22%)</title><rect x="504.5" y="659.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="507.5" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.11%)</title><rect x="504.5" y="643.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="507.5" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (2 samples, 0.07%)</title><rect x="504.5" y="627.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="507.5" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.04%)</title><rect x="504.5" y="611.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="507.5" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.04%)</title><rect x="504.5" y="595.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="507.5" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.04%)</title><rect x="504.5" y="579.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="507.5" y="590.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1 samples, 0.04%)</title><rect x="504.9" y="611.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="507.9" y="622.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1 samples, 0.04%)</title><rect x="504.9" y="595.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="507.9" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1 samples, 0.04%)</title><rect x="504.9" y="579.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="507.9" y="590.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (1 samples, 0.04%)</title><rect x="504.9" y="563.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="507.9" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (1 samples, 0.04%)</title><rect x="504.9" y="547.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="507.9" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (1 samples, 0.04%)</title><rect x="504.9" y="531.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="507.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (1 samples, 0.04%)</title><rect x="504.9" y="515.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="507.9" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.04%)</title><rect x="504.9" y="499.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="507.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (1 samples, 0.04%)</title><rect x="504.9" y="483.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="507.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (1 samples, 0.04%)</title><rect x="504.9" y="467.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="507.9" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.04%)</title><rect x="505.3" y="627.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="508.3" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (1 samples, 0.04%)</title><rect x="505.3" y="611.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="508.3" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.04%)</title><rect x="505.8" y="643.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="508.8" y="654.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.04%)</title><rect x="505.8" y="627.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="508.8" y="638.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.04%)</title><rect x="505.8" y="611.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="508.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$125/991073477.apply (2 samples, 0.07%)</title><rect x="506.2" y="643.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="509.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (2 samples, 0.07%)</title><rect x="506.2" y="627.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="509.2" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (2 samples, 0.07%)</title><rect x="506.2" y="611.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="509.2" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.07%)</title><rect x="506.2" y="595.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="509.2" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.07%)</title><rect x="506.2" y="579.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="509.2" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.07%)</title><rect x="506.2" y="563.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="509.2" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.07%)</title><rect x="506.2" y="547.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="509.2" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.07%)</title><rect x="506.2" y="531.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="509.2" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="506.2" y="515.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="509.2" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="506.6" y="515.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="509.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (3 samples, 0.11%)</title><rect x="507.0" y="739.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="510.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (3 samples, 0.11%)</title><rect x="507.0" y="723.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="510.0" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.11%)</title><rect x="507.0" y="707.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="510.0" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (2 samples, 0.07%)</title><rect x="507.0" y="691.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="510.0" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (2 samples, 0.07%)</title><rect x="507.0" y="675.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="510.0" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (2 samples, 0.07%)</title><rect x="507.0" y="659.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="510.0" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (2 samples, 0.07%)</title><rect x="507.0" y="643.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="510.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2 samples, 0.07%)</title><rect x="507.0" y="627.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="510.0" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.07%)</title><rect x="507.0" y="611.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="510.0" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (2 samples, 0.07%)</title><rect x="507.0" y="595.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="510.0" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.04%)</title><rect x="507.0" y="579.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="510.0" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.04%)</title><rect x="507.0" y="563.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="510.0" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (1 samples, 0.04%)</title><rect x="507.0" y="547.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="510.0" y="558.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1 samples, 0.04%)</title><rect x="507.5" y="579.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="510.5" y="590.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1 samples, 0.04%)</title><rect x="507.5" y="563.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="510.5" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1 samples, 0.04%)</title><rect x="507.5" y="547.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="510.5" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (1 samples, 0.04%)</title><rect x="507.5" y="531.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="510.5" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (1 samples, 0.04%)</title><rect x="507.5" y="515.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="510.5" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (1 samples, 0.04%)</title><rect x="507.5" y="499.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="510.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (1 samples, 0.04%)</title><rect x="507.5" y="483.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="510.5" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.04%)</title><rect x="507.5" y="467.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="510.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (1 samples, 0.04%)</title><rect x="507.5" y="451.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="510.5" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (1 samples, 0.04%)</title><rect x="507.5" y="435.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="510.5" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.04%)</title><rect x="507.9" y="691.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="510.9" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (1 samples, 0.04%)</title><rect x="507.9" y="675.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="510.9" y="686.0"></text>
</g>
<g>
<title>[2020-highload-dht-thread-95 tid=31738] (229 samples, 8.35%)</title><rect x="508.3" y="883.0" width="98.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="511.3" y="894.0">[2020-highlo..</text>
</g>
<g>
<title>java/lang/Thread.run (229 samples, 8.35%)</title><rect x="508.3" y="867.0" width="98.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="511.3" y="878.0">java/lang/Th..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (229 samples, 8.35%)</title><rect x="508.3" y="851.0" width="98.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="511.3" y="862.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (229 samples, 8.35%)</title><rect x="508.3" y="835.0" width="98.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="511.3" y="846.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (74 samples, 2.70%)</title><rect x="508.3" y="819.0" width="31.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="511.3" y="830.0">ja..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.04%)</title><rect x="509.6" y="803.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="512.6" y="814.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1 samples, 0.04%)</title><rect x="509.6" y="787.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="512.6" y="798.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1 samples, 0.04%)</title><rect x="509.6" y="771.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="512.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (69 samples, 2.52%)</title><rect x="510.1" y="803.0" width="29.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="513.1" y="814.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (58 samples, 2.12%)</title><rect x="510.1" y="787.0" width="24.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="513.1" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2 samples, 0.07%)</title><rect x="510.1" y="771.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="513.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.isHeldExclusively (1 samples, 0.04%)</title><rect x="510.5" y="755.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="513.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.07%)</title><rect x="510.9" y="771.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="513.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.07%)</title><rect x="510.9" y="755.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="513.9" y="766.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (2 samples, 0.07%)</title><rect x="510.9" y="739.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="513.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (54 samples, 1.97%)</title><rect x="511.8" y="771.0" width="23.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="514.8" y="782.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (54 samples, 1.97%)</title><rect x="511.8" y="755.0" width="23.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="514.8" y="766.0">j..</text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="512.2" y="739.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="515.2" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.228] (1 samples, 0.04%)</title><rect x="512.6" y="739.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="515.6" y="750.0"></text>
</g>
<g>
<title>Unsafe_Park (47 samples, 1.71%)</title><rect x="513.1" y="739.0" width="20.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="516.1" y="750.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.04%)</title><rect x="514.4" y="723.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="517.4" y="734.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (10 samples, 0.36%)</title><rect x="514.8" y="723.0" width="4.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="517.8" y="734.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.04%)</title><rect x="516.9" y="707.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="519.9" y="718.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.07%)</title><rect x="517.4" y="707.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="520.4" y="718.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="518.2" y="707.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="521.2" y="718.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="519.1" y="723.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="522.1" y="734.0"></text>
</g>
<g>
<title>__lll_unlock_wake (12 samples, 0.44%)</title><rect x="519.5" y="723.0" width="5.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="522.5" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.26%)</title><rect x="521.7" y="707.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="524.7" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.26%)</title><rect x="521.7" y="691.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="524.7" y="702.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.11%)</title><rect x="523.4" y="675.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="526.4" y="686.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.07%)</title><rect x="523.4" y="659.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="526.4" y="670.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.07%)</title><rect x="523.4" y="643.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="526.4" y="654.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="524.3" y="659.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="527.3" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_wait (18 samples, 0.66%)</title><rect x="524.7" y="723.0" width="7.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="527.7" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.47%)</title><rect x="526.8" y="707.0" width="5.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="529.8" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.47%)</title><rect x="526.8" y="691.0" width="5.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="529.8" y="702.0"></text>
</g>
<g>
<title>sys_futex (10 samples, 0.36%)</title><rect x="528.1" y="675.0" width="4.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="531.1" y="686.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.36%)</title><rect x="528.1" y="659.0" width="4.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="531.1" y="670.0"></text>
</g>
<g>
<title>futex_wait (8 samples, 0.29%)</title><rect x="528.6" y="643.0" width="3.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="531.6" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (5 samples, 0.18%)</title><rect x="528.6" y="627.0" width="2.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="531.6" y="638.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.18%)</title><rect x="528.6" y="611.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="531.6" y="622.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.18%)</title><rect x="528.6" y="595.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="531.6" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 0.18%)</title><rect x="528.6" y="579.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="531.6" y="590.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.11%)</title><rect x="530.7" y="627.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="533.7" y="638.0"></text>
</g>
<g>
<title>get_futex_value_locked (2 samples, 0.07%)</title><rect x="531.1" y="611.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="534.1" y="622.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.04%)</title><rect x="532.0" y="643.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="535.0" y="654.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.04%)</title><rect x="532.4" y="723.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="535.4" y="734.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.04%)</title><rect x="532.9" y="723.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="535.9" y="734.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (4 samples, 0.15%)</title><rect x="533.3" y="739.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="536.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (4 samples, 0.15%)</title><rect x="535.0" y="787.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="538.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (4 samples, 0.15%)</title><rect x="535.0" y="771.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="538.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (4 samples, 0.15%)</title><rect x="535.0" y="755.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="538.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (4 samples, 0.15%)</title><rect x="535.0" y="739.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="538.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (4 samples, 0.15%)</title><rect x="535.0" y="723.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="538.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.26%)</title><rect x="536.7" y="787.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="539.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.26%)</title><rect x="536.7" y="771.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="539.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.26%)</title><rect x="536.7" y="755.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="539.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.26%)</title><rect x="536.7" y="739.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="539.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.26%)</title><rect x="536.7" y="723.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="539.7" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.04%)</title><rect x="536.7" y="707.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="539.7" y="718.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.04%)</title><rect x="536.7" y="691.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="539.7" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.22%)</title><rect x="537.2" y="707.0" width="2.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="540.2" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.15%)</title><rect x="538.0" y="691.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="541.0" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.15%)</title><rect x="538.0" y="675.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="541.0" y="686.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.15%)</title><rect x="538.0" y="659.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="541.0" y="670.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.15%)</title><rect x="538.0" y="643.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="541.0" y="654.0"></text>
</g>
<g>
<title>futex_wake_op (4 samples, 0.15%)</title><rect x="538.0" y="627.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="541.0" y="638.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.15%)</title><rect x="538.0" y="611.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="541.0" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.15%)</title><rect x="538.0" y="595.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="541.0" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.15%)</title><rect x="538.0" y="579.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="541.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (1 samples, 0.04%)</title><rect x="539.8" y="803.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="542.8" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$75/1549034997.run (155 samples, 5.65%)</title><rect x="540.2" y="819.0" width="66.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="543.2" y="830.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$get$1 (155 samples, 5.65%)</title><rect x="540.2" y="803.0" width="66.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="543.2" y="814.0">ru/mail..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.04%)</title><rect x="540.2" y="787.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="543.2" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.04%)</title><rect x="540.2" y="771.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="543.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.04%)</title><rect x="540.2" y="755.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="543.2" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.04%)</title><rect x="540.2" y="739.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="543.2" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="540.2" y="723.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="543.2" y="734.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.04%)</title><rect x="540.2" y="707.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="543.2" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="540.2" y="691.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="543.2" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="540.2" y="675.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="543.2" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="540.2" y="659.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="543.2" y="670.0"></text>
</g>
<g>
<title>java/lang/String.isBlank (1 samples, 0.04%)</title><rect x="540.6" y="787.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="543.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.04%)</title><rect x="540.6" y="771.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="543.6" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.07%)</title><rect x="541.0" y="787.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="544.0" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.07%)</title><rect x="541.0" y="771.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="544.0" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.07%)</title><rect x="541.0" y="755.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="544.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (1 samples, 0.04%)</title><rect x="541.5" y="739.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="544.5" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (120 samples, 4.38%)</title><rect x="541.9" y="787.0" width="51.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="544.9" y="798.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (117 samples, 4.27%)</title><rect x="542.3" y="771.0" width="50.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="545.3" y="782.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.04%)</title><rect x="542.3" y="755.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="545.3" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.04%)</title><rect x="542.3" y="739.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="545.3" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.04%)</title><rect x="542.3" y="723.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="545.3" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (116 samples, 4.23%)</title><rect x="542.8" y="755.0" width="49.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="545.8" y="766.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (116 samples, 4.23%)</title><rect x="542.8" y="739.0" width="49.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="545.8" y="750.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (116 samples, 4.23%)</title><rect x="542.8" y="723.0" width="49.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="545.8" y="734.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (116 samples, 4.23%)</title><rect x="542.8" y="707.0" width="49.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="545.8" y="718.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.15%)</title><rect x="542.8" y="691.0" width="1.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="545.8" y="702.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="542.8" y="675.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="545.8" y="686.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned (1 samples, 0.04%)</title><rect x="543.2" y="675.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="546.2" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.07%)</title><rect x="543.6" y="675.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="546.6" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.04%)</title><rect x="544.1" y="659.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="547.1" y="670.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.04%)</title><rect x="544.5" y="691.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="547.5" y="702.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.04%)</title><rect x="544.9" y="691.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="547.9" y="702.0"></text>
</g>
<g>
<title>send (110 samples, 4.01%)</title><rect x="545.3" y="691.0" width="47.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="548.3" y="702.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (104 samples, 3.79%)</title><rect x="547.9" y="675.0" width="44.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="550.9" y="686.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (103 samples, 3.76%)</title><rect x="547.9" y="659.0" width="44.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="550.9" y="670.0">do_s..</text>
</g>
<g>
<title>sys_sendto (100 samples, 3.65%)</title><rect x="549.2" y="643.0" width="43.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="552.2" y="654.0">sys_..</text>
</g>
<g>
<title>SYSC_sendto (99 samples, 3.61%)</title><rect x="549.2" y="627.0" width="42.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="552.2" y="638.0">SYSC..</text>
</g>
<g>
<title>sock_sendmsg (95 samples, 3.46%)</title><rect x="550.1" y="611.0" width="40.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="553.1" y="622.0">soc..</text>
</g>
<g>
<title>inet_sendmsg (93 samples, 3.39%)</title><rect x="550.1" y="595.0" width="40.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="553.1" y="606.0">ine..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="550.1" y="579.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="553.1" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (92 samples, 3.36%)</title><rect x="550.5" y="579.0" width="39.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="553.5" y="590.0">tcp..</text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="550.5" y="563.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="553.5" y="574.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.04%)</title><rect x="550.9" y="563.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="553.9" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (90 samples, 3.28%)</title><rect x="551.4" y="563.0" width="38.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="554.4" y="574.0">tcp..</text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.07%)</title><rect x="553.1" y="547.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="556.1" y="558.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.07%)</title><rect x="553.1" y="531.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="556.1" y="542.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (5 samples, 0.18%)</title><rect x="554.0" y="547.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="557.0" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.15%)</title><rect x="554.4" y="531.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="557.4" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (1 samples, 0.04%)</title><rect x="554.8" y="515.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="557.8" y="526.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.04%)</title><rect x="554.8" y="499.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="557.8" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.04%)</title><rect x="555.2" y="515.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="558.2" y="526.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.04%)</title><rect x="555.2" y="499.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="558.2" y="510.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.04%)</title><rect x="555.7" y="515.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="558.7" y="526.0"></text>
</g>
<g>
<title>tcp_push (75 samples, 2.74%)</title><rect x="556.1" y="547.0" width="32.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="559.1" y="558.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (75 samples, 2.74%)</title><rect x="556.1" y="531.0" width="32.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="559.1" y="542.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (75 samples, 2.74%)</title><rect x="556.1" y="515.0" width="32.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="559.1" y="526.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (69 samples, 2.52%)</title><rect x="556.5" y="499.0" width="29.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="559.5" y="510.0">__..</text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.04%)</title><rect x="557.4" y="483.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="560.4" y="494.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.04%)</title><rect x="557.8" y="483.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="560.8" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (65 samples, 2.37%)</title><rect x="558.3" y="483.0" width="27.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="561.3" y="494.0">i..</text>
</g>
<g>
<title>ip_local_out (65 samples, 2.37%)</title><rect x="558.3" y="467.0" width="27.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="561.3" y="478.0">i..</text>
</g>
<g>
<title>__ip_local_out (13 samples, 0.47%)</title><rect x="558.3" y="451.0" width="5.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="561.3" y="462.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.04%)</title><rect x="558.3" y="435.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="561.3" y="446.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (1 samples, 0.04%)</title><rect x="558.7" y="435.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="561.7" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (11 samples, 0.40%)</title><rect x="559.1" y="435.0" width="4.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="562.1" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.07%)</title><rect x="559.1" y="419.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="562.1" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.07%)</title><rect x="559.1" y="403.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="562.1" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (8 samples, 0.29%)</title><rect x="560.0" y="419.0" width="3.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="563.0" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (8 samples, 0.29%)</title><rect x="560.0" y="403.0" width="3.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="563.0" y="414.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (1 samples, 0.04%)</title><rect x="560.8" y="387.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="563.8" y="398.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (1 samples, 0.04%)</title><rect x="561.3" y="387.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="564.3" y="398.0"></text>
</g>
<g>
<title>tcp_error?[nf_conntrack] (1 samples, 0.04%)</title><rect x="561.7" y="387.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="564.7" y="398.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (3 samples, 0.11%)</title><rect x="562.1" y="387.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="565.1" y="398.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct?[nf_conntrack] (2 samples, 0.07%)</title><rect x="562.1" y="371.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="565.1" y="382.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (1 samples, 0.04%)</title><rect x="563.0" y="371.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="566.0" y="382.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.04%)</title><rect x="563.4" y="419.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="566.4" y="430.0"></text>
</g>
<g>
<title>ip_output (52 samples, 1.90%)</title><rect x="563.9" y="451.0" width="22.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="566.9" y="462.0">i..</text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.04%)</title><rect x="563.9" y="435.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="566.9" y="446.0"></text>
</g>
<g>
<title>ip_finish_output (48 samples, 1.75%)</title><rect x="564.3" y="435.0" width="20.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="567.3" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (48 samples, 1.75%)</title><rect x="564.3" y="419.0" width="20.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="567.3" y="430.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (38 samples, 1.39%)</title><rect x="565.1" y="403.0" width="16.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="568.1" y="414.0"></text>
</g>
<g>
<title>do_softirq.part.17 (38 samples, 1.39%)</title><rect x="565.1" y="387.0" width="16.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="568.1" y="398.0"></text>
</g>
<g>
<title>do_softirq_own_stack (38 samples, 1.39%)</title><rect x="565.1" y="371.0" width="16.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="568.1" y="382.0"></text>
</g>
<g>
<title>__softirqentry_text_start (38 samples, 1.39%)</title><rect x="565.1" y="355.0" width="16.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="568.1" y="366.0"></text>
</g>
<g>
<title>net_rx_action (37 samples, 1.35%)</title><rect x="565.6" y="339.0" width="15.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="568.6" y="350.0"></text>
</g>
<g>
<title>process_backlog (36 samples, 1.31%)</title><rect x="566.0" y="323.0" width="15.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="569.0" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb (36 samples, 1.31%)</title><rect x="566.0" y="307.0" width="15.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="569.0" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (35 samples, 1.28%)</title><rect x="566.0" y="291.0" width="15.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="569.0" y="302.0"></text>
</g>
<g>
<title>ip_rcv (34 samples, 1.24%)</title><rect x="566.4" y="275.0" width="14.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="569.4" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (32 samples, 1.17%)</title><rect x="566.4" y="259.0" width="13.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="569.4" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (29 samples, 1.06%)</title><rect x="567.3" y="243.0" width="12.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="570.3" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (27 samples, 0.98%)</title><rect x="567.3" y="227.0" width="11.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="570.3" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (27 samples, 0.98%)</title><rect x="567.3" y="211.0" width="11.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="570.3" y="222.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.04%)</title><rect x="567.7" y="195.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="570.7" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.04%)</title><rect x="568.2" y="195.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="571.2" y="206.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.04%)</title><rect x="568.2" y="179.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="571.2" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.04%)</title><rect x="568.6" y="195.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="571.6" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (23 samples, 0.84%)</title><rect x="569.0" y="195.0" width="9.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="572.0" y="206.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.07%)</title><rect x="569.0" y="179.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="572.0" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (21 samples, 0.77%)</title><rect x="569.9" y="179.0" width="9.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="572.9" y="190.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.11%)</title><rect x="570.3" y="163.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="573.3" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.11%)</title><rect x="570.3" y="147.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="573.3" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.11%)</title><rect x="570.3" y="131.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="573.3" y="142.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.11%)</title><rect x="570.3" y="115.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="573.3" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.11%)</title><rect x="570.3" y="99.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="573.3" y="110.0"></text>
</g>
<g>
<title>tcp_ack (6 samples, 0.22%)</title><rect x="571.6" y="163.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="574.6" y="174.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (4 samples, 0.15%)</title><rect x="572.5" y="147.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="575.5" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.07%)</title><rect x="572.5" y="131.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="575.5" y="142.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.07%)</title><rect x="572.5" y="115.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="575.5" y="126.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.07%)</title><rect x="572.5" y="99.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="575.5" y="110.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.04%)</title><rect x="572.9" y="83.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="575.9" y="94.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="572.9" y="67.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="575.9" y="78.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.04%)</title><rect x="573.3" y="131.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="576.3" y="142.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.41 (1 samples, 0.04%)</title><rect x="573.7" y="131.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="576.7" y="142.0"></text>
</g>
<g>
<title>minmax_running_min (1 samples, 0.04%)</title><rect x="573.7" y="115.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="576.7" y="126.0"></text>
</g>
<g>
<title>tcp_data_queue (9 samples, 0.33%)</title><rect x="574.2" y="163.0" width="3.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="577.2" y="174.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.04%)</title><rect x="574.2" y="147.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="577.2" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (8 samples, 0.29%)</title><rect x="574.6" y="147.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="577.6" y="158.0"></text>
</g>
<g>
<title>__wake_up_sync_key (7 samples, 0.26%)</title><rect x="575.0" y="131.0" width="3.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="578.0" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (7 samples, 0.26%)</title><rect x="575.0" y="115.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="578.0" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.26%)</title><rect x="575.0" y="99.0" width="3.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="578.0" y="110.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.04%)</title><rect x="578.1" y="163.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="581.1" y="174.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.04%)</title><rect x="578.5" y="163.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="581.5" y="174.0"></text>
</g>
<g>
<title>ipv4_helper?[nf_conntrack_ipv4] (1 samples, 0.04%)</title><rect x="578.9" y="227.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="581.9" y="238.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.04%)</title><rect x="579.3" y="227.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="582.3" y="238.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.04%)</title><rect x="579.3" y="211.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="582.3" y="222.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.04%)</title><rect x="579.3" y="195.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="582.3" y="206.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.04%)</title><rect x="579.8" y="243.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="582.8" y="254.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (1 samples, 0.04%)</title><rect x="580.2" y="259.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="583.2" y="270.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.04%)</title><rect x="580.6" y="259.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="583.6" y="270.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.04%)</title><rect x="581.1" y="291.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="584.1" y="302.0"></text>
</g>
<g>
<title>dev_queue_xmit (8 samples, 0.29%)</title><rect x="581.5" y="403.0" width="3.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="584.5" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (7 samples, 0.26%)</title><rect x="581.5" y="387.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="584.5" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="582.4" y="371.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="585.4" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.04%)</title><rect x="582.8" y="371.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="585.8" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.04%)</title><rect x="582.8" y="355.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="585.8" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.11%)</title><rect x="583.2" y="371.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="586.2" y="382.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.04%)</title><rect x="584.1" y="355.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="587.1" y="366.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="584.5" y="387.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="587.5" y="398.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.11%)</title><rect x="584.9" y="435.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="587.9" y="446.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (2 samples, 0.07%)</title><rect x="584.9" y="419.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="587.9" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.04%)</title><rect x="585.4" y="403.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="588.4" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat_ipv4] (1 samples, 0.04%)</title><rect x="585.8" y="419.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="588.8" y="430.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.04%)</title><rect x="586.2" y="499.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="589.2" y="510.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.04%)</title><rect x="586.7" y="499.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="589.7" y="510.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.04%)</title><rect x="587.1" y="499.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="590.1" y="510.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (2 samples, 0.07%)</title><rect x="587.5" y="499.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="590.5" y="510.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.15%)</title><rect x="588.4" y="547.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="591.4" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="588.4" y="531.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="591.4" y="542.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.11%)</title><rect x="588.8" y="531.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="591.8" y="542.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.07%)</title><rect x="590.1" y="595.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="593.1" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.07%)</title><rect x="590.1" y="579.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="593.1" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.07%)</title><rect x="590.1" y="563.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="593.1" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.04%)</title><rect x="590.5" y="547.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="593.5" y="558.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.07%)</title><rect x="591.0" y="611.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="594.0" y="622.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="591.0" y="595.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="594.0" y="606.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="591.0" y="579.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="594.0" y="590.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="591.0" y="563.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="594.0" y="574.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="591.4" y="595.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="594.4" y="606.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.04%)</title><rect x="591.8" y="627.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="594.8" y="638.0"></text>
</g>
<g>
<title>sys_sendto (1 samples, 0.04%)</title><rect x="592.3" y="659.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="595.3" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="592.7" y="771.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="595.7" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.isHttp11 (1 samples, 0.04%)</title><rect x="593.1" y="771.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="596.1" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="593.1" y="755.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="596.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (31 samples, 1.13%)</title><rect x="593.5" y="787.0" width="13.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="596.5" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (1 samples, 0.04%)</title><rect x="593.5" y="771.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="596.5" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.04%)</title><rect x="593.5" y="755.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="596.5" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.04%)</title><rect x="593.5" y="739.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="596.5" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1 samples, 0.04%)</title><rect x="593.5" y="723.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="596.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.04%)</title><rect x="593.5" y="707.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="596.5" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.04%)</title><rect x="593.5" y="691.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="596.5" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1 samples, 0.04%)</title><rect x="593.5" y="675.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="596.5" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1 samples, 0.04%)</title><rect x="593.5" y="659.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="596.5" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (1 samples, 0.04%)</title><rect x="593.5" y="643.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="596.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (30 samples, 1.09%)</title><rect x="594.0" y="771.0" width="12.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="597.0" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.04%)</title><rect x="594.0" y="755.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="597.0" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="594.0" y="739.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="597.0" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="594.0" y="723.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="597.0" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="594.0" y="707.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="597.0" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="594.0" y="691.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="597.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.04%)</title><rect x="594.4" y="755.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="597.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.04%)</title><rect x="594.4" y="739.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="597.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.04%)</title><rect x="594.4" y="723.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="597.4" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (21 samples, 0.77%)</title><rect x="594.8" y="755.0" width="9.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="597.8" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (21 samples, 0.77%)</title><rect x="594.8" y="739.0" width="9.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="597.8" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (3 samples, 0.11%)</title><rect x="594.8" y="723.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="597.8" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (3 samples, 0.11%)</title><rect x="594.8" y="707.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="597.8" y="718.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (3 samples, 0.11%)</title><rect x="594.8" y="691.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="597.8" y="702.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (2 samples, 0.07%)</title><rect x="595.3" y="675.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="598.3" y="686.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (2 samples, 0.07%)</title><rect x="595.3" y="659.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="598.3" y="670.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (2 samples, 0.07%)</title><rect x="595.3" y="643.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="598.3" y="654.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (1 samples, 0.04%)</title><rect x="595.7" y="627.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="598.7" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (1 samples, 0.04%)</title><rect x="595.7" y="611.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="598.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (1 samples, 0.04%)</title><rect x="595.7" y="595.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="598.7" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.04%)</title><rect x="595.7" y="579.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="598.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (1 samples, 0.04%)</title><rect x="595.7" y="563.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="598.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (1 samples, 0.04%)</title><rect x="595.7" y="547.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="598.7" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.04%)</title><rect x="595.7" y="531.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="598.7" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.04%)</title><rect x="595.7" y="515.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="598.7" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="595.7" y="499.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="598.7" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="595.7" y="483.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="598.7" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="595.7" y="467.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="598.7" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="595.7" y="451.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="598.7" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="595.7" y="435.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="598.7" y="446.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.04%)</title><rect x="595.7" y="419.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="598.7" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.07%)</title><rect x="596.1" y="723.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="599.1" y="734.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (1 samples, 0.04%)</title><rect x="596.6" y="707.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="599.6" y="718.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (1 samples, 0.04%)</title><rect x="596.6" y="691.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="599.6" y="702.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (1 samples, 0.04%)</title><rect x="597.0" y="723.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="600.0" y="734.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (1 samples, 0.04%)</title><rect x="597.0" y="707.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="600.0" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="597.0" y="691.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="600.0" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="597.0" y="675.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="600.0" y="686.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$95/683319954.get$Lambda (1 samples, 0.04%)</title><rect x="597.0" y="659.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="600.0" y="670.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$95/683319954.&lt;init&gt; (1 samples, 0.04%)</title><rect x="597.0" y="643.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="600.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (2 samples, 0.07%)</title><rect x="597.4" y="723.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="600.4" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1 samples, 0.04%)</title><rect x="597.8" y="707.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="600.8" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.04%)</title><rect x="597.8" y="691.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="600.8" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (1 samples, 0.04%)</title><rect x="597.8" y="675.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="600.8" y="686.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1 samples, 0.04%)</title><rect x="597.8" y="659.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="600.8" y="670.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1 samples, 0.04%)</title><rect x="597.8" y="643.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="600.8" y="654.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1 samples, 0.04%)</title><rect x="597.8" y="627.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="600.8" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (1 samples, 0.04%)</title><rect x="597.8" y="611.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="600.8" y="622.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (1 samples, 0.04%)</title><rect x="597.8" y="595.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="600.8" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (1 samples, 0.04%)</title><rect x="597.8" y="579.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="600.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (1 samples, 0.04%)</title><rect x="597.8" y="563.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="600.8" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.04%)</title><rect x="597.8" y="547.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="600.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (1 samples, 0.04%)</title><rect x="597.8" y="531.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="600.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (1 samples, 0.04%)</title><rect x="597.8" y="515.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="600.8" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.04%)</title><rect x="597.8" y="499.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="600.8" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.04%)</title><rect x="597.8" y="483.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="600.8" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="597.8" y="467.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="600.8" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="597.8" y="451.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="600.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (13 samples, 0.47%)</title><rect x="598.3" y="723.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="601.3" y="734.0"></text>
</g>
<g>
<title>java/util/Collection.stream (13 samples, 0.47%)</title><rect x="598.3" y="707.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="601.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (13 samples, 0.47%)</title><rect x="598.3" y="691.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="601.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (13 samples, 0.47%)</title><rect x="598.3" y="675.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="601.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (13 samples, 0.47%)</title><rect x="598.3" y="659.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="601.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (13 samples, 0.47%)</title><rect x="598.3" y="643.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="601.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (13 samples, 0.47%)</title><rect x="598.3" y="627.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="601.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.07%)</title><rect x="598.7" y="611.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="601.7" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.07%)</title><rect x="598.7" y="595.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="601.7" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.07%)</title><rect x="598.7" y="579.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="601.7" y="590.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.07%)</title><rect x="598.7" y="563.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="601.7" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.04%)</title><rect x="599.1" y="547.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="602.1" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.04%)</title><rect x="599.1" y="531.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="602.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (10 samples, 0.36%)</title><rect x="599.6" y="611.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="602.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.11%)</title><rect x="602.6" y="595.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="605.6" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.11%)</title><rect x="602.6" y="579.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="605.6" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.07%)</title><rect x="603.0" y="563.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="606.0" y="574.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.07%)</title><rect x="603.0" y="547.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="606.0" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.04%)</title><rect x="603.4" y="531.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="606.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (7 samples, 0.26%)</title><rect x="603.9" y="755.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="606.9" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (5 samples, 0.18%)</title><rect x="603.9" y="739.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="606.9" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (5 samples, 0.18%)</title><rect x="603.9" y="723.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="606.9" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (5 samples, 0.18%)</title><rect x="603.9" y="707.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="606.9" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (5 samples, 0.18%)</title><rect x="603.9" y="691.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="606.9" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (5 samples, 0.18%)</title><rect x="603.9" y="675.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="606.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (5 samples, 0.18%)</title><rect x="603.9" y="659.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="606.9" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.11%)</title><rect x="604.3" y="643.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="607.3" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (3 samples, 0.11%)</title><rect x="604.3" y="627.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="607.3" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.04%)</title><rect x="604.3" y="611.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="607.3" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.04%)</title><rect x="604.3" y="595.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="607.3" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (1 samples, 0.04%)</title><rect x="604.3" y="579.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="607.3" y="590.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (2 samples, 0.07%)</title><rect x="604.7" y="611.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="607.7" y="622.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (2 samples, 0.07%)</title><rect x="604.7" y="595.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="607.7" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (2 samples, 0.07%)</title><rect x="604.7" y="579.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="607.7" y="590.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (2 samples, 0.07%)</title><rect x="604.7" y="563.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="607.7" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (2 samples, 0.07%)</title><rect x="604.7" y="547.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="607.7" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (2 samples, 0.07%)</title><rect x="604.7" y="531.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="607.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (2 samples, 0.07%)</title><rect x="604.7" y="515.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="607.7" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2 samples, 0.07%)</title><rect x="604.7" y="499.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="607.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (1 samples, 0.04%)</title><rect x="605.2" y="483.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="608.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (1 samples, 0.04%)</title><rect x="605.2" y="467.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="608.2" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.04%)</title><rect x="605.6" y="643.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="608.6" y="654.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.04%)</title><rect x="605.6" y="627.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="608.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (2 samples, 0.07%)</title><rect x="606.0" y="739.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="609.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (2 samples, 0.07%)</title><rect x="606.0" y="723.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="609.0" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.07%)</title><rect x="606.0" y="707.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="609.0" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (2 samples, 0.07%)</title><rect x="606.0" y="691.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="609.0" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (2 samples, 0.07%)</title><rect x="606.0" y="675.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="609.0" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (2 samples, 0.07%)</title><rect x="606.0" y="659.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="609.0" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (2 samples, 0.07%)</title><rect x="606.0" y="643.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="609.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2 samples, 0.07%)</title><rect x="606.0" y="627.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="609.0" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.04%)</title><rect x="606.0" y="611.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="609.0" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (1 samples, 0.04%)</title><rect x="606.0" y="595.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="609.0" y="606.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1 samples, 0.04%)</title><rect x="606.0" y="579.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="609.0" y="590.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1 samples, 0.04%)</title><rect x="606.0" y="563.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="609.0" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1 samples, 0.04%)</title><rect x="606.0" y="547.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="609.0" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (1 samples, 0.04%)</title><rect x="606.0" y="531.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="609.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="606.0" y="515.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="609.0" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="606.0" y="499.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="609.0" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$111/1835775400.get$Lambda (1 samples, 0.04%)</title><rect x="606.0" y="483.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="609.0" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.04%)</title><rect x="606.5" y="611.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="609.5" y="622.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.04%)</title><rect x="606.5" y="595.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="609.5" y="606.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.04%)</title><rect x="606.5" y="579.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="609.5" y="590.0"></text>
</g>
<g>
<title>[2020-highload-dht-thread-96 tid=31739] (232 samples, 8.46%)</title><rect x="606.9" y="883.0" width="99.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="609.9" y="894.0">[2020-highlo..</text>
</g>
<g>
<title>java/lang/Thread.run (232 samples, 8.46%)</title><rect x="606.9" y="867.0" width="99.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="609.9" y="878.0">java/lang/Th..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (232 samples, 8.46%)</title><rect x="606.9" y="851.0" width="99.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="609.9" y="862.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (232 samples, 8.46%)</title><rect x="606.9" y="835.0" width="99.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="609.9" y="846.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.04%)</title><rect x="606.9" y="819.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="609.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.04%)</title><rect x="606.9" y="803.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="609.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (60 samples, 2.19%)</title><rect x="607.3" y="819.0" width="25.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="610.3" y="830.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (58 samples, 2.12%)</title><rect x="608.2" y="803.0" width="24.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="611.2" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (41 samples, 1.50%)</title><rect x="608.2" y="787.0" width="17.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="611.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.04%)</title><rect x="608.2" y="771.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="611.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.11%)</title><rect x="608.6" y="771.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="611.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3 samples, 0.11%)</title><rect x="608.6" y="755.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="611.6" y="766.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (2 samples, 0.07%)</title><rect x="608.6" y="739.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="611.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.04%)</title><rect x="609.5" y="739.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="612.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.07%)</title><rect x="609.9" y="771.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="612.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.07%)</title><rect x="609.9" y="755.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="612.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.07%)</title><rect x="609.9" y="739.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="612.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.07%)</title><rect x="609.9" y="723.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="612.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.07%)</title><rect x="609.9" y="707.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="612.9" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.07%)</title><rect x="609.9" y="691.0" width="0.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="612.9" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.07%)</title><rect x="609.9" y="675.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="612.9" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.07%)</title><rect x="609.9" y="659.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="612.9" y="670.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.07%)</title><rect x="609.9" y="643.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="612.9" y="654.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.07%)</title><rect x="609.9" y="627.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="612.9" y="638.0"></text>
</g>
<g>
<title>futex_wake_op (2 samples, 0.07%)</title><rect x="609.9" y="611.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="612.9" y="622.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.04%)</title><rect x="610.3" y="595.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="613.3" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.04%)</title><rect x="610.3" y="579.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="613.3" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="610.3" y="563.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="613.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (1 samples, 0.04%)</title><rect x="610.8" y="771.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="613.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (1 samples, 0.04%)</title><rect x="610.8" y="755.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="613.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (34 samples, 1.24%)</title><rect x="611.2" y="771.0" width="14.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="614.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (34 samples, 1.24%)</title><rect x="611.2" y="755.0" width="14.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="614.2" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (32 samples, 1.17%)</title><rect x="611.6" y="739.0" width="13.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="614.6" y="750.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.04%)</title><rect x="612.0" y="723.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="615.0" y="734.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.04%)</title><rect x="612.5" y="723.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="615.5" y="734.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.04%)</title><rect x="612.9" y="723.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="615.9" y="734.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (8 samples, 0.29%)</title><rect x="613.3" y="723.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="616.3" y="734.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.04%)</title><rect x="614.2" y="707.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="617.2" y="718.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.07%)</title><rect x="614.6" y="707.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="617.6" y="718.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.11%)</title><rect x="615.5" y="707.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="618.5" y="718.0"></text>
</g>
<g>
<title>__lll_unlock_wake (5 samples, 0.18%)</title><rect x="616.8" y="723.0" width="2.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="619.8" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.15%)</title><rect x="617.2" y="707.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="620.2" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.11%)</title><rect x="617.2" y="691.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="620.2" y="702.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="618.1" y="675.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="621.1" y="686.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.04%)</title><rect x="618.5" y="691.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="621.5" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_wait (9 samples, 0.33%)</title><rect x="618.9" y="723.0" width="3.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="621.9" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.22%)</title><rect x="620.2" y="707.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="623.2" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.22%)</title><rect x="620.2" y="691.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="623.2" y="702.0"></text>
</g>
<g>
<title>sys_futex (6 samples, 0.22%)</title><rect x="620.2" y="675.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="623.2" y="686.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.22%)</title><rect x="620.2" y="659.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="623.2" y="670.0"></text>
</g>
<g>
<title>futex_wait (5 samples, 0.18%)</title><rect x="620.7" y="643.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="623.7" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (4 samples, 0.15%)</title><rect x="621.1" y="627.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="624.1" y="638.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.11%)</title><rect x="621.5" y="611.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="624.5" y="622.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.11%)</title><rect x="621.5" y="595.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="624.5" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.11%)</title><rect x="621.5" y="579.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="624.5" y="590.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.04%)</title><rect x="622.8" y="723.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="625.8" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="623.2" y="723.0" width="0.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="626.2" y="734.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.04%)</title><rect x="624.1" y="723.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="627.1" y="734.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.04%)</title><rect x="624.5" y="723.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="627.5" y="734.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (1 samples, 0.04%)</title><rect x="625.0" y="723.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="628.0" y="734.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.04%)</title><rect x="625.4" y="739.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="628.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (4 samples, 0.15%)</title><rect x="625.8" y="787.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="628.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (4 samples, 0.15%)</title><rect x="625.8" y="771.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="628.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.04%)</title><rect x="625.8" y="755.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="628.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (1 samples, 0.04%)</title><rect x="625.8" y="739.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="628.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (3 samples, 0.11%)</title><rect x="626.3" y="755.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="629.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (3 samples, 0.11%)</title><rect x="626.3" y="739.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="629.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (2 samples, 0.07%)</title><rect x="626.3" y="723.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="629.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.04%)</title><rect x="627.1" y="723.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="630.1" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.04%)</title><rect x="627.1" y="707.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="630.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (12 samples, 0.44%)</title><rect x="627.5" y="787.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="630.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (12 samples, 0.44%)</title><rect x="627.5" y="771.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="630.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (12 samples, 0.44%)</title><rect x="627.5" y="755.0" width="5.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="630.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.44%)</title><rect x="627.5" y="739.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="630.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.44%)</title><rect x="627.5" y="723.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="630.5" y="734.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.04%)</title><rect x="627.5" y="707.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="630.5" y="718.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.04%)</title><rect x="628.0" y="707.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="631.0" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.04%)</title><rect x="628.0" y="691.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="631.0" y="702.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="628.0" y="675.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="631.0" y="686.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="628.0" y="659.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="631.0" y="670.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="628.0" y="643.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="631.0" y="654.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="628.0" y="627.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="631.0" y="638.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.04%)</title><rect x="628.0" y="611.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="631.0" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_signal (10 samples, 0.36%)</title><rect x="628.4" y="707.0" width="4.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="631.4" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.33%)</title><rect x="628.8" y="691.0" width="3.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="631.8" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.33%)</title><rect x="628.8" y="675.0" width="3.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="631.8" y="686.0"></text>
</g>
<g>
<title>sys_futex (9 samples, 0.33%)</title><rect x="628.8" y="659.0" width="3.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="631.8" y="670.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.33%)</title><rect x="628.8" y="643.0" width="3.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="631.8" y="654.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="628.8" y="627.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="631.8" y="638.0"></text>
</g>
<g>
<title>futex_wake_op (8 samples, 0.29%)</title><rect x="629.3" y="627.0" width="3.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="632.3" y="638.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.04%)</title><rect x="629.7" y="611.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="632.7" y="622.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.9 (1 samples, 0.04%)</title><rect x="629.7" y="595.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="632.7" y="606.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.22%)</title><rect x="630.1" y="611.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="633.1" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.22%)</title><rect x="630.1" y="595.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="633.1" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.22%)</title><rect x="630.1" y="579.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="633.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (1 samples, 0.04%)</title><rect x="632.7" y="787.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="635.7" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$75/1549034997.run (171 samples, 6.24%)</title><rect x="633.1" y="819.0" width="73.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="636.1" y="830.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$get$1 (171 samples, 6.24%)</title><rect x="633.1" y="803.0" width="73.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="636.1" y="814.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.isBlank (1 samples, 0.04%)</title><rect x="633.6" y="787.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="636.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.04%)</title><rect x="633.6" y="771.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="636.6" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="634.0" y="787.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="637.0" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="634.0" y="771.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="637.0" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="634.0" y="755.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="637.0" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (114 samples, 4.16%)</title><rect x="634.4" y="787.0" width="49.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="637.4" y="798.0">one/n..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.07%)</title><rect x="635.3" y="771.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="638.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.07%)</title><rect x="635.3" y="755.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="638.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.07%)</title><rect x="635.3" y="739.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="638.3" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.04%)</title><rect x="635.7" y="723.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="638.7" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (109 samples, 3.98%)</title><rect x="636.1" y="771.0" width="47.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="639.1" y="782.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.04%)</title><rect x="636.1" y="755.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="639.1" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (108 samples, 3.94%)</title><rect x="636.6" y="755.0" width="46.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="639.6" y="766.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (108 samples, 3.94%)</title><rect x="636.6" y="739.0" width="46.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="639.6" y="750.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (108 samples, 3.94%)</title><rect x="636.6" y="723.0" width="46.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="639.6" y="734.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (108 samples, 3.94%)</title><rect x="636.6" y="707.0" width="46.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="639.6" y="718.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.11%)</title><rect x="637.0" y="691.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="640.0" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.04%)</title><rect x="637.4" y="675.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="640.4" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="637.9" y="675.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="640.9" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.04%)</title><rect x="637.9" y="659.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="640.9" y="670.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.04%)</title><rect x="638.3" y="691.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="641.3" y="702.0"></text>
</g>
<g>
<title>send (103 samples, 3.76%)</title><rect x="638.7" y="691.0" width="44.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="641.7" y="702.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (100 samples, 3.65%)</title><rect x="640.0" y="675.0" width="43.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="643.0" y="686.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (100 samples, 3.65%)</title><rect x="640.0" y="659.0" width="43.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="643.0" y="670.0">do_s..</text>
</g>
<g>
<title>sys_sendto (99 samples, 3.61%)</title><rect x="640.5" y="643.0" width="42.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="643.5" y="654.0">sys_..</text>
</g>
<g>
<title>SYSC_sendto (97 samples, 3.54%)</title><rect x="640.5" y="627.0" width="41.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="643.5" y="638.0">SYS..</text>
</g>
<g>
<title>import_single_range (1 samples, 0.04%)</title><rect x="640.5" y="611.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="643.5" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (93 samples, 3.39%)</title><rect x="640.9" y="611.0" width="40.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="643.9" y="622.0">soc..</text>
</g>
<g>
<title>inet_sendmsg (92 samples, 3.36%)</title><rect x="640.9" y="595.0" width="39.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="643.9" y="606.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (92 samples, 3.36%)</title><rect x="640.9" y="579.0" width="39.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="643.9" y="590.0">tcp..</text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="640.9" y="563.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="643.9" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (91 samples, 3.32%)</title><rect x="641.3" y="563.0" width="39.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="644.3" y="574.0">tcp..</text>
</g>
<g>
<title>copyin (1 samples, 0.04%)</title><rect x="641.7" y="547.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="644.7" y="558.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.04%)</title><rect x="642.2" y="547.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="645.2" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (3 samples, 0.11%)</title><rect x="642.6" y="547.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="645.6" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.11%)</title><rect x="642.6" y="531.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="645.6" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.11%)</title><rect x="642.6" y="515.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="645.6" y="526.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.04%)</title><rect x="643.5" y="499.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="646.5" y="510.0"></text>
</g>
<g>
<title>tcp_push (81 samples, 2.95%)</title><rect x="643.9" y="547.0" width="34.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="646.9" y="558.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (81 samples, 2.95%)</title><rect x="643.9" y="531.0" width="34.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="646.9" y="542.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (81 samples, 2.95%)</title><rect x="643.9" y="515.0" width="34.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="646.9" y="526.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (76 samples, 2.77%)</title><rect x="644.3" y="499.0" width="32.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="647.3" y="510.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (72 samples, 2.63%)</title><rect x="645.2" y="483.0" width="31.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="648.2" y="494.0">ip..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.04%)</title><rect x="645.6" y="467.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="648.6" y="478.0"></text>
</g>
<g>
<title>ip_local_out (70 samples, 2.55%)</title><rect x="646.0" y="467.0" width="30.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="649.0" y="478.0">ip..</text>
</g>
<g>
<title>__ip_local_out (13 samples, 0.47%)</title><rect x="646.0" y="451.0" width="5.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="649.0" y="462.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (1 samples, 0.04%)</title><rect x="646.0" y="435.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="649.0" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (1 samples, 0.04%)</title><rect x="646.5" y="435.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="649.5" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (11 samples, 0.40%)</title><rect x="646.9" y="435.0" width="4.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="649.9" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.07%)</title><rect x="646.9" y="419.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="649.9" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.07%)</title><rect x="646.9" y="403.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="649.9" y="414.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (3 samples, 0.11%)</title><rect x="647.8" y="419.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="650.8" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (3 samples, 0.11%)</title><rect x="647.8" y="403.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="650.8" y="414.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn?[iptable_nat] (1 samples, 0.04%)</title><rect x="649.1" y="419.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="652.1" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (1 samples, 0.04%)</title><rect x="649.1" y="403.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="652.1" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (1 samples, 0.04%)</title><rect x="649.1" y="387.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="652.1" y="398.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (1 samples, 0.04%)</title><rect x="649.1" y="371.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="652.1" y="382.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (5 samples, 0.18%)</title><rect x="649.5" y="419.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="652.5" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (5 samples, 0.18%)</title><rect x="649.5" y="403.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="652.5" y="414.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (1 samples, 0.04%)</title><rect x="649.5" y="387.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="652.5" y="398.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (1 samples, 0.04%)</title><rect x="649.9" y="387.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="652.9" y="398.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="650.4" y="387.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="653.4" y="398.0"></text>
</g>
<g>
<title>ipv4_get_l4proto?[nf_conntrack_ipv4] (1 samples, 0.04%)</title><rect x="650.8" y="387.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="653.8" y="398.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (1 samples, 0.04%)</title><rect x="651.2" y="387.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="654.2" y="398.0"></text>
</g>
<g>
<title>ip_output (57 samples, 2.08%)</title><rect x="651.6" y="451.0" width="24.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="654.6" y="462.0">i..</text>
</g>
<g>
<title>ip_finish_output (56 samples, 2.04%)</title><rect x="651.6" y="435.0" width="24.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="654.6" y="446.0">i..</text>
</g>
<g>
<title>ip_finish_output2 (56 samples, 2.04%)</title><rect x="651.6" y="419.0" width="24.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="654.6" y="430.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (45 samples, 1.64%)</title><rect x="653.4" y="403.0" width="19.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="656.4" y="414.0"></text>
</g>
<g>
<title>do_softirq.part.17 (45 samples, 1.64%)</title><rect x="653.4" y="387.0" width="19.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="656.4" y="398.0"></text>
</g>
<g>
<title>do_softirq_own_stack (44 samples, 1.60%)</title><rect x="653.8" y="371.0" width="18.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="656.8" y="382.0"></text>
</g>
<g>
<title>__softirqentry_text_start (44 samples, 1.60%)</title><rect x="653.8" y="355.0" width="18.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="656.8" y="366.0"></text>
</g>
<g>
<title>net_rx_action (40 samples, 1.46%)</title><rect x="654.7" y="339.0" width="17.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="657.7" y="350.0"></text>
</g>
<g>
<title>process_backlog (40 samples, 1.46%)</title><rect x="654.7" y="323.0" width="17.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="657.7" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb (39 samples, 1.42%)</title><rect x="655.1" y="307.0" width="16.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="658.1" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (39 samples, 1.42%)</title><rect x="655.1" y="291.0" width="16.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="658.1" y="302.0"></text>
</g>
<g>
<title>ip_rcv (38 samples, 1.39%)</title><rect x="655.5" y="275.0" width="16.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="658.5" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (36 samples, 1.31%)</title><rect x="656.4" y="259.0" width="15.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="659.4" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (35 samples, 1.28%)</title><rect x="656.8" y="243.0" width="15.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="659.8" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (35 samples, 1.28%)</title><rect x="656.8" y="227.0" width="15.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="659.8" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (35 samples, 1.28%)</title><rect x="656.8" y="211.0" width="15.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="659.8" y="222.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.07%)</title><rect x="657.7" y="195.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="660.7" y="206.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.04%)</title><rect x="658.5" y="195.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="661.5" y="206.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.04%)</title><rect x="659.0" y="195.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="662.0" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.04%)</title><rect x="659.4" y="195.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="662.4" y="206.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.04%)</title><rect x="659.4" y="179.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="662.4" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (28 samples, 1.02%)</title><rect x="659.8" y="195.0" width="12.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="662.8" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (28 samples, 1.02%)</title><rect x="659.8" y="179.0" width="12.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="662.8" y="190.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.07%)</title><rect x="659.8" y="163.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="662.8" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.07%)</title><rect x="659.8" y="147.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="662.8" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.07%)</title><rect x="659.8" y="131.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="662.8" y="142.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.07%)</title><rect x="659.8" y="115.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="662.8" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.07%)</title><rect x="659.8" y="99.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="662.8" y="110.0"></text>
</g>
<g>
<title>tcp_ack (9 samples, 0.33%)</title><rect x="660.7" y="163.0" width="3.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="663.7" y="174.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 0.22%)</title><rect x="661.5" y="147.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="664.5" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.11%)</title><rect x="662.4" y="131.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="665.4" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.04%)</title><rect x="662.4" y="115.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="665.4" y="126.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="662.8" y="115.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="665.8" y="126.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="662.8" y="99.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="665.8" y="110.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="663.3" y="115.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="666.3" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.41 (1 samples, 0.04%)</title><rect x="663.7" y="131.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="666.7" y="142.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.04%)</title><rect x="664.1" y="147.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="667.1" y="158.0"></text>
</g>
<g>
<title>tcp_data_queue (16 samples, 0.58%)</title><rect x="664.6" y="163.0" width="6.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="667.6" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (13 samples, 0.47%)</title><rect x="665.4" y="147.0" width="5.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="668.4" y="158.0"></text>
</g>
<g>
<title>__wake_up_sync_key (13 samples, 0.47%)</title><rect x="665.4" y="131.0" width="5.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="668.4" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (13 samples, 0.47%)</title><rect x="665.4" y="115.0" width="5.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="668.4" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (13 samples, 0.47%)</title><rect x="665.4" y="99.0" width="5.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="668.4" y="110.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.04%)</title><rect x="671.0" y="147.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="674.0" y="158.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.04%)</title><rect x="671.4" y="163.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="674.4" y="174.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.04%)</title><rect x="671.9" y="339.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="674.9" y="350.0"></text>
</g>
<g>
<title>rcu_bh_qs (1 samples, 0.04%)</title><rect x="672.3" y="339.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="675.3" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (7 samples, 0.26%)</title><rect x="672.7" y="403.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="675.7" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (7 samples, 0.26%)</title><rect x="672.7" y="387.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="675.7" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.11%)</title><rect x="674.4" y="371.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="677.4" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.11%)</title><rect x="674.4" y="355.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="677.4" y="366.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.04%)</title><rect x="674.9" y="339.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="677.9" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.04%)</title><rect x="674.9" y="323.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="677.9" y="334.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.04%)</title><rect x="675.3" y="339.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="678.3" y="350.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.04%)</title><rect x="675.7" y="435.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="678.7" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat_ipv4] (1 samples, 0.04%)</title><rect x="675.7" y="419.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="678.7" y="430.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.04%)</title><rect x="676.2" y="483.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="679.2" y="494.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.04%)</title><rect x="676.2" y="467.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="679.2" y="478.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.04%)</title><rect x="676.2" y="451.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="679.2" y="462.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.04%)</title><rect x="676.6" y="483.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="679.6" y="494.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.04%)</title><rect x="676.6" y="467.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="679.6" y="478.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.04%)</title><rect x="677.0" y="499.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="680.0" y="510.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.04%)</title><rect x="677.5" y="499.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="680.5" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.07%)</title><rect x="677.9" y="499.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="680.9" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.04%)</title><rect x="678.3" y="483.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="681.3" y="494.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (1 samples, 0.04%)</title><rect x="678.3" y="467.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="681.3" y="478.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="678.3" y="451.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="681.3" y="462.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="678.3" y="435.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="681.3" y="446.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="678.3" y="419.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="681.3" y="430.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.15%)</title><rect x="678.8" y="547.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="681.8" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="678.8" y="531.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="681.8" y="542.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.11%)</title><rect x="679.2" y="531.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="682.2" y="542.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.04%)</title><rect x="680.0" y="515.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="683.0" y="526.0"></text>
</g>
<g>
<title>tcp_v4_md5_lookup (1 samples, 0.04%)</title><rect x="680.0" y="499.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="683.0" y="510.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.04%)</title><rect x="680.5" y="595.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="683.5" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.04%)</title><rect x="680.5" y="579.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="683.5" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.04%)</title><rect x="680.5" y="563.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="683.5" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.04%)</title><rect x="680.5" y="547.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="683.5" y="558.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.11%)</title><rect x="680.9" y="611.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="683.9" y="622.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.11%)</title><rect x="680.9" y="595.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="683.9" y="606.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.11%)</title><rect x="680.9" y="579.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="683.9" y="590.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.11%)</title><rect x="680.9" y="563.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="683.9" y="574.0"></text>
</g>
<g>
<title>fput (1 samples, 0.04%)</title><rect x="682.2" y="627.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="685.2" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="682.6" y="627.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="685.6" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="683.1" y="771.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="686.1" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (54 samples, 1.97%)</title><rect x="683.5" y="787.0" width="23.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="686.5" y="798.0">r..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (9 samples, 0.33%)</title><rect x="684.3" y="771.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="687.3" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (9 samples, 0.33%)</title><rect x="684.3" y="755.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="687.3" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (9 samples, 0.33%)</title><rect x="684.3" y="739.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="687.3" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (9 samples, 0.33%)</title><rect x="684.3" y="723.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="687.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (9 samples, 0.33%)</title><rect x="684.3" y="707.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="687.3" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7 samples, 0.26%)</title><rect x="684.3" y="691.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="687.3" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (5 samples, 0.18%)</title><rect x="684.8" y="675.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="687.8" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (5 samples, 0.18%)</title><rect x="684.8" y="659.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="687.8" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (5 samples, 0.18%)</title><rect x="684.8" y="643.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="687.8" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (5 samples, 0.18%)</title><rect x="684.8" y="627.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="687.8" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (3 samples, 0.11%)</title><rect x="685.2" y="611.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="688.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Value.isTombstone (1 samples, 0.04%)</title><rect x="686.1" y="595.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="689.1" y="606.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.isEmpty (1 samples, 0.04%)</title><rect x="686.5" y="611.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="689.5" y="622.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1 samples, 0.04%)</title><rect x="686.9" y="675.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="689.9" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1 samples, 0.04%)</title><rect x="686.9" y="659.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="689.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$177/786148505.apply (2 samples, 0.07%)</title><rect x="687.4" y="691.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="690.4" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (2 samples, 0.07%)</title><rect x="687.4" y="675.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="690.4" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (2 samples, 0.07%)</title><rect x="687.4" y="659.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="690.4" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.07%)</title><rect x="687.4" y="643.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="690.4" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.07%)</title><rect x="687.4" y="627.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="690.4" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.07%)</title><rect x="687.4" y="611.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="690.4" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.07%)</title><rect x="687.4" y="595.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="690.4" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.07%)</title><rect x="687.4" y="579.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="690.4" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.07%)</title><rect x="687.4" y="563.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="690.4" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="687.8" y="547.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="690.8" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.04%)</title><rect x="687.8" y="531.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="690.8" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.04%)</title><rect x="688.2" y="771.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="691.2" y="782.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.04%)</title><rect x="688.2" y="755.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="691.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (42 samples, 1.53%)</title><rect x="688.7" y="771.0" width="18.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="691.7" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (1 samples, 0.04%)</title><rect x="688.7" y="755.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="691.7" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.&lt;init&gt; (1 samples, 0.04%)</title><rect x="688.7" y="739.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="691.7" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.&lt;init&gt; (1 samples, 0.04%)</title><rect x="688.7" y="723.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="691.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.04%)</title><rect x="689.1" y="755.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="692.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.04%)</title><rect x="689.1" y="739.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="692.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.04%)</title><rect x="689.1" y="723.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="692.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.04%)</title><rect x="689.1" y="707.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="692.1" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.04%)</title><rect x="689.1" y="691.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="692.1" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="689.1" y="675.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="692.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (1 samples, 0.04%)</title><rect x="689.5" y="755.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="692.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (1 samples, 0.04%)</title><rect x="689.5" y="739.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="692.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared (1 samples, 0.04%)</title><rect x="689.5" y="723.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="692.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (32 samples, 1.17%)</title><rect x="689.9" y="755.0" width="13.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="692.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (32 samples, 1.17%)</title><rect x="689.9" y="739.0" width="13.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="692.9" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (3 samples, 0.11%)</title><rect x="690.4" y="723.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="693.4" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (3 samples, 0.11%)</title><rect x="690.4" y="707.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="693.4" y="718.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (2 samples, 0.07%)</title><rect x="690.8" y="691.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="693.8" y="702.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (2 samples, 0.07%)</title><rect x="690.8" y="675.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="693.8" y="686.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (2 samples, 0.07%)</title><rect x="690.8" y="659.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="693.8" y="670.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (1 samples, 0.04%)</title><rect x="691.2" y="643.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="694.2" y="654.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (1 samples, 0.04%)</title><rect x="691.2" y="627.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="694.2" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (1 samples, 0.04%)</title><rect x="691.7" y="723.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="694.7" y="734.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (1 samples, 0.04%)</title><rect x="691.7" y="707.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="694.7" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="691.7" y="691.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="694.7" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="691.7" y="675.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="694.7" y="686.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$95/683319954.get$Lambda (1 samples, 0.04%)</title><rect x="691.7" y="659.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="694.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (3 samples, 0.11%)</title><rect x="692.1" y="723.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="695.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (3 samples, 0.11%)</title><rect x="692.1" y="707.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="695.1" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.11%)</title><rect x="692.1" y="691.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="695.1" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (3 samples, 0.11%)</title><rect x="692.1" y="675.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="695.1" y="686.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (3 samples, 0.11%)</title><rect x="692.1" y="659.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="695.1" y="670.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (3 samples, 0.11%)</title><rect x="692.1" y="643.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="695.1" y="654.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (3 samples, 0.11%)</title><rect x="692.1" y="627.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="695.1" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (1 samples, 0.04%)</title><rect x="692.5" y="611.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="695.5" y="622.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (1 samples, 0.04%)</title><rect x="692.5" y="595.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="695.5" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (1 samples, 0.04%)</title><rect x="692.5" y="579.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="695.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (1 samples, 0.04%)</title><rect x="692.5" y="563.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="695.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.04%)</title><rect x="692.5" y="547.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="695.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.04%)</title><rect x="692.5" y="531.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="695.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (1 samples, 0.04%)</title><rect x="692.5" y="515.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="695.5" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (1 samples, 0.04%)</title><rect x="693.0" y="611.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="696.0" y="622.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="693.0" y="595.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="696.0" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractSpinedBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="693.0" y="579.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="696.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (24 samples, 0.88%)</title><rect x="693.4" y="723.0" width="10.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="696.4" y="734.0"></text>
</g>
<g>
<title>java/util/Collection.stream (24 samples, 0.88%)</title><rect x="693.4" y="707.0" width="10.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="696.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (23 samples, 0.84%)</title><rect x="693.4" y="691.0" width="9.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="696.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (23 samples, 0.84%)</title><rect x="693.4" y="675.0" width="9.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="696.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (23 samples, 0.84%)</title><rect x="693.4" y="659.0" width="9.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="696.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (22 samples, 0.80%)</title><rect x="693.8" y="643.0" width="9.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="696.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (21 samples, 0.77%)</title><rect x="694.2" y="627.0" width="9.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="697.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.04%)</title><rect x="695.1" y="611.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="698.1" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="695.1" y="595.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="698.1" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="695.1" y="579.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="698.1" y="590.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.04%)</title><rect x="695.1" y="563.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="698.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (18 samples, 0.66%)</title><rect x="695.5" y="611.0" width="7.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="698.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (7 samples, 0.26%)</title><rect x="700.3" y="595.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="703.3" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.26%)</title><rect x="700.3" y="579.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="703.3" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.26%)</title><rect x="700.3" y="563.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="703.3" y="574.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.18%)</title><rect x="700.7" y="547.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="703.7" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.04%)</title><rect x="702.4" y="531.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="705.4" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.04%)</title><rect x="702.4" y="515.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="705.4" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.04%)</title><rect x="702.9" y="547.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="705.9" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.04%)</title><rect x="703.3" y="691.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="706.3" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (1 samples, 0.04%)</title><rect x="703.3" y="675.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="706.3" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.04%)</title><rect x="703.3" y="659.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="706.3" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.04%)</title><rect x="703.3" y="643.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="706.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (1 samples, 0.04%)</title><rect x="703.3" y="627.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="706.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (7 samples, 0.26%)</title><rect x="703.7" y="755.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="706.7" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (3 samples, 0.11%)</title><rect x="703.7" y="739.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="706.7" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (3 samples, 0.11%)</title><rect x="703.7" y="723.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="706.7" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (3 samples, 0.11%)</title><rect x="703.7" y="707.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="706.7" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (3 samples, 0.11%)</title><rect x="703.7" y="691.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="706.7" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (3 samples, 0.11%)</title><rect x="703.7" y="675.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="706.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3 samples, 0.11%)</title><rect x="703.7" y="659.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="706.7" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.07%)</title><rect x="704.1" y="643.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="707.1" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (2 samples, 0.07%)</title><rect x="704.1" y="627.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="707.1" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (2 samples, 0.07%)</title><rect x="704.1" y="611.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="707.1" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (2 samples, 0.07%)</title><rect x="704.1" y="595.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="707.1" y="606.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (1 samples, 0.04%)</title><rect x="705.0" y="739.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="708.0" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="705.0" y="723.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="708.0" y="734.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="705.0" y="707.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="708.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (3 samples, 0.11%)</title><rect x="705.4" y="739.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="708.4" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (3 samples, 0.11%)</title><rect x="705.4" y="723.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="708.4" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.07%)</title><rect x="705.4" y="707.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="708.4" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (1 samples, 0.04%)</title><rect x="705.4" y="691.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="708.4" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.04%)</title><rect x="705.4" y="675.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="708.4" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.04%)</title><rect x="705.4" y="659.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="708.4" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1 samples, 0.04%)</title><rect x="705.4" y="643.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="708.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.04%)</title><rect x="705.4" y="627.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="708.4" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.04%)</title><rect x="705.4" y="611.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="708.4" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (1 samples, 0.04%)</title><rect x="705.4" y="595.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="708.4" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.04%)</title><rect x="705.4" y="579.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="708.4" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.04%)</title><rect x="705.4" y="563.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="708.4" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1 samples, 0.04%)</title><rect x="705.9" y="691.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="708.9" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1 samples, 0.04%)</title><rect x="705.9" y="675.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="708.9" y="686.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.04%)</title><rect x="706.3" y="707.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="709.3" y="718.0"></text>
</g>
<g>
<title>[2020-highload-dht-thread-97 tid=486] (232 samples, 8.46%)</title><rect x="706.7" y="883.0" width="99.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="709.7" y="894.0">[2020-highlo..</text>
</g>
<g>
<title>java/lang/Thread.run (232 samples, 8.46%)</title><rect x="706.7" y="867.0" width="99.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="709.7" y="878.0">java/lang/Th..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (232 samples, 8.46%)</title><rect x="706.7" y="851.0" width="99.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="709.7" y="862.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (232 samples, 8.46%)</title><rect x="706.7" y="835.0" width="99.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="709.7" y="846.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.04%)</title><rect x="707.2" y="819.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="710.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.04%)</title><rect x="707.2" y="803.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="710.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (63 samples, 2.30%)</title><rect x="707.6" y="819.0" width="27.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="710.6" y="830.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (62 samples, 2.26%)</title><rect x="708.0" y="803.0" width="26.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="711.0" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (52 samples, 1.90%)</title><rect x="708.0" y="787.0" width="22.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="711.0" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2 samples, 0.07%)</title><rect x="708.0" y="771.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="711.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.04%)</title><rect x="708.4" y="755.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="711.4" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.04%)</title><rect x="708.4" y="739.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="711.4" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (1 samples, 0.04%)</title><rect x="708.4" y="723.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="711.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.11%)</title><rect x="708.9" y="771.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="711.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3 samples, 0.11%)</title><rect x="708.9" y="755.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="711.9" y="766.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (3 samples, 0.11%)</title><rect x="708.9" y="739.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="711.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.07%)</title><rect x="710.2" y="771.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="713.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.07%)</title><rect x="710.2" y="755.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="713.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.07%)</title><rect x="710.2" y="739.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="713.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.07%)</title><rect x="710.2" y="723.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="713.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.07%)</title><rect x="710.2" y="707.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="713.2" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.07%)</title><rect x="710.2" y="691.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="713.2" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.07%)</title><rect x="710.2" y="675.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="713.2" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.07%)</title><rect x="710.2" y="659.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="713.2" y="670.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.07%)</title><rect x="710.2" y="643.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="713.2" y="654.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.07%)</title><rect x="710.2" y="627.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="713.2" y="638.0"></text>
</g>
<g>
<title>futex_wake_op (2 samples, 0.07%)</title><rect x="710.2" y="611.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="713.2" y="622.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.07%)</title><rect x="710.2" y="595.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="713.2" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.07%)</title><rect x="710.2" y="579.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="713.2" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.07%)</title><rect x="710.2" y="563.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="713.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (45 samples, 1.64%)</title><rect x="711.0" y="771.0" width="19.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="714.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (45 samples, 1.64%)</title><rect x="711.0" y="755.0" width="19.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="714.0" y="766.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="711.5" y="739.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="714.5" y="750.0"></text>
</g>
<g>
<title>Unsafe_Park (42 samples, 1.53%)</title><rect x="711.9" y="739.0" width="18.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="714.9" y="750.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (12 samples, 0.44%)</title><rect x="713.2" y="723.0" width="5.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="716.2" y="734.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.07%)</title><rect x="715.3" y="707.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="718.3" y="718.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.18%)</title><rect x="716.2" y="707.0" width="2.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="719.2" y="718.0"></text>
</g>
<g>
<title>__lll_unlock_wake (7 samples, 0.26%)</title><rect x="718.3" y="723.0" width="3.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="721.3" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.11%)</title><rect x="720.1" y="707.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="723.1" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.07%)</title><rect x="720.1" y="691.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="723.1" y="702.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.04%)</title><rect x="720.5" y="675.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="723.5" y="686.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="720.5" y="659.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="723.5" y="670.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.04%)</title><rect x="720.9" y="691.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="723.9" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_wait (15 samples, 0.55%)</title><rect x="721.4" y="723.0" width="6.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="724.4" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.36%)</title><rect x="723.5" y="707.0" width="4.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="726.5" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.36%)</title><rect x="723.5" y="691.0" width="4.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="726.5" y="702.0"></text>
</g>
<g>
<title>sys_futex (9 samples, 0.33%)</title><rect x="723.9" y="675.0" width="3.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="726.9" y="686.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.29%)</title><rect x="724.4" y="659.0" width="3.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="727.4" y="670.0"></text>
</g>
<g>
<title>futex_wait (8 samples, 0.29%)</title><rect x="724.4" y="643.0" width="3.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="727.4" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (6 samples, 0.22%)</title><rect x="724.4" y="627.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="727.4" y="638.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.22%)</title><rect x="724.4" y="611.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="727.4" y="622.0"></text>
</g>
<g>
<title>__schedule (6 samples, 0.22%)</title><rect x="724.4" y="595.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="727.4" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 0.18%)</title><rect x="724.8" y="579.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="727.8" y="590.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.07%)</title><rect x="727.0" y="627.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="730.0" y="638.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.07%)</title><rect x="727.0" y="611.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="730.0" y="622.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.9 (1 samples, 0.04%)</title><rect x="727.4" y="595.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="730.4" y="606.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.07%)</title><rect x="727.8" y="723.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="730.8" y="734.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.04%)</title><rect x="728.7" y="723.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="731.7" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="729.1" y="723.0" width="0.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="732.1" y="734.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.04%)</title><rect x="729.5" y="723.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="732.5" y="734.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.04%)</title><rect x="730.0" y="739.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="733.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (4 samples, 0.15%)</title><rect x="730.4" y="787.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="733.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (4 samples, 0.15%)</title><rect x="730.4" y="771.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="733.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (4 samples, 0.15%)</title><rect x="730.4" y="755.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="733.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (4 samples, 0.15%)</title><rect x="730.4" y="739.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="733.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.04%)</title><rect x="730.4" y="723.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="733.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (3 samples, 0.11%)</title><rect x="730.8" y="723.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="733.8" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (3 samples, 0.11%)</title><rect x="730.8" y="707.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="733.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.22%)</title><rect x="732.1" y="787.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="735.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.22%)</title><rect x="732.1" y="771.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="735.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.22%)</title><rect x="732.1" y="755.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="735.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.22%)</title><rect x="732.1" y="739.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="735.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.22%)</title><rect x="732.1" y="723.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="735.1" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.04%)</title><rect x="732.5" y="707.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="735.5" y="718.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="732.5" y="691.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="735.5" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.15%)</title><rect x="733.0" y="707.0" width="1.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="736.0" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.15%)</title><rect x="733.0" y="691.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="736.0" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.15%)</title><rect x="733.0" y="675.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="736.0" y="686.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.15%)</title><rect x="733.0" y="659.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="736.0" y="670.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.15%)</title><rect x="733.0" y="643.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="736.0" y="654.0"></text>
</g>
<g>
<title>futex_wake_op (4 samples, 0.15%)</title><rect x="733.0" y="627.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="736.0" y="638.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.11%)</title><rect x="733.4" y="611.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="736.4" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.11%)</title><rect x="733.4" y="595.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="736.4" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.11%)</title><rect x="733.4" y="579.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="736.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$75/1549034997.run (167 samples, 6.09%)</title><rect x="734.7" y="819.0" width="71.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="737.7" y="830.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$get$1 (167 samples, 6.09%)</title><rect x="734.7" y="803.0" width="71.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="737.7" y="814.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.isBlank (1 samples, 0.04%)</title><rect x="734.7" y="787.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="737.7" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (119 samples, 4.34%)</title><rect x="735.1" y="787.0" width="51.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="738.1" y="798.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (116 samples, 4.23%)</title><rect x="736.0" y="771.0" width="49.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="739.0" y="782.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.26%)</title><rect x="736.0" y="755.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="739.0" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.22%)</title><rect x="736.4" y="739.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="739.4" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (5 samples, 0.18%)</title><rect x="736.4" y="723.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="739.4" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="738.6" y="723.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="741.6" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="738.6" y="707.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="741.6" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="738.6" y="691.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="741.6" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (109 samples, 3.98%)</title><rect x="739.0" y="755.0" width="46.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="742.0" y="766.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (108 samples, 3.94%)</title><rect x="739.4" y="739.0" width="46.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="742.4" y="750.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (106 samples, 3.87%)</title><rect x="739.9" y="723.0" width="45.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="742.9" y="734.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (106 samples, 3.87%)</title><rect x="739.9" y="707.0" width="45.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="742.9" y="718.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.11%)</title><rect x="739.9" y="691.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="742.9" y="702.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned (1 samples, 0.04%)</title><rect x="739.9" y="675.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="742.9" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.07%)</title><rect x="740.3" y="675.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="743.3" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.04%)</title><rect x="740.7" y="659.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="743.7" y="670.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.11%)</title><rect x="741.2" y="691.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="744.2" y="702.0"></text>
</g>
<g>
<title>send (100 samples, 3.65%)</title><rect x="742.4" y="691.0" width="43.1" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="745.4" y="702.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (96 samples, 3.50%)</title><rect x="744.2" y="675.0" width="41.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="747.2" y="686.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (95 samples, 3.46%)</title><rect x="744.2" y="659.0" width="40.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="747.2" y="670.0">do_..</text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.04%)</title><rect x="745.9" y="643.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="748.9" y="654.0"></text>
</g>
<g>
<title>sys_sendto (90 samples, 3.28%)</title><rect x="746.3" y="643.0" width="38.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="749.3" y="654.0">sys..</text>
</g>
<g>
<title>SYSC_sendto (89 samples, 3.25%)</title><rect x="746.3" y="627.0" width="38.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="749.3" y="638.0">SYS..</text>
</g>
<g>
<title>sock_sendmsg (88 samples, 3.21%)</title><rect x="746.7" y="611.0" width="37.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="749.7" y="622.0">soc..</text>
</g>
<g>
<title>inet_sendmsg (86 samples, 3.14%)</title><rect x="746.7" y="595.0" width="37.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="749.7" y="606.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (86 samples, 3.14%)</title><rect x="746.7" y="579.0" width="37.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="749.7" y="590.0">tcp..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="746.7" y="563.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="749.7" y="574.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="746.7" y="547.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="749.7" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.04%)</title><rect x="747.2" y="563.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="750.2" y="574.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.04%)</title><rect x="747.6" y="563.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="750.6" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (83 samples, 3.03%)</title><rect x="748.0" y="563.0" width="35.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="751.0" y="574.0">tcp..</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.07%)</title><rect x="749.3" y="547.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="752.3" y="558.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.07%)</title><rect x="749.3" y="531.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="752.3" y="542.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.04%)</title><rect x="750.2" y="547.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="753.2" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (3 samples, 0.11%)</title><rect x="750.6" y="547.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="753.6" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.11%)</title><rect x="750.6" y="531.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="753.6" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (1 samples, 0.04%)</title><rect x="750.6" y="515.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="753.6" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.04%)</title><rect x="750.6" y="499.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="753.6" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.04%)</title><rect x="751.1" y="515.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="754.1" y="526.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.04%)</title><rect x="751.5" y="515.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="754.5" y="526.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.04%)</title><rect x="751.9" y="547.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="754.9" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.07%)</title><rect x="752.3" y="547.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="755.3" y="558.0"></text>
</g>
<g>
<title>tcp_push (68 samples, 2.48%)</title><rect x="753.2" y="547.0" width="29.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="756.2" y="558.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (68 samples, 2.48%)</title><rect x="753.2" y="531.0" width="29.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="756.2" y="542.0">__..</text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.04%)</title><rect x="753.2" y="515.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="756.2" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (67 samples, 2.44%)</title><rect x="753.6" y="515.0" width="28.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="756.6" y="526.0">tc..</text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.07%)</title><rect x="753.6" y="499.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="756.6" y="510.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (62 samples, 2.26%)</title><rect x="754.5" y="499.0" width="26.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="757.5" y="510.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (59 samples, 2.15%)</title><rect x="755.4" y="483.0" width="25.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="758.4" y="494.0">i..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.04%)</title><rect x="755.8" y="467.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="758.8" y="478.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.04%)</title><rect x="755.8" y="451.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="758.8" y="462.0"></text>
</g>
<g>
<title>ip_local_out (57 samples, 2.08%)</title><rect x="756.2" y="467.0" width="24.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="759.2" y="478.0">i..</text>
</g>
<g>
<title>__ip_local_out (13 samples, 0.47%)</title><rect x="756.2" y="451.0" width="5.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="759.2" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (13 samples, 0.47%)</title><rect x="756.2" y="435.0" width="5.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="759.2" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.07%)</title><rect x="756.2" y="419.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="759.2" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.07%)</title><rect x="756.2" y="403.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="759.2" y="414.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (2 samples, 0.07%)</title><rect x="757.1" y="419.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="760.1" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.07%)</title><rect x="757.1" y="403.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="760.1" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="757.5" y="387.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="760.5" y="398.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (9 samples, 0.33%)</title><rect x="757.9" y="419.0" width="3.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="760.9" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (9 samples, 0.33%)</title><rect x="757.9" y="403.0" width="3.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="760.9" y="414.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (1 samples, 0.04%)</title><rect x="759.2" y="387.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="762.2" y="398.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="759.7" y="387.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="762.7" y="398.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (1 samples, 0.04%)</title><rect x="760.1" y="387.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="763.1" y="398.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (3 samples, 0.11%)</title><rect x="760.5" y="387.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="763.5" y="398.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct?[nf_conntrack] (1 samples, 0.04%)</title><rect x="760.5" y="371.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="763.5" y="382.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (1 samples, 0.04%)</title><rect x="760.9" y="371.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="763.9" y="382.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (1 samples, 0.04%)</title><rect x="761.4" y="371.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="764.4" y="382.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.04%)</title><rect x="761.8" y="451.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="764.8" y="462.0"></text>
</g>
<g>
<title>ip_output (43 samples, 1.57%)</title><rect x="762.2" y="451.0" width="18.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="765.2" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (41 samples, 1.50%)</title><rect x="762.2" y="435.0" width="17.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="765.2" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (40 samples, 1.46%)</title><rect x="762.7" y="419.0" width="17.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="765.7" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.04%)</title><rect x="763.5" y="403.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="766.5" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (33 samples, 1.20%)</title><rect x="764.0" y="403.0" width="14.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="767.0" y="414.0"></text>
</g>
<g>
<title>do_softirq.part.17 (33 samples, 1.20%)</title><rect x="764.0" y="387.0" width="14.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="767.0" y="398.0"></text>
</g>
<g>
<title>do_softirq_own_stack (33 samples, 1.20%)</title><rect x="764.0" y="371.0" width="14.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="767.0" y="382.0"></text>
</g>
<g>
<title>__softirqentry_text_start (33 samples, 1.20%)</title><rect x="764.0" y="355.0" width="14.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="767.0" y="366.0"></text>
</g>
<g>
<title>net_rx_action (32 samples, 1.17%)</title><rect x="764.4" y="339.0" width="13.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="767.4" y="350.0"></text>
</g>
<g>
<title>process_backlog (32 samples, 1.17%)</title><rect x="764.4" y="323.0" width="13.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="767.4" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb (31 samples, 1.13%)</title><rect x="764.8" y="307.0" width="13.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="767.8" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (31 samples, 1.13%)</title><rect x="764.8" y="291.0" width="13.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="767.8" y="302.0"></text>
</g>
<g>
<title>ip_rcv (30 samples, 1.09%)</title><rect x="764.8" y="275.0" width="12.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="767.8" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (28 samples, 1.02%)</title><rect x="764.8" y="259.0" width="12.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="767.8" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (28 samples, 1.02%)</title><rect x="764.8" y="243.0" width="12.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="767.8" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (26 samples, 0.95%)</title><rect x="764.8" y="227.0" width="11.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="767.8" y="238.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.04%)</title><rect x="764.8" y="211.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="767.8" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (25 samples, 0.91%)</title><rect x="765.3" y="211.0" width="10.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="768.3" y="222.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.04%)</title><rect x="765.3" y="195.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="768.3" y="206.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (1 samples, 0.04%)</title><rect x="765.7" y="195.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="768.7" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (23 samples, 0.84%)</title><rect x="766.1" y="195.0" width="9.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="769.1" y="206.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.04%)</title><rect x="766.1" y="179.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="769.1" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (21 samples, 0.77%)</title><rect x="766.5" y="179.0" width="9.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="769.5" y="190.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.07%)</title><rect x="766.5" y="163.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="769.5" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.07%)</title><rect x="766.5" y="147.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="769.5" y="158.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="766.5" y="131.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="769.5" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="767.0" y="131.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="770.0" y="142.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.04%)</title><rect x="767.0" y="115.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="770.0" y="126.0"></text>
</g>
<g>
<title>tcp_ack (3 samples, 0.11%)</title><rect x="767.4" y="163.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="770.4" y="174.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.04%)</title><rect x="768.3" y="147.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="771.3" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.04%)</title><rect x="768.3" y="131.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="771.3" y="142.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="768.3" y="115.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="771.3" y="126.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="768.3" y="99.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="771.3" y="110.0"></text>
</g>
<g>
<title>tcp_data_queue (15 samples, 0.55%)</title><rect x="768.7" y="163.0" width="6.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="771.7" y="174.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.04%)</title><rect x="769.1" y="147.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="772.1" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (12 samples, 0.44%)</title><rect x="769.6" y="147.0" width="5.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="772.6" y="158.0"></text>
</g>
<g>
<title>__wake_up_sync_key (10 samples, 0.36%)</title><rect x="770.4" y="131.0" width="4.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="773.4" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (10 samples, 0.36%)</title><rect x="770.4" y="115.0" width="4.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="773.4" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.36%)</title><rect x="770.4" y="99.0" width="4.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="773.4" y="110.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.04%)</title><rect x="774.7" y="147.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="777.7" y="158.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.04%)</title><rect x="775.1" y="163.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="778.1" y="174.0"></text>
</g>
<g>
<title>tcp_urg (1 samples, 0.04%)</title><rect x="775.6" y="179.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="778.6" y="190.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_fn?[iptable_nat] (1 samples, 0.04%)</title><rect x="776.0" y="227.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="779.0" y="238.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.04%)</title><rect x="776.4" y="227.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="779.4" y="238.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.04%)</title><rect x="776.4" y="211.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="779.4" y="222.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.04%)</title><rect x="776.4" y="195.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="779.4" y="206.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (1 samples, 0.04%)</title><rect x="776.9" y="259.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="779.9" y="270.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.04%)</title><rect x="777.3" y="259.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="780.3" y="270.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (1 samples, 0.04%)</title><rect x="777.3" y="243.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="780.3" y="254.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.04%)</title><rect x="777.3" y="227.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="780.3" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.04%)</title><rect x="777.7" y="275.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="780.7" y="286.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 0.15%)</title><rect x="778.2" y="403.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="781.2" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.15%)</title><rect x="778.2" y="387.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="781.2" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.11%)</title><rect x="778.6" y="371.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="781.6" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.07%)</title><rect x="778.6" y="355.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="781.6" y="366.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.04%)</title><rect x="778.6" y="339.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="781.6" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.04%)</title><rect x="778.6" y="323.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="781.6" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.04%)</title><rect x="778.6" y="307.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="781.6" y="318.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.04%)</title><rect x="779.0" y="339.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="782.0" y="350.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.04%)</title><rect x="779.5" y="355.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="782.5" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.07%)</title><rect x="779.9" y="435.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="782.9" y="446.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (1 samples, 0.04%)</title><rect x="779.9" y="419.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="782.9" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.04%)</title><rect x="779.9" y="403.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="782.9" y="414.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_out?[iptable_nat] (1 samples, 0.04%)</title><rect x="780.3" y="419.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="783.3" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat_ipv4] (1 samples, 0.04%)</title><rect x="780.3" y="403.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="783.3" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (1 samples, 0.04%)</title><rect x="780.3" y="387.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="783.3" y="398.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (1 samples, 0.04%)</title><rect x="780.3" y="371.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="783.3" y="382.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.04%)</title><rect x="780.7" y="483.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="783.7" y="494.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.04%)</title><rect x="780.7" y="467.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="783.7" y="478.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.04%)</title><rect x="780.7" y="451.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="783.7" y="462.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.07%)</title><rect x="781.2" y="499.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="784.2" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.04%)</title><rect x="781.6" y="483.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="784.6" y="494.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="781.6" y="467.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="784.6" y="478.0"></text>
</g>
<g>
<title>tcp_tso_segs (1 samples, 0.04%)</title><rect x="782.0" y="499.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="785.0" y="510.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.04%)</title><rect x="782.5" y="547.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="785.5" y="558.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.07%)</title><rect x="782.9" y="547.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="785.9" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.04%)</title><rect x="783.3" y="531.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="786.3" y="542.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.04%)</title><rect x="783.3" y="515.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="786.3" y="526.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (1 samples, 0.04%)</title><rect x="783.3" y="499.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="786.3" y="510.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.04%)</title><rect x="783.8" y="595.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="786.8" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.04%)</title><rect x="783.8" y="579.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="786.8" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.04%)</title><rect x="783.8" y="563.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="786.8" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.04%)</title><rect x="784.2" y="595.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="787.2" y="606.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.04%)</title><rect x="784.6" y="627.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="787.6" y="638.0"></text>
</g>
<g>
<title>sys_sendto (1 samples, 0.04%)</title><rect x="785.0" y="659.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="788.0" y="670.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="785.5" y="723.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="788.5" y="734.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="785.5" y="707.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="788.5" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="785.9" y="771.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="788.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="785.9" y="755.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="788.9" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="785.9" y="739.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="788.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (47 samples, 1.71%)</title><rect x="786.3" y="787.0" width="20.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="789.3" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (9 samples, 0.33%)</title><rect x="786.3" y="771.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="789.3" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (9 samples, 0.33%)</title><rect x="786.3" y="755.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="789.3" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (9 samples, 0.33%)</title><rect x="786.3" y="739.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="789.3" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (9 samples, 0.33%)</title><rect x="786.3" y="723.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="789.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (9 samples, 0.33%)</title><rect x="786.3" y="707.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="789.3" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (9 samples, 0.33%)</title><rect x="786.3" y="691.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="789.3" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (6 samples, 0.22%)</title><rect x="786.3" y="675.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="789.3" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (6 samples, 0.22%)</title><rect x="786.3" y="659.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="789.3" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (6 samples, 0.22%)</title><rect x="786.3" y="643.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="789.3" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (4 samples, 0.15%)</title><rect x="787.2" y="627.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="790.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4 samples, 0.15%)</title><rect x="787.2" y="611.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="790.2" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.04%)</title><rect x="787.2" y="595.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="790.2" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (1 samples, 0.04%)</title><rect x="787.2" y="579.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="790.2" y="590.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1 samples, 0.04%)</title><rect x="787.2" y="563.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="790.2" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1 samples, 0.04%)</title><rect x="787.2" y="547.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="790.2" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1 samples, 0.04%)</title><rect x="787.2" y="531.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="790.2" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (1 samples, 0.04%)</title><rect x="787.2" y="515.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="790.2" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (1 samples, 0.04%)</title><rect x="787.2" y="499.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="790.2" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (1 samples, 0.04%)</title><rect x="787.2" y="483.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="790.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (1 samples, 0.04%)</title><rect x="787.2" y="467.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="790.2" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (2 samples, 0.07%)</title><rect x="787.6" y="595.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="790.6" y="606.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.07%)</title><rect x="787.6" y="579.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="790.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$125/991073477.apply (1 samples, 0.04%)</title><rect x="788.5" y="595.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="791.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (1 samples, 0.04%)</title><rect x="788.5" y="579.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="791.5" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (1 samples, 0.04%)</title><rect x="788.5" y="563.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="791.5" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.04%)</title><rect x="788.5" y="547.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="791.5" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.04%)</title><rect x="788.5" y="531.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="791.5" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (2 samples, 0.07%)</title><rect x="788.9" y="675.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="791.9" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (2 samples, 0.07%)</title><rect x="788.9" y="659.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="791.9" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (2 samples, 0.07%)</title><rect x="788.9" y="643.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="791.9" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (2 samples, 0.07%)</title><rect x="788.9" y="627.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="791.9" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (2 samples, 0.07%)</title><rect x="788.9" y="611.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="791.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.04%)</title><rect x="789.4" y="595.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="792.4" y="606.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1 samples, 0.04%)</title><rect x="789.8" y="675.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="792.8" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1 samples, 0.04%)</title><rect x="789.8" y="659.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="792.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (1 samples, 0.04%)</title><rect x="789.8" y="643.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="792.8" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.04%)</title><rect x="790.2" y="771.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="793.2" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (1 samples, 0.04%)</title><rect x="790.2" y="755.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="793.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$191/1599205169.apply (1 samples, 0.04%)</title><rect x="790.2" y="739.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="793.2" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$3 (1 samples, 0.04%)</title><rect x="790.2" y="723.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="793.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (1 samples, 0.04%)</title><rect x="790.2" y="707.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="793.2" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (1 samples, 0.04%)</title><rect x="790.2" y="691.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="793.2" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.04%)</title><rect x="790.2" y="675.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="793.2" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.04%)</title><rect x="790.2" y="659.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="793.2" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="790.2" y="643.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="793.2" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="790.2" y="627.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="793.2" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="790.2" y="611.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="793.2" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="790.2" y="595.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="793.2" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="790.2" y="579.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="793.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (37 samples, 1.35%)</title><rect x="790.6" y="771.0" width="16.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="793.6" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (1 samples, 0.04%)</title><rect x="790.6" y="755.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="793.6" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.&lt;init&gt; (1 samples, 0.04%)</title><rect x="790.6" y="739.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="793.6" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.&lt;init&gt; (1 samples, 0.04%)</title><rect x="790.6" y="723.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="793.6" y="734.0"></text>
</g>
<g>
<title>com/google/common/base/Preconditions.checkNotNull (1 samples, 0.04%)</title><rect x="790.6" y="707.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="793.6" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.04%)</title><rect x="791.1" y="755.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="794.1" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="791.1" y="739.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="794.1" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="791.1" y="723.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="794.1" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="791.1" y="707.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="794.1" y="718.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="791.1" y="691.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="794.1" y="702.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="791.1" y="675.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="794.1" y="686.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="791.1" y="659.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="794.1" y="670.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="791.1" y="643.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="794.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (1 samples, 0.04%)</title><rect x="791.5" y="755.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="794.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (1 samples, 0.04%)</title><rect x="791.5" y="739.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="794.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (1 samples, 0.04%)</title><rect x="791.5" y="723.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="794.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.04%)</title><rect x="791.5" y="707.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="794.5" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.04%)</title><rect x="791.5" y="691.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="794.5" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="791.5" y="675.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="794.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (32 samples, 1.17%)</title><rect x="791.9" y="755.0" width="13.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="794.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (32 samples, 1.17%)</title><rect x="791.9" y="739.0" width="13.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="794.9" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (4 samples, 0.15%)</title><rect x="791.9" y="723.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="794.9" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (4 samples, 0.15%)</title><rect x="791.9" y="707.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="794.9" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (1 samples, 0.04%)</title><rect x="791.9" y="691.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="794.9" y="702.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="791.9" y="675.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="794.9" y="686.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.04%)</title><rect x="791.9" y="659.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="794.9" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.04%)</title><rect x="791.9" y="643.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="794.9" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="791.9" y="627.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="794.9" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="791.9" y="611.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="794.9" y="622.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (3 samples, 0.11%)</title><rect x="792.4" y="691.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="795.4" y="702.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (2 samples, 0.07%)</title><rect x="792.8" y="675.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="795.8" y="686.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (2 samples, 0.07%)</title><rect x="792.8" y="659.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="795.8" y="670.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (2 samples, 0.07%)</title><rect x="792.8" y="643.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="795.8" y="654.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (2 samples, 0.07%)</title><rect x="792.8" y="627.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="795.8" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (2 samples, 0.07%)</title><rect x="792.8" y="611.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="795.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (2 samples, 0.07%)</title><rect x="792.8" y="595.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="795.8" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2 samples, 0.07%)</title><rect x="792.8" y="579.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="795.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (1 samples, 0.04%)</title><rect x="793.2" y="563.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="796.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (1 samples, 0.04%)</title><rect x="793.2" y="547.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="796.2" y="558.0"></text>
</g>
<g>
<title>java/util/AbstractMap$SimpleImmutableEntry.getValue (1 samples, 0.04%)</title><rect x="793.2" y="531.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="796.2" y="542.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (1 samples, 0.04%)</title><rect x="793.7" y="723.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="796.7" y="734.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (1 samples, 0.04%)</title><rect x="793.7" y="707.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="796.7" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="793.7" y="691.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="796.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.04%)</title><rect x="794.1" y="723.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="797.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.04%)</title><rect x="794.1" y="707.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="797.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.04%)</title><rect x="794.1" y="691.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="797.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.getState (1 samples, 0.04%)</title><rect x="794.1" y="675.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="797.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (3 samples, 0.11%)</title><rect x="794.5" y="723.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="797.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (3 samples, 0.11%)</title><rect x="794.5" y="707.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="797.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared (2 samples, 0.07%)</title><rect x="794.5" y="691.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="797.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (1 samples, 0.04%)</title><rect x="795.4" y="691.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="798.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.getState (1 samples, 0.04%)</title><rect x="795.4" y="675.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="798.4" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1 samples, 0.04%)</title><rect x="795.8" y="723.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="798.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1 samples, 0.04%)</title><rect x="795.8" y="707.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="798.8" y="718.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1 samples, 0.04%)</title><rect x="795.8" y="691.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="798.8" y="702.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (1 samples, 0.04%)</title><rect x="795.8" y="675.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="798.8" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.04%)</title><rect x="795.8" y="659.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="798.8" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (1 samples, 0.04%)</title><rect x="795.8" y="643.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="798.8" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.&lt;init&gt; (1 samples, 0.04%)</title><rect x="795.8" y="627.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="798.8" y="638.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (1 samples, 0.04%)</title><rect x="795.8" y="611.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="798.8" y="622.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.04%)</title><rect x="795.8" y="595.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="798.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (22 samples, 0.80%)</title><rect x="796.2" y="723.0" width="9.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="799.2" y="734.0"></text>
</g>
<g>
<title>java/util/Collection.stream (20 samples, 0.73%)</title><rect x="796.2" y="707.0" width="8.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="799.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (19 samples, 0.69%)</title><rect x="796.2" y="691.0" width="8.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="799.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (19 samples, 0.69%)</title><rect x="796.2" y="675.0" width="8.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="799.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (19 samples, 0.69%)</title><rect x="796.2" y="659.0" width="8.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="799.2" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandle.acquireFence (1 samples, 0.04%)</title><rect x="796.7" y="643.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="799.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (1 samples, 0.04%)</title><rect x="797.1" y="643.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="800.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (1 samples, 0.04%)</title><rect x="797.1" y="627.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="800.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.04%)</title><rect x="797.1" y="611.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="800.1" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="797.1" y="595.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="800.1" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="797.1" y="579.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="800.1" y="590.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.04%)</title><rect x="797.1" y="563.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="800.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (16 samples, 0.58%)</title><rect x="797.5" y="643.0" width="6.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="800.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (16 samples, 0.58%)</title><rect x="797.5" y="627.0" width="6.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="800.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.07%)</title><rect x="798.0" y="611.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="801.0" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.07%)</title><rect x="798.0" y="595.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="801.0" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.07%)</title><rect x="798.0" y="579.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="801.0" y="590.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.07%)</title><rect x="798.0" y="563.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="801.0" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.04%)</title><rect x="798.4" y="547.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="801.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (13 samples, 0.47%)</title><rect x="798.8" y="611.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="801.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (5 samples, 0.18%)</title><rect x="802.3" y="595.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="805.3" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.15%)</title><rect x="802.7" y="579.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="805.7" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.11%)</title><rect x="803.1" y="563.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="806.1" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.04%)</title><rect x="803.6" y="547.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="806.6" y="558.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.04%)</title><rect x="803.6" y="531.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="806.6" y="542.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.04%)</title><rect x="804.0" y="547.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="807.0" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.04%)</title><rect x="804.4" y="691.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="807.4" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (1 samples, 0.04%)</title><rect x="804.4" y="675.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="807.4" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.04%)</title><rect x="804.4" y="659.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="807.4" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.04%)</title><rect x="804.4" y="643.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="807.4" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.04%)</title><rect x="804.4" y="627.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="807.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (1 samples, 0.04%)</title><rect x="804.8" y="707.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="807.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (1 samples, 0.04%)</title><rect x="804.8" y="691.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="807.8" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (1 samples, 0.04%)</title><rect x="805.3" y="707.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="808.3" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (1 samples, 0.04%)</title><rect x="805.3" y="691.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="808.3" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="805.3" y="675.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="808.3" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="805.3" y="659.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="808.3" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (2 samples, 0.07%)</title><rect x="805.7" y="755.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="808.7" y="766.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (1 samples, 0.04%)</title><rect x="805.7" y="739.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="808.7" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="805.7" y="723.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="808.7" y="734.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="805.7" y="707.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="808.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1 samples, 0.04%)</title><rect x="806.1" y="739.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="809.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1 samples, 0.04%)</title><rect x="806.1" y="723.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="809.1" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.04%)</title><rect x="806.1" y="707.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="809.1" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (1 samples, 0.04%)</title><rect x="806.1" y="691.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="809.1" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.04%)</title><rect x="806.1" y="675.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="809.1" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.04%)</title><rect x="806.1" y="659.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="809.1" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1 samples, 0.04%)</title><rect x="806.1" y="643.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="809.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.04%)</title><rect x="806.1" y="627.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="809.1" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.04%)</title><rect x="806.1" y="611.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="809.1" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (1 samples, 0.04%)</title><rect x="806.1" y="595.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="809.1" y="606.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1 samples, 0.04%)</title><rect x="806.1" y="579.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="809.1" y="590.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1 samples, 0.04%)</title><rect x="806.1" y="563.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="809.1" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1 samples, 0.04%)</title><rect x="806.1" y="547.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="809.1" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (1 samples, 0.04%)</title><rect x="806.1" y="531.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="809.1" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (1 samples, 0.04%)</title><rect x="806.1" y="515.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="809.1" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (1 samples, 0.04%)</title><rect x="806.1" y="499.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="809.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (1 samples, 0.04%)</title><rect x="806.1" y="483.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="809.1" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.04%)</title><rect x="806.1" y="467.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="809.1" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (1 samples, 0.04%)</title><rect x="806.1" y="451.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="809.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (1 samples, 0.04%)</title><rect x="806.1" y="435.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="809.1" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.04%)</title><rect x="806.1" y="419.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="809.1" y="430.0"></text>
</g>
<g>
<title>[G1 Young RemSet tid=14032] (1 samples, 0.04%)</title><rect x="806.6" y="883.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="809.6" y="894.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.04%)</title><rect x="806.6" y="867.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="809.6" y="878.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.04%)</title><rect x="806.6" y="851.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="809.6" y="862.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (1 samples, 0.04%)</title><rect x="806.6" y="835.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="809.6" y="846.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (1 samples, 0.04%)</title><rect x="806.6" y="819.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="809.6" y="830.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (1 samples, 0.04%)</title><rect x="806.6" y="803.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="809.6" y="814.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (1 samples, 0.04%)</title><rect x="806.6" y="787.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="809.6" y="798.0"></text>
</g>
<g>
<title>G1CollectionSet::update_young_region_prediction(HeapRegion*, unsigned long) (1 samples, 0.04%)</title><rect x="806.6" y="771.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="809.6" y="782.0"></text>
</g>
<g>
<title>[GC Thread#1 tid=18136] (1 samples, 0.04%)</title><rect x="807.0" y="883.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="810.0" y="894.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.04%)</title><rect x="807.0" y="867.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="810.0" y="878.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.04%)</title><rect x="807.0" y="851.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="810.0" y="862.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.04%)</title><rect x="807.0" y="835.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="810.0" y="846.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.04%)</title><rect x="807.0" y="819.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="810.0" y="830.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.04%)</title><rect x="807.0" y="803.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="810.0" y="814.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.04%)</title><rect x="807.0" y="787.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="810.0" y="798.0"></text>
</g>
<g>
<title>[GC Thread#3 tid=18138] (1 samples, 0.04%)</title><rect x="807.4" y="883.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="810.4" y="894.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.04%)</title><rect x="807.4" y="867.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="810.4" y="878.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.04%)</title><rect x="807.4" y="851.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="810.4" y="862.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.04%)</title><rect x="807.4" y="835.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="810.4" y="846.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.04%)</title><rect x="807.4" y="819.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="810.4" y="830.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.04%)</title><rect x="807.4" y="803.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="810.4" y="814.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.04%)</title><rect x="807.4" y="787.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="810.4" y="798.0"></text>
</g>
<g>
<title>[GC Thread#4 tid=18139] (1 samples, 0.04%)</title><rect x="807.9" y="883.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="810.9" y="894.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.04%)</title><rect x="807.9" y="867.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="810.9" y="878.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.04%)</title><rect x="807.9" y="851.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="810.9" y="862.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.04%)</title><rect x="807.9" y="835.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="810.9" y="846.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.04%)</title><rect x="807.9" y="819.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="810.9" y="830.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.04%)</title><rect x="807.9" y="803.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="810.9" y="814.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.04%)</title><rect x="807.9" y="787.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="810.9" y="798.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (1 samples, 0.04%)</title><rect x="807.9" y="771.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="810.9" y="782.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (1 samples, 0.04%)</title><rect x="807.9" y="755.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="810.9" y="766.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.04%)</title><rect x="807.9" y="739.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="810.9" y="750.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.04%)</title><rect x="807.9" y="723.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="810.9" y="734.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.04%)</title><rect x="807.9" y="707.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="810.9" y="718.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.04%)</title><rect x="807.9" y="691.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="810.9" y="702.0"></text>
</g>
<g>
<title>[GC Thread#5 tid=18140] (1 samples, 0.04%)</title><rect x="808.3" y="883.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="811.3" y="894.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.04%)</title><rect x="808.3" y="867.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="811.3" y="878.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.04%)</title><rect x="808.3" y="851.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="811.3" y="862.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.04%)</title><rect x="808.3" y="835.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="811.3" y="846.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.04%)</title><rect x="808.3" y="819.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="811.3" y="830.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.04%)</title><rect x="808.3" y="803.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="811.3" y="814.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (1 samples, 0.04%)</title><rect x="808.3" y="787.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="811.3" y="798.0"></text>
</g>
<g>
<title>[GC Thread#6 tid=18141] (1 samples, 0.04%)</title><rect x="808.7" y="883.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="811.7" y="894.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.04%)</title><rect x="808.7" y="867.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="811.7" y="878.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.04%)</title><rect x="808.7" y="851.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="811.7" y="862.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.04%)</title><rect x="808.7" y="835.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="811.7" y="846.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.04%)</title><rect x="808.7" y="819.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="811.7" y="830.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.04%)</title><rect x="808.7" y="803.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="811.7" y="814.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.04%)</title><rect x="808.7" y="787.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="811.7" y="798.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.04%)</title><rect x="808.7" y="771.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="811.7" y="782.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.04%)</title><rect x="808.7" y="755.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="811.7" y="766.0"></text>
</g>
<g>
<title>[GC Thread#7 tid=18142] (1 samples, 0.04%)</title><rect x="809.1" y="883.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="812.1" y="894.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.04%)</title><rect x="809.1" y="867.0" width="0.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="812.1" y="878.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.04%)</title><rect x="809.1" y="851.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="812.1" y="862.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.04%)</title><rect x="809.1" y="835.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="812.1" y="846.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.04%)</title><rect x="809.1" y="819.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="812.1" y="830.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.04%)</title><rect x="809.1" y="803.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="812.1" y="814.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.04%)</title><rect x="809.1" y="787.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="812.1" y="798.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=14050] (104 samples, 3.79%)</title><rect x="809.6" y="883.0" width="44.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="812.6" y="894.0">[NIO..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (104 samples, 3.79%)</title><rect x="809.6" y="867.0" width="44.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="812.6" y="878.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (1 samples, 0.04%)</title><rect x="809.6" y="851.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="812.6" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.07%)</title><rect x="810.0" y="851.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="813.0" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.07%)</title><rect x="810.0" y="835.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="813.0" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (41 samples, 1.50%)</title><rect x="810.9" y="851.0" width="17.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="813.9" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (2 samples, 0.07%)</title><rect x="811.7" y="835.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="814.7" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (37 samples, 1.35%)</title><rect x="812.6" y="835.0" width="15.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="815.6" y="846.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.04%)</title><rect x="813.9" y="819.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="816.9" y="830.0"></text>
</g>
<g>
<title>epoll_wait (30 samples, 1.09%)</title><rect x="814.3" y="819.0" width="12.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="817.3" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 0.98%)</title><rect x="815.6" y="803.0" width="11.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="818.6" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (27 samples, 0.98%)</title><rect x="815.6" y="787.0" width="11.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="818.6" y="798.0"></text>
</g>
<g>
<title>sys_epoll_wait (26 samples, 0.95%)</title><rect x="816.0" y="771.0" width="11.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="819.0" y="782.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="816.5" y="755.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="819.5" y="766.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="816.5" y="739.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="819.5" y="750.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="816.5" y="723.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="819.5" y="734.0"></text>
</g>
<g>
<title>ep_poll (24 samples, 0.88%)</title><rect x="816.9" y="755.0" width="10.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="819.9" y="766.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.07%)</title><rect x="816.9" y="739.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="819.9" y="750.0"></text>
</g>
<g>
<title>ep_scan_ready_list (10 samples, 0.36%)</title><rect x="817.8" y="739.0" width="4.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="820.8" y="750.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="817.8" y="723.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="820.8" y="734.0"></text>
</g>
<g>
<title>ep_send_events_proc (9 samples, 0.33%)</title><rect x="818.2" y="723.0" width="3.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="821.2" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (8 samples, 0.29%)</title><rect x="818.6" y="707.0" width="3.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="821.6" y="718.0"></text>
</g>
<g>
<title>__indirect_thunk_start (1 samples, 0.04%)</title><rect x="819.0" y="691.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="822.0" y="702.0"></text>
</g>
<g>
<title>sock_poll (6 samples, 0.22%)</title><rect x="819.5" y="691.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="822.5" y="702.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.04%)</title><rect x="821.2" y="675.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="824.2" y="686.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.04%)</title><rect x="821.6" y="675.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="824.6" y="686.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.04%)</title><rect x="822.1" y="739.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="825.1" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (11 samples, 0.40%)</title><rect x="822.5" y="739.0" width="4.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="825.5" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (11 samples, 0.40%)</title><rect x="822.5" y="723.0" width="4.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="825.5" y="734.0"></text>
</g>
<g>
<title>schedule (11 samples, 0.40%)</title><rect x="822.5" y="707.0" width="4.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="825.5" y="718.0"></text>
</g>
<g>
<title>__schedule (11 samples, 0.40%)</title><rect x="822.5" y="691.0" width="4.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="825.5" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (11 samples, 0.40%)</title><rect x="822.5" y="675.0" width="4.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="825.5" y="686.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.07%)</title><rect x="827.2" y="819.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="830.2" y="830.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.07%)</title><rect x="827.2" y="803.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="830.2" y="814.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="827.2" y="787.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="830.2" y="798.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.04%)</title><rect x="827.7" y="787.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="830.7" y="798.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="827.7" y="771.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="830.7" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="828.1" y="819.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="831.1" y="830.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="828.1" y="803.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="831.1" y="814.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.04%)</title><rect x="828.1" y="787.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="831.1" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (60 samples, 2.19%)</title><rect x="828.5" y="851.0" width="25.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="831.5" y="862.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (59 samples, 2.15%)</title><rect x="828.5" y="835.0" width="25.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="831.5" y="846.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (39 samples, 1.42%)</title><rect x="829.4" y="819.0" width="16.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="832.4" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (28 samples, 1.02%)</title><rect x="829.8" y="803.0" width="12.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="832.8" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (28 samples, 1.02%)</title><rect x="829.8" y="787.0" width="12.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="832.8" y="798.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (25 samples, 0.91%)</title><rect x="830.2" y="771.0" width="10.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="833.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 0.07%)</title><rect x="830.2" y="755.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="833.2" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.07%)</title><rect x="830.2" y="739.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="833.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="830.2" y="723.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="833.2" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="830.2" y="707.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="833.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.04%)</title><rect x="830.2" y="691.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="833.2" y="702.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.04%)</title><rect x="830.7" y="723.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="833.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="830.7" y="707.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="833.7" y="718.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="830.7" y="691.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="833.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.get (23 samples, 0.84%)</title><rect x="831.1" y="755.0" width="9.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="834.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (23 samples, 0.84%)</title><rect x="831.1" y="739.0" width="9.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="834.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (23 samples, 0.84%)</title><rect x="831.1" y="723.0" width="9.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="834.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (2 samples, 0.07%)</title><rect x="831.1" y="707.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="834.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.07%)</title><rect x="831.1" y="691.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="834.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.07%)</title><rect x="831.1" y="675.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="834.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.07%)</title><rect x="831.1" y="659.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="834.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.07%)</title><rect x="832.0" y="707.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="835.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.04%)</title><rect x="832.4" y="691.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="835.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.04%)</title><rect x="832.4" y="675.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="835.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.04%)</title><rect x="832.4" y="659.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="835.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.04%)</title><rect x="832.4" y="643.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="835.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.04%)</title><rect x="832.4" y="627.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="835.4" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="832.4" y="611.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="835.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (19 samples, 0.69%)</title><rect x="832.8" y="707.0" width="8.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="835.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (19 samples, 0.69%)</title><rect x="832.8" y="691.0" width="8.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="835.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (19 samples, 0.69%)</title><rect x="832.8" y="675.0" width="8.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="835.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (19 samples, 0.69%)</title><rect x="832.8" y="659.0" width="8.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="835.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (19 samples, 0.69%)</title><rect x="832.8" y="643.0" width="8.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="835.8" y="654.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.07%)</title><rect x="833.2" y="627.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="836.2" y="638.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.04%)</title><rect x="833.2" y="611.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="836.2" y="622.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.04%)</title><rect x="833.7" y="611.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="836.7" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_signal (16 samples, 0.58%)</title><rect x="834.1" y="627.0" width="6.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="837.1" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.51%)</title><rect x="835.0" y="611.0" width="6.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="838.0" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.51%)</title><rect x="835.0" y="595.0" width="6.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="838.0" y="606.0"></text>
</g>
<g>
<title>sys_futex (13 samples, 0.47%)</title><rect x="835.4" y="579.0" width="5.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="838.4" y="590.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.47%)</title><rect x="835.4" y="563.0" width="5.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="838.4" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.07%)</title><rect x="835.4" y="547.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="838.4" y="558.0"></text>
</g>
<g>
<title>futex_wake_op (11 samples, 0.40%)</title><rect x="836.3" y="547.0" width="4.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="839.3" y="558.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.36%)</title><rect x="836.7" y="531.0" width="4.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="839.7" y="542.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.36%)</title><rect x="836.7" y="515.0" width="4.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="839.7" y="526.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.36%)</title><rect x="836.7" y="499.0" width="4.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="839.7" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (1 samples, 0.04%)</title><rect x="841.0" y="771.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="844.0" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.04%)</title><rect x="841.4" y="771.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="844.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="841.4" y="755.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="844.4" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="841.4" y="739.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="844.4" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="841.4" y="723.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="844.4" y="734.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (1 samples, 0.04%)</title><rect x="841.4" y="707.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="844.4" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.22%)</title><rect x="841.9" y="803.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="844.9" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.11%)</title><rect x="842.3" y="787.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="845.3" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.11%)</title><rect x="842.3" y="771.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="845.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="843.1" y="755.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="846.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="843.1" y="739.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="846.1" y="750.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.04%)</title><rect x="843.1" y="723.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="846.1" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="843.1" y="707.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="846.1" y="718.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.04%)</title><rect x="843.1" y="691.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="846.1" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="843.1" y="675.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="846.1" y="686.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="843.1" y="659.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="846.1" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.07%)</title><rect x="843.6" y="787.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="846.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.11%)</title><rect x="844.4" y="803.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="847.4" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="845.7" y="803.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="848.7" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="845.7" y="787.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="848.7" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (18 samples, 0.66%)</title><rect x="846.2" y="819.0" width="7.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="849.2" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (18 samples, 0.66%)</title><rect x="846.2" y="803.0" width="7.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="849.2" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.11%)</title><rect x="846.6" y="787.0" width="1.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="849.6" y="798.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="847.0" y="771.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="850.0" y="782.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="847.4" y="771.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="850.4" y="782.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="847.9" y="787.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="850.9" y="798.0"></text>
</g>
<g>
<title>recv (13 samples, 0.47%)</title><rect x="848.3" y="787.0" width="5.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="851.3" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.44%)</title><rect x="848.7" y="771.0" width="5.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="851.7" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.44%)</title><rect x="848.7" y="755.0" width="5.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="851.7" y="766.0"></text>
</g>
<g>
<title>sys_recvfrom (10 samples, 0.36%)</title><rect x="849.6" y="739.0" width="4.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="852.6" y="750.0"></text>
</g>
<g>
<title>SYSC_recvfrom (10 samples, 0.36%)</title><rect x="849.6" y="723.0" width="4.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="852.6" y="734.0"></text>
</g>
<g>
<title>sock_recvmsg (9 samples, 0.33%)</title><rect x="849.6" y="707.0" width="3.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="852.6" y="718.0"></text>
</g>
<g>
<title>inet_recvmsg (7 samples, 0.26%)</title><rect x="849.6" y="691.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="852.6" y="702.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="849.6" y="675.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="852.6" y="686.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="850.0" y="675.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="853.0" y="686.0"></text>
</g>
<g>
<title>tcp_recvmsg (5 samples, 0.18%)</title><rect x="850.5" y="675.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="853.5" y="686.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (3 samples, 0.11%)</title><rect x="850.5" y="659.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="853.5" y="670.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="850.5" y="643.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="853.5" y="654.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.07%)</title><rect x="850.9" y="643.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="853.9" y="654.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.07%)</title><rect x="850.9" y="627.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="853.9" y="638.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.04%)</title><rect x="851.8" y="659.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="854.8" y="670.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.04%)</title><rect x="852.2" y="659.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="855.2" y="670.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.07%)</title><rect x="852.6" y="691.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="855.6" y="702.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="853.5" y="707.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="856.5" y="718.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="853.5" y="691.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="856.5" y="702.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="853.5" y="675.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="856.5" y="686.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="853.5" y="659.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="856.5" y="670.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="853.9" y="835.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="856.9" y="846.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=14051] (113 samples, 4.12%)</title><rect x="854.3" y="883.0" width="48.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="857.3" y="894.0">[NIO..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (113 samples, 4.12%)</title><rect x="854.3" y="867.0" width="48.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="857.3" y="878.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (50 samples, 1.82%)</title><rect x="854.3" y="851.0" width="21.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="857.3" y="862.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (3 samples, 0.11%)</title><rect x="856.1" y="835.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="859.1" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (3 samples, 0.11%)</title><rect x="856.1" y="819.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="859.1" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (43 samples, 1.57%)</title><rect x="857.3" y="835.0" width="18.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="860.3" y="846.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.04%)</title><rect x="862.1" y="819.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="865.1" y="830.0"></text>
</g>
<g>
<title>__clock_gettime (3 samples, 0.11%)</title><rect x="862.5" y="819.0" width="1.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="865.5" y="830.0"></text>
</g>
<g>
<title>epoll_wait (26 samples, 0.95%)</title><rect x="863.8" y="819.0" width="11.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="866.8" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.73%)</title><rect x="866.4" y="803.0" width="8.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="869.4" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.69%)</title><rect x="866.4" y="787.0" width="8.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="869.4" y="798.0"></text>
</g>
<g>
<title>fput (1 samples, 0.04%)</title><rect x="866.4" y="771.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="869.4" y="782.0"></text>
</g>
<g>
<title>sys_epoll_wait (18 samples, 0.66%)</title><rect x="866.8" y="771.0" width="7.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="869.8" y="782.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="866.8" y="755.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="869.8" y="766.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="866.8" y="739.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="869.8" y="750.0"></text>
</g>
<g>
<title>ep_poll (17 samples, 0.62%)</title><rect x="867.2" y="755.0" width="7.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="870.2" y="766.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="867.7" y="739.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="870.7" y="750.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.04%)</title><rect x="868.1" y="739.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="871.1" y="750.0"></text>
</g>
<g>
<title>ep_scan_ready_list (5 samples, 0.18%)</title><rect x="868.5" y="739.0" width="2.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="871.5" y="750.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.04%)</title><rect x="869.0" y="723.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="872.0" y="734.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.07%)</title><rect x="869.4" y="723.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="872.4" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (1 samples, 0.04%)</title><rect x="869.8" y="707.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="872.8" y="718.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.04%)</title><rect x="870.3" y="723.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="873.3" y="734.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.04%)</title><rect x="870.3" y="707.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="873.3" y="718.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.04%)</title><rect x="870.7" y="739.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="873.7" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (8 samples, 0.29%)</title><rect x="871.1" y="739.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="874.1" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (7 samples, 0.26%)</title><rect x="871.5" y="723.0" width="3.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="874.5" y="734.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.26%)</title><rect x="871.5" y="707.0" width="3.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="874.5" y="718.0"></text>
</g>
<g>
<title>__schedule (6 samples, 0.22%)</title><rect x="872.0" y="691.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="875.0" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (6 samples, 0.22%)</title><rect x="872.0" y="675.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="875.0" y="686.0"></text>
</g>
<g>
<title>sys_epoll_wait (1 samples, 0.04%)</title><rect x="874.6" y="787.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="877.6" y="798.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="875.0" y="819.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="878.0" y="830.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.04%)</title><rect x="875.0" y="803.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="878.0" y="814.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.04%)</title><rect x="875.0" y="787.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="878.0" y="798.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="875.0" y="771.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="878.0" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="875.4" y="819.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="878.4" y="830.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="875.4" y="803.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="878.4" y="814.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.04%)</title><rect x="875.4" y="787.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="878.4" y="798.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.04%)</title><rect x="875.4" y="771.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="878.4" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (63 samples, 2.30%)</title><rect x="875.8" y="851.0" width="27.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="878.8" y="862.0">o..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="876.3" y="835.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="879.3" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (60 samples, 2.19%)</title><rect x="876.7" y="835.0" width="25.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="879.7" y="846.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (36 samples, 1.31%)</title><rect x="876.7" y="819.0" width="15.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="879.7" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (24 samples, 0.88%)</title><rect x="878.9" y="803.0" width="10.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="881.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (24 samples, 0.88%)</title><rect x="878.9" y="787.0" width="10.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="881.9" y="798.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (17 samples, 0.62%)</title><rect x="879.7" y="771.0" width="7.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="882.7" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.04%)</title><rect x="879.7" y="755.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="882.7" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.04%)</title><rect x="879.7" y="739.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="882.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="879.7" y="723.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="882.7" y="734.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newString (1 samples, 0.04%)</title><rect x="879.7" y="707.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="882.7" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="879.7" y="691.0" width="0.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="882.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.get (16 samples, 0.58%)</title><rect x="880.2" y="755.0" width="6.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="883.2" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.07%)</title><rect x="880.2" y="739.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="883.2" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.07%)</title><rect x="880.2" y="723.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="883.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$75/1549034997.get$Lambda (2 samples, 0.07%)</title><rect x="880.2" y="707.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="883.2" y="718.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="880.6" y="691.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="883.6" y="702.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.04%)</title><rect x="880.6" y="675.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="883.6" y="686.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.04%)</title><rect x="880.6" y="659.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="883.6" y="670.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="880.6" y="643.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="883.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (14 samples, 0.51%)</title><rect x="881.0" y="739.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="884.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (14 samples, 0.51%)</title><rect x="881.0" y="723.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="884.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.04%)</title><rect x="881.0" y="707.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="884.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.04%)</title><rect x="881.0" y="691.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="884.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.04%)</title><rect x="881.0" y="675.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="884.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.04%)</title><rect x="881.0" y="659.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="884.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.04%)</title><rect x="881.0" y="643.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="884.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.04%)</title><rect x="881.0" y="627.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="884.0" y="638.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.04%)</title><rect x="881.0" y="611.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="884.0" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.04%)</title><rect x="881.0" y="595.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="884.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (13 samples, 0.47%)</title><rect x="881.4" y="707.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="884.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (13 samples, 0.47%)</title><rect x="881.4" y="691.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="884.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (13 samples, 0.47%)</title><rect x="881.4" y="675.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="884.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (13 samples, 0.47%)</title><rect x="881.4" y="659.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="884.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (13 samples, 0.47%)</title><rect x="881.4" y="643.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="884.4" y="654.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.04%)</title><rect x="881.4" y="627.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="884.4" y="638.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 0.40%)</title><rect x="881.9" y="627.0" width="4.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="884.9" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.33%)</title><rect x="882.7" y="611.0" width="3.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="885.7" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.33%)</title><rect x="882.7" y="595.0" width="3.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="885.7" y="606.0"></text>
</g>
<g>
<title>sys_futex (8 samples, 0.29%)</title><rect x="883.2" y="579.0" width="3.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="886.2" y="590.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.29%)</title><rect x="883.2" y="563.0" width="3.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="886.2" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="883.2" y="547.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="886.2" y="558.0"></text>
</g>
<g>
<title>futex_wake_op (7 samples, 0.26%)</title><rect x="883.6" y="547.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="886.6" y="558.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.22%)</title><rect x="884.0" y="531.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="887.0" y="542.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.22%)</title><rect x="884.0" y="515.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="887.0" y="526.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.22%)</title><rect x="884.0" y="499.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="887.0" y="510.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.04%)</title><rect x="886.6" y="627.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="889.6" y="638.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.07%)</title><rect x="887.0" y="771.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="890.0" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.07%)</title><rect x="887.0" y="755.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="890.0" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.07%)</title><rect x="887.0" y="739.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="890.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.07%)</title><rect x="887.0" y="723.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="890.0" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.04%)</title><rect x="887.5" y="707.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="890.5" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3 samples, 0.11%)</title><rect x="887.9" y="771.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="890.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.11%)</title><rect x="887.9" y="755.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="890.9" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.11%)</title><rect x="887.9" y="739.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="890.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.11%)</title><rect x="887.9" y="723.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="890.9" y="734.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (2 samples, 0.07%)</title><rect x="887.9" y="707.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="890.9" y="718.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="888.8" y="707.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="891.8" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.15%)</title><rect x="889.2" y="803.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="892.2" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.15%)</title><rect x="889.2" y="787.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="892.2" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.15%)</title><rect x="889.2" y="771.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="892.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="890.9" y="803.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="893.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeaderCount (1 samples, 0.04%)</title><rect x="891.3" y="803.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="894.3" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="891.8" y="803.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="894.8" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="891.8" y="787.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="894.8" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (24 samples, 0.88%)</title><rect x="892.2" y="819.0" width="10.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="895.2" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (24 samples, 0.88%)</title><rect x="892.2" y="803.0" width="10.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="895.2" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.11%)</title><rect x="893.5" y="787.0" width="1.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="896.5" y="798.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.11%)</title><rect x="893.5" y="771.0" width="1.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="896.5" y="782.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="893.5" y="755.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="896.5" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (2 samples, 0.07%)</title><rect x="893.9" y="755.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="896.9" y="766.0"></text>
</g>
<g>
<title>recv (18 samples, 0.66%)</title><rect x="894.8" y="787.0" width="7.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="897.8" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.51%)</title><rect x="896.5" y="771.0" width="6.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="899.5" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.51%)</title><rect x="896.5" y="755.0" width="6.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="899.5" y="766.0"></text>
</g>
<g>
<title>sys_recvfrom (13 samples, 0.47%)</title><rect x="896.9" y="739.0" width="5.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="899.9" y="750.0"></text>
</g>
<g>
<title>SYSC_recvfrom (13 samples, 0.47%)</title><rect x="896.9" y="723.0" width="5.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="899.9" y="734.0"></text>
</g>
<g>
<title>sock_recvmsg (10 samples, 0.36%)</title><rect x="896.9" y="707.0" width="4.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="899.9" y="718.0"></text>
</g>
<g>
<title>inet_recvmsg (7 samples, 0.26%)</title><rect x="896.9" y="691.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="899.9" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.04%)</title><rect x="896.9" y="675.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="899.9" y="686.0"></text>
</g>
<g>
<title>tcp_recvmsg (6 samples, 0.22%)</title><rect x="897.4" y="675.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="900.4" y="686.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.04%)</title><rect x="897.8" y="659.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="900.8" y="670.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="897.8" y="643.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="900.8" y="654.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.04%)</title><rect x="897.8" y="627.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="900.8" y="638.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.04%)</title><rect x="898.2" y="659.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="901.2" y="670.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (3 samples, 0.11%)</title><rect x="898.7" y="659.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="901.7" y="670.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.11%)</title><rect x="898.7" y="643.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="901.7" y="654.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.04%)</title><rect x="899.5" y="627.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="902.5" y="638.0"></text>
</g>
<g>
<title>security_socket_recvmsg (3 samples, 0.11%)</title><rect x="899.9" y="691.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="902.9" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.04%)</title><rect x="900.8" y="675.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="903.8" y="686.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.04%)</title><rect x="900.8" y="659.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="903.8" y="670.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.04%)</title><rect x="900.8" y="643.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="903.8" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.11%)</title><rect x="901.2" y="707.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="904.2" y="718.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.07%)</title><rect x="901.2" y="691.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="904.2" y="702.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.07%)</title><rect x="901.2" y="675.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="904.2" y="686.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.07%)</title><rect x="901.2" y="659.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="904.2" y="670.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="902.1" y="691.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="905.1" y="702.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="902.5" y="835.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="905.5" y="846.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=14052] (97 samples, 3.54%)</title><rect x="903.0" y="883.0" width="41.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="906.0" y="894.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (97 samples, 3.54%)</title><rect x="903.0" y="867.0" width="41.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="906.0" y="878.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.07%)</title><rect x="903.0" y="851.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="906.0" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.07%)</title><rect x="903.0" y="835.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="906.0" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (30 samples, 1.09%)</title><rect x="903.8" y="851.0" width="12.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="906.8" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (29 samples, 1.06%)</title><rect x="904.3" y="835.0" width="12.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="907.3" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="905.5" y="819.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="908.5" y="830.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.04%)</title><rect x="905.5" y="803.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="908.5" y="814.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.04%)</title><rect x="906.0" y="819.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="909.0" y="830.0"></text>
</g>
<g>
<title>epoll_wait (20 samples, 0.73%)</title><rect x="906.4" y="819.0" width="8.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="909.4" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.51%)</title><rect x="909.0" y="803.0" width="6.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="912.0" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.51%)</title><rect x="909.0" y="787.0" width="6.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="912.0" y="798.0"></text>
</g>
<g>
<title>fput (1 samples, 0.04%)</title><rect x="909.0" y="771.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="912.0" y="782.0"></text>
</g>
<g>
<title>sys_epoll_wait (13 samples, 0.47%)</title><rect x="909.4" y="771.0" width="5.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="912.4" y="782.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="909.4" y="755.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="912.4" y="766.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="909.4" y="739.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="912.4" y="750.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="909.4" y="723.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="912.4" y="734.0"></text>
</g>
<g>
<title>ep_poll (12 samples, 0.44%)</title><rect x="909.8" y="755.0" width="5.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="912.8" y="766.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="909.8" y="739.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="912.8" y="750.0"></text>
</g>
<g>
<title>ep_scan_ready_list (4 samples, 0.15%)</title><rect x="910.3" y="739.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="913.3" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (3 samples, 0.11%)</title><rect x="910.3" y="723.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="913.3" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (1 samples, 0.04%)</title><rect x="911.1" y="707.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="914.1" y="718.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.04%)</title><rect x="911.6" y="723.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="914.6" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (7 samples, 0.26%)</title><rect x="912.0" y="739.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="915.0" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (7 samples, 0.26%)</title><rect x="912.0" y="723.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="915.0" y="734.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.26%)</title><rect x="912.0" y="707.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="915.0" y="718.0"></text>
</g>
<g>
<title>__schedule (6 samples, 0.22%)</title><rect x="912.4" y="691.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="915.4" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (6 samples, 0.22%)</title><rect x="912.4" y="675.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="915.4" y="686.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.07%)</title><rect x="915.0" y="819.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="918.0" y="830.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.07%)</title><rect x="915.0" y="803.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="918.0" y="814.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.07%)</title><rect x="915.0" y="787.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="918.0" y="798.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.07%)</title><rect x="915.9" y="819.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="918.9" y="830.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.07%)</title><rect x="915.9" y="803.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="918.9" y="814.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.04%)</title><rect x="915.9" y="787.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="918.9" y="798.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.04%)</title><rect x="916.3" y="787.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="919.3" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (65 samples, 2.37%)</title><rect x="916.7" y="851.0" width="28.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="919.7" y="862.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (60 samples, 2.19%)</title><rect x="918.0" y="835.0" width="25.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="921.0" y="846.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (38 samples, 1.39%)</title><rect x="918.5" y="819.0" width="16.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="921.5" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (28 samples, 1.02%)</title><rect x="918.5" y="803.0" width="12.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="921.5" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (28 samples, 1.02%)</title><rect x="918.5" y="787.0" width="12.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="921.5" y="798.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (26 samples, 0.95%)</title><rect x="918.5" y="771.0" width="11.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="921.5" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.04%)</title><rect x="918.5" y="755.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="921.5" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.04%)</title><rect x="918.5" y="739.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="921.5" y="750.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.04%)</title><rect x="918.5" y="723.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="921.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="918.5" y="707.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="921.5" y="718.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="918.5" y="691.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="921.5" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="918.5" y="675.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="921.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.get (25 samples, 0.91%)</title><rect x="918.9" y="755.0" width="10.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="921.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (25 samples, 0.91%)</title><rect x="918.9" y="739.0" width="10.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="921.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (25 samples, 0.91%)</title><rect x="918.9" y="723.0" width="10.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="921.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.04%)</title><rect x="918.9" y="707.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="921.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.04%)</title><rect x="918.9" y="691.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="921.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.04%)</title><rect x="918.9" y="675.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="921.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.04%)</title><rect x="918.9" y="659.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="921.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (24 samples, 0.88%)</title><rect x="919.3" y="707.0" width="10.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="922.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (24 samples, 0.88%)</title><rect x="919.3" y="691.0" width="10.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="922.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (24 samples, 0.88%)</title><rect x="919.3" y="675.0" width="10.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="922.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (23 samples, 0.84%)</title><rect x="919.3" y="659.0" width="9.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="922.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (23 samples, 0.84%)</title><rect x="919.3" y="643.0" width="9.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="922.3" y="654.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.26%)</title><rect x="919.7" y="627.0" width="3.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="922.7" y="638.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.228] (2 samples, 0.07%)</title><rect x="919.7" y="611.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="922.7" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.11%)</title><rect x="920.6" y="611.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="923.6" y="622.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.04%)</title><rect x="921.9" y="611.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="924.9" y="622.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.04%)</title><rect x="922.3" y="611.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="925.3" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_signal (13 samples, 0.47%)</title><rect x="922.8" y="627.0" width="5.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="925.8" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.40%)</title><rect x="923.6" y="611.0" width="4.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="926.6" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.40%)</title><rect x="923.6" y="595.0" width="4.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="926.6" y="606.0"></text>
</g>
<g>
<title>sys_futex (11 samples, 0.40%)</title><rect x="923.6" y="579.0" width="4.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="926.6" y="590.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.40%)</title><rect x="923.6" y="563.0" width="4.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="926.6" y="574.0"></text>
</g>
<g>
<title>futex_wake_op (11 samples, 0.40%)</title><rect x="923.6" y="547.0" width="4.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="926.6" y="558.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.04%)</title><rect x="924.0" y="531.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="927.0" y="542.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.04%)</title><rect x="924.5" y="531.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="927.5" y="542.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.29%)</title><rect x="924.9" y="531.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="927.9" y="542.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.29%)</title><rect x="924.9" y="515.0" width="3.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="927.9" y="526.0"></text>
</g>
<g>
<title>__lock_text_start (8 samples, 0.29%)</title><rect x="924.9" y="499.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="927.9" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.04%)</title><rect x="928.4" y="627.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="931.4" y="638.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.04%)</title><rect x="928.8" y="627.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="931.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.04%)</title><rect x="929.2" y="659.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="932.2" y="670.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.04%)</title><rect x="929.6" y="771.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="932.6" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.04%)</title><rect x="929.6" y="755.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="932.6" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.04%)</title><rect x="929.6" y="739.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="932.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.04%)</title><rect x="929.6" y="723.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="932.6" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.04%)</title><rect x="930.1" y="771.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="933.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="930.1" y="755.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="933.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="930.1" y="739.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="933.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="930.1" y="723.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="933.1" y="734.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (1 samples, 0.04%)</title><rect x="930.1" y="707.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="933.1" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 0.18%)</title><rect x="930.5" y="803.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="933.5" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="932.2" y="787.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="935.2" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="932.2" y="771.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="935.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.07%)</title><rect x="932.7" y="803.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="935.7" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.11%)</title><rect x="933.5" y="803.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="936.5" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="934.4" y="787.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="937.4" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (21 samples, 0.77%)</title><rect x="934.8" y="819.0" width="9.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="937.8" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (21 samples, 0.77%)</title><rect x="934.8" y="803.0" width="9.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="937.8" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.15%)</title><rect x="935.7" y="787.0" width="1.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="938.7" y="798.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned (1 samples, 0.04%)</title><rect x="936.1" y="771.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="939.1" y="782.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.07%)</title><rect x="936.5" y="771.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="939.5" y="782.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.07%)</title><rect x="936.5" y="755.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="939.5" y="766.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.11%)</title><rect x="937.4" y="787.0" width="1.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="940.4" y="798.0"></text>
</g>
<g>
<title>recv (12 samples, 0.44%)</title><rect x="938.7" y="787.0" width="5.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="941.7" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.36%)</title><rect x="939.5" y="771.0" width="4.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="942.5" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.36%)</title><rect x="939.5" y="755.0" width="4.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="942.5" y="766.0"></text>
</g>
<g>
<title>sys_recvfrom (8 samples, 0.29%)</title><rect x="940.4" y="739.0" width="3.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="943.4" y="750.0"></text>
</g>
<g>
<title>SYSC_recvfrom (8 samples, 0.29%)</title><rect x="940.4" y="723.0" width="3.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="943.4" y="734.0"></text>
</g>
<g>
<title>sock_recvmsg (6 samples, 0.22%)</title><rect x="940.8" y="707.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="943.8" y="718.0"></text>
</g>
<g>
<title>inet_recvmsg (5 samples, 0.18%)</title><rect x="940.8" y="691.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="943.8" y="702.0"></text>
</g>
<g>
<title>tcp_recvmsg (5 samples, 0.18%)</title><rect x="940.8" y="675.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="943.8" y="686.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.04%)</title><rect x="941.7" y="659.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="944.7" y="670.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="941.7" y="643.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="944.7" y="654.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.04%)</title><rect x="941.7" y="627.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="944.7" y="638.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.07%)</title><rect x="942.1" y="659.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="945.1" y="670.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.04%)</title><rect x="942.6" y="643.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="945.6" y="654.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="942.6" y="627.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="945.6" y="638.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.04%)</title><rect x="943.0" y="691.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="946.0" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.04%)</title><rect x="943.0" y="675.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="946.0" y="686.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.04%)</title><rect x="943.0" y="659.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="946.0" y="670.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.04%)</title><rect x="943.0" y="643.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="946.0" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="943.4" y="707.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="946.4" y="718.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="943.4" y="691.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="946.4" y="702.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="943.4" y="675.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="946.4" y="686.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="943.4" y="659.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="946.4" y="670.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.07%)</title><rect x="943.8" y="835.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="946.8" y="846.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="944.3" y="819.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="947.3" y="830.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=14053] (104 samples, 3.79%)</title><rect x="944.7" y="883.0" width="44.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="947.7" y="894.0">[NIO..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (104 samples, 3.79%)</title><rect x="944.7" y="867.0" width="44.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="947.7" y="878.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (27 samples, 0.98%)</title><rect x="944.7" y="851.0" width="11.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="947.7" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (26 samples, 0.95%)</title><rect x="945.1" y="835.0" width="11.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="948.1" y="846.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.04%)</title><rect x="946.4" y="819.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="949.4" y="830.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.04%)</title><rect x="946.9" y="819.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="949.9" y="830.0"></text>
</g>
<g>
<title>epoll_wait (18 samples, 0.66%)</title><rect x="947.3" y="819.0" width="7.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="950.3" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.58%)</title><rect x="948.1" y="803.0" width="6.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="951.1" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.58%)</title><rect x="948.1" y="787.0" width="6.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="951.1" y="798.0"></text>
</g>
<g>
<title>fput (1 samples, 0.04%)</title><rect x="948.1" y="771.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="951.1" y="782.0"></text>
</g>
<g>
<title>sys_epoll_wait (15 samples, 0.55%)</title><rect x="948.6" y="771.0" width="6.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="951.6" y="782.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="948.6" y="755.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="951.6" y="766.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="948.6" y="739.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="951.6" y="750.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="948.6" y="723.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="951.6" y="734.0"></text>
</g>
<g>
<title>ep_poll (13 samples, 0.47%)</title><rect x="949.0" y="755.0" width="5.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="952.0" y="766.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.07%)</title><rect x="949.0" y="739.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="952.0" y="750.0"></text>
</g>
<g>
<title>ep_scan_ready_list (6 samples, 0.22%)</title><rect x="949.9" y="739.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="952.9" y="750.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="949.9" y="723.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="952.9" y="734.0"></text>
</g>
<g>
<title>ep_send_events_proc (4 samples, 0.15%)</title><rect x="950.3" y="723.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="953.3" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (1 samples, 0.04%)</title><rect x="951.6" y="707.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="954.6" y="718.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.04%)</title><rect x="951.6" y="691.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="954.6" y="702.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.04%)</title><rect x="952.0" y="723.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="955.0" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (5 samples, 0.18%)</title><rect x="952.5" y="739.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="955.5" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (5 samples, 0.18%)</title><rect x="952.5" y="723.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="955.5" y="734.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.18%)</title><rect x="952.5" y="707.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="955.5" y="718.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.18%)</title><rect x="952.5" y="691.0" width="2.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="955.5" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.11%)</title><rect x="953.3" y="675.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="956.3" y="686.0"></text>
</g>
<g>
<title>ep_scan_ready_list (1 samples, 0.04%)</title><rect x="954.6" y="755.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="957.6" y="766.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="955.0" y="819.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="958.0" y="830.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.04%)</title><rect x="955.0" y="803.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="958.0" y="814.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="955.0" y="787.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="958.0" y="798.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.07%)</title><rect x="955.5" y="819.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="958.5" y="830.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.07%)</title><rect x="955.5" y="803.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="958.5" y="814.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.04%)</title><rect x="955.5" y="787.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="958.5" y="798.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.04%)</title><rect x="955.5" y="771.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="958.5" y="782.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.04%)</title><rect x="955.9" y="787.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="958.9" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (77 samples, 2.81%)</title><rect x="956.3" y="851.0" width="33.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="959.3" y="862.0">on..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.04%)</title><rect x="956.8" y="835.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="959.8" y="846.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.04%)</title><rect x="956.8" y="819.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="959.8" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.04%)</title><rect x="956.8" y="803.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="959.8" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="956.8" y="787.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="959.8" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="956.8" y="771.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="959.8" y="782.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.04%)</title><rect x="956.8" y="755.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="959.8" y="766.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="956.8" y="739.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="959.8" y="750.0"></text>
</g>
<g>
<title>futex_wake_op (1 samples, 0.04%)</title><rect x="956.8" y="723.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="959.8" y="734.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.04%)</title><rect x="956.8" y="707.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="959.8" y="718.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.04%)</title><rect x="956.8" y="691.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="959.8" y="702.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="957.2" y="835.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="960.2" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (73 samples, 2.66%)</title><rect x="957.6" y="835.0" width="31.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="960.6" y="846.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (51 samples, 1.86%)</title><rect x="957.6" y="819.0" width="22.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="960.6" y="830.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (40 samples, 1.46%)</title><rect x="958.9" y="803.0" width="17.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="961.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (40 samples, 1.46%)</title><rect x="958.9" y="787.0" width="17.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="961.9" y="798.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (39 samples, 1.42%)</title><rect x="959.3" y="771.0" width="16.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="962.3" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (9 samples, 0.33%)</title><rect x="959.3" y="755.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="962.3" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (8 samples, 0.29%)</title><rect x="959.3" y="739.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="962.3" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="959.3" y="723.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="962.3" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="959.3" y="707.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="962.3" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.18%)</title><rect x="959.8" y="723.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="962.8" y="734.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newString (5 samples, 0.18%)</title><rect x="959.8" y="707.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="962.8" y="718.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.04%)</title><rect x="959.8" y="691.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="962.8" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.15%)</title><rect x="960.2" y="691.0" width="1.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="963.2" y="702.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.07%)</title><rect x="961.9" y="723.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="964.9" y="734.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.07%)</title><rect x="961.9" y="707.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="964.9" y="718.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.07%)</title><rect x="961.9" y="691.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="964.9" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.07%)</title><rect x="961.9" y="675.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="964.9" y="686.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.04%)</title><rect x="962.8" y="739.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="965.8" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.get (30 samples, 1.09%)</title><rect x="963.2" y="755.0" width="12.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="966.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (30 samples, 1.09%)</title><rect x="963.2" y="739.0" width="12.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="966.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (29 samples, 1.06%)</title><rect x="963.6" y="723.0" width="12.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="966.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (2 samples, 0.07%)</title><rect x="963.6" y="707.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="966.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.07%)</title><rect x="963.6" y="691.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="966.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.07%)</title><rect x="963.6" y="675.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="966.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.07%)</title><rect x="963.6" y="659.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="966.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (27 samples, 0.98%)</title><rect x="964.5" y="707.0" width="11.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="967.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (27 samples, 0.98%)</title><rect x="964.5" y="691.0" width="11.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="967.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (27 samples, 0.98%)</title><rect x="964.5" y="675.0" width="11.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="967.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (27 samples, 0.98%)</title><rect x="964.5" y="659.0" width="11.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="967.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (27 samples, 0.98%)</title><rect x="964.5" y="643.0" width="11.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="967.5" y="654.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.04%)</title><rect x="964.5" y="627.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="967.5" y="638.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.22%)</title><rect x="964.9" y="627.0" width="2.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="967.9" y="638.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.04%)</title><rect x="966.2" y="611.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="969.2" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.04%)</title><rect x="966.7" y="611.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="969.7" y="622.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.04%)</title><rect x="967.1" y="611.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="970.1" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_signal (18 samples, 0.66%)</title><rect x="967.5" y="627.0" width="7.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="970.5" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.58%)</title><rect x="968.4" y="611.0" width="6.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="971.4" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.58%)</title><rect x="968.4" y="595.0" width="6.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="971.4" y="606.0"></text>
</g>
<g>
<title>sys_futex (16 samples, 0.58%)</title><rect x="968.4" y="579.0" width="6.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="971.4" y="590.0"></text>
</g>
<g>
<title>do_futex (15 samples, 0.55%)</title><rect x="968.8" y="563.0" width="6.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="971.8" y="574.0"></text>
</g>
<g>
<title>futex_wake_op (15 samples, 0.55%)</title><rect x="968.8" y="547.0" width="6.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="971.8" y="558.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.11%)</title><rect x="969.7" y="531.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="972.7" y="542.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.04%)</title><rect x="970.1" y="515.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="973.1" y="526.0"></text>
</g>
<g>
<title>wake_q_add (1 samples, 0.04%)</title><rect x="970.5" y="515.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="973.5" y="526.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.36%)</title><rect x="971.0" y="531.0" width="4.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="974.0" y="542.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.36%)</title><rect x="971.0" y="515.0" width="4.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="974.0" y="526.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.36%)</title><rect x="971.0" y="499.0" width="4.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="974.0" y="510.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (2 samples, 0.07%)</title><rect x="975.3" y="627.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="978.3" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.22%)</title><rect x="976.1" y="803.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="979.1" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.11%)</title><rect x="977.4" y="787.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="980.4" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.11%)</title><rect x="977.4" y="771.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="980.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="978.3" y="755.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="981.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="978.3" y="739.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="981.3" y="750.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.04%)</title><rect x="978.3" y="723.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="981.3" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="978.3" y="707.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="981.3" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="978.7" y="803.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="981.7" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="979.1" y="803.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="982.1" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="979.1" y="787.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="982.1" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="979.1" y="771.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="982.1" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="979.1" y="755.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="982.1" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (22 samples, 0.80%)</title><rect x="979.6" y="819.0" width="9.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="982.6" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (22 samples, 0.80%)</title><rect x="979.6" y="803.0" width="9.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="982.6" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.07%)</title><rect x="980.0" y="787.0" width="0.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="983.0" y="798.0"></text>
</g>
<g>
<title>recv (19 samples, 0.69%)</title><rect x="980.9" y="787.0" width="8.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="983.9" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.36%)</title><rect x="984.7" y="771.0" width="4.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="987.7" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.36%)</title><rect x="984.7" y="755.0" width="4.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="987.7" y="766.0"></text>
</g>
<g>
<title>sys_recvfrom (9 samples, 0.33%)</title><rect x="985.2" y="739.0" width="3.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="988.2" y="750.0"></text>
</g>
<g>
<title>SYSC_recvfrom (9 samples, 0.33%)</title><rect x="985.2" y="723.0" width="3.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="988.2" y="734.0"></text>
</g>
<g>
<title>sock_recvmsg (9 samples, 0.33%)</title><rect x="985.2" y="707.0" width="3.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="988.2" y="718.0"></text>
</g>
<g>
<title>inet_recvmsg (8 samples, 0.29%)</title><rect x="985.2" y="691.0" width="3.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="988.2" y="702.0"></text>
</g>
<g>
<title>tcp_recvmsg (8 samples, 0.29%)</title><rect x="985.2" y="675.0" width="3.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="988.2" y="686.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.04%)</title><rect x="986.0" y="659.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="989.0" y="670.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="986.0" y="643.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="989.0" y="654.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="986.0" y="627.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="989.0" y="638.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="986.4" y="659.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="989.4" y="670.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.15%)</title><rect x="986.9" y="659.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="989.9" y="670.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.11%)</title><rect x="987.3" y="643.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="990.3" y="654.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.04%)</title><rect x="987.7" y="627.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="990.7" y="638.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="988.2" y="627.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="991.2" y="638.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.04%)</title><rect x="988.6" y="691.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="991.6" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.04%)</title><rect x="988.6" y="675.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="991.6" y="686.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.04%)</title><rect x="988.6" y="659.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="991.6" y="670.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.04%)</title><rect x="988.6" y="643.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="991.6" y="654.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="989.0" y="835.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="992.0" y="846.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="989.0" y="819.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="992.0" y="830.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=14054] (105 samples, 3.83%)</title><rect x="989.5" y="883.0" width="45.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="992.5" y="894.0">[NIO..</text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.04%)</title><rect x="989.5" y="867.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="992.5" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="989.5" y="851.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="992.5" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (1 samples, 0.04%)</title><rect x="989.5" y="835.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="992.5" y="846.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.04%)</title><rect x="989.5" y="819.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="992.5" y="830.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::find_map_at_offset(int) const (1 samples, 0.04%)</title><rect x="989.5" y="803.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="992.5" y="814.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (104 samples, 3.79%)</title><rect x="989.9" y="867.0" width="44.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="992.9" y="878.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (5 samples, 0.18%)</title><rect x="989.9" y="851.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="992.9" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (5 samples, 0.18%)</title><rect x="989.9" y="835.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="992.9" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (35 samples, 1.28%)</title><rect x="992.0" y="851.0" width="15.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="995.0" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (3 samples, 0.11%)</title><rect x="992.9" y="835.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="995.9" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (2 samples, 0.07%)</title><rect x="993.3" y="819.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="996.3" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (30 samples, 1.09%)</title><rect x="994.2" y="835.0" width="12.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="997.2" y="846.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.04%)</title><rect x="996.3" y="819.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="999.3" y="830.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.04%)</title><rect x="996.8" y="819.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="999.8" y="830.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.07%)</title><rect x="997.2" y="819.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1000.2" y="830.0"></text>
</g>
<g>
<title>epoll_wait (17 samples, 0.62%)</title><rect x="998.1" y="819.0" width="7.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1001.1" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.55%)</title><rect x="998.9" y="803.0" width="6.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1001.9" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.55%)</title><rect x="998.9" y="787.0" width="6.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1001.9" y="798.0"></text>
</g>
<g>
<title>sys_epoll_wait (15 samples, 0.55%)</title><rect x="998.9" y="771.0" width="6.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1001.9" y="782.0"></text>
</g>
<g>
<title>ep_poll (13 samples, 0.47%)</title><rect x="999.4" y="755.0" width="5.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1002.4" y="766.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.07%)</title><rect x="999.4" y="739.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1002.4" y="750.0"></text>
</g>
<g>
<title>ep_scan_ready_list (8 samples, 0.29%)</title><rect x="1000.2" y="739.0" width="3.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1003.2" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (6 samples, 0.22%)</title><rect x="1001.1" y="723.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1004.1" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (3 samples, 0.11%)</title><rect x="1001.9" y="707.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1004.9" y="718.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.04%)</title><rect x="1002.8" y="691.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1005.8" y="702.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.04%)</title><rect x="1002.8" y="675.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1005.8" y="686.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.04%)</title><rect x="1003.2" y="707.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1006.2" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (3 samples, 0.11%)</title><rect x="1003.7" y="739.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1006.7" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (3 samples, 0.11%)</title><rect x="1003.7" y="723.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1006.7" y="734.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.07%)</title><rect x="1004.1" y="707.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1007.1" y="718.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="1004.5" y="691.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1007.5" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.04%)</title><rect x="1004.5" y="675.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1007.5" y="686.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.04%)</title><rect x="1005.0" y="755.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1008.0" y="766.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="1005.4" y="819.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1008.4" y="830.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.04%)</title><rect x="1005.4" y="803.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1008.4" y="814.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.04%)</title><rect x="1005.4" y="787.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1008.4" y="798.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.11%)</title><rect x="1005.8" y="819.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1008.8" y="830.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.11%)</title><rect x="1005.8" y="803.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1008.8" y="814.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.04%)</title><rect x="1005.8" y="787.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1008.8" y="798.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.04%)</title><rect x="1005.8" y="771.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1008.8" y="782.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.07%)</title><rect x="1006.2" y="787.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1009.2" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (64 samples, 2.33%)</title><rect x="1007.1" y="851.0" width="27.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1010.1" y="862.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (63 samples, 2.30%)</title><rect x="1007.5" y="835.0" width="27.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1010.5" y="846.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (33 samples, 1.20%)</title><rect x="1008.0" y="819.0" width="14.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1011.0" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (27 samples, 0.98%)</title><rect x="1008.4" y="803.0" width="11.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1011.4" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (27 samples, 0.98%)</title><rect x="1008.4" y="787.0" width="11.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1011.4" y="798.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (25 samples, 0.91%)</title><rect x="1008.4" y="771.0" width="10.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1011.4" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (3 samples, 0.11%)</title><rect x="1008.4" y="755.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1011.4" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.11%)</title><rect x="1008.4" y="739.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1011.4" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="1008.4" y="723.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1011.4" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="1008.4" y="707.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1011.4" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.07%)</title><rect x="1008.8" y="723.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1011.8" y="734.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newString (2 samples, 0.07%)</title><rect x="1008.8" y="707.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1011.8" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.07%)</title><rect x="1008.8" y="691.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1011.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.get (22 samples, 0.80%)</title><rect x="1009.7" y="755.0" width="9.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1012.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (22 samples, 0.80%)</title><rect x="1009.7" y="739.0" width="9.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1012.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (22 samples, 0.80%)</title><rect x="1009.7" y="723.0" width="9.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1012.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.04%)</title><rect x="1009.7" y="707.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1012.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.04%)</title><rect x="1009.7" y="691.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1012.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.04%)</title><rect x="1009.7" y="675.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1012.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.04%)</title><rect x="1009.7" y="659.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1012.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.04%)</title><rect x="1010.1" y="707.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1013.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.04%)</title><rect x="1010.1" y="691.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1013.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.04%)</title><rect x="1010.1" y="675.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1013.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.04%)</title><rect x="1010.1" y="659.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1013.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (20 samples, 0.73%)</title><rect x="1010.5" y="707.0" width="8.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1013.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (20 samples, 0.73%)</title><rect x="1010.5" y="691.0" width="8.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1013.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (19 samples, 0.69%)</title><rect x="1011.0" y="675.0" width="8.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1014.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (19 samples, 0.69%)</title><rect x="1011.0" y="659.0" width="8.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1014.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (19 samples, 0.69%)</title><rect x="1011.0" y="643.0" width="8.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1014.0" y="654.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.15%)</title><rect x="1011.4" y="627.0" width="1.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1014.4" y="638.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.04%)</title><rect x="1012.3" y="611.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1015.3" y="622.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.04%)</title><rect x="1012.7" y="611.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1015.7" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_signal (13 samples, 0.47%)</title><rect x="1013.1" y="627.0" width="5.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1016.1" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.44%)</title><rect x="1013.6" y="611.0" width="5.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1016.6" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.44%)</title><rect x="1013.6" y="595.0" width="5.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1016.6" y="606.0"></text>
</g>
<g>
<title>sys_futex (12 samples, 0.44%)</title><rect x="1013.6" y="579.0" width="5.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1016.6" y="590.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.40%)</title><rect x="1014.0" y="563.0" width="4.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1017.0" y="574.0"></text>
</g>
<g>
<title>futex_wake_op (11 samples, 0.40%)</title><rect x="1014.0" y="547.0" width="4.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1017.0" y="558.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.04%)</title><rect x="1014.4" y="531.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1017.4" y="542.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.04%)</title><rect x="1014.9" y="531.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1017.9" y="542.0"></text>
</g>
<g>
<title>wake_q_add (1 samples, 0.04%)</title><rect x="1014.9" y="515.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1017.9" y="526.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.29%)</title><rect x="1015.3" y="531.0" width="3.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1018.3" y="542.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.29%)</title><rect x="1015.3" y="515.0" width="3.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1018.3" y="526.0"></text>
</g>
<g>
<title>__lock_text_start (8 samples, 0.29%)</title><rect x="1015.3" y="499.0" width="3.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1018.3" y="510.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.04%)</title><rect x="1018.7" y="627.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1021.7" y="638.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.04%)</title><rect x="1019.2" y="771.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1022.2" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.04%)</title><rect x="1019.2" y="755.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1022.2" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.04%)</title><rect x="1019.2" y="739.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1022.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.04%)</title><rect x="1019.2" y="723.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1022.2" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.04%)</title><rect x="1019.6" y="771.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1022.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="1019.6" y="755.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1022.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="1019.6" y="739.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1022.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1019.6" y="723.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1022.6" y="734.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="1019.6" y="707.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1022.6" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.04%)</title><rect x="1020.0" y="803.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1023.0" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.04%)</title><rect x="1020.0" y="787.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1023.0" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="1020.0" y="771.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1023.0" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="1020.4" y="803.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1023.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="1020.4" y="787.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1023.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="1020.4" y="771.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1023.4" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.11%)</title><rect x="1020.9" y="803.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1023.9" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.11%)</title><rect x="1020.9" y="787.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1023.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1021.7" y="771.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1024.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1021.7" y="755.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1024.7" y="766.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.04%)</title><rect x="1021.7" y="739.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1024.7" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="1021.7" y="723.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1024.7" y="734.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.04%)</title><rect x="1021.7" y="707.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1024.7" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="1021.7" y="691.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1024.7" y="702.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1021.7" y="675.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1024.7" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (29 samples, 1.06%)</title><rect x="1022.2" y="819.0" width="12.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1025.2" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (29 samples, 1.06%)</title><rect x="1022.2" y="803.0" width="12.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1025.2" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 0.18%)</title><rect x="1022.6" y="787.0" width="2.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1025.6" y="798.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="1022.6" y="771.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1025.6" y="782.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="1023.0" y="771.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1026.0" y="782.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned (2 samples, 0.07%)</title><rect x="1023.5" y="771.0" width="0.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1026.5" y="782.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.04%)</title><rect x="1024.3" y="771.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1027.3" y="782.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.07%)</title><rect x="1024.7" y="787.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1027.7" y="798.0"></text>
</g>
<g>
<title>recv (20 samples, 0.73%)</title><rect x="1025.6" y="787.0" width="8.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1028.6" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.58%)</title><rect x="1027.3" y="771.0" width="6.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1030.3" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.55%)</title><rect x="1027.3" y="755.0" width="6.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1030.3" y="766.0"></text>
</g>
<g>
<title>SYSC_recvfrom (1 samples, 0.04%)</title><rect x="1027.8" y="739.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1030.8" y="750.0"></text>
</g>
<g>
<title>sys_recvfrom (13 samples, 0.47%)</title><rect x="1028.2" y="739.0" width="5.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1031.2" y="750.0"></text>
</g>
<g>
<title>SYSC_recvfrom (12 samples, 0.44%)</title><rect x="1028.2" y="723.0" width="5.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1031.2" y="734.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.07%)</title><rect x="1028.2" y="707.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1031.2" y="718.0"></text>
</g>
<g>
<title>sock_recvmsg (9 samples, 0.33%)</title><rect x="1029.1" y="707.0" width="3.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1032.1" y="718.0"></text>
</g>
<g>
<title>inet_recvmsg (8 samples, 0.29%)</title><rect x="1029.1" y="691.0" width="3.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1032.1" y="702.0"></text>
</g>
<g>
<title>tcp_recvmsg (8 samples, 0.29%)</title><rect x="1029.1" y="675.0" width="3.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1032.1" y="686.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.04%)</title><rect x="1029.5" y="659.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1032.5" y="670.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="1029.5" y="643.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1032.5" y="654.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.04%)</title><rect x="1029.5" y="627.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1032.5" y="638.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (5 samples, 0.18%)</title><rect x="1029.9" y="659.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1032.9" y="670.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.07%)</title><rect x="1029.9" y="643.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1032.9" y="654.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.04%)</title><rect x="1030.3" y="627.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1033.3" y="638.0"></text>
</g>
<g>
<title>_copy_to_iter (3 samples, 0.11%)</title><rect x="1030.8" y="643.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1033.8" y="654.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (3 samples, 0.11%)</title><rect x="1030.8" y="627.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1033.8" y="638.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.04%)</title><rect x="1032.1" y="659.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1035.1" y="670.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.04%)</title><rect x="1032.5" y="691.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1035.5" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.04%)</title><rect x="1032.5" y="675.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1035.5" y="686.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.04%)</title><rect x="1032.5" y="659.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1035.5" y="670.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.04%)</title><rect x="1032.5" y="643.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1035.5" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="1032.9" y="707.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1035.9" y="718.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="1032.9" y="691.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1035.9" y="702.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="1032.9" y="675.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1035.9" y="686.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="1032.9" y="659.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1035.9" y="670.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.04%)</title><rect x="1033.4" y="723.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1036.4" y="734.0"></text>
</g>
<g>
<title>sys_recvfrom (1 samples, 0.04%)</title><rect x="1033.8" y="755.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1036.8" y="766.0"></text>
</g>
<g>
<title>recv@plt (1 samples, 0.04%)</title><rect x="1034.2" y="787.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1037.2" y="798.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=14055] (116 samples, 4.23%)</title><rect x="1034.6" y="883.0" width="50.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1037.6" y="894.0">[NIO ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (116 samples, 4.23%)</title><rect x="1034.6" y="867.0" width="50.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1037.6" y="878.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (7 samples, 0.26%)</title><rect x="1034.6" y="851.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1037.6" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (7 samples, 0.26%)</title><rect x="1034.6" y="835.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1037.6" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.04%)</title><rect x="1037.2" y="819.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1040.2" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (33 samples, 1.20%)</title><rect x="1037.7" y="851.0" width="14.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1040.7" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1038.1" y="835.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1041.1" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (31 samples, 1.13%)</title><rect x="1038.5" y="835.0" width="13.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1041.5" y="846.0"></text>
</g>
<g>
<title>epoll_wait (26 samples, 0.95%)</title><rect x="1040.7" y="819.0" width="11.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1043.7" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.80%)</title><rect x="1042.4" y="803.0" width="9.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1045.4" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.80%)</title><rect x="1042.4" y="787.0" width="9.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1045.4" y="798.0"></text>
</g>
<g>
<title>sys_epoll_wait (19 samples, 0.69%)</title><rect x="1043.7" y="771.0" width="8.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1046.7" y="782.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="1044.1" y="755.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1047.1" y="766.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="1044.1" y="739.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1047.1" y="750.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="1044.1" y="723.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1047.1" y="734.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.04%)</title><rect x="1044.5" y="755.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1047.5" y="766.0"></text>
</g>
<g>
<title>ep_poll (16 samples, 0.58%)</title><rect x="1045.0" y="755.0" width="6.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1048.0" y="766.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="1045.0" y="739.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1048.0" y="750.0"></text>
</g>
<g>
<title>ep_scan_ready_list (7 samples, 0.26%)</title><rect x="1045.4" y="739.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1048.4" y="750.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.07%)</title><rect x="1045.4" y="723.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1048.4" y="734.0"></text>
</g>
<g>
<title>ep_send_events_proc (3 samples, 0.11%)</title><rect x="1046.3" y="723.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1049.3" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (2 samples, 0.07%)</title><rect x="1046.3" y="707.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1049.3" y="718.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.04%)</title><rect x="1046.7" y="691.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1049.7" y="702.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.04%)</title><rect x="1046.7" y="675.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1049.7" y="686.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.04%)</title><rect x="1047.1" y="707.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1050.1" y="718.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.07%)</title><rect x="1047.6" y="723.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1050.6" y="734.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.04%)</title><rect x="1048.0" y="707.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1051.0" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (8 samples, 0.29%)</title><rect x="1048.4" y="739.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1051.4" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (8 samples, 0.29%)</title><rect x="1048.4" y="723.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1051.4" y="734.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.26%)</title><rect x="1048.8" y="707.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1051.8" y="718.0"></text>
</g>
<g>
<title>__schedule (7 samples, 0.26%)</title><rect x="1048.8" y="691.0" width="3.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1051.8" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (6 samples, 0.22%)</title><rect x="1049.3" y="675.0" width="2.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1052.3" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (76 samples, 2.77%)</title><rect x="1051.9" y="851.0" width="32.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1054.9" y="862.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (74 samples, 2.70%)</title><rect x="1052.3" y="835.0" width="31.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1055.3" y="846.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (36 samples, 1.31%)</title><rect x="1053.2" y="819.0" width="15.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1056.2" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (30 samples, 1.09%)</title><rect x="1054.0" y="803.0" width="12.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1057.0" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (30 samples, 1.09%)</title><rect x="1054.0" y="787.0" width="12.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1057.0" y="798.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (26 samples, 0.95%)</title><rect x="1055.3" y="771.0" width="11.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1058.3" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (3 samples, 0.11%)</title><rect x="1055.3" y="755.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1058.3" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.11%)</title><rect x="1055.3" y="739.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1058.3" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.11%)</title><rect x="1055.3" y="723.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1058.3" y="734.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newString (2 samples, 0.07%)</title><rect x="1055.7" y="707.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1058.7" y="718.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.04%)</title><rect x="1055.7" y="691.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1058.7" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="1056.2" y="691.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1059.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.get (23 samples, 0.84%)</title><rect x="1056.6" y="755.0" width="9.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1059.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (23 samples, 0.84%)</title><rect x="1056.6" y="739.0" width="9.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1059.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (22 samples, 0.80%)</title><rect x="1056.6" y="723.0" width="9.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1059.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.11%)</title><rect x="1056.6" y="707.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1059.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.11%)</title><rect x="1056.6" y="691.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1059.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.04%)</title><rect x="1056.6" y="675.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1059.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.04%)</title><rect x="1056.6" y="659.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1059.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.04%)</title><rect x="1056.6" y="643.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1059.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.04%)</title><rect x="1056.6" y="627.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1059.6" y="638.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.04%)</title><rect x="1056.6" y="611.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1059.6" y="622.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.04%)</title><rect x="1056.6" y="595.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1059.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.07%)</title><rect x="1057.0" y="675.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1060.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.07%)</title><rect x="1057.0" y="659.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1060.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.04%)</title><rect x="1057.5" y="643.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1060.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.04%)</title><rect x="1057.5" y="627.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1060.5" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="1057.5" y="611.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1060.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (19 samples, 0.69%)</title><rect x="1057.9" y="707.0" width="8.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1060.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (19 samples, 0.69%)</title><rect x="1057.9" y="691.0" width="8.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1060.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (18 samples, 0.66%)</title><rect x="1058.3" y="675.0" width="7.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1061.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (18 samples, 0.66%)</title><rect x="1058.3" y="659.0" width="7.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1061.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (18 samples, 0.66%)</title><rect x="1058.3" y="643.0" width="7.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1061.3" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.228] (1 samples, 0.04%)</title><rect x="1058.3" y="627.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1061.3" y="638.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.11%)</title><rect x="1058.7" y="627.0" width="1.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1061.7" y="638.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="1058.7" y="611.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1061.7" y="622.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.04%)</title><rect x="1059.2" y="611.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1062.2" y="622.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.04%)</title><rect x="1059.6" y="611.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1062.6" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_signal (13 samples, 0.47%)</title><rect x="1060.0" y="627.0" width="5.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1063.0" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.40%)</title><rect x="1060.9" y="611.0" width="4.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1063.9" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.36%)</title><rect x="1060.9" y="595.0" width="4.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1063.9" y="606.0"></text>
</g>
<g>
<title>sys_futex (10 samples, 0.36%)</title><rect x="1060.9" y="579.0" width="4.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1063.9" y="590.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.36%)</title><rect x="1060.9" y="563.0" width="4.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1063.9" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.07%)</title><rect x="1060.9" y="547.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1063.9" y="558.0"></text>
</g>
<g>
<title>futex_wake_op (8 samples, 0.29%)</title><rect x="1061.8" y="547.0" width="3.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1064.8" y="558.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.04%)</title><rect x="1061.8" y="531.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1064.8" y="542.0"></text>
</g>
<g>
<title>wake_q_add (1 samples, 0.04%)</title><rect x="1061.8" y="515.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1064.8" y="526.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.26%)</title><rect x="1062.2" y="531.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1065.2" y="542.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.26%)</title><rect x="1062.2" y="515.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1065.2" y="526.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.26%)</title><rect x="1062.2" y="499.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1065.2" y="510.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.04%)</title><rect x="1065.2" y="595.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1068.2" y="606.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.04%)</title><rect x="1065.6" y="627.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1068.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.isRunning (1 samples, 0.04%)</title><rect x="1066.1" y="723.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1069.1" y="734.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.04%)</title><rect x="1066.5" y="771.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1069.5" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.04%)</title><rect x="1066.5" y="755.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1069.5" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.04%)</title><rect x="1066.5" y="739.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1069.5" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.11%)</title><rect x="1066.9" y="803.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1069.9" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="1067.8" y="787.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1070.8" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="1067.8" y="771.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1070.8" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="1068.2" y="803.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1071.2" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (36 samples, 1.31%)</title><rect x="1068.6" y="819.0" width="15.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1071.6" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (36 samples, 1.31%)</title><rect x="1068.6" y="803.0" width="15.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1071.6" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.11%)</title><rect x="1070.4" y="787.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1073.4" y="798.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned (1 samples, 0.04%)</title><rect x="1070.4" y="771.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1073.4" y="782.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.07%)</title><rect x="1070.8" y="771.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1073.8" y="782.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="1070.8" y="755.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1073.8" y="766.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="1071.2" y="755.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1074.2" y="766.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.04%)</title><rect x="1071.7" y="787.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1074.7" y="798.0"></text>
</g>
<g>
<title>recv (28 samples, 1.02%)</title><rect x="1072.1" y="787.0" width="12.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1075.1" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.84%)</title><rect x="1074.2" y="771.0" width="9.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1077.2" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.84%)</title><rect x="1074.2" y="755.0" width="9.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1077.2" y="766.0"></text>
</g>
<g>
<title>sys_recvfrom (21 samples, 0.77%)</title><rect x="1075.1" y="739.0" width="9.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1078.1" y="750.0"></text>
</g>
<g>
<title>SYSC_recvfrom (20 samples, 0.73%)</title><rect x="1075.1" y="723.0" width="8.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1078.1" y="734.0"></text>
</g>
<g>
<title>sock_recvmsg (14 samples, 0.51%)</title><rect x="1075.1" y="707.0" width="6.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1078.1" y="718.0"></text>
</g>
<g>
<title>inet_recvmsg (13 samples, 0.47%)</title><rect x="1075.1" y="691.0" width="5.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1078.1" y="702.0"></text>
</g>
<g>
<title>tcp_recvmsg (13 samples, 0.47%)</title><rect x="1075.1" y="675.0" width="5.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1078.1" y="686.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.15%)</title><rect x="1075.1" y="659.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1078.1" y="670.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.04%)</title><rect x="1075.1" y="643.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1078.1" y="654.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.11%)</title><rect x="1075.5" y="643.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1078.5" y="654.0"></text>
</g>
<g>
<title>__indirect_thunk_start (1 samples, 0.04%)</title><rect x="1076.0" y="627.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1079.0" y="638.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="1076.4" y="627.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1079.4" y="638.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="1076.8" y="659.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1079.8" y="670.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="1077.3" y="659.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1080.3" y="670.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="1077.3" y="643.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1080.3" y="654.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="1077.7" y="659.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1080.7" y="670.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (6 samples, 0.22%)</title><rect x="1078.1" y="659.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1081.1" y="670.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.07%)</title><rect x="1078.5" y="643.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1081.5" y="654.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.04%)</title><rect x="1079.0" y="627.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1082.0" y="638.0"></text>
</g>
<g>
<title>_copy_to_iter (3 samples, 0.11%)</title><rect x="1079.4" y="643.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1082.4" y="654.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (3 samples, 0.11%)</title><rect x="1079.4" y="627.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1082.4" y="638.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.04%)</title><rect x="1080.7" y="691.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1083.7" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.04%)</title><rect x="1080.7" y="675.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1083.7" y="686.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.04%)</title><rect x="1080.7" y="659.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1083.7" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.22%)</title><rect x="1081.1" y="707.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1084.1" y="718.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.18%)</title><rect x="1081.1" y="691.0" width="2.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1084.1" y="702.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.18%)</title><rect x="1081.1" y="675.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1084.1" y="686.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.18%)</title><rect x="1081.1" y="659.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1084.1" y="670.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="1083.3" y="691.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1086.3" y="702.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.04%)</title><rect x="1083.7" y="723.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1086.7" y="734.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="1084.1" y="835.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1087.1" y="846.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=14056] (133 samples, 4.85%)</title><rect x="1084.6" y="883.0" width="57.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1087.6" y="894.0">[NIO S..</text>
</g>
<g>
<title>[unknown_Java] (6 samples, 0.22%)</title><rect x="1084.6" y="867.0" width="2.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1087.6" y="878.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.04%)</title><rect x="1084.6" y="851.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1087.6" y="862.0"></text>
</g>
<g>
<title>Interpreter (1 samples, 0.04%)</title><rect x="1085.0" y="851.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1088.0" y="862.0"></text>
</g>
<g>
<title>SharedRuntime::fixup_callers_callsite(Method*, unsigned char*) (4 samples, 0.15%)</title><rect x="1085.4" y="851.0" width="1.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1088.4" y="862.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.11%)</title><rect x="1085.4" y="835.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1088.4" y="846.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.04%)</title><rect x="1086.3" y="819.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1089.3" y="830.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.04%)</title><rect x="1086.7" y="835.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1089.7" y="846.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (127 samples, 4.63%)</title><rect x="1087.1" y="867.0" width="54.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1090.1" y="878.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (35 samples, 1.28%)</title><rect x="1087.1" y="851.0" width="15.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1090.1" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (35 samples, 1.28%)</title><rect x="1087.1" y="835.0" width="15.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1090.1" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1088.9" y="819.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1091.9" y="830.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.04%)</title><rect x="1088.9" y="803.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1091.9" y="814.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.04%)</title><rect x="1088.9" y="787.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1091.9" y="798.0"></text>
</g>
<g>
<title>epoll_wait (27 samples, 0.98%)</title><rect x="1089.3" y="819.0" width="11.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1092.3" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.88%)</title><rect x="1090.6" y="803.0" width="10.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1093.6" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.88%)</title><rect x="1090.6" y="787.0" width="10.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1093.6" y="798.0"></text>
</g>
<g>
<title>sys_epoll_wait (22 samples, 0.80%)</title><rect x="1091.5" y="771.0" width="9.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1094.5" y="782.0"></text>
</g>
<g>
<title>ep_poll (22 samples, 0.80%)</title><rect x="1091.5" y="755.0" width="9.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1094.5" y="766.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="1092.3" y="739.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1095.3" y="750.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rbx (1 samples, 0.04%)</title><rect x="1092.7" y="739.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1095.7" y="750.0"></text>
</g>
<g>
<title>ep_scan_ready_list (10 samples, 0.36%)</title><rect x="1093.2" y="739.0" width="4.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1096.2" y="750.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.07%)</title><rect x="1093.2" y="723.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1096.2" y="734.0"></text>
</g>
<g>
<title>ep_send_events_proc (8 samples, 0.29%)</title><rect x="1094.0" y="723.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1097.0" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (5 samples, 0.18%)</title><rect x="1095.3" y="707.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1098.3" y="718.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.11%)</title><rect x="1096.2" y="691.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1099.2" y="702.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.04%)</title><rect x="1097.0" y="675.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1100.0" y="686.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (8 samples, 0.29%)</title><rect x="1097.5" y="739.0" width="3.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1100.5" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (8 samples, 0.29%)</title><rect x="1097.5" y="723.0" width="3.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1100.5" y="734.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.26%)</title><rect x="1097.9" y="707.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1100.9" y="718.0"></text>
</g>
<g>
<title>__schedule (6 samples, 0.22%)</title><rect x="1098.3" y="691.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1101.3" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (6 samples, 0.22%)</title><rect x="1098.3" y="675.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1101.3" y="686.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.07%)</title><rect x="1100.9" y="819.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1103.9" y="830.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.07%)</title><rect x="1100.9" y="803.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1103.9" y="814.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="1100.9" y="787.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1103.9" y="798.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.04%)</title><rect x="1101.3" y="787.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1104.3" y="798.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="1101.3" y="771.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1104.3" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="1101.8" y="819.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1104.8" y="830.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="1101.8" y="803.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1104.8" y="814.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.04%)</title><rect x="1101.8" y="787.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1104.8" y="798.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.04%)</title><rect x="1101.8" y="771.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1104.8" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (92 samples, 3.36%)</title><rect x="1102.2" y="851.0" width="39.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1105.2" y="862.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (85 samples, 3.10%)</title><rect x="1105.2" y="835.0" width="36.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1108.2" y="846.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (58 samples, 2.12%)</title><rect x="1105.2" y="819.0" width="25.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1108.2" y="830.0">o..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.04%)</title><rect x="1113.8" y="803.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1116.8" y="814.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (2 samples, 0.07%)</title><rect x="1114.3" y="803.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1117.3" y="814.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (2 samples, 0.07%)</title><rect x="1114.3" y="787.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1117.3" y="798.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.04%)</title><rect x="1114.3" y="771.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1117.3" y="782.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.04%)</title><rect x="1114.3" y="755.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1117.3" y="766.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.04%)</title><rect x="1114.7" y="771.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1117.7" y="782.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::method_back_branch_event(methodHandle const&amp;, methodHandle const&amp;, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.04%)</title><rect x="1114.7" y="755.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1117.7" y="766.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::loop_predicate(int, int, CompLevel, Method*) (1 samples, 0.04%)</title><rect x="1114.7" y="739.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1117.7" y="750.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1115.1" y="803.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1118.1" y="814.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1115.1" y="787.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1118.1" y="798.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="1115.1" y="771.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1118.1" y="782.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="1115.1" y="755.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1118.1" y="766.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="1115.1" y="739.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1118.1" y="750.0"></text>
</g>
<g>
<title>rebalance_domains (1 samples, 0.04%)</title><rect x="1115.1" y="723.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1118.1" y="734.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="1115.1" y="707.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1118.1" y="718.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="1115.1" y="691.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1118.1" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (28 samples, 1.02%)</title><rect x="1115.6" y="803.0" width="12.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1118.6" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (28 samples, 1.02%)</title><rect x="1115.6" y="787.0" width="12.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1118.6" y="798.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (23 samples, 0.84%)</title><rect x="1115.6" y="771.0" width="9.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1118.6" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.04%)</title><rect x="1115.6" y="755.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1118.6" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.04%)</title><rect x="1115.6" y="739.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1118.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="1115.6" y="723.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1118.6" y="734.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newString (1 samples, 0.04%)</title><rect x="1115.6" y="707.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1118.6" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="1115.6" y="691.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1118.6" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.get (22 samples, 0.80%)</title><rect x="1116.0" y="755.0" width="9.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1119.0" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="1116.0" y="739.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1119.0" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="1116.0" y="723.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1119.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$75/1549034997.get$Lambda (1 samples, 0.04%)</title><rect x="1116.0" y="707.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1119.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (21 samples, 0.77%)</title><rect x="1116.4" y="739.0" width="9.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1119.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (21 samples, 0.77%)</title><rect x="1116.4" y="723.0" width="9.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1119.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (3 samples, 0.11%)</title><rect x="1116.4" y="707.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1119.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.11%)</title><rect x="1116.4" y="691.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1119.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (3 samples, 0.11%)</title><rect x="1116.4" y="675.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1119.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (3 samples, 0.11%)</title><rect x="1116.4" y="659.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1119.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (18 samples, 0.66%)</title><rect x="1117.7" y="707.0" width="7.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1120.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (18 samples, 0.66%)</title><rect x="1117.7" y="691.0" width="7.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1120.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (18 samples, 0.66%)</title><rect x="1117.7" y="675.0" width="7.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1120.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (18 samples, 0.66%)</title><rect x="1117.7" y="659.0" width="7.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1120.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (18 samples, 0.66%)</title><rect x="1117.7" y="643.0" width="7.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1120.7" y="654.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.11%)</title><rect x="1117.7" y="627.0" width="1.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1120.7" y="638.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.04%)</title><rect x="1118.1" y="611.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1121.1" y="622.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.04%)</title><rect x="1118.6" y="611.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1121.6" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_signal (15 samples, 0.55%)</title><rect x="1119.0" y="627.0" width="6.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1122.0" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.51%)</title><rect x="1119.4" y="611.0" width="6.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1122.4" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.51%)</title><rect x="1119.4" y="595.0" width="6.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1122.4" y="606.0"></text>
</g>
<g>
<title>sys_futex (14 samples, 0.51%)</title><rect x="1119.4" y="579.0" width="6.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1122.4" y="590.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.51%)</title><rect x="1119.4" y="563.0" width="6.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1122.4" y="574.0"></text>
</g>
<g>
<title>futex_wake_op (14 samples, 0.51%)</title><rect x="1119.4" y="547.0" width="6.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1122.4" y="558.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.07%)</title><rect x="1119.4" y="531.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1122.4" y="542.0"></text>
</g>
<g>
<title>wake_q_add (1 samples, 0.04%)</title><rect x="1119.9" y="515.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1122.9" y="526.0"></text>
</g>
<g>
<title>wake_up_q (12 samples, 0.44%)</title><rect x="1120.3" y="531.0" width="5.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1123.3" y="542.0"></text>
</g>
<g>
<title>try_to_wake_up (12 samples, 0.44%)</title><rect x="1120.3" y="515.0" width="5.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1123.3" y="526.0"></text>
</g>
<g>
<title>__lock_text_start (12 samples, 0.44%)</title><rect x="1120.3" y="499.0" width="5.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1123.3" y="510.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.07%)</title><rect x="1125.4" y="771.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1128.4" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.04%)</title><rect x="1125.9" y="755.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1128.9" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.04%)</title><rect x="1125.9" y="739.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1128.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.04%)</title><rect x="1125.9" y="723.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1128.9" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.04%)</title><rect x="1125.9" y="707.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1128.9" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3 samples, 0.11%)</title><rect x="1126.3" y="771.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1129.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.11%)</title><rect x="1126.3" y="755.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1129.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.11%)</title><rect x="1126.3" y="739.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1129.3" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.07%)</title><rect x="1126.3" y="723.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1129.3" y="734.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="1126.7" y="707.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1129.7" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.04%)</title><rect x="1127.2" y="723.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1130.2" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.11%)</title><rect x="1127.6" y="803.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1130.6" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="1128.0" y="787.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1131.0" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="1128.0" y="771.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1131.0" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.04%)</title><rect x="1128.5" y="787.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1131.5" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.04%)</title><rect x="1128.9" y="803.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1131.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="1129.3" y="803.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1132.3" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="1129.8" y="803.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1132.8" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="1129.8" y="787.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1132.8" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (27 samples, 0.98%)</title><rect x="1130.2" y="819.0" width="11.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1133.2" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (26 samples, 0.95%)</title><rect x="1130.6" y="803.0" width="11.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1133.6" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 0.18%)</title><rect x="1131.5" y="787.0" width="2.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1134.5" y="798.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="1131.9" y="771.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1134.9" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.04%)</title><rect x="1132.3" y="771.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1135.3" y="782.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.07%)</title><rect x="1132.8" y="771.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1135.8" y="782.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="1132.8" y="755.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1135.8" y="766.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="1133.2" y="755.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1136.2" y="766.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.07%)</title><rect x="1133.6" y="787.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1136.6" y="798.0"></text>
</g>
<g>
<title>recv (17 samples, 0.62%)</title><rect x="1134.5" y="787.0" width="7.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1137.5" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.51%)</title><rect x="1135.8" y="771.0" width="6.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1138.8" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.51%)</title><rect x="1135.8" y="755.0" width="6.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1138.8" y="766.0"></text>
</g>
<g>
<title>sys_recvfrom (11 samples, 0.40%)</title><rect x="1137.1" y="739.0" width="4.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1140.1" y="750.0"></text>
</g>
<g>
<title>SYSC_recvfrom (11 samples, 0.40%)</title><rect x="1137.1" y="723.0" width="4.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1140.1" y="734.0"></text>
</g>
<g>
<title>sock_recvmsg (9 samples, 0.33%)</title><rect x="1137.5" y="707.0" width="3.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1140.5" y="718.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.04%)</title><rect x="1137.5" y="691.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1140.5" y="702.0"></text>
</g>
<g>
<title>inet_recvmsg (6 samples, 0.22%)</title><rect x="1137.9" y="691.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1140.9" y="702.0"></text>
</g>
<g>
<title>tcp_recvmsg (6 samples, 0.22%)</title><rect x="1137.9" y="675.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1140.9" y="686.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.04%)</title><rect x="1139.2" y="659.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1142.2" y="670.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.04%)</title><rect x="1139.6" y="659.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1142.6" y="670.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="1139.6" y="643.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1142.6" y="654.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="1139.6" y="627.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1142.6" y="638.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="1140.1" y="659.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1143.1" y="670.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.07%)</title><rect x="1140.5" y="691.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1143.5" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.07%)</title><rect x="1140.5" y="675.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1143.5" y="686.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.07%)</title><rect x="1140.5" y="659.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1143.5" y="670.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.07%)</title><rect x="1140.5" y="643.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1143.5" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="1141.4" y="707.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1144.4" y="718.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="1141.4" y="691.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1144.4" y="702.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="1141.4" y="675.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1144.4" y="686.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="1141.4" y="659.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1144.4" y="670.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=14057] (109 samples, 3.98%)</title><rect x="1141.8" y="883.0" width="46.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1144.8" y="894.0">[NIO..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (109 samples, 3.98%)</title><rect x="1141.8" y="867.0" width="46.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1144.8" y="878.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (38 samples, 1.39%)</title><rect x="1141.8" y="851.0" width="16.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1144.8" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (4 samples, 0.15%)</title><rect x="1143.1" y="835.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1146.1" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (4 samples, 0.15%)</title><rect x="1143.1" y="819.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1146.1" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (31 samples, 1.13%)</title><rect x="1144.8" y="835.0" width="13.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1147.8" y="846.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.04%)</title><rect x="1147.0" y="819.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1150.0" y="830.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.04%)</title><rect x="1147.4" y="819.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1150.4" y="830.0"></text>
</g>
<g>
<title>clock_gettime@plt (1 samples, 0.04%)</title><rect x="1147.8" y="819.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1150.8" y="830.0"></text>
</g>
<g>
<title>epoll_wait (21 samples, 0.77%)</title><rect x="1148.3" y="819.0" width="9.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1151.3" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.62%)</title><rect x="1150.0" y="803.0" width="7.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1153.0" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.62%)</title><rect x="1150.0" y="787.0" width="7.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1153.0" y="798.0"></text>
</g>
<g>
<title>sys_epoll_wait (17 samples, 0.62%)</title><rect x="1150.0" y="771.0" width="7.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1153.0" y="782.0"></text>
</g>
<g>
<title>ep_poll (17 samples, 0.62%)</title><rect x="1150.0" y="755.0" width="7.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1153.0" y="766.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="1150.4" y="739.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1153.4" y="750.0"></text>
</g>
<g>
<title>ep_scan_ready_list (8 samples, 0.29%)</title><rect x="1150.8" y="739.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1153.8" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (7 samples, 0.26%)</title><rect x="1150.8" y="723.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1153.8" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (6 samples, 0.22%)</title><rect x="1151.3" y="707.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1154.3" y="718.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 0.18%)</title><rect x="1151.7" y="691.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1154.7" y="702.0"></text>
</g>
<g>
<title>__indirect_thunk_start (1 samples, 0.04%)</title><rect x="1153.0" y="675.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1156.0" y="686.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.04%)</title><rect x="1153.4" y="675.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1156.4" y="686.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.04%)</title><rect x="1153.9" y="723.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1156.9" y="734.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.04%)</title><rect x="1153.9" y="707.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1156.9" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (7 samples, 0.26%)</title><rect x="1154.3" y="739.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1157.3" y="750.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="1154.3" y="723.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1157.3" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (6 samples, 0.22%)</title><rect x="1154.7" y="723.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1157.7" y="734.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.18%)</title><rect x="1155.1" y="707.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1158.1" y="718.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.18%)</title><rect x="1155.1" y="691.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1158.1" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.15%)</title><rect x="1155.6" y="675.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1158.6" y="686.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="1157.3" y="819.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1160.3" y="830.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.04%)</title><rect x="1157.3" y="803.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1160.3" y="814.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="1157.3" y="787.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1160.3" y="798.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="1157.7" y="819.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1160.7" y="830.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="1157.7" y="803.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1160.7" y="814.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.04%)</title><rect x="1157.7" y="787.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1160.7" y="798.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.04%)</title><rect x="1157.7" y="771.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1160.7" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (71 samples, 2.59%)</title><rect x="1158.2" y="851.0" width="30.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1161.2" y="862.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (69 samples, 2.52%)</title><rect x="1158.2" y="835.0" width="29.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1161.2" y="846.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (51 samples, 1.86%)</title><rect x="1158.2" y="819.0" width="21.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1161.2" y="830.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (39 samples, 1.42%)</title><rect x="1158.6" y="803.0" width="16.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1161.6" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (37 samples, 1.35%)</title><rect x="1159.4" y="787.0" width="16.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1162.4" y="798.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (31 samples, 1.13%)</title><rect x="1159.9" y="771.0" width="13.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1162.9" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (3 samples, 0.11%)</title><rect x="1159.9" y="755.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1162.9" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.11%)</title><rect x="1159.9" y="739.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1162.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.07%)</title><rect x="1159.9" y="723.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1162.9" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="1160.3" y="707.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1163.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.04%)</title><rect x="1160.3" y="691.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1163.3" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="1160.7" y="723.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1163.7" y="734.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newString (1 samples, 0.04%)</title><rect x="1160.7" y="707.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1163.7" y="718.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.04%)</title><rect x="1160.7" y="691.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1163.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.get (28 samples, 1.02%)</title><rect x="1161.2" y="755.0" width="12.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1164.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (28 samples, 1.02%)</title><rect x="1161.2" y="739.0" width="12.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1164.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (28 samples, 1.02%)</title><rect x="1161.2" y="723.0" width="12.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1164.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.04%)</title><rect x="1161.2" y="707.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1164.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.04%)</title><rect x="1161.2" y="691.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1164.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.04%)</title><rect x="1161.2" y="675.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1164.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.04%)</title><rect x="1161.2" y="659.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1164.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (27 samples, 0.98%)</title><rect x="1161.6" y="707.0" width="11.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1164.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (27 samples, 0.98%)</title><rect x="1161.6" y="691.0" width="11.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1164.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (26 samples, 0.95%)</title><rect x="1162.0" y="675.0" width="11.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1165.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (26 samples, 0.95%)</title><rect x="1162.0" y="659.0" width="11.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1165.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (26 samples, 0.95%)</title><rect x="1162.0" y="643.0" width="11.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1165.0" y="654.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.04%)</title><rect x="1162.5" y="627.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1165.5" y="638.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.228] (1 samples, 0.04%)</title><rect x="1162.9" y="627.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1165.9" y="638.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.15%)</title><rect x="1163.3" y="627.0" width="1.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1166.3" y="638.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.07%)</title><rect x="1163.3" y="611.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1166.3" y="622.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="1164.2" y="611.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1167.2" y="622.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.04%)</title><rect x="1164.6" y="611.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1167.6" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_signal (15 samples, 0.55%)</title><rect x="1165.0" y="627.0" width="6.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1168.0" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.55%)</title><rect x="1165.0" y="611.0" width="6.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1168.0" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.51%)</title><rect x="1165.0" y="595.0" width="6.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1168.0" y="606.0"></text>
</g>
<g>
<title>sys_futex (12 samples, 0.44%)</title><rect x="1165.9" y="579.0" width="5.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1168.9" y="590.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.44%)</title><rect x="1165.9" y="563.0" width="5.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1168.9" y="574.0"></text>
</g>
<g>
<title>futex_wake_op (12 samples, 0.44%)</title><rect x="1165.9" y="547.0" width="5.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1168.9" y="558.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.04%)</title><rect x="1167.2" y="531.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1170.2" y="542.0"></text>
</g>
<g>
<title>wake_q_add (1 samples, 0.04%)</title><rect x="1167.2" y="515.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1170.2" y="526.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.29%)</title><rect x="1167.6" y="531.0" width="3.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1170.6" y="542.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.29%)</title><rect x="1167.6" y="515.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1170.6" y="526.0"></text>
</g>
<g>
<title>__lock_text_start (8 samples, 0.29%)</title><rect x="1167.6" y="499.0" width="3.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1170.6" y="510.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.04%)</title><rect x="1171.1" y="595.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1174.1" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1171.5" y="627.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1174.5" y="638.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (2 samples, 0.07%)</title><rect x="1171.9" y="627.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1174.9" y="638.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.04%)</title><rect x="1172.8" y="627.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1175.8" y="638.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.04%)</title><rect x="1173.2" y="771.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1176.2" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.04%)</title><rect x="1173.2" y="755.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1176.2" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.04%)</title><rect x="1173.2" y="739.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1176.2" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (4 samples, 0.15%)</title><rect x="1173.6" y="771.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1176.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.15%)</title><rect x="1173.6" y="755.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1176.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.15%)</title><rect x="1173.6" y="739.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1176.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.15%)</title><rect x="1173.6" y="723.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1176.6" y="734.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (1 samples, 0.04%)</title><rect x="1174.1" y="707.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1177.1" y="718.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="1174.5" y="707.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1177.5" y="718.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="1174.9" y="707.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1177.9" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.22%)</title><rect x="1175.4" y="803.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1178.4" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (4 samples, 0.15%)</title><rect x="1176.2" y="787.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1179.2" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="1177.5" y="771.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1180.5" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="1178.0" y="803.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1181.0" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeaderCount (1 samples, 0.04%)</title><rect x="1178.4" y="803.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1181.4" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.11%)</title><rect x="1178.8" y="803.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1181.8" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.11%)</title><rect x="1178.8" y="787.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1181.8" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="1179.7" y="771.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1182.7" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (18 samples, 0.66%)</title><rect x="1180.1" y="819.0" width="7.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1183.1" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (18 samples, 0.66%)</title><rect x="1180.1" y="803.0" width="7.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1183.1" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.07%)</title><rect x="1181.0" y="787.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1184.0" y="798.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="1181.0" y="771.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1184.0" y="782.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.04%)</title><rect x="1181.4" y="771.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1184.4" y="782.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.04%)</title><rect x="1181.8" y="787.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1184.8" y="798.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.07%)</title><rect x="1182.3" y="787.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1185.3" y="798.0"></text>
</g>
<g>
<title>recv (11 samples, 0.40%)</title><rect x="1183.1" y="787.0" width="4.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1186.1" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.29%)</title><rect x="1184.4" y="771.0" width="3.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1187.4" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.26%)</title><rect x="1184.4" y="755.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1187.4" y="766.0"></text>
</g>
<g>
<title>sys_recvfrom (5 samples, 0.18%)</title><rect x="1185.3" y="739.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1188.3" y="750.0"></text>
</g>
<g>
<title>SYSC_recvfrom (5 samples, 0.18%)</title><rect x="1185.3" y="723.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1188.3" y="734.0"></text>
</g>
<g>
<title>sock_recvmsg (5 samples, 0.18%)</title><rect x="1185.3" y="707.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1188.3" y="718.0"></text>
</g>
<g>
<title>inet_recvmsg (4 samples, 0.15%)</title><rect x="1185.3" y="691.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1188.3" y="702.0"></text>
</g>
<g>
<title>tcp_recvmsg (4 samples, 0.15%)</title><rect x="1185.3" y="675.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1188.3" y="686.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.07%)</title><rect x="1186.1" y="659.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1189.1" y="670.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.07%)</title><rect x="1186.1" y="643.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1189.1" y="654.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.04%)</title><rect x="1186.1" y="627.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1189.1" y="638.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.04%)</title><rect x="1186.6" y="627.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1189.6" y="638.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.04%)</title><rect x="1187.0" y="691.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1190.0" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.04%)</title><rect x="1187.0" y="675.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1190.0" y="686.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.04%)</title><rect x="1187.0" y="659.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1190.0" y="670.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.04%)</title><rect x="1187.0" y="643.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1190.0" y="654.0"></text>
</g>
<g>
<title>sys_recvfrom (1 samples, 0.04%)</title><rect x="1187.4" y="755.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1190.4" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.07%)</title><rect x="1187.8" y="835.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.8" y="846.0"></text>
</g>
<g>
<title>[VM Periodic Tas tid=14042] (3 samples, 0.11%)</title><rect x="1188.7" y="883.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1191.7" y="894.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.11%)</title><rect x="1188.7" y="867.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1191.7" y="878.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.11%)</title><rect x="1188.7" y="851.0" width="1.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1191.7" y="862.0"></text>
</g>
<g>
<title>WatcherThread::run() (3 samples, 0.11%)</title><rect x="1188.7" y="835.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.7" y="846.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (2 samples, 0.07%)</title><rect x="1189.1" y="819.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.1" y="830.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.07%)</title><rect x="1189.1" y="803.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.1" y="814.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (2 samples, 0.07%)</title><rect x="1189.1" y="787.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1192.1" y="798.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.04%)</title><rect x="1189.1" y="771.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1192.1" y="782.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.04%)</title><rect x="1189.6" y="771.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.6" y="782.0"></text>
</g>
</g>
</svg>
