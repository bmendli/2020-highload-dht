<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="965"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="965"> </text>
<g id="frames">
<g>
<title>all (2,042 samples, 100.00%)</title><rect x="10.0" y="931.0" width="1180.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="13.0" y="942.0">all</text>
</g>
<g>
<title>[C2 CompilerThre tid=16325] (3 samples, 0.15%)</title><rect x="10.0" y="915.0" width="1.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.15%)</title><rect x="10.0" y="899.0" width="1.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.15%)</title><rect x="10.0" y="883.0" width="1.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>JavaThread::run() (3 samples, 0.15%)</title><rect x="10.0" y="867.0" width="1.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (3 samples, 0.15%)</title><rect x="10.0" y="851.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (3 samples, 0.15%)</title><rect x="10.0" y="835.0" width="1.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (3 samples, 0.15%)</title><rect x="10.0" y="819.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (3 samples, 0.15%)</title><rect x="10.0" y="803.0" width="1.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (3 samples, 0.15%)</title><rect x="10.0" y="787.0" width="1.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (2 samples, 0.10%)</title><rect x="10.0" y="771.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>Compile::Output() (1 samples, 0.05%)</title><rect x="10.0" y="755.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (1 samples, 0.05%)</title><rect x="10.0" y="739.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (1 samples, 0.05%)</title><rect x="10.0" y="723.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (1 samples, 0.05%)</title><rect x="10.6" y="755.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.6" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.87] (1 samples, 0.05%)</title><rect x="10.6" y="739.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="13.6" y="750.0"></text>
</g>
<g>
<title>Compile::Optimize() (1 samples, 0.05%)</title><rect x="11.2" y="771.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="14.2" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (1 samples, 0.05%)</title><rect x="11.2" y="755.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="14.2" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.05%)</title><rect x="11.2" y="739.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="14.2" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.05%)</title><rect x="11.2" y="723.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="14.2" y="734.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (1 samples, 0.05%)</title><rect x="11.2" y="707.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="14.2" y="718.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (1 samples, 0.05%)</title><rect x="11.2" y="691.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.2" y="702.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (1 samples, 0.05%)</title><rect x="11.2" y="675.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="14.2" y="686.0"></text>
</g>
<g>
<title>[G1 Refine#0 tid=16319] (3 samples, 0.15%)</title><rect x="11.7" y="915.0" width="1.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="14.7" y="926.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.15%)</title><rect x="11.7" y="899.0" width="1.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="14.7" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.15%)</title><rect x="11.7" y="883.0" width="1.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="14.7" y="894.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (3 samples, 0.15%)</title><rect x="11.7" y="867.0" width="1.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="14.7" y="878.0"></text>
</g>
<g>
<title>G1ConcurrentRefineThread::run_service() (3 samples, 0.15%)</title><rect x="11.7" y="851.0" width="1.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="14.7" y="862.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long) (3 samples, 0.15%)</title><rect x="11.7" y="835.0" width="1.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="14.7" y="846.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_concurrently(signed char*, unsigned int) (3 samples, 0.15%)</title><rect x="11.7" y="819.0" width="1.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="14.7" y="830.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;false, G1ConcurrentRefineOopClosure&gt;(MemRegion, G1ConcurrentRefineOopClosure*) (3 samples, 0.15%)</title><rect x="11.7" y="803.0" width="1.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="14.7" y="814.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::alloc_block_work(HeapWord**, unsigned long*, HeapWord*, HeapWord*) (1 samples, 0.05%)</title><rect x="11.7" y="787.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="14.7" y="798.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (1 samples, 0.05%)</title><rect x="12.3" y="787.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="15.3" y="798.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::alloc_block_work(HeapWord**, unsigned long*, HeapWord*, HeapWord*) (1 samples, 0.05%)</title><rect x="12.3" y="771.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="15.3" y="782.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ConcurrentRefineOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*) (1 samples, 0.05%)</title><rect x="12.9" y="787.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="15.9" y="798.0"></text>
</g>
<g>
<title>OtherRegionsTable::add_reference(void*, unsigned int) (1 samples, 0.05%)</title><rect x="12.9" y="771.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="15.9" y="782.0"></text>
</g>
<g>
<title>[G1 Refine#1 tid=20870] (2 samples, 0.10%)</title><rect x="13.5" y="915.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="16.5" y="926.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.10%)</title><rect x="13.5" y="899.0" width="1.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="16.5" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.10%)</title><rect x="13.5" y="883.0" width="1.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="16.5" y="894.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (2 samples, 0.10%)</title><rect x="13.5" y="867.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="16.5" y="878.0"></text>
</g>
<g>
<title>G1ConcurrentRefineThread::run_service() (2 samples, 0.10%)</title><rect x="13.5" y="851.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="16.5" y="862.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long) (2 samples, 0.10%)</title><rect x="13.5" y="835.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="16.5" y="846.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_concurrently(signed char*, unsigned int) (2 samples, 0.10%)</title><rect x="13.5" y="819.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="16.5" y="830.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;false, G1ConcurrentRefineOopClosure&gt;(MemRegion, G1ConcurrentRefineOopClosure*) (2 samples, 0.10%)</title><rect x="13.5" y="803.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="16.5" y="814.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.05%)</title><rect x="13.5" y="787.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="16.5" y="798.0"></text>
</g>
<g>
<title>void G1ConcurrentRefineOopClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) [clone .isra.229] (1 samples, 0.05%)</title><rect x="14.0" y="787.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="17.0" y="798.0"></text>
</g>
<g>
<title>[G1 Refine#2 tid=20955] (1 samples, 0.05%)</title><rect x="14.6" y="915.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="17.6" y="926.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.05%)</title><rect x="14.6" y="899.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="17.6" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.05%)</title><rect x="14.6" y="883.0" width="0.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="17.6" y="894.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (1 samples, 0.05%)</title><rect x="14.6" y="867.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="17.6" y="878.0"></text>
</g>
<g>
<title>G1ConcurrentRefineThread::run_service() (1 samples, 0.05%)</title><rect x="14.6" y="851.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="17.6" y="862.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long) (1 samples, 0.05%)</title><rect x="14.6" y="835.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="17.6" y="846.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_concurrently(signed char*, unsigned int) (1 samples, 0.05%)</title><rect x="14.6" y="819.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="17.6" y="830.0"></text>
</g>
<g>
<title>G1HotCardCache::insert(signed char*) (1 samples, 0.05%)</title><rect x="14.6" y="803.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="17.6" y="814.0"></text>
</g>
<g>
<title>[G1 Young RemSet tid=16320] (1 samples, 0.05%)</title><rect x="15.2" y="915.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="18.2" y="926.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.05%)</title><rect x="15.2" y="899.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="18.2" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.05%)</title><rect x="15.2" y="883.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="18.2" y="894.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (1 samples, 0.05%)</title><rect x="15.2" y="867.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="18.2" y="878.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (1 samples, 0.05%)</title><rect x="15.2" y="851.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="18.2" y="862.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (1 samples, 0.05%)</title><rect x="15.2" y="835.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="18.2" y="846.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (1 samples, 0.05%)</title><rect x="15.2" y="819.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="18.2" y="830.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.05%)</title><rect x="15.2" y="803.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="18.2" y="814.0"></text>
</g>
<g>
<title>[GC Thread#0 tid=16316] (8 samples, 0.39%)</title><rect x="15.8" y="915.0" width="4.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="18.8" y="926.0"></text>
</g>
<g>
<title>start_thread (8 samples, 0.39%)</title><rect x="15.8" y="899.0" width="4.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="18.8" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (8 samples, 0.39%)</title><rect x="15.8" y="883.0" width="4.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="18.8" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (8 samples, 0.39%)</title><rect x="15.8" y="867.0" width="4.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="18.8" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (7 samples, 0.34%)</title><rect x="15.8" y="851.0" width="4.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="18.8" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.05%)</title><rect x="15.8" y="835.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="18.8" y="846.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="15.8" y="819.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="18.8" y="830.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (4 samples, 0.20%)</title><rect x="16.4" y="835.0" width="2.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="19.4" y="846.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (4 samples, 0.20%)</title><rect x="16.4" y="819.0" width="2.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="19.4" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (4 samples, 0.20%)</title><rect x="16.4" y="803.0" width="2.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="19.4" y="814.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (4 samples, 0.20%)</title><rect x="16.4" y="787.0" width="2.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="19.4" y="798.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (4 samples, 0.20%)</title><rect x="16.4" y="771.0" width="2.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="19.4" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.05%)</title><rect x="16.4" y="755.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="19.4" y="766.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.05%)</title><rect x="16.4" y="739.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="19.4" y="750.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.121] (3 samples, 0.15%)</title><rect x="16.9" y="755.0" width="1.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="19.9" y="766.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (3 samples, 0.15%)</title><rect x="16.9" y="739.0" width="1.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="19.9" y="750.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (1 samples, 0.05%)</title><rect x="17.5" y="723.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="20.5" y="734.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.05%)</title><rect x="18.1" y="723.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="21.1" y="734.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.10%)</title><rect x="18.7" y="835.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="21.7" y="846.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (2 samples, 0.10%)</title><rect x="18.7" y="819.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="21.7" y="830.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (2 samples, 0.10%)</title><rect x="18.7" y="803.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="21.7" y="814.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (2 samples, 0.10%)</title><rect x="18.7" y="787.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="21.7" y="798.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.05%)</title><rect x="18.7" y="771.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="21.7" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.05%)</title><rect x="18.7" y="755.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="21.7" y="766.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringScanRSClosure&gt;(MemRegion, G1ScanObjsDuringScanRSClosure*) (1 samples, 0.05%)</title><rect x="19.2" y="771.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="22.2" y="782.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.05%)</title><rect x="19.2" y="755.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="22.2" y="766.0"></text>
</g>
<g>
<title>G1STWRefProcTaskProxy::work(unsigned int) (1 samples, 0.05%)</title><rect x="19.8" y="851.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="22.8" y="862.0"></text>
</g>
<g>
<title>RefProcPhase1Task::work(unsigned int, BoolObjectClosure&amp;, OopClosure&amp;, VoidClosure&amp;) (1 samples, 0.05%)</title><rect x="19.8" y="835.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="22.8" y="846.0"></text>
</g>
<g>
<title>ReferenceProcessor::process_soft_ref_reconsider_work(DiscoveredList&amp;, ReferencePolicy*, BoolObjectClosure*, OopClosure*, VoidClosure*) (1 samples, 0.05%)</title><rect x="19.8" y="819.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="22.8" y="830.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.05%)</title><rect x="19.8" y="803.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="22.8" y="814.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="19.8" y="787.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="22.8" y="798.0"></text>
</g>
<g>
<title>[GC Thread#1 tid=18874] (7 samples, 0.34%)</title><rect x="20.4" y="915.0" width="4.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="23.4" y="926.0"></text>
</g>
<g>
<title>start_thread (7 samples, 0.34%)</title><rect x="20.4" y="899.0" width="4.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="23.4" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (7 samples, 0.34%)</title><rect x="20.4" y="883.0" width="4.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="23.4" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (7 samples, 0.34%)</title><rect x="20.4" y="867.0" width="4.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="23.4" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (7 samples, 0.34%)</title><rect x="20.4" y="851.0" width="4.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="23.4" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.05%)</title><rect x="20.4" y="835.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="23.4" y="846.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="20.4" y="819.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="23.4" y="830.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (2 samples, 0.10%)</title><rect x="21.0" y="835.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="24.0" y="846.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.10%)</title><rect x="21.0" y="819.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="24.0" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (2 samples, 0.10%)</title><rect x="21.0" y="803.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="24.0" y="814.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (2 samples, 0.10%)</title><rect x="21.0" y="787.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="24.0" y="798.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (2 samples, 0.10%)</title><rect x="21.0" y="771.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="24.0" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (2 samples, 0.10%)</title><rect x="21.0" y="755.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="24.0" y="766.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (4 samples, 0.20%)</title><rect x="22.1" y="835.0" width="2.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="25.1" y="846.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (4 samples, 0.20%)</title><rect x="22.1" y="819.0" width="2.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="25.1" y="830.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (4 samples, 0.20%)</title><rect x="22.1" y="803.0" width="2.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="25.1" y="814.0"></text>
</g>
<g>
<title>G1CodeRootSet::nmethods_do(CodeBlobClosure*) const (1 samples, 0.05%)</title><rect x="22.1" y="787.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="25.1" y="798.0"></text>
</g>
<g>
<title>nmethod::fix_oop_relocations(unsigned char*, unsigned char*, bool) (1 samples, 0.05%)</title><rect x="22.1" y="771.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="25.1" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="22.1" y="755.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="25.1" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="22.1" y="739.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="25.1" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="22.1" y="723.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="25.1" y="734.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (3 samples, 0.15%)</title><rect x="22.7" y="787.0" width="1.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="25.7" y="798.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (2 samples, 0.10%)</title><rect x="22.7" y="771.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="25.7" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.05%)</title><rect x="23.3" y="755.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="26.3" y="766.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringScanRSClosure&gt;(MemRegion, G1ScanObjsDuringScanRSClosure*) (1 samples, 0.05%)</title><rect x="23.9" y="771.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="26.9" y="782.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (1 samples, 0.05%)</title><rect x="23.9" y="755.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="26.9" y="766.0"></text>
</g>
<g>
<title>[GC Thread#2 tid=18875] (9 samples, 0.44%)</title><rect x="24.4" y="915.0" width="5.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="27.4" y="926.0"></text>
</g>
<g>
<title>start_thread (9 samples, 0.44%)</title><rect x="24.4" y="899.0" width="5.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="27.4" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (9 samples, 0.44%)</title><rect x="24.4" y="883.0" width="5.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="27.4" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (9 samples, 0.44%)</title><rect x="24.4" y="867.0" width="5.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="27.4" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (7 samples, 0.34%)</title><rect x="24.4" y="851.0" width="4.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="27.4" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.05%)</title><rect x="24.4" y="835.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="27.4" y="846.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="24.4" y="819.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="27.4" y="830.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (3 samples, 0.15%)</title><rect x="25.0" y="835.0" width="1.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="28.0" y="846.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (3 samples, 0.15%)</title><rect x="25.0" y="819.0" width="1.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="28.0" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (3 samples, 0.15%)</title><rect x="25.0" y="803.0" width="1.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="28.0" y="814.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (3 samples, 0.15%)</title><rect x="25.0" y="787.0" width="1.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="28.0" y="798.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (3 samples, 0.15%)</title><rect x="25.0" y="771.0" width="1.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="28.0" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.05%)</title><rect x="25.0" y="755.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="28.0" y="766.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.121] (2 samples, 0.10%)</title><rect x="25.6" y="755.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="28.6" y="766.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.05%)</title><rect x="25.6" y="739.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="28.6" y="750.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;TypeArrayKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (1 samples, 0.05%)</title><rect x="26.2" y="739.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="29.2" y="750.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (3 samples, 0.15%)</title><rect x="26.8" y="835.0" width="1.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="29.8" y="846.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (3 samples, 0.15%)</title><rect x="26.8" y="819.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="29.8" y="830.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (3 samples, 0.15%)</title><rect x="26.8" y="803.0" width="1.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="29.8" y="814.0"></text>
</g>
<g>
<title>G1CodeRootSet::nmethods_do(CodeBlobClosure*) const (1 samples, 0.05%)</title><rect x="26.8" y="787.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="29.8" y="798.0"></text>
</g>
<g>
<title>G1CodeBlobClosure::do_code_blob(CodeBlob*) (1 samples, 0.05%)</title><rect x="26.8" y="771.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="29.8" y="782.0"></text>
</g>
<g>
<title>Assembler::locate_operand(unsigned char*, Assembler::WhichOperand) (1 samples, 0.05%)</title><rect x="26.8" y="755.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="29.8" y="766.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (2 samples, 0.10%)</title><rect x="27.3" y="787.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="30.3" y="798.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.05%)</title><rect x="27.3" y="771.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="30.3" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.05%)</title><rect x="27.3" y="755.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="30.3" y="766.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.05%)</title><rect x="27.3" y="739.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="30.3" y="750.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.05%)</title><rect x="27.3" y="723.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="30.3" y="734.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.05%)</title><rect x="27.3" y="707.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="30.3" y="718.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.05%)</title><rect x="27.3" y="691.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="30.3" y="702.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.05%)</title><rect x="27.3" y="675.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="30.3" y="686.0"></text>
</g>
<g>
<title>lru_cache_add_active_or_unevictable (1 samples, 0.05%)</title><rect x="27.3" y="659.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="30.3" y="670.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringScanRSClosure&gt;(MemRegion, G1ScanObjsDuringScanRSClosure*) (1 samples, 0.05%)</title><rect x="27.9" y="771.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="30.9" y="782.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringScanRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringScanRSClosure*, oopDesc*, Klass*) (1 samples, 0.05%)</title><rect x="27.9" y="755.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="30.9" y="766.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringScanRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.05%)</title><rect x="27.9" y="739.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="30.9" y="750.0"></text>
</g>
<g>
<title>G1STWRefProcTaskProxy::work(unsigned int) (2 samples, 0.10%)</title><rect x="28.5" y="851.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="31.5" y="862.0"></text>
</g>
<g>
<title>RefProcPhase1Task::work(unsigned int, BoolObjectClosure&amp;, OopClosure&amp;, VoidClosure&amp;) (2 samples, 0.10%)</title><rect x="28.5" y="835.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="31.5" y="846.0"></text>
</g>
<g>
<title>ReferenceProcessor::process_soft_ref_reconsider_work(DiscoveredList&amp;, ReferencePolicy*, BoolObjectClosure*, OopClosure*, VoidClosure*) (2 samples, 0.10%)</title><rect x="28.5" y="819.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="31.5" y="830.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.10%)</title><rect x="28.5" y="803.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="31.5" y="814.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.10%)</title><rect x="28.5" y="787.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="31.5" y="798.0"></text>
</g>
<g>
<title>[GC Thread#3 tid=18876] (8 samples, 0.39%)</title><rect x="29.6" y="915.0" width="4.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="32.6" y="926.0"></text>
</g>
<g>
<title>start_thread (8 samples, 0.39%)</title><rect x="29.6" y="899.0" width="4.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="32.6" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (8 samples, 0.39%)</title><rect x="29.6" y="883.0" width="4.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="32.6" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (8 samples, 0.39%)</title><rect x="29.6" y="867.0" width="4.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="32.6" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (7 samples, 0.34%)</title><rect x="29.6" y="851.0" width="4.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="32.6" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.10%)</title><rect x="29.6" y="835.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="32.6" y="846.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="30.2" y="819.0" width="0.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="33.2" y="830.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (2 samples, 0.10%)</title><rect x="30.8" y="835.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="33.8" y="846.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.10%)</title><rect x="30.8" y="819.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="33.8" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (2 samples, 0.10%)</title><rect x="30.8" y="803.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="33.8" y="814.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (2 samples, 0.10%)</title><rect x="30.8" y="787.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="33.8" y="798.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (2 samples, 0.10%)</title><rect x="30.8" y="771.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="33.8" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (2 samples, 0.10%)</title><rect x="30.8" y="755.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="33.8" y="766.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.05%)</title><rect x="31.4" y="739.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="34.4" y="750.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.05%)</title><rect x="31.4" y="723.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="34.4" y="734.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (3 samples, 0.15%)</title><rect x="32.0" y="835.0" width="1.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="35.0" y="846.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (3 samples, 0.15%)</title><rect x="32.0" y="819.0" width="1.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="35.0" y="830.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (3 samples, 0.15%)</title><rect x="32.0" y="803.0" width="1.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="35.0" y="814.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (3 samples, 0.15%)</title><rect x="32.0" y="787.0" width="1.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="35.0" y="798.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.05%)</title><rect x="32.0" y="771.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="35.0" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.05%)</title><rect x="32.0" y="755.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="35.0" y="766.0"></text>
</g>
<g>
<title>HeapRegionRemSetIterator::has_next(unsigned long&amp;) (1 samples, 0.05%)</title><rect x="32.5" y="771.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="35.5" y="782.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (1 samples, 0.05%)</title><rect x="33.1" y="771.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="36.1" y="782.0"></text>
</g>
<g>
<title>G1RedirtyLoggedCardsTask::work(unsigned int) (1 samples, 0.05%)</title><rect x="33.7" y="851.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="36.7" y="862.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::par_apply_closure_to_all_completed_buffers(CardTableEntryClosure*) (1 samples, 0.05%)</title><rect x="33.7" y="835.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="36.7" y="846.0"></text>
</g>
<g>
<title>RedirtyLoggedCardTableEntryClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 0.05%)</title><rect x="33.7" y="819.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="36.7" y="830.0"></text>
</g>
<g>
<title>[GC Thread#4 tid=18877] (7 samples, 0.34%)</title><rect x="34.3" y="915.0" width="4.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="37.3" y="926.0"></text>
</g>
<g>
<title>start_thread (7 samples, 0.34%)</title><rect x="34.3" y="899.0" width="4.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="37.3" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (7 samples, 0.34%)</title><rect x="34.3" y="883.0" width="4.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="37.3" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (7 samples, 0.34%)</title><rect x="34.3" y="867.0" width="4.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="37.3" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (6 samples, 0.29%)</title><rect x="34.3" y="851.0" width="3.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="37.3" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.05%)</title><rect x="34.3" y="835.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="37.3" y="846.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="34.3" y="819.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="37.3" y="830.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (3 samples, 0.15%)</title><rect x="34.8" y="835.0" width="1.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="37.8" y="846.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (3 samples, 0.15%)</title><rect x="34.8" y="819.0" width="1.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="37.8" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (3 samples, 0.15%)</title><rect x="34.8" y="803.0" width="1.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="37.8" y="814.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (3 samples, 0.15%)</title><rect x="34.8" y="787.0" width="1.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="37.8" y="798.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (3 samples, 0.15%)</title><rect x="34.8" y="771.0" width="1.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="37.8" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (2 samples, 0.10%)</title><rect x="34.8" y="755.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="37.8" y="766.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.10%)</title><rect x="34.8" y="739.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="37.8" y="750.0"></text>
</g>
<g>
<title>Klass::start_of_vtable() const (1 samples, 0.05%)</title><rect x="35.4" y="723.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="38.4" y="734.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.121] (1 samples, 0.05%)</title><rect x="36.0" y="755.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="39.0" y="766.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.05%)</title><rect x="36.0" y="739.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="39.0" y="750.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.10%)</title><rect x="36.6" y="835.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="39.6" y="846.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (2 samples, 0.10%)</title><rect x="36.6" y="819.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="39.6" y="830.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (2 samples, 0.10%)</title><rect x="36.6" y="803.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="39.6" y="814.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (2 samples, 0.10%)</title><rect x="36.6" y="787.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="39.6" y="798.0"></text>
</g>
<g>
<title>HeapRegionRemSetIterator::has_next(unsigned long&amp;) (1 samples, 0.05%)</title><rect x="36.6" y="771.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="39.6" y="782.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringScanRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringScanRSClosure*, oopDesc*, Klass*) (1 samples, 0.05%)</title><rect x="37.2" y="771.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="40.2" y="782.0"></text>
</g>
<g>
<title>G1STWRefProcTaskProxy::work(unsigned int) (1 samples, 0.05%)</title><rect x="37.7" y="851.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="40.7" y="862.0"></text>
</g>
<g>
<title>RefProcPhase1Task::work(unsigned int, BoolObjectClosure&amp;, OopClosure&amp;, VoidClosure&amp;) (1 samples, 0.05%)</title><rect x="37.7" y="835.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="40.7" y="846.0"></text>
</g>
<g>
<title>ReferenceProcessor::process_soft_ref_reconsider_work(DiscoveredList&amp;, ReferencePolicy*, BoolObjectClosure*, OopClosure*, VoidClosure*) (1 samples, 0.05%)</title><rect x="37.7" y="819.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="40.7" y="830.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.05%)</title><rect x="37.7" y="803.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="40.7" y="814.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="37.7" y="787.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="40.7" y="798.0"></text>
</g>
<g>
<title>[GC Thread#5 tid=18878] (9 samples, 0.44%)</title><rect x="38.3" y="915.0" width="5.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="41.3" y="926.0"></text>
</g>
<g>
<title>start_thread (9 samples, 0.44%)</title><rect x="38.3" y="899.0" width="5.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="41.3" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (9 samples, 0.44%)</title><rect x="38.3" y="883.0" width="5.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="41.3" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (9 samples, 0.44%)</title><rect x="38.3" y="867.0" width="5.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="41.3" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (9 samples, 0.44%)</title><rect x="38.3" y="851.0" width="5.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="41.3" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.10%)</title><rect x="38.3" y="835.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="41.3" y="846.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.10%)</title><rect x="38.3" y="819.0" width="1.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="41.3" y="830.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (4 samples, 0.20%)</title><rect x="39.5" y="835.0" width="2.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="42.5" y="846.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (4 samples, 0.20%)</title><rect x="39.5" y="819.0" width="2.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="42.5" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (4 samples, 0.20%)</title><rect x="39.5" y="803.0" width="2.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="42.5" y="814.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (4 samples, 0.20%)</title><rect x="39.5" y="787.0" width="2.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="42.5" y="798.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (4 samples, 0.20%)</title><rect x="39.5" y="771.0" width="2.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="42.5" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (3 samples, 0.15%)</title><rect x="39.5" y="755.0" width="1.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="42.5" y="766.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.10%)</title><rect x="40.0" y="739.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="43.0" y="750.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.05%)</title><rect x="40.6" y="723.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="43.6" y="734.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.05%)</title><rect x="40.6" y="707.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="43.6" y="718.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.05%)</title><rect x="40.6" y="691.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="43.6" y="702.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.121] (1 samples, 0.05%)</title><rect x="41.2" y="755.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="44.2" y="766.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.05%)</title><rect x="41.2" y="739.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="44.2" y="750.0"></text>
</g>
<g>
<title>OverflowTaskQueue&lt;StarTask, (MemoryType)5, 131072u&gt;::push(StarTask) [clone .constprop.517] (1 samples, 0.05%)</title><rect x="41.2" y="723.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="44.2" y="734.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (3 samples, 0.15%)</title><rect x="41.8" y="835.0" width="1.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="44.8" y="846.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (3 samples, 0.15%)</title><rect x="41.8" y="819.0" width="1.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="44.8" y="830.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (3 samples, 0.15%)</title><rect x="41.8" y="803.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="44.8" y="814.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (3 samples, 0.15%)</title><rect x="41.8" y="787.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="44.8" y="798.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.05%)</title><rect x="41.8" y="771.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="44.8" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.05%)</title><rect x="41.8" y="755.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="44.8" y="766.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringScanRSClosure&gt;(MemRegion, G1ScanObjsDuringScanRSClosure*) (1 samples, 0.05%)</title><rect x="42.4" y="771.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="45.4" y="782.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (1 samples, 0.05%)</title><rect x="42.9" y="771.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="45.9" y="782.0"></text>
</g>
<g>
<title>[GC Thread#6 tid=18879] (9 samples, 0.44%)</title><rect x="43.5" y="915.0" width="5.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="46.5" y="926.0"></text>
</g>
<g>
<title>start_thread (9 samples, 0.44%)</title><rect x="43.5" y="899.0" width="5.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="46.5" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (9 samples, 0.44%)</title><rect x="43.5" y="883.0" width="5.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="46.5" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (9 samples, 0.44%)</title><rect x="43.5" y="867.0" width="5.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="46.5" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (9 samples, 0.44%)</title><rect x="43.5" y="851.0" width="5.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="46.5" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.10%)</title><rect x="43.5" y="835.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="46.5" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.05%)</title><rect x="43.5" y="819.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="46.5" y="830.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="44.1" y="819.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="47.1" y="830.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (5 samples, 0.24%)</title><rect x="44.7" y="835.0" width="2.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="47.7" y="846.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (5 samples, 0.24%)</title><rect x="44.7" y="819.0" width="2.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="47.7" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (4 samples, 0.20%)</title><rect x="44.7" y="803.0" width="2.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="47.7" y="814.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (4 samples, 0.20%)</title><rect x="44.7" y="787.0" width="2.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="47.7" y="798.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (4 samples, 0.20%)</title><rect x="44.7" y="771.0" width="2.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="47.7" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.05%)</title><rect x="44.7" y="755.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="47.7" y="766.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.121] (3 samples, 0.15%)</title><rect x="45.2" y="755.0" width="1.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="48.2" y="766.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (3 samples, 0.15%)</title><rect x="45.2" y="739.0" width="1.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="48.2" y="750.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (2 samples, 0.10%)</title><rect x="45.8" y="723.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="48.8" y="734.0"></text>
</g>
<g>
<title>G1HotCardCache::drain(CardTableEntryClosure*, unsigned int) (1 samples, 0.05%)</title><rect x="47.0" y="803.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="50.0" y="814.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 0.05%)</title><rect x="47.0" y="787.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="50.0" y="798.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.05%)</title><rect x="47.0" y="771.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="50.0" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.05%)</title><rect x="47.0" y="755.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="50.0" y="766.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.10%)</title><rect x="47.6" y="835.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="50.6" y="846.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (2 samples, 0.10%)</title><rect x="47.6" y="819.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="50.6" y="830.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (2 samples, 0.10%)</title><rect x="47.6" y="803.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="50.6" y="814.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (2 samples, 0.10%)</title><rect x="47.6" y="787.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="50.6" y="798.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.05%)</title><rect x="47.6" y="771.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="50.6" y="782.0"></text>
</g>
<g>
<title>HeapRegionRemSetIterator::has_next(unsigned long&amp;) (1 samples, 0.05%)</title><rect x="48.1" y="771.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="51.1" y="782.0"></text>
</g>
<g>
<title>[GC Thread#7 tid=18880] (8 samples, 0.39%)</title><rect x="48.7" y="915.0" width="4.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="51.7" y="926.0"></text>
</g>
<g>
<title>start_thread (8 samples, 0.39%)</title><rect x="48.7" y="899.0" width="4.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="51.7" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (8 samples, 0.39%)</title><rect x="48.7" y="883.0" width="4.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="51.7" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (8 samples, 0.39%)</title><rect x="48.7" y="867.0" width="4.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="51.7" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (8 samples, 0.39%)</title><rect x="48.7" y="851.0" width="4.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="51.7" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (3 samples, 0.15%)</title><rect x="48.7" y="835.0" width="1.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="51.7" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.05%)</title><rect x="48.7" y="819.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="51.7" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.05%)</title><rect x="48.7" y="803.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="51.7" y="814.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.05%)</title><rect x="48.7" y="787.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="51.7" y="798.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.10%)</title><rect x="49.3" y="819.0" width="1.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="52.3" y="830.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (3 samples, 0.15%)</title><rect x="50.5" y="835.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="53.5" y="846.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (3 samples, 0.15%)</title><rect x="50.5" y="819.0" width="1.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="53.5" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (3 samples, 0.15%)</title><rect x="50.5" y="803.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="53.5" y="814.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (3 samples, 0.15%)</title><rect x="50.5" y="787.0" width="1.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="53.5" y="798.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (3 samples, 0.15%)</title><rect x="50.5" y="771.0" width="1.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="53.5" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (2 samples, 0.10%)</title><rect x="50.5" y="755.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="53.5" y="766.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.05%)</title><rect x="51.0" y="739.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="54.0" y="750.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.121] (1 samples, 0.05%)</title><rect x="51.6" y="755.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="54.6" y="766.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.05%)</title><rect x="51.6" y="739.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="54.6" y="750.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (1 samples, 0.05%)</title><rect x="51.6" y="723.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="54.6" y="734.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.10%)</title><rect x="52.2" y="835.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="55.2" y="846.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (2 samples, 0.10%)</title><rect x="52.2" y="819.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="55.2" y="830.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (2 samples, 0.10%)</title><rect x="52.2" y="803.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="55.2" y="814.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (2 samples, 0.10%)</title><rect x="52.2" y="787.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="55.2" y="798.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.05%)</title><rect x="52.2" y="771.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="55.2" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.05%)</title><rect x="52.2" y="755.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="55.2" y="766.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringScanRSClosure&gt;(MemRegion, G1ScanObjsDuringScanRSClosure*) (1 samples, 0.05%)</title><rect x="52.8" y="771.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="55.8" y="782.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=16337] (561 samples, 27.47%)</title><rect x="53.3" y="915.0" width="324.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="56.3" y="926.0">[NIO Selector #0 tid=16337]</text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.05%)</title><rect x="53.3" y="899.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="56.3" y="910.0"></text>
</g>
<g>
<title>Method::from_compiled_entry_no_trampoline() const (1 samples, 0.05%)</title><rect x="53.3" y="883.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="56.3" y="894.0"></text>
</g>
<g>
<title>[unknown_Java] (9 samples, 0.44%)</title><rect x="53.9" y="899.0" width="5.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="56.9" y="910.0"></text>
</g>
<g>
<title>I2C/C2I adapters (2 samples, 0.10%)</title><rect x="53.9" y="883.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="56.9" y="894.0"></text>
</g>
<g>
<title>Interpreter (1 samples, 0.05%)</title><rect x="55.1" y="883.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="58.1" y="894.0"></text>
</g>
<g>
<title>Method::from_compiled_entry_no_trampoline() const (1 samples, 0.05%)</title><rect x="55.7" y="883.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="58.7" y="894.0"></text>
</g>
<g>
<title>SharedRuntime::fixup_callers_callsite(Method*, unsigned char*) (5 samples, 0.24%)</title><rect x="56.2" y="883.0" width="2.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="59.2" y="894.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.15%)</title><rect x="56.2" y="867.0" width="1.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="59.2" y="878.0"></text>
</g>
<g>
<title>Method::from_compiled_entry_no_trampoline() const (1 samples, 0.05%)</title><rect x="58.0" y="867.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="61.0" y="878.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.05%)</title><rect x="58.5" y="867.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="61.5" y="878.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (551 samples, 26.98%)</title><rect x="59.1" y="899.0" width="318.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="62.1" y="910.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (6 samples, 0.29%)</title><rect x="60.9" y="883.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="63.9" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (6 samples, 0.29%)</title><rect x="60.9" y="867.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="63.9" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (72 samples, 3.53%)</title><rect x="64.3" y="883.0" width="41.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="67.3" y="894.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.05%)</title><rect x="65.5" y="867.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="68.5" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (69 samples, 3.38%)</title><rect x="66.1" y="867.0" width="39.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="69.1" y="878.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.05%)</title><rect x="70.7" y="851.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="73.7" y="862.0"></text>
</g>
<g>
<title>__clock_gettime (6 samples, 0.29%)</title><rect x="71.3" y="851.0" width="3.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="74.3" y="862.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.05%)</title><rect x="74.7" y="851.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="77.7" y="862.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.05%)</title><rect x="75.3" y="851.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="78.3" y="862.0"></text>
</g>
<g>
<title>clock_gettime@plt (1 samples, 0.05%)</title><rect x="75.9" y="851.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="78.9" y="862.0"></text>
</g>
<g>
<title>epoll_wait (46 samples, 2.25%)</title><rect x="76.5" y="851.0" width="26.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="79.5" y="862.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (36 samples, 1.76%)</title><rect x="82.2" y="835.0" width="20.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="85.2" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (36 samples, 1.76%)</title><rect x="82.2" y="819.0" width="20.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="85.2" y="830.0"></text>
</g>
<g>
<title>fput (1 samples, 0.05%)</title><rect x="82.8" y="803.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="85.8" y="814.0"></text>
</g>
<g>
<title>sys_epoll_wait (34 samples, 1.67%)</title><rect x="83.4" y="803.0" width="19.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="86.4" y="814.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.05%)</title><rect x="83.4" y="787.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="86.4" y="798.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="83.4" y="771.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="86.4" y="782.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.05%)</title><rect x="83.4" y="755.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="86.4" y="766.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.05%)</title><rect x="84.0" y="787.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="87.0" y="798.0"></text>
</g>
<g>
<title>ep_poll (32 samples, 1.57%)</title><rect x="84.5" y="787.0" width="18.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="87.5" y="798.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.20%)</title><rect x="85.1" y="771.0" width="2.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="88.1" y="782.0"></text>
</g>
<g>
<title>ep_scan_ready_list (11 samples, 0.54%)</title><rect x="87.4" y="771.0" width="6.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="90.4" y="782.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="87.4" y="755.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="90.4" y="766.0"></text>
</g>
<g>
<title>ep_send_events_proc (10 samples, 0.49%)</title><rect x="88.0" y="755.0" width="5.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="91.0" y="766.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (7 samples, 0.34%)</title><rect x="89.2" y="739.0" width="4.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="92.2" y="750.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 0.24%)</title><rect x="90.3" y="723.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="93.3" y="734.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.10%)</title><rect x="90.3" y="707.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="93.3" y="718.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.05%)</title><rect x="90.9" y="691.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="93.9" y="702.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.15%)</title><rect x="91.5" y="707.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="94.5" y="718.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.05%)</title><rect x="93.2" y="739.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="96.2" y="750.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.05%)</title><rect x="93.8" y="771.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="96.8" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (15 samples, 0.73%)</title><rect x="94.4" y="771.0" width="8.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="97.4" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (15 samples, 0.73%)</title><rect x="94.4" y="755.0" width="8.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="97.4" y="766.0"></text>
</g>
<g>
<title>schedule (13 samples, 0.64%)</title><rect x="95.5" y="739.0" width="7.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="98.5" y="750.0"></text>
</g>
<g>
<title>__schedule (13 samples, 0.64%)</title><rect x="95.5" y="723.0" width="7.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="98.5" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (11 samples, 0.54%)</title><rect x="96.7" y="707.0" width="6.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="99.7" y="718.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.20%)</title><rect x="103.0" y="851.0" width="2.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="106.0" y="862.0"></text>
</g>
<g>
<title>__clock_gettime (4 samples, 0.20%)</title><rect x="103.0" y="835.0" width="2.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="106.0" y="846.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.10%)</title><rect x="103.0" y="819.0" width="1.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="106.0" y="830.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.10%)</title><rect x="104.2" y="819.0" width="1.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="107.2" y="830.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="104.8" y="803.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="107.8" y="814.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.05%)</title><rect x="105.3" y="851.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="108.3" y="862.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="105.3" y="835.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="108.3" y="846.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.05%)</title><rect x="105.3" y="819.0" width="0.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="108.3" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (470 samples, 23.02%)</title><rect x="105.9" y="883.0" width="271.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="108.9" y="894.0">one/nio/net/Session.process</text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="106.5" y="867.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="109.5" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="106.5" y="851.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="109.5" y="862.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.05%)</title><rect x="106.5" y="835.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="109.5" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (468 samples, 22.92%)</title><rect x="107.1" y="867.0" width="270.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="110.1" y="878.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.05%)</title><rect x="107.1" y="851.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="110.1" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (420 samples, 20.57%)</title><rect x="107.7" y="851.0" width="242.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="110.7" y="862.0">one/nio/http/HttpSession.process..</text>
</g>
<g>
<title>I2C/C2I adapters (3 samples, 0.15%)</title><rect x="152.2" y="835.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="155.2" y="846.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.05%)</title><rect x="153.9" y="835.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="156.9" y="846.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.05%)</title><rect x="153.9" y="819.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="156.9" y="830.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.05%)</title><rect x="153.9" y="803.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="156.9" y="814.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.05%)</title><rect x="153.9" y="787.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="156.9" y="798.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::submit_compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.05%)</title><rect x="153.9" y="771.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="156.9" y="782.0"></text>
</g>
<g>
<title>SharedRuntime::OSR_migration_begin(JavaThread*) (1 samples, 0.05%)</title><rect x="154.5" y="835.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="157.5" y="846.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (1 samples, 0.05%)</title><rect x="154.5" y="819.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="157.5" y="830.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.05%)</title><rect x="154.5" y="803.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="157.5" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (324 samples, 15.87%)</title><rect x="155.0" y="835.0" width="187.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="158.0" y="846.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (321 samples, 15.72%)</title><rect x="156.8" y="819.0" width="185.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="159.8" y="830.0">one/nio/http/HttpServer...</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (314 samples, 15.38%)</title><rect x="156.8" y="803.0" width="181.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="159.8" y="814.0">RequestHandler0_get.han..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (218 samples, 10.68%)</title><rect x="156.8" y="787.0" width="126.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="159.8" y="798.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (216 samples, 10.58%)</title><rect x="157.4" y="771.0" width="124.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="160.4" y="782.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 0.39%)</title><rect x="157.4" y="755.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="160.4" y="766.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.05%)</title><rect x="158.5" y="739.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="161.5" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="159.1" y="739.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="162.1" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.05%)</title><rect x="159.7" y="739.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="162.7" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.05%)</title><rect x="159.7" y="723.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="162.7" y="734.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.05%)</title><rect x="159.7" y="707.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="162.7" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.05%)</title><rect x="159.7" y="691.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="162.7" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="159.7" y="675.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="162.7" y="686.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned long, Thread*) (1 samples, 0.05%)</title><rect x="159.7" y="659.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="162.7" y="670.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.15%)</title><rect x="160.2" y="739.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="163.2" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.05%)</title><rect x="160.2" y="723.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="163.2" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.05%)</title><rect x="160.2" y="707.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="163.2" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.05%)</title><rect x="160.8" y="723.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="163.8" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.05%)</title><rect x="161.4" y="723.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="164.4" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.05%)</title><rect x="161.4" y="707.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="164.4" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.05%)</title><rect x="161.4" y="691.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="164.4" y="702.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.putByte (1 samples, 0.05%)</title><rect x="161.4" y="675.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="164.4" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (208 samples, 10.19%)</title><rect x="162.0" y="755.0" width="120.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="165.0" y="766.0">one/nio/net/Ses..</text>
</g>
<g>
<title>one/nio/net/Session.write (208 samples, 10.19%)</title><rect x="162.0" y="739.0" width="120.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="165.0" y="750.0">one/nio/net/Ses..</text>
</g>
<g>
<title>gettimeofday (2 samples, 0.10%)</title><rect x="162.0" y="723.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="165.0" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (204 samples, 9.99%)</title><rect x="163.1" y="723.0" width="117.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="166.1" y="734.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (204 samples, 9.99%)</title><rect x="163.1" y="707.0" width="117.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="166.1" y="718.0">one/nio/net/Na..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.10%)</title><rect x="164.3" y="691.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="167.3" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.10%)</title><rect x="164.3" y="675.0" width="1.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="167.3" y="686.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.05%)</title><rect x="164.9" y="659.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="167.9" y="670.0"></text>
</g>
<g>
<title>send (200 samples, 9.79%)</title><rect x="165.4" y="691.0" width="115.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="168.4" y="702.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (196 samples, 9.60%)</title><rect x="167.8" y="675.0" width="113.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="170.8" y="686.0">entry_SYSCALL_..</text>
</g>
<g>
<title>do_syscall_64 (196 samples, 9.60%)</title><rect x="167.8" y="659.0" width="113.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="170.8" y="670.0">do_syscall_64</text>
</g>
<g>
<title>sys_sendto (194 samples, 9.50%)</title><rect x="168.9" y="643.0" width="112.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="171.9" y="654.0">sys_sendto</text>
</g>
<g>
<title>SYSC_sendto (192 samples, 9.40%)</title><rect x="168.9" y="627.0" width="111.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="171.9" y="638.0">SYSC_sendto</text>
</g>
<g>
<title>sock_sendmsg (190 samples, 9.30%)</title><rect x="168.9" y="611.0" width="109.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="171.9" y="622.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (190 samples, 9.30%)</title><rect x="168.9" y="595.0" width="109.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="171.9" y="606.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (189 samples, 9.26%)</title><rect x="169.5" y="579.0" width="109.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="172.5" y="590.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.15%)</title><rect x="169.5" y="563.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="172.5" y="574.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.05%)</title><rect x="171.2" y="563.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="174.2" y="574.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.05%)</title><rect x="171.8" y="563.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="174.8" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (184 samples, 9.01%)</title><rect x="172.4" y="563.0" width="106.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="175.4" y="574.0">tcp_sendmsg_l..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.05%)</title><rect x="174.7" y="547.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="177.7" y="558.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.05%)</title><rect x="174.7" y="531.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="177.7" y="542.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.05%)</title><rect x="175.3" y="547.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="178.3" y="558.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.05%)</title><rect x="175.3" y="531.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="178.3" y="542.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.29%)</title><rect x="175.8" y="547.0" width="3.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="178.8" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.29%)</title><rect x="175.8" y="531.0" width="3.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="178.8" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (4 samples, 0.20%)</title><rect x="177.0" y="515.0" width="2.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="180.0" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.15%)</title><rect x="177.0" y="499.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="180.0" y="510.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.05%)</title><rect x="178.2" y="483.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="181.2" y="494.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.05%)</title><rect x="178.7" y="499.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="181.7" y="510.0"></text>
</g>
<g>
<title>tcp_push (166 samples, 8.13%)</title><rect x="179.3" y="547.0" width="95.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="182.3" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (166 samples, 8.13%)</title><rect x="179.3" y="531.0" width="95.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="182.3" y="542.0">__tcp_push_..</text>
</g>
<g>
<title>tcp_write_xmit (166 samples, 8.13%)</title><rect x="179.3" y="515.0" width="95.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="182.3" y="526.0">tcp_write_x..</text>
</g>
<g>
<title>__tcp_transmit_skb (155 samples, 7.59%)</title><rect x="180.5" y="499.0" width="89.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="183.5" y="510.0">__tcp_tran..</text>
</g>
<g>
<title>__skb_clone (1 samples, 0.05%)</title><rect x="182.8" y="483.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="185.8" y="494.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.05%)</title><rect x="183.4" y="483.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="186.4" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (146 samples, 7.15%)</title><rect x="183.9" y="483.0" width="84.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="186.9" y="494.0">ip_queue_x..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.05%)</title><rect x="184.5" y="467.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="187.5" y="478.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.05%)</title><rect x="184.5" y="451.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="187.5" y="462.0"></text>
</g>
<g>
<title>ip_local_out (144 samples, 7.05%)</title><rect x="185.1" y="467.0" width="83.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="188.1" y="478.0">ip_local_..</text>
</g>
<g>
<title>__ip_local_out (24 samples, 1.18%)</title><rect x="185.1" y="451.0" width="13.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="188.1" y="462.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.05%)</title><rect x="185.1" y="435.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="188.1" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.05%)</title><rect x="185.7" y="435.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="188.7" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (2 samples, 0.10%)</title><rect x="186.2" y="435.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="189.2" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (20 samples, 0.98%)</title><rect x="187.4" y="435.0" width="11.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="190.4" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.05%)</title><rect x="187.4" y="419.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="190.4" y="430.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (3 samples, 0.15%)</title><rect x="188.0" y="419.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="191.0" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (3 samples, 0.15%)</title><rect x="188.0" y="403.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="191.0" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (14 samples, 0.69%)</title><rect x="189.7" y="419.0" width="8.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="192.7" y="430.0"></text>
</g>
<g>
<title>__indirect_thunk_start (1 samples, 0.05%)</title><rect x="189.7" y="403.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="192.7" y="414.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (1 samples, 0.05%)</title><rect x="190.3" y="403.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="193.3" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (12 samples, 0.59%)</title><rect x="190.9" y="403.0" width="6.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="193.9" y="414.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (3 samples, 0.15%)</title><rect x="192.6" y="387.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="195.6" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.05%)</title><rect x="194.3" y="387.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="197.3" y="398.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (1 samples, 0.05%)</title><rect x="194.9" y="387.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="197.9" y="398.0"></text>
</g>
<g>
<title>ipv4_pkt_to_tuple?[nf_conntrack_ipv4] (1 samples, 0.05%)</title><rect x="194.9" y="371.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="197.9" y="382.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (4 samples, 0.20%)</title><rect x="195.5" y="387.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="198.5" y="398.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (1 samples, 0.05%)</title><rect x="197.2" y="371.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="200.2" y="382.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (2 samples, 0.10%)</title><rect x="197.8" y="419.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="200.8" y="430.0"></text>
</g>
<g>
<title>ip_output (118 samples, 5.78%)</title><rect x="199.0" y="451.0" width="68.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="202.0" y="462.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (114 samples, 5.58%)</title><rect x="199.0" y="435.0" width="65.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="202.0" y="446.0">ip_fini..</text>
</g>
<g>
<title>ip_finish_output2 (112 samples, 5.48%)</title><rect x="199.5" y="419.0" width="64.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="202.5" y="430.0">ip_fini..</text>
</g>
<g>
<title>__local_bh_enable_ip (91 samples, 4.46%)</title><rect x="205.3" y="403.0" width="52.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="208.3" y="414.0">__loc..</text>
</g>
<g>
<title>do_softirq.part.17 (91 samples, 4.46%)</title><rect x="205.3" y="387.0" width="52.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="208.3" y="398.0">do_so..</text>
</g>
<g>
<title>do_softirq_own_stack (91 samples, 4.46%)</title><rect x="205.3" y="371.0" width="52.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="208.3" y="382.0">do_so..</text>
</g>
<g>
<title>__softirqentry_text_start (90 samples, 4.41%)</title><rect x="205.3" y="355.0" width="52.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="208.3" y="366.0">__sof..</text>
</g>
<g>
<title>net_rx_action (85 samples, 4.16%)</title><rect x="208.2" y="339.0" width="49.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="211.2" y="350.0">net_r..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.05%)</title><rect x="209.4" y="323.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="212.4" y="334.0"></text>
</g>
<g>
<title>process_backlog (82 samples, 4.02%)</title><rect x="209.9" y="323.0" width="47.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="212.9" y="334.0">proc..</text>
</g>
<g>
<title>__netif_receive_skb (80 samples, 3.92%)</title><rect x="211.1" y="307.0" width="46.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="214.1" y="318.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_core (80 samples, 3.92%)</title><rect x="211.1" y="291.0" width="46.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="214.1" y="302.0">__ne..</text>
</g>
<g>
<title>ip_rcv (74 samples, 3.62%)</title><rect x="214.6" y="275.0" width="42.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="217.6" y="286.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (66 samples, 3.23%)</title><rect x="214.6" y="259.0" width="38.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="217.6" y="270.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (64 samples, 3.13%)</title><rect x="215.7" y="243.0" width="37.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="218.7" y="254.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver_finish (62 samples, 3.04%)</title><rect x="216.3" y="227.0" width="35.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="219.3" y="238.0">ip_..</text>
</g>
<g>
<title>sock_put (1 samples, 0.05%)</title><rect x="216.9" y="211.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="219.9" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (60 samples, 2.94%)</title><rect x="217.5" y="211.0" width="34.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="220.5" y="222.0">tc..</text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.15%)</title><rect x="217.5" y="195.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="220.5" y="206.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.05%)</title><rect x="219.2" y="195.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="222.2" y="206.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (1 samples, 0.05%)</title><rect x="219.8" y="195.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="222.8" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (55 samples, 2.69%)</title><rect x="220.3" y="195.0" width="31.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="223.3" y="206.0">tc..</text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.05%)</title><rect x="220.3" y="179.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="223.3" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (54 samples, 2.64%)</title><rect x="220.9" y="179.0" width="31.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="223.9" y="190.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (6 samples, 0.29%)</title><rect x="221.5" y="163.0" width="3.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="224.5" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (6 samples, 0.29%)</title><rect x="221.5" y="147.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="224.5" y="158.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.05%)</title><rect x="222.1" y="131.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="225.1" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.20%)</title><rect x="222.7" y="131.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="225.7" y="142.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.20%)</title><rect x="222.7" y="115.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="225.7" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.20%)</title><rect x="222.7" y="99.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="225.7" y="110.0"></text>
</g>
<g>
<title>sched_clock_cpu (1 samples, 0.05%)</title><rect x="225.0" y="163.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="228.0" y="174.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.05%)</title><rect x="225.0" y="147.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="228.0" y="158.0"></text>
</g>
<g>
<title>native_sched_clock (1 samples, 0.05%)</title><rect x="225.0" y="131.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="228.0" y="142.0"></text>
</g>
<g>
<title>tcp_ack (11 samples, 0.54%)</title><rect x="225.5" y="163.0" width="6.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="228.5" y="174.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.05%)</title><rect x="226.1" y="147.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="229.1" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (8 samples, 0.39%)</title><rect x="226.7" y="147.0" width="4.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="229.7" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.29%)</title><rect x="227.3" y="131.0" width="3.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="230.3" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.15%)</title><rect x="227.3" y="115.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="230.3" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.10%)</title><rect x="227.9" y="99.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="230.9" y="110.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.05%)</title><rect x="228.4" y="83.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="231.4" y="94.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.15%)</title><rect x="229.0" y="115.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="232.0" y="126.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.15%)</title><rect x="229.0" y="99.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="232.0" y="110.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.05%)</title><rect x="229.6" y="83.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="232.6" y="94.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.05%)</title><rect x="230.2" y="83.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="233.2" y="94.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.05%)</title><rect x="230.2" y="67.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="233.2" y="78.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.05%)</title><rect x="230.2" y="51.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="233.2" y="62.0"></text>
</g>
<g>
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.05%)</title><rect x="230.2" y="35.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="233.2" y="46.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.41 (1 samples, 0.05%)</title><rect x="230.7" y="131.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="233.7" y="142.0"></text>
</g>
<g>
<title>minmax_subwin_update (1 samples, 0.05%)</title><rect x="230.7" y="115.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="233.7" y="126.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.05%)</title><rect x="231.3" y="147.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="234.3" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.05%)</title><rect x="231.9" y="163.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="234.9" y="174.0"></text>
</g>
<g>
<title>tcp_data_queue (32 samples, 1.57%)</title><rect x="232.5" y="163.0" width="18.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="235.5" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (30 samples, 1.47%)</title><rect x="232.5" y="147.0" width="17.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="235.5" y="158.0"></text>
</g>
<g>
<title>__wake_up_sync_key (29 samples, 1.42%)</title><rect x="233.1" y="131.0" width="16.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="236.1" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (29 samples, 1.42%)</title><rect x="233.1" y="115.0" width="16.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="236.1" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (29 samples, 1.42%)</title><rect x="233.1" y="99.0" width="16.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="236.1" y="110.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.10%)</title><rect x="249.8" y="147.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="252.8" y="158.0"></text>
</g>
<g>
<title>tcp_rate_gen (2 samples, 0.10%)</title><rect x="251.0" y="163.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="254.0" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.05%)</title><rect x="252.1" y="227.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="255.1" y="238.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.05%)</title><rect x="252.1" y="211.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="255.1" y="222.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.05%)</title><rect x="252.1" y="195.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="255.1" y="206.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (2 samples, 0.10%)</title><rect x="252.7" y="259.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="255.7" y="270.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_in?[iptable_nat] (1 samples, 0.05%)</title><rect x="253.9" y="259.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="256.9" y="270.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.24%)</title><rect x="254.4" y="259.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="257.4" y="270.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (1 samples, 0.05%)</title><rect x="254.4" y="243.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="257.4" y="254.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.05%)</title><rect x="254.4" y="227.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="257.4" y="238.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack_ipv4] (3 samples, 0.15%)</title><rect x="255.0" y="243.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="258.0" y="254.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (3 samples, 0.15%)</title><rect x="255.0" y="227.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="258.0" y="238.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat_ipv4] (1 samples, 0.05%)</title><rect x="256.7" y="243.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="259.7" y="254.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.05%)</title><rect x="257.3" y="355.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="260.3" y="366.0"></text>
</g>
<g>
<title>dev_queue_xmit (11 samples, 0.54%)</title><rect x="257.9" y="403.0" width="6.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="260.9" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (11 samples, 0.54%)</title><rect x="257.9" y="387.0" width="6.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="260.9" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.24%)</title><rect x="259.6" y="371.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="262.6" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.20%)</title><rect x="259.6" y="355.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="262.6" y="366.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.10%)</title><rect x="259.6" y="339.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="262.6" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.10%)</title><rect x="259.6" y="323.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="262.6" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.10%)</title><rect x="259.6" y="307.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="262.6" y="318.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.05%)</title><rect x="260.8" y="339.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="263.8" y="350.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.05%)</title><rect x="261.4" y="339.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="264.4" y="350.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.05%)</title><rect x="261.9" y="355.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="264.9" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.05%)</title><rect x="262.5" y="371.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="265.5" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.10%)</title><rect x="263.1" y="371.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="266.1" y="382.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.05%)</title><rect x="263.1" y="355.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="266.1" y="366.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (1 samples, 0.05%)</title><rect x="263.7" y="355.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="266.7" y="366.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.05%)</title><rect x="264.3" y="419.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="267.3" y="430.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (1 samples, 0.05%)</title><rect x="264.8" y="435.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="267.8" y="446.0"></text>
</g>
<g>
<title>ipv4_helper?[nf_conntrack_ipv4] (2 samples, 0.10%)</title><rect x="265.4" y="435.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="268.4" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.05%)</title><rect x="266.6" y="435.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="269.6" y="446.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.05%)</title><rect x="267.1" y="451.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="270.1" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.05%)</title><rect x="267.7" y="451.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="270.7" y="462.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.10%)</title><rect x="268.3" y="483.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="271.3" y="494.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.05%)</title><rect x="268.9" y="467.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="271.9" y="478.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.05%)</title><rect x="268.9" y="451.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="271.9" y="462.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.05%)</title><rect x="269.5" y="483.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="272.5" y="494.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.05%)</title><rect x="269.5" y="467.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="272.5" y="478.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.05%)</title><rect x="270.0" y="499.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="273.0" y="510.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.05%)</title><rect x="270.6" y="499.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="273.6" y="510.0"></text>
</g>
<g>
<title>sched_clock_cpu (1 samples, 0.05%)</title><rect x="271.2" y="499.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="274.2" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.05%)</title><rect x="271.8" y="499.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="274.8" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.10%)</title><rect x="272.4" y="499.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="275.4" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.05%)</title><rect x="272.9" y="483.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="275.9" y="494.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (1 samples, 0.05%)</title><rect x="272.9" y="467.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="275.9" y="478.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.05%)</title><rect x="272.9" y="451.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="275.9" y="462.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.05%)</title><rect x="272.9" y="435.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="275.9" y="446.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="272.9" y="419.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="275.9" y="430.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.10%)</title><rect x="273.5" y="499.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="276.5" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.05%)</title><rect x="274.1" y="483.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="277.1" y="494.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.05%)</title><rect x="274.1" y="467.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="277.1" y="478.0"></text>
</g>
<g>
<title>tcp_tso_segs (1 samples, 0.05%)</title><rect x="274.7" y="499.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="277.7" y="510.0"></text>
</g>
<g>
<title>tcp_send_mss (5 samples, 0.24%)</title><rect x="275.2" y="547.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="278.2" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.05%)</title><rect x="275.2" y="531.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="278.2" y="542.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.20%)</title><rect x="275.8" y="531.0" width="2.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="278.8" y="542.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.05%)</title><rect x="277.0" y="515.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="280.0" y="526.0"></text>
</g>
<g>
<title>tcp_v4_md5_lookup (1 samples, 0.05%)</title><rect x="277.6" y="515.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="280.6" y="526.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.05%)</title><rect x="278.1" y="547.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="281.1" y="558.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.10%)</title><rect x="278.7" y="611.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="281.7" y="622.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.10%)</title><rect x="278.7" y="595.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="281.7" y="606.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.10%)</title><rect x="278.7" y="579.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="281.7" y="590.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.10%)</title><rect x="278.7" y="563.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="281.7" y="574.0"></text>
</g>
<g>
<title>fput (2 samples, 0.10%)</title><rect x="279.9" y="627.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="282.9" y="638.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.10%)</title><rect x="281.0" y="723.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="284.0" y="734.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.10%)</title><rect x="281.0" y="707.0" width="1.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="284.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.05%)</title><rect x="282.2" y="771.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="285.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.05%)</title><rect x="282.2" y="755.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="285.2" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.05%)</title><rect x="282.2" y="739.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="285.2" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.05%)</title><rect x="282.2" y="723.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="285.2" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 0.10%)</title><rect x="282.8" y="787.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="285.8" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.10%)</title><rect x="282.8" y="771.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="285.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.10%)</title><rect x="282.8" y="755.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="285.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.10%)</title><rect x="282.8" y="739.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="285.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.10%)</title><rect x="282.8" y="723.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="285.8" y="734.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.05%)</title><rect x="282.8" y="707.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="285.8" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="283.3" y="707.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="286.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.get (94 samples, 4.60%)</title><rect x="283.9" y="787.0" width="54.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="286.9" y="798.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (94 samples, 4.60%)</title><rect x="283.9" y="771.0" width="54.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="286.9" y="782.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (8 samples, 0.39%)</title><rect x="283.9" y="755.0" width="4.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="286.9" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (8 samples, 0.39%)</title><rect x="283.9" y="739.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="286.9" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (8 samples, 0.39%)</title><rect x="283.9" y="723.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="286.9" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (8 samples, 0.39%)</title><rect x="283.9" y="707.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="286.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (8 samples, 0.39%)</title><rect x="283.9" y="691.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="286.9" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.20%)</title><rect x="284.5" y="675.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="287.5" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (4 samples, 0.20%)</title><rect x="284.5" y="659.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="287.5" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (4 samples, 0.20%)</title><rect x="284.5" y="643.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="287.5" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (4 samples, 0.20%)</title><rect x="284.5" y="627.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="287.5" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (4 samples, 0.20%)</title><rect x="284.5" y="611.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="287.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4 samples, 0.20%)</title><rect x="284.5" y="595.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="287.5" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.15%)</title><rect x="284.5" y="579.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="287.5" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (3 samples, 0.15%)</title><rect x="284.5" y="563.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="287.5" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.05%)</title><rect x="284.5" y="547.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="287.5" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.05%)</title><rect x="284.5" y="531.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="287.5" y="542.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (2 samples, 0.10%)</title><rect x="285.1" y="547.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="288.1" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (2 samples, 0.10%)</title><rect x="285.1" y="531.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="288.1" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (2 samples, 0.10%)</title><rect x="285.1" y="515.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="288.1" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (2 samples, 0.10%)</title><rect x="285.1" y="499.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="288.1" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.getAsBoolean (2 samples, 0.10%)</title><rect x="285.1" y="483.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="288.1" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (2 samples, 0.10%)</title><rect x="285.1" y="467.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="288.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (2 samples, 0.10%)</title><rect x="285.1" y="451.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="288.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.05%)</title><rect x="285.1" y="435.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="288.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.05%)</title><rect x="285.1" y="419.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="288.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (1 samples, 0.05%)</title><rect x="285.1" y="403.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="288.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (1 samples, 0.05%)</title><rect x="285.1" y="387.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="288.1" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.05%)</title><rect x="285.6" y="435.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="288.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$62/987822523.apply (1 samples, 0.05%)</title><rect x="285.6" y="419.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="288.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (1 samples, 0.05%)</title><rect x="285.6" y="403.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="288.6" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.05%)</title><rect x="285.6" y="387.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="288.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$95/351241919.apply (1 samples, 0.05%)</title><rect x="286.2" y="579.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="289.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (1 samples, 0.05%)</title><rect x="286.2" y="563.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="289.2" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (1 samples, 0.05%)</title><rect x="286.2" y="547.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="289.2" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.05%)</title><rect x="286.2" y="531.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="289.2" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.05%)</title><rect x="286.2" y="515.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="289.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$115/1349025670.apply (3 samples, 0.15%)</title><rect x="286.8" y="675.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="289.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (3 samples, 0.15%)</title><rect x="286.8" y="659.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="289.8" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (3 samples, 0.15%)</title><rect x="286.8" y="643.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="289.8" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (3 samples, 0.15%)</title><rect x="286.8" y="627.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="289.8" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.05%)</title><rect x="286.8" y="611.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="289.8" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.10%)</title><rect x="287.4" y="611.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="290.4" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.10%)</title><rect x="287.4" y="595.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="290.4" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.10%)</title><rect x="287.4" y="579.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="290.4" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.10%)</title><rect x="287.4" y="563.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="290.4" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.05%)</title><rect x="287.4" y="547.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="290.4" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.05%)</title><rect x="288.0" y="547.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="291.0" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.05%)</title><rect x="288.5" y="755.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="291.5" y="766.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.05%)</title><rect x="288.5" y="739.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="291.5" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.05%)</title><rect x="288.5" y="723.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="291.5" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.05%)</title><rect x="288.5" y="707.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="291.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (85 samples, 4.16%)</title><rect x="289.1" y="755.0" width="49.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="292.1" y="766.0">ru/ma..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.10%)</title><rect x="289.1" y="739.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="292.1" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.10%)</title><rect x="289.1" y="723.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="292.1" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.10%)</title><rect x="289.1" y="707.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="292.1" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="289.7" y="691.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="292.7" y="702.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.05%)</title><rect x="289.7" y="675.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="292.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (4 samples, 0.20%)</title><rect x="290.3" y="739.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="293.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (4 samples, 0.20%)</title><rect x="290.3" y="723.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="293.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (4 samples, 0.20%)</title><rect x="290.3" y="707.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="293.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.10%)</title><rect x="290.3" y="691.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="293.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.fullTryAcquireShared (1 samples, 0.05%)</title><rect x="291.4" y="691.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="294.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.05%)</title><rect x="291.4" y="675.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="294.4" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.05%)</title><rect x="291.4" y="659.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="294.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.05%)</title><rect x="291.4" y="643.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="294.4" y="654.0"></text>
</g>
<g>
<title>java/lang/Class.cast (1 samples, 0.05%)</title><rect x="291.4" y="627.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="294.4" y="638.0"></text>
</g>
<g>
<title>g1_post_barrier_slow (1 samples, 0.05%)</title><rect x="291.4" y="611.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="294.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (1 samples, 0.05%)</title><rect x="292.0" y="691.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="295.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (63 samples, 3.09%)</title><rect x="292.6" y="739.0" width="36.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="295.6" y="750.0">ru/..</text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.10%)</title><rect x="292.6" y="723.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="295.6" y="734.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (1 samples, 0.05%)</title><rect x="293.2" y="707.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="296.2" y="718.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (1 samples, 0.05%)</title><rect x="293.2" y="691.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="296.2" y="702.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.05%)</title><rect x="293.2" y="675.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="296.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (61 samples, 2.99%)</title><rect x="293.7" y="723.0" width="35.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="296.7" y="734.0">ru/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (11 samples, 0.54%)</title><rect x="294.9" y="707.0" width="6.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="297.9" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (11 samples, 0.54%)</title><rect x="294.9" y="691.0" width="6.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="297.9" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1 samples, 0.05%)</title><rect x="296.0" y="675.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="299.0" y="686.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (8 samples, 0.39%)</title><rect x="296.6" y="675.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="299.6" y="686.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (6 samples, 0.29%)</title><rect x="297.8" y="659.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="300.8" y="670.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (6 samples, 0.29%)</title><rect x="297.8" y="643.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="300.8" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2 samples, 0.10%)</title><rect x="297.8" y="627.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="300.8" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (1 samples, 0.05%)</title><rect x="298.9" y="627.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="301.9" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.getAsBoolean (1 samples, 0.05%)</title><rect x="298.9" y="611.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="301.9" y="622.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (1 samples, 0.05%)</title><rect x="298.9" y="595.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="301.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (1 samples, 0.05%)</title><rect x="298.9" y="579.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="301.9" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.05%)</title><rect x="298.9" y="563.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="301.9" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (3 samples, 0.15%)</title><rect x="299.5" y="627.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="302.5" y="638.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (1 samples, 0.05%)</title><rect x="301.2" y="707.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="304.2" y="718.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (1 samples, 0.05%)</title><rect x="301.2" y="691.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="304.2" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (1 samples, 0.05%)</title><rect x="301.2" y="675.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="304.2" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (1 samples, 0.05%)</title><rect x="301.2" y="659.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="304.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.10%)</title><rect x="301.8" y="707.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="304.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.10%)</title><rect x="301.8" y="691.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="304.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (2 samples, 0.10%)</title><rect x="301.8" y="675.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="304.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.10%)</title><rect x="301.8" y="659.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="304.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (5 samples, 0.24%)</title><rect x="303.0" y="707.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="306.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (5 samples, 0.24%)</title><rect x="303.0" y="691.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="306.0" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.24%)</title><rect x="303.0" y="675.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="306.0" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (5 samples, 0.24%)</title><rect x="303.0" y="659.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="306.0" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (4 samples, 0.20%)</title><rect x="303.0" y="643.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="306.0" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (4 samples, 0.20%)</title><rect x="303.0" y="627.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="306.0" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (4 samples, 0.20%)</title><rect x="303.0" y="611.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="306.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4 samples, 0.20%)</title><rect x="303.0" y="595.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="306.0" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.15%)</title><rect x="303.0" y="579.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="306.0" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (1 samples, 0.05%)</title><rect x="303.6" y="563.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="306.6" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.05%)</title><rect x="303.6" y="547.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="306.6" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.05%)</title><rect x="303.6" y="531.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="306.6" y="542.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1 samples, 0.05%)</title><rect x="304.1" y="563.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="307.1" y="574.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1 samples, 0.05%)</title><rect x="304.1" y="547.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="307.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$95/351241919.apply (1 samples, 0.05%)</title><rect x="304.7" y="579.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="307.7" y="590.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1 samples, 0.05%)</title><rect x="305.3" y="643.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="308.3" y="654.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1 samples, 0.05%)</title><rect x="305.3" y="627.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="308.3" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1 samples, 0.05%)</title><rect x="305.3" y="611.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="308.3" y="622.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (1 samples, 0.05%)</title><rect x="305.3" y="595.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="308.3" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.getAsBoolean (1 samples, 0.05%)</title><rect x="305.3" y="579.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="308.3" y="590.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (1 samples, 0.05%)</title><rect x="305.3" y="563.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="308.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (1 samples, 0.05%)</title><rect x="305.3" y="547.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="308.3" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.05%)</title><rect x="305.3" y="531.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="308.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$62/987822523.apply (1 samples, 0.05%)</title><rect x="305.3" y="515.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="308.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (1 samples, 0.05%)</title><rect x="305.3" y="499.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="308.3" y="510.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.05%)</title><rect x="305.3" y="483.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="308.3" y="494.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.05%)</title><rect x="305.3" y="467.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="308.3" y="478.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.05%)</title><rect x="305.3" y="451.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="308.3" y="462.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.05%)</title><rect x="305.3" y="435.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="308.3" y="446.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.05%)</title><rect x="305.3" y="419.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="308.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (40 samples, 1.96%)</title><rect x="305.9" y="707.0" width="23.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="308.9" y="718.0">r..</text>
</g>
<g>
<title>java/util/Collection.stream (39 samples, 1.91%)</title><rect x="305.9" y="691.0" width="22.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="308.9" y="702.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (39 samples, 1.91%)</title><rect x="305.9" y="675.0" width="22.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="308.9" y="686.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (39 samples, 1.91%)</title><rect x="305.9" y="659.0" width="22.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="308.9" y="670.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (39 samples, 1.91%)</title><rect x="305.9" y="643.0" width="22.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="308.9" y="654.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (2 samples, 0.10%)</title><rect x="305.9" y="627.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="308.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (2 samples, 0.10%)</title><rect x="305.9" y="611.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="308.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.10%)</title><rect x="305.9" y="595.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="308.9" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.10%)</title><rect x="305.9" y="579.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="308.9" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.10%)</title><rect x="305.9" y="563.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="308.9" y="574.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.10%)</title><rect x="305.9" y="547.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="308.9" y="558.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.05%)</title><rect x="306.4" y="531.0" width="0.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="309.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (37 samples, 1.81%)</title><rect x="307.0" y="627.0" width="21.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="310.0" y="638.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (37 samples, 1.81%)</title><rect x="307.0" y="611.0" width="21.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="310.0" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.10%)</title><rect x="308.2" y="595.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="311.2" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.10%)</title><rect x="308.2" y="579.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="311.2" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.10%)</title><rect x="308.2" y="563.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="311.2" y="574.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.10%)</title><rect x="308.2" y="547.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="311.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (33 samples, 1.62%)</title><rect x="309.3" y="595.0" width="19.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="312.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (23 samples, 1.13%)</title><rect x="315.1" y="579.0" width="13.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="318.1" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (22 samples, 1.08%)</title><rect x="315.7" y="563.0" width="12.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="318.7" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (14 samples, 0.69%)</title><rect x="320.3" y="547.0" width="8.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="323.3" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.05%)</title><rect x="320.3" y="531.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="323.3" y="542.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.05%)</title><rect x="320.3" y="515.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="323.3" y="526.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (13 samples, 0.64%)</title><rect x="320.9" y="531.0" width="7.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="323.9" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.base (1 samples, 0.05%)</title><rect x="322.0" y="515.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="325.0" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.24%)</title><rect x="322.6" y="515.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="325.6" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (3 samples, 0.15%)</title><rect x="323.8" y="499.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="326.8" y="510.0"></text>
</g>
<g>
<title>vectorizedMismatch (5 samples, 0.24%)</title><rect x="325.5" y="515.0" width="2.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="328.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.05%)</title><rect x="328.4" y="691.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="331.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.05%)</title><rect x="328.4" y="675.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="331.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.05%)</title><rect x="328.4" y="659.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="331.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.&lt;init&gt; (1 samples, 0.05%)</title><rect x="328.4" y="643.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="331.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (1 samples, 0.05%)</title><rect x="328.4" y="627.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="331.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (16 samples, 0.78%)</title><rect x="329.0" y="739.0" width="9.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="332.0" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (10 samples, 0.49%)</title><rect x="329.0" y="723.0" width="5.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="332.0" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (10 samples, 0.49%)</title><rect x="329.0" y="707.0" width="5.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="332.0" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (10 samples, 0.49%)</title><rect x="329.0" y="691.0" width="5.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="332.0" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (10 samples, 0.49%)</title><rect x="329.0" y="675.0" width="5.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="332.0" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (10 samples, 0.49%)</title><rect x="329.0" y="659.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="332.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (10 samples, 0.49%)</title><rect x="329.0" y="643.0" width="5.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="332.0" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.10%)</title><rect x="329.0" y="627.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="332.0" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (2 samples, 0.10%)</title><rect x="329.0" y="611.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="332.0" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.05%)</title><rect x="329.0" y="595.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="332.0" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.05%)</title><rect x="329.0" y="579.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="332.0" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1 samples, 0.05%)</title><rect x="329.0" y="563.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="332.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.05%)</title><rect x="329.0" y="547.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="332.0" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.05%)</title><rect x="329.0" y="531.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="332.0" y="542.0"></text>
</g>
<g>
<title>java/util/AbstractMap$SimpleImmutableEntry.&lt;init&gt; (1 samples, 0.05%)</title><rect x="329.0" y="515.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="332.0" y="526.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1 samples, 0.05%)</title><rect x="329.6" y="595.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="332.6" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1 samples, 0.05%)</title><rect x="329.6" y="579.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="332.6" y="590.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1 samples, 0.05%)</title><rect x="329.6" y="563.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="332.6" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (1 samples, 0.05%)</title><rect x="329.6" y="547.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="332.6" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.getAsBoolean (1 samples, 0.05%)</title><rect x="329.6" y="531.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="332.6" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (1 samples, 0.05%)</title><rect x="329.6" y="515.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="332.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (1 samples, 0.05%)</title><rect x="329.6" y="499.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="332.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.05%)</title><rect x="329.6" y="483.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="332.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.05%)</title><rect x="329.6" y="467.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="332.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (1 samples, 0.05%)</title><rect x="329.6" y="451.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="332.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (1 samples, 0.05%)</title><rect x="329.6" y="435.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="332.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$115/1349025670.apply (3 samples, 0.15%)</title><rect x="330.1" y="627.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="333.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (3 samples, 0.15%)</title><rect x="330.1" y="611.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="333.1" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (3 samples, 0.15%)</title><rect x="330.1" y="595.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="333.1" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (3 samples, 0.15%)</title><rect x="330.1" y="579.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="333.1" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (3 samples, 0.15%)</title><rect x="330.1" y="563.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="333.1" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (1 samples, 0.05%)</title><rect x="330.1" y="547.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="333.1" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.10%)</title><rect x="330.7" y="547.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="333.7" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.10%)</title><rect x="330.7" y="531.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="333.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$95/351241919.apply (5 samples, 0.24%)</title><rect x="331.9" y="627.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="334.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (5 samples, 0.24%)</title><rect x="331.9" y="611.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="334.9" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (5 samples, 0.24%)</title><rect x="331.9" y="595.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="334.9" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (5 samples, 0.24%)</title><rect x="331.9" y="579.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="334.9" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (5 samples, 0.24%)</title><rect x="331.9" y="563.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="334.9" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.24%)</title><rect x="331.9" y="547.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="334.9" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.24%)</title><rect x="331.9" y="531.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="334.9" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.24%)</title><rect x="331.9" y="515.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="334.9" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.10%)</title><rect x="331.9" y="499.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="334.9" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.05%)</title><rect x="333.0" y="499.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="336.0" y="510.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.10%)</title><rect x="333.6" y="499.0" width="1.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="336.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (6 samples, 0.29%)</title><rect x="334.8" y="723.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="337.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (6 samples, 0.29%)</title><rect x="334.8" y="707.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="337.8" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.29%)</title><rect x="334.8" y="691.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="337.8" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (5 samples, 0.24%)</title><rect x="334.8" y="675.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="337.8" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (5 samples, 0.24%)</title><rect x="334.8" y="659.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="337.8" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (5 samples, 0.24%)</title><rect x="334.8" y="643.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="337.8" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (5 samples, 0.24%)</title><rect x="334.8" y="627.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="337.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (5 samples, 0.24%)</title><rect x="334.8" y="611.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="337.8" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.20%)</title><rect x="334.8" y="595.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="337.8" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (4 samples, 0.20%)</title><rect x="334.8" y="579.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="337.8" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (3 samples, 0.15%)</title><rect x="334.8" y="563.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="337.8" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (2 samples, 0.10%)</title><rect x="335.3" y="547.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="338.3" y="558.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1 samples, 0.05%)</title><rect x="336.5" y="563.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="339.5" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.05%)</title><rect x="337.1" y="595.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="340.1" y="606.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.05%)</title><rect x="337.1" y="579.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="340.1" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.05%)</title><rect x="337.6" y="675.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="340.6" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (1 samples, 0.05%)</title><rect x="337.6" y="659.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="340.6" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.05%)</title><rect x="337.6" y="643.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="340.6" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.05%)</title><rect x="337.6" y="627.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="340.6" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1 samples, 0.05%)</title><rect x="337.6" y="611.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="340.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.05%)</title><rect x="337.6" y="595.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="340.6" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.05%)</title><rect x="337.6" y="579.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="340.6" y="590.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1 samples, 0.05%)</title><rect x="337.6" y="563.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="340.6" y="574.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1 samples, 0.05%)</title><rect x="337.6" y="547.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="340.6" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1 samples, 0.05%)</title><rect x="337.6" y="531.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="340.6" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1 samples, 0.05%)</title><rect x="337.6" y="515.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="340.6" y="526.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.05%)</title><rect x="338.2" y="803.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="341.2" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.05%)</title><rect x="338.2" y="787.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="341.2" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.05%)</title><rect x="338.2" y="771.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="341.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (6 samples, 0.29%)</title><rect x="338.8" y="803.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="341.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.29%)</title><rect x="338.8" y="787.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="341.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsBeginEnd (1 samples, 0.05%)</title><rect x="338.8" y="771.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="341.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.05%)</title><rect x="339.4" y="771.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="342.4" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.20%)</title><rect x="340.0" y="771.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="343.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.10%)</title><rect x="340.0" y="755.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="343.0" y="766.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.10%)</title><rect x="340.0" y="739.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="343.0" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.10%)</title><rect x="341.1" y="755.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="344.1" y="766.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.05%)</title><rect x="341.7" y="739.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="344.7" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.29%)</title><rect x="342.3" y="835.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="345.3" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.10%)</title><rect x="342.9" y="819.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="345.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.10%)</title><rect x="342.9" y="803.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="345.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.10%)</title><rect x="342.9" y="787.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="345.9" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.10%)</title><rect x="342.9" y="771.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="345.9" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.05%)</title><rect x="344.0" y="819.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="347.0" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.05%)</title><rect x="344.0" y="803.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="347.0" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.10%)</title><rect x="344.6" y="819.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="347.6" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.05%)</title><rect x="345.2" y="803.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="348.2" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.05%)</title><rect x="345.7" y="835.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="348.7" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.10%)</title><rect x="346.3" y="835.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="349.3" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeaderCount (1 samples, 0.05%)</title><rect x="347.5" y="835.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="350.5" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.20%)</title><rect x="348.1" y="835.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="351.1" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.20%)</title><rect x="348.1" y="819.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="351.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.05%)</title><rect x="349.8" y="803.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="352.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.05%)</title><rect x="349.8" y="787.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="352.8" y="798.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.05%)</title><rect x="349.8" y="771.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="352.8" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (47 samples, 2.30%)</title><rect x="350.4" y="851.0" width="27.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="353.4" y="862.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (47 samples, 2.30%)</title><rect x="350.4" y="835.0" width="27.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="353.4" y="846.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (7 samples, 0.34%)</title><rect x="352.7" y="819.0" width="4.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="355.7" y="830.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned (2 samples, 0.10%)</title><rect x="353.3" y="803.0" width="1.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="356.3" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.15%)</title><rect x="354.4" y="803.0" width="1.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="357.4" y="814.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.05%)</title><rect x="354.4" y="787.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="357.4" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (2 samples, 0.10%)</title><rect x="355.0" y="787.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="358.0" y="798.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.05%)</title><rect x="356.1" y="803.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="359.1" y="814.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.05%)</title><rect x="356.7" y="819.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="359.7" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.05%)</title><rect x="357.3" y="819.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="360.3" y="830.0"></text>
</g>
<g>
<title>recv (34 samples, 1.67%)</title><rect x="357.9" y="819.0" width="19.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="360.9" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 1.32%)</title><rect x="361.9" y="803.0" width="15.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="364.9" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (27 samples, 1.32%)</title><rect x="361.9" y="787.0" width="15.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="364.9" y="798.0"></text>
</g>
<g>
<title>sys_recvfrom (24 samples, 1.18%)</title><rect x="363.7" y="771.0" width="13.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="366.7" y="782.0"></text>
</g>
<g>
<title>SYSC_recvfrom (23 samples, 1.13%)</title><rect x="363.7" y="755.0" width="13.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="366.7" y="766.0"></text>
</g>
<g>
<title>sock_recvmsg (15 samples, 0.73%)</title><rect x="364.2" y="739.0" width="8.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="367.2" y="750.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.05%)</title><rect x="364.2" y="723.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="367.2" y="734.0"></text>
</g>
<g>
<title>inet_recvmsg (10 samples, 0.49%)</title><rect x="364.8" y="723.0" width="5.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="367.8" y="734.0"></text>
</g>
<g>
<title>tcp_recvmsg (10 samples, 0.49%)</title><rect x="364.8" y="707.0" width="5.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="367.8" y="718.0"></text>
</g>
<g>
<title>__indirect_thunk_start (1 samples, 0.05%)</title><rect x="367.1" y="691.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="370.1" y="702.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.05%)</title><rect x="367.7" y="691.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="370.7" y="702.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.05%)</title><rect x="367.7" y="675.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="370.7" y="686.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.05%)</title><rect x="367.7" y="659.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="370.7" y="670.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.05%)</title><rect x="368.3" y="691.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="371.3" y="702.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.05%)</title><rect x="368.9" y="691.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="371.9" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.10%)</title><rect x="369.4" y="691.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="372.4" y="702.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.05%)</title><rect x="370.0" y="675.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="373.0" y="686.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.05%)</title><rect x="370.0" y="659.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="373.0" y="670.0"></text>
</g>
<g>
<title>security_socket_recvmsg (3 samples, 0.15%)</title><rect x="370.6" y="723.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="373.6" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.10%)</title><rect x="371.2" y="707.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="374.2" y="718.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.10%)</title><rect x="371.2" y="691.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="374.2" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.10%)</title><rect x="371.2" y="675.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="374.2" y="686.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.05%)</title><rect x="372.3" y="723.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="375.3" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (7 samples, 0.34%)</title><rect x="372.9" y="739.0" width="4.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="375.9" y="750.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.20%)</title><rect x="372.9" y="723.0" width="2.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="375.9" y="734.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.20%)</title><rect x="372.9" y="707.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="375.9" y="718.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.20%)</title><rect x="372.9" y="691.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="375.9" y="702.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.15%)</title><rect x="375.2" y="723.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="378.2" y="734.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.05%)</title><rect x="376.9" y="755.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="379.9" y="766.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=16338] (477 samples, 23.36%)</title><rect x="377.5" y="915.0" width="275.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="380.5" y="926.0">[NIO Selector #1 tid=16338]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (477 samples, 23.36%)</title><rect x="377.5" y="899.0" width="275.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="380.5" y="910.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (6 samples, 0.29%)</title><rect x="378.7" y="883.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="381.7" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (6 samples, 0.29%)</title><rect x="378.7" y="867.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="381.7" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (65 samples, 3.18%)</title><rect x="382.1" y="883.0" width="37.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="385.1" y="894.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (2 samples, 0.10%)</title><rect x="382.7" y="867.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="385.7" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (62 samples, 3.04%)</title><rect x="383.9" y="867.0" width="35.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="386.9" y="878.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (5 samples, 0.24%)</title><rect x="388.5" y="851.0" width="2.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="391.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="391.4" y="851.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="394.4" y="862.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.05%)</title><rect x="391.4" y="835.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="394.4" y="846.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.10%)</title><rect x="392.0" y="851.0" width="1.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="395.0" y="862.0"></text>
</g>
<g>
<title>clock_gettime@plt (1 samples, 0.05%)</title><rect x="393.1" y="851.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="396.1" y="862.0"></text>
</g>
<g>
<title>epoll_wait (42 samples, 2.06%)</title><rect x="393.7" y="851.0" width="24.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="396.7" y="862.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (33 samples, 1.62%)</title><rect x="398.9" y="835.0" width="19.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="401.9" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (32 samples, 1.57%)</title><rect x="398.9" y="819.0" width="18.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="401.9" y="830.0"></text>
</g>
<g>
<title>sys_epoll_wait (31 samples, 1.52%)</title><rect x="399.5" y="803.0" width="17.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="402.5" y="814.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.15%)</title><rect x="399.5" y="787.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="402.5" y="798.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.15%)</title><rect x="399.5" y="771.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="402.5" y="782.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.15%)</title><rect x="399.5" y="755.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="402.5" y="766.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.05%)</title><rect x="401.2" y="787.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="404.2" y="798.0"></text>
</g>
<g>
<title>ep_poll (27 samples, 1.32%)</title><rect x="401.8" y="787.0" width="15.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="404.8" y="798.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.24%)</title><rect x="402.4" y="771.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="405.4" y="782.0"></text>
</g>
<g>
<title>ep_scan_ready_list (10 samples, 0.49%)</title><rect x="405.3" y="771.0" width="5.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="408.3" y="782.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.10%)</title><rect x="405.3" y="755.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="408.3" y="766.0"></text>
</g>
<g>
<title>ep_send_events_proc (7 samples, 0.34%)</title><rect x="406.4" y="755.0" width="4.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="409.4" y="766.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (3 samples, 0.15%)</title><rect x="408.7" y="739.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="411.7" y="750.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.10%)</title><rect x="409.3" y="723.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="412.3" y="734.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.10%)</title><rect x="409.3" y="707.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="412.3" y="718.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.05%)</title><rect x="410.5" y="755.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="413.5" y="766.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.05%)</title><rect x="410.5" y="739.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="413.5" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.05%)</title><rect x="411.0" y="771.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="414.0" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (10 samples, 0.49%)</title><rect x="411.6" y="771.0" width="5.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="414.6" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (10 samples, 0.49%)</title><rect x="411.6" y="755.0" width="5.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="414.6" y="766.0"></text>
</g>
<g>
<title>schedule (9 samples, 0.44%)</title><rect x="412.2" y="739.0" width="5.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="415.2" y="750.0"></text>
</g>
<g>
<title>__schedule (9 samples, 0.44%)</title><rect x="412.2" y="723.0" width="5.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="415.2" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (9 samples, 0.44%)</title><rect x="412.2" y="707.0" width="5.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="415.2" y="718.0"></text>
</g>
<g>
<title>sys_epoll_wait (1 samples, 0.05%)</title><rect x="417.4" y="819.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="420.4" y="830.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.10%)</title><rect x="418.0" y="851.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="421.0" y="862.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.10%)</title><rect x="418.0" y="835.0" width="1.1" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="421.0" y="846.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.10%)</title><rect x="418.0" y="819.0" width="1.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="421.0" y="830.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="418.6" y="803.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="421.6" y="814.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.05%)</title><rect x="419.1" y="851.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="422.1" y="862.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="419.1" y="835.0" width="0.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="422.1" y="846.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.05%)</title><rect x="419.1" y="819.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="422.1" y="830.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.05%)</title><rect x="419.1" y="803.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="422.1" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (404 samples, 19.78%)</title><rect x="419.7" y="883.0" width="233.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="422.7" y="894.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (403 samples, 19.74%)</title><rect x="420.3" y="867.0" width="232.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="423.3" y="878.0">one/nio/http/HttpSession.proces..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleSocketClosed (1 samples, 0.05%)</title><rect x="420.3" y="851.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="423.3" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.scheduleClose (1 samples, 0.05%)</title><rect x="420.3" y="835.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="423.3" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.close (1 samples, 0.05%)</title><rect x="420.3" y="819.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="423.3" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.close (1 samples, 0.05%)</title><rect x="420.3" y="803.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="423.3" y="814.0"></text>
</g>
<g>
<title>__GI___close (1 samples, 0.05%)</title><rect x="420.3" y="787.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="423.3" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="420.3" y="771.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="423.3" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="420.3" y="755.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="423.3" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="420.3" y="739.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="423.3" y="750.0"></text>
</g>
<g>
<title>task_work_run (1 samples, 0.05%)</title><rect x="420.3" y="723.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="423.3" y="734.0"></text>
</g>
<g>
<title>____fput (1 samples, 0.05%)</title><rect x="420.3" y="707.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="423.3" y="718.0"></text>
</g>
<g>
<title>__fput (1 samples, 0.05%)</title><rect x="420.3" y="691.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="423.3" y="702.0"></text>
</g>
<g>
<title>dput (1 samples, 0.05%)</title><rect x="420.3" y="675.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="423.3" y="686.0"></text>
</g>
<g>
<title>_raw_spin_trylock (1 samples, 0.05%)</title><rect x="420.3" y="659.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="423.3" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (355 samples, 17.38%)</title><rect x="420.9" y="851.0" width="205.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="423.9" y="862.0">one/nio/http/HttpSession.pr..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (331 samples, 16.21%)</title><rect x="422.0" y="835.0" width="191.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="425.0" y="846.0">one/nio/http/HttpSession...</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (331 samples, 16.21%)</title><rect x="422.0" y="819.0" width="191.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="425.0" y="830.0">one/nio/http/HttpServer.h..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (327 samples, 16.01%)</title><rect x="422.6" y="803.0" width="189.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="425.6" y="814.0">RequestHandler0_get.hand..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (228 samples, 11.17%)</title><rect x="422.6" y="787.0" width="131.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="425.6" y="798.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (225 samples, 11.02%)</title><rect x="422.6" y="771.0" width="130.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="425.6" y="782.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.24%)</title><rect x="422.6" y="755.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="425.6" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.15%)</title><rect x="423.8" y="739.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="426.8" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.10%)</title><rect x="423.8" y="723.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="426.8" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.05%)</title><rect x="423.8" y="707.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="426.8" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.05%)</title><rect x="423.8" y="691.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="426.8" y="702.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.05%)</title><rect x="424.3" y="707.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="427.3" y="718.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.05%)</title><rect x="424.3" y="691.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="427.3" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.05%)</title><rect x="424.9" y="723.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="427.9" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.05%)</title><rect x="424.9" y="707.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="427.9" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.05%)</title><rect x="424.9" y="691.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="427.9" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (220 samples, 10.77%)</title><rect x="425.5" y="755.0" width="127.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="428.5" y="766.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/net/Session.write (220 samples, 10.77%)</title><rect x="425.5" y="739.0" width="127.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="428.5" y="750.0">one/nio/net/Sess..</text>
</g>
<g>
<title>gettimeofday@plt (1 samples, 0.05%)</title><rect x="425.5" y="723.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="428.5" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (219 samples, 10.72%)</title><rect x="426.1" y="723.0" width="126.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="429.1" y="734.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (219 samples, 10.72%)</title><rect x="426.1" y="707.0" width="126.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="429.1" y="718.0">one/nio/net/Nati..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.20%)</title><rect x="426.6" y="691.0" width="2.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="429.6" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.10%)</title><rect x="427.8" y="675.0" width="1.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="430.8" y="686.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.05%)</title><rect x="427.8" y="659.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="430.8" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.05%)</title><rect x="428.4" y="659.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="431.4" y="670.0"></text>
</g>
<g>
<title>send (214 samples, 10.48%)</title><rect x="429.0" y="691.0" width="123.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="432.0" y="702.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (206 samples, 10.09%)</title><rect x="433.6" y="675.0" width="119.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="436.6" y="686.0">entry_SYSCALL_6..</text>
</g>
<g>
<title>do_syscall_64 (206 samples, 10.09%)</title><rect x="433.6" y="659.0" width="119.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="436.6" y="670.0">do_syscall_64</text>
</g>
<g>
<title>sys_sendto (204 samples, 9.99%)</title><rect x="434.7" y="643.0" width="117.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="437.7" y="654.0">sys_sendto</text>
</g>
<g>
<title>SYSC_sendto (203 samples, 9.94%)</title><rect x="434.7" y="627.0" width="117.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="437.7" y="638.0">SYSC_sendto</text>
</g>
<g>
<title>sock_sendmsg (202 samples, 9.89%)</title><rect x="434.7" y="611.0" width="116.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="437.7" y="622.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (201 samples, 9.84%)</title><rect x="434.7" y="595.0" width="116.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="437.7" y="606.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (200 samples, 9.79%)</title><rect x="435.3" y="579.0" width="115.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="438.3" y="590.0">tcp_sendmsg</text>
</g>
<g>
<title>release_sock (1 samples, 0.05%)</title><rect x="435.9" y="563.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="438.9" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.05%)</title><rect x="435.9" y="547.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="438.9" y="558.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.05%)</title><rect x="435.9" y="531.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="438.9" y="542.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.10%)</title><rect x="436.5" y="563.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="439.5" y="574.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.05%)</title><rect x="437.6" y="563.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="440.6" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (195 samples, 9.55%)</title><rect x="438.2" y="563.0" width="112.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="441.2" y="574.0">tcp_sendmsg_lo..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.05%)</title><rect x="439.9" y="547.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="442.9" y="558.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.05%)</title><rect x="439.9" y="531.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="442.9" y="542.0"></text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.10%)</title><rect x="440.5" y="547.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="443.5" y="558.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.10%)</title><rect x="440.5" y="531.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="443.5" y="542.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.05%)</title><rect x="441.7" y="547.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="444.7" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (7 samples, 0.34%)</title><rect x="442.2" y="547.0" width="4.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="445.2" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (7 samples, 0.34%)</title><rect x="442.2" y="531.0" width="4.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="445.2" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (3 samples, 0.15%)</title><rect x="444.0" y="515.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="447.0" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.05%)</title><rect x="444.0" y="499.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="447.0" y="510.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.05%)</title><rect x="444.6" y="499.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="447.6" y="510.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.05%)</title><rect x="445.1" y="499.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="448.1" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.05%)</title><rect x="445.7" y="515.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="448.7" y="526.0"></text>
</g>
<g>
<title>tcp_push (177 samples, 8.67%)</title><rect x="446.3" y="547.0" width="102.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="449.3" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (177 samples, 8.67%)</title><rect x="446.3" y="531.0" width="102.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="449.3" y="542.0">__tcp_push_p..</text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.05%)</title><rect x="446.3" y="515.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="449.3" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (176 samples, 8.62%)</title><rect x="446.9" y="515.0" width="101.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="449.9" y="526.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (164 samples, 8.03%)</title><rect x="448.0" y="499.0" width="94.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="451.0" y="510.0">__tcp_trans..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.05%)</title><rect x="449.2" y="483.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="452.2" y="494.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.05%)</title><rect x="449.8" y="483.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="452.8" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (156 samples, 7.64%)</title><rect x="450.3" y="483.0" width="90.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="453.3" y="494.0">ip_queue_x..</text>
</g>
<g>
<title>ip_local_out (155 samples, 7.59%)</title><rect x="450.9" y="467.0" width="89.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="453.9" y="478.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (32 samples, 1.57%)</title><rect x="451.5" y="451.0" width="18.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="454.5" y="462.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.05%)</title><rect x="451.5" y="435.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="454.5" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (2 samples, 0.10%)</title><rect x="452.1" y="435.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="455.1" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (1 samples, 0.05%)</title><rect x="453.2" y="435.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="456.2" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (28 samples, 1.37%)</title><rect x="453.8" y="435.0" width="16.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="456.8" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.10%)</title><rect x="453.8" y="419.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="456.8" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.10%)</title><rect x="453.8" y="403.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="456.8" y="414.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (2 samples, 0.10%)</title><rect x="455.0" y="419.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="458.0" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.10%)</title><rect x="455.0" y="403.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="458.0" y="414.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn?[iptable_nat] (2 samples, 0.10%)</title><rect x="456.1" y="419.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="459.1" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (1 samples, 0.05%)</title><rect x="456.1" y="403.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="459.1" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (1 samples, 0.05%)</title><rect x="456.7" y="403.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="459.7" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (1 samples, 0.05%)</title><rect x="456.7" y="387.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="459.7" y="398.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (1 samples, 0.05%)</title><rect x="456.7" y="371.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="459.7" y="382.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (22 samples, 1.08%)</title><rect x="457.3" y="419.0" width="12.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="460.3" y="430.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (1 samples, 0.05%)</title><rect x="457.3" y="403.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="460.3" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (17 samples, 0.83%)</title><rect x="457.8" y="403.0" width="9.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="460.8" y="414.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (3 samples, 0.15%)</title><rect x="460.2" y="387.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="463.2" y="398.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (2 samples, 0.10%)</title><rect x="461.9" y="387.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="464.9" y="398.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (1 samples, 0.05%)</title><rect x="463.0" y="387.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="466.0" y="398.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (2 samples, 0.10%)</title><rect x="463.6" y="387.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="466.6" y="398.0"></text>
</g>
<g>
<title>tcp_error?[nf_conntrack] (1 samples, 0.05%)</title><rect x="464.8" y="387.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="467.8" y="398.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (1 samples, 0.05%)</title><rect x="465.4" y="387.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="468.4" y="398.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (3 samples, 0.15%)</title><rect x="465.9" y="387.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="468.9" y="398.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (2 samples, 0.10%)</title><rect x="466.5" y="371.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="469.5" y="382.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (1 samples, 0.05%)</title><rect x="467.1" y="355.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="470.1" y="366.0"></text>
</g>
<g>
<title>tcp_error?[nf_conntrack] (3 samples, 0.15%)</title><rect x="467.7" y="403.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="470.7" y="414.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (1 samples, 0.05%)</title><rect x="469.4" y="403.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="472.4" y="414.0"></text>
</g>
<g>
<title>ip_output (122 samples, 5.97%)</title><rect x="470.0" y="451.0" width="70.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="473.0" y="462.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (119 samples, 5.83%)</title><rect x="470.0" y="435.0" width="68.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="473.0" y="446.0">ip_fini..</text>
</g>
<g>
<title>ip_finish_output2 (116 samples, 5.68%)</title><rect x="471.1" y="419.0" width="67.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="474.1" y="430.0">ip_fini..</text>
</g>
<g>
<title>__local_bh_enable_ip (90 samples, 4.41%)</title><rect x="475.2" y="403.0" width="52.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="478.2" y="414.0">__loc..</text>
</g>
<g>
<title>do_softirq.part.17 (89 samples, 4.36%)</title><rect x="475.8" y="387.0" width="51.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="478.8" y="398.0">do_so..</text>
</g>
<g>
<title>do_softirq_own_stack (88 samples, 4.31%)</title><rect x="475.8" y="371.0" width="50.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="478.8" y="382.0">do_so..</text>
</g>
<g>
<title>__indirect_thunk_start (1 samples, 0.05%)</title><rect x="475.8" y="355.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="478.8" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (86 samples, 4.21%)</title><rect x="476.3" y="355.0" width="49.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="479.3" y="366.0">__sof..</text>
</g>
<g>
<title>net_rx_action (84 samples, 4.11%)</title><rect x="476.9" y="339.0" width="48.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="479.9" y="350.0">net_..</text>
</g>
<g>
<title>process_backlog (82 samples, 4.02%)</title><rect x="478.1" y="323.0" width="47.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="481.1" y="334.0">proc..</text>
</g>
<g>
<title>__netif_receive_skb (81 samples, 3.97%)</title><rect x="478.6" y="307.0" width="46.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="481.6" y="318.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_core (81 samples, 3.97%)</title><rect x="478.6" y="291.0" width="46.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="481.6" y="302.0">__ne..</text>
</g>
<g>
<title>ip_rcv (79 samples, 3.87%)</title><rect x="479.2" y="275.0" width="45.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="482.2" y="286.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (74 samples, 3.62%)</title><rect x="479.2" y="259.0" width="42.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="482.2" y="270.0">ip_r..</text>
</g>
<g>
<title>ip_local_deliver (73 samples, 3.57%)</title><rect x="479.2" y="243.0" width="42.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="482.2" y="254.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (68 samples, 3.33%)</title><rect x="480.4" y="227.0" width="39.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="483.4" y="238.0">ip_..</text>
</g>
<g>
<title>tcp_v4_rcv (68 samples, 3.33%)</title><rect x="480.4" y="211.0" width="39.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="483.4" y="222.0">tcp..</text>
</g>
<g>
<title>__inet_lookup_established (6 samples, 0.29%)</title><rect x="481.5" y="195.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="484.5" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.15%)</title><rect x="485.0" y="195.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="488.0" y="206.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.05%)</title><rect x="486.2" y="179.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="489.2" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (57 samples, 2.79%)</title><rect x="486.7" y="195.0" width="33.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="489.7" y="206.0">tc..</text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.05%)</title><rect x="487.3" y="179.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="490.3" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (54 samples, 2.64%)</title><rect x="487.9" y="179.0" width="31.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="490.9" y="190.0">tc..</text>
</g>
<g>
<title>sched_clock_cpu (1 samples, 0.05%)</title><rect x="490.2" y="163.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="493.2" y="174.0"></text>
</g>
<g>
<title>native_sched_clock (1 samples, 0.05%)</title><rect x="490.2" y="147.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="493.2" y="158.0"></text>
</g>
<g>
<title>tcp_ack (17 samples, 0.83%)</title><rect x="490.8" y="163.0" width="9.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="493.8" y="174.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (13 samples, 0.64%)</title><rect x="493.1" y="147.0" width="7.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="496.1" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (7 samples, 0.34%)</title><rect x="495.4" y="131.0" width="4.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="498.4" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.15%)</title><rect x="495.4" y="115.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="498.4" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.10%)</title><rect x="496.0" y="99.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="499.0" y="110.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.10%)</title><rect x="496.0" y="83.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="499.0" y="94.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.20%)</title><rect x="497.1" y="115.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="500.1" y="126.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.20%)</title><rect x="497.1" y="99.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="500.1" y="110.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.10%)</title><rect x="498.3" y="83.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="501.3" y="94.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.05%)</title><rect x="498.3" y="67.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="501.3" y="78.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.05%)</title><rect x="498.9" y="67.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="501.9" y="78.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.05%)</title><rect x="499.5" y="131.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="502.5" y="142.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.05%)</title><rect x="500.0" y="131.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="503.0" y="142.0"></text>
</g>
<g>
<title>tcp_data_queue (32 samples, 1.57%)</title><rect x="500.6" y="163.0" width="18.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="503.6" y="174.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.05%)</title><rect x="501.8" y="147.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="504.8" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (28 samples, 1.37%)</title><rect x="502.3" y="147.0" width="16.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="505.3" y="158.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.05%)</title><rect x="503.5" y="131.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="506.5" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (25 samples, 1.22%)</title><rect x="504.1" y="131.0" width="14.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="507.1" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (25 samples, 1.22%)</title><rect x="504.1" y="115.0" width="14.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="507.1" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (25 samples, 1.22%)</title><rect x="504.1" y="99.0" width="14.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="507.1" y="110.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.05%)</title><rect x="518.5" y="147.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="521.5" y="158.0"></text>
</g>
<g>
<title>tcp_urg (1 samples, 0.05%)</title><rect x="519.1" y="179.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="522.1" y="190.0"></text>
</g>
<g>
<title>ipv4_helper?[nf_conntrack_ipv4] (2 samples, 0.10%)</title><rect x="519.7" y="227.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="522.7" y="238.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.05%)</title><rect x="520.8" y="227.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="523.8" y="238.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.05%)</title><rect x="520.8" y="211.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="523.8" y="222.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.05%)</title><rect x="520.8" y="195.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="523.8" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.05%)</title><rect x="521.4" y="243.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="524.4" y="254.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (1 samples, 0.05%)</title><rect x="522.0" y="259.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="525.0" y="270.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (1 samples, 0.05%)</title><rect x="522.6" y="259.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="525.6" y="270.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.15%)</title><rect x="523.1" y="259.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="526.1" y="270.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (1 samples, 0.05%)</title><rect x="524.3" y="243.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="527.3" y="254.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.05%)</title><rect x="524.3" y="227.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="527.3" y="238.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.05%)</title><rect x="524.9" y="275.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="527.9" y="286.0"></text>
</g>
<g>
<title>rcu_bh_qs (1 samples, 0.05%)</title><rect x="525.5" y="339.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="528.5" y="350.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.05%)</title><rect x="526.0" y="355.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="529.0" y="366.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.05%)</title><rect x="526.6" y="371.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="529.6" y="382.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.05%)</title><rect x="526.6" y="355.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="529.6" y="366.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.05%)</title><rect x="526.6" y="339.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="529.6" y="350.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.05%)</title><rect x="526.6" y="323.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="529.6" y="334.0"></text>
</g>
<g>
<title>dev_queue_xmit (19 samples, 0.93%)</title><rect x="527.2" y="403.0" width="11.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="530.2" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (18 samples, 0.88%)</title><rect x="527.2" y="387.0" width="10.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="530.2" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.05%)</title><rect x="527.8" y="371.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="530.8" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (8 samples, 0.39%)</title><rect x="528.3" y="371.0" width="4.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="531.3" y="382.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.10%)</title><rect x="528.9" y="355.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="531.9" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.20%)</title><rect x="530.1" y="355.0" width="2.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="533.1" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.10%)</title><rect x="530.7" y="339.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="533.7" y="350.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.05%)</title><rect x="531.8" y="339.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="534.8" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.05%)</title><rect x="531.8" y="323.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="534.8" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.05%)</title><rect x="531.8" y="307.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="534.8" y="318.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.05%)</title><rect x="532.4" y="355.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="535.4" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.10%)</title><rect x="533.0" y="371.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="536.0" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (6 samples, 0.29%)</title><rect x="534.1" y="371.0" width="3.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="537.1" y="382.0"></text>
</g>
<g>
<title>netif_skb_features (3 samples, 0.15%)</title><rect x="535.9" y="355.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="538.9" y="366.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.05%)</title><rect x="537.6" y="387.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="540.6" y="398.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.05%)</title><rect x="538.2" y="419.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="541.2" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.15%)</title><rect x="538.7" y="435.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="541.7" y="446.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack_ipv4] (2 samples, 0.10%)</title><rect x="538.7" y="419.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="541.7" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat_ipv4] (1 samples, 0.05%)</title><rect x="539.9" y="419.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="542.9" y="430.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.10%)</title><rect x="540.5" y="483.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="543.5" y="494.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.10%)</title><rect x="540.5" y="467.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="543.5" y="478.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.05%)</title><rect x="541.1" y="451.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="544.1" y="462.0"></text>
</g>
<g>
<title>tcp_established_options (2 samples, 0.10%)</title><rect x="541.6" y="483.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="544.6" y="494.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (1 samples, 0.05%)</title><rect x="542.2" y="467.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="545.2" y="478.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.05%)</title><rect x="542.8" y="499.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="545.8" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (5 samples, 0.24%)</title><rect x="543.4" y="499.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="546.4" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (5 samples, 0.24%)</title><rect x="543.4" y="483.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="546.4" y="494.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (5 samples, 0.24%)</title><rect x="543.4" y="467.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="546.4" y="478.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.05%)</title><rect x="543.4" y="451.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="546.4" y="462.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.20%)</title><rect x="543.9" y="451.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="546.9" y="462.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.20%)</title><rect x="543.9" y="435.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="546.9" y="446.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.15%)</title><rect x="544.5" y="419.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="547.5" y="430.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.05%)</title><rect x="546.3" y="499.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="549.3" y="510.0"></text>
</g>
<g>
<title>tcp_tso_segs (2 samples, 0.10%)</title><rect x="546.8" y="499.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="549.8" y="510.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.05%)</title><rect x="548.0" y="499.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="551.0" y="510.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.20%)</title><rect x="548.6" y="547.0" width="2.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="551.6" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.20%)</title><rect x="548.6" y="531.0" width="2.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="551.6" y="542.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.05%)</title><rect x="549.1" y="515.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="552.1" y="526.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (1 samples, 0.05%)</title><rect x="549.1" y="499.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="552.1" y="510.0"></text>
</g>
<g>
<title>tcp_v4_md5_lookup (2 samples, 0.10%)</title><rect x="549.7" y="515.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="552.7" y="526.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.05%)</title><rect x="550.9" y="595.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="553.9" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.05%)</title><rect x="550.9" y="579.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="553.9" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.05%)</title><rect x="550.9" y="563.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="553.9" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.05%)</title><rect x="550.9" y="547.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="553.9" y="558.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.05%)</title><rect x="551.5" y="611.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="554.5" y="622.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="551.5" y="595.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="554.5" y="606.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.05%)</title><rect x="552.0" y="627.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="555.0" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.15%)</title><rect x="552.6" y="771.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="555.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.15%)</title><rect x="552.6" y="755.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="555.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.15%)</title><rect x="552.6" y="739.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="555.6" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.10%)</title><rect x="553.2" y="723.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="556.2" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (4 samples, 0.20%)</title><rect x="554.3" y="787.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="557.3" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.20%)</title><rect x="554.3" y="771.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="557.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.10%)</title><rect x="554.3" y="755.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="557.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="554.9" y="739.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="557.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.05%)</title><rect x="554.9" y="723.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="557.9" y="734.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.05%)</title><rect x="554.9" y="707.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="557.9" y="718.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.10%)</title><rect x="555.5" y="755.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="558.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="556.1" y="739.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="559.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="556.1" y="723.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="559.1" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.05%)</title><rect x="556.1" y="707.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="559.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.get (95 samples, 4.65%)</title><rect x="556.7" y="787.0" width="54.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="559.7" y="798.0">ru/ma..</text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.05%)</title><rect x="556.7" y="771.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="559.7" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.05%)</title><rect x="557.2" y="771.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="560.2" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.05%)</title><rect x="557.2" y="755.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="560.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (93 samples, 4.55%)</title><rect x="557.8" y="771.0" width="53.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="560.8" y="782.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (8 samples, 0.39%)</title><rect x="557.8" y="755.0" width="4.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="560.8" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (6 samples, 0.29%)</title><rect x="558.4" y="739.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="561.4" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (6 samples, 0.29%)</title><rect x="558.4" y="723.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="561.4" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (6 samples, 0.29%)</title><rect x="558.4" y="707.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="561.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (6 samples, 0.29%)</title><rect x="558.4" y="691.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="561.4" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$115/1349025670.apply (3 samples, 0.15%)</title><rect x="560.1" y="675.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="563.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (3 samples, 0.15%)</title><rect x="560.1" y="659.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="563.1" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (3 samples, 0.15%)</title><rect x="560.1" y="643.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="563.1" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (3 samples, 0.15%)</title><rect x="560.1" y="627.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="563.1" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (3 samples, 0.15%)</title><rect x="560.1" y="611.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="563.1" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.15%)</title><rect x="560.1" y="595.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="563.1" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.10%)</title><rect x="560.7" y="579.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="563.7" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="561.3" y="563.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="564.3" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.05%)</title><rect x="561.9" y="739.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="564.9" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (1 samples, 0.05%)</title><rect x="561.9" y="723.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="564.9" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.05%)</title><rect x="561.9" y="707.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="564.9" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.05%)</title><rect x="561.9" y="691.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="564.9" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1 samples, 0.05%)</title><rect x="561.9" y="675.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="564.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.05%)</title><rect x="561.9" y="659.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="564.9" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.05%)</title><rect x="561.9" y="643.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="564.9" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.05%)</title><rect x="561.9" y="627.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="564.9" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (1 samples, 0.05%)</title><rect x="561.9" y="611.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="564.9" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.05%)</title><rect x="561.9" y="595.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="564.9" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.05%)</title><rect x="561.9" y="579.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="564.9" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1 samples, 0.05%)</title><rect x="561.9" y="563.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="564.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.05%)</title><rect x="561.9" y="547.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="564.9" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.05%)</title><rect x="561.9" y="531.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="564.9" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (1 samples, 0.05%)</title><rect x="561.9" y="515.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="564.9" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.05%)</title><rect x="561.9" y="499.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="564.9" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.05%)</title><rect x="561.9" y="483.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="564.9" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (3 samples, 0.15%)</title><rect x="562.4" y="755.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="565.4" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (3 samples, 0.15%)</title><rect x="562.4" y="739.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="565.4" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$123/739146284.apply (3 samples, 0.15%)</title><rect x="562.4" y="723.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="565.4" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$4 (3 samples, 0.15%)</title><rect x="562.4" y="707.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="565.4" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (3 samples, 0.15%)</title><rect x="562.4" y="691.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="565.4" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (3 samples, 0.15%)</title><rect x="562.4" y="675.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="565.4" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.15%)</title><rect x="562.4" y="659.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="565.4" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.15%)</title><rect x="562.4" y="643.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="565.4" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.15%)</title><rect x="562.4" y="627.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="565.4" y="638.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.15%)</title><rect x="562.4" y="611.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="565.4" y="622.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (3 samples, 0.15%)</title><rect x="562.4" y="595.0" width="1.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="565.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (1 samples, 0.05%)</title><rect x="564.2" y="755.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="567.2" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (1 samples, 0.05%)</title><rect x="564.2" y="739.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="567.2" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.05%)</title><rect x="564.2" y="723.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="567.2" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.05%)</title><rect x="564.2" y="707.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="567.2" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="564.2" y="691.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="567.2" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="564.2" y="675.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="567.2" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="564.2" y="659.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="567.2" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.05%)</title><rect x="564.2" y="643.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="567.2" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.05%)</title><rect x="564.2" y="627.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="567.2" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.05%)</title><rect x="564.2" y="611.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="567.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (81 samples, 3.97%)</title><rect x="564.8" y="755.0" width="46.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="567.8" y="766.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (1 samples, 0.05%)</title><rect x="565.3" y="739.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="568.3" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.05%)</title><rect x="565.9" y="739.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="568.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (5 samples, 0.24%)</title><rect x="566.5" y="739.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="569.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (5 samples, 0.24%)</title><rect x="566.5" y="723.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="569.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (5 samples, 0.24%)</title><rect x="566.5" y="707.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="569.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (3 samples, 0.15%)</title><rect x="567.6" y="691.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="570.6" y="702.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.05%)</title><rect x="568.2" y="675.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="571.2" y="686.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="568.8" y="675.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="571.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (62 samples, 3.04%)</title><rect x="569.4" y="739.0" width="35.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="572.4" y="750.0">ru/..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (3 samples, 0.15%)</title><rect x="569.4" y="723.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="572.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (2 samples, 0.10%)</title><rect x="570.0" y="707.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="573.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="570.5" y="691.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="573.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (1 samples, 0.05%)</title><rect x="570.5" y="675.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="573.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (1 samples, 0.05%)</title><rect x="570.5" y="659.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="573.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (1 samples, 0.05%)</title><rect x="570.5" y="643.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="573.5" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.05%)</title><rect x="571.1" y="723.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="574.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (58 samples, 2.84%)</title><rect x="571.7" y="723.0" width="33.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="574.7" y="734.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (10 samples, 0.49%)</title><rect x="572.3" y="707.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="575.3" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (10 samples, 0.49%)</title><rect x="572.3" y="691.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="575.3" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (1 samples, 0.05%)</title><rect x="572.8" y="675.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="575.8" y="686.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (8 samples, 0.39%)</title><rect x="573.4" y="675.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="576.4" y="686.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (8 samples, 0.39%)</title><rect x="573.4" y="659.0" width="4.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="576.4" y="670.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (8 samples, 0.39%)</title><rect x="573.4" y="643.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="576.4" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractSpinedBuffer.count (1 samples, 0.05%)</title><rect x="574.6" y="627.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="577.6" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (4 samples, 0.20%)</title><rect x="575.2" y="627.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="578.2" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.getAsBoolean (4 samples, 0.20%)</title><rect x="575.2" y="611.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="578.2" y="622.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (4 samples, 0.20%)</title><rect x="575.2" y="595.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="578.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (4 samples, 0.20%)</title><rect x="575.2" y="579.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="578.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.05%)</title><rect x="575.2" y="563.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="578.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.05%)</title><rect x="575.2" y="547.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="578.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (1 samples, 0.05%)</title><rect x="575.2" y="531.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="578.2" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (3 samples, 0.15%)</title><rect x="575.7" y="563.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="578.7" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (1 samples, 0.05%)</title><rect x="577.5" y="627.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="580.5" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.05%)</title><rect x="578.0" y="707.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="581.0" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.05%)</title><rect x="578.0" y="691.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="581.0" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.05%)</title><rect x="578.0" y="675.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="581.0" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.05%)</title><rect x="578.0" y="659.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="581.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (5 samples, 0.24%)</title><rect x="578.6" y="707.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="581.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (5 samples, 0.24%)</title><rect x="578.6" y="691.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="581.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (5 samples, 0.24%)</title><rect x="578.6" y="675.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="581.6" y="686.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.05%)</title><rect x="580.9" y="659.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="583.9" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.05%)</title><rect x="580.9" y="643.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="583.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (2 samples, 0.10%)</title><rect x="581.5" y="707.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="584.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (2 samples, 0.10%)</title><rect x="581.5" y="691.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="584.5" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.10%)</title><rect x="581.5" y="675.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="584.5" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (1 samples, 0.05%)</title><rect x="581.5" y="659.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="584.5" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.05%)</title><rect x="581.5" y="643.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="584.5" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.05%)</title><rect x="581.5" y="627.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="584.5" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1 samples, 0.05%)</title><rect x="581.5" y="611.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="584.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.05%)</title><rect x="581.5" y="595.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="584.5" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.05%)</title><rect x="581.5" y="579.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="584.5" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (1 samples, 0.05%)</title><rect x="581.5" y="563.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="584.5" y="574.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1 samples, 0.05%)</title><rect x="581.5" y="547.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="584.5" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1 samples, 0.05%)</title><rect x="581.5" y="531.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="584.5" y="542.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.accept (1 samples, 0.05%)</title><rect x="581.5" y="515.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="584.5" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.05%)</title><rect x="582.1" y="659.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="585.1" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (1 samples, 0.05%)</title><rect x="582.1" y="643.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="585.1" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.05%)</title><rect x="582.1" y="627.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="585.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (39 samples, 1.91%)</title><rect x="582.7" y="707.0" width="22.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="585.7" y="718.0">r..</text>
</g>
<g>
<title>java/util/Collection.stream (37 samples, 1.81%)</title><rect x="582.7" y="691.0" width="21.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="585.7" y="702.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (36 samples, 1.76%)</title><rect x="582.7" y="675.0" width="20.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="585.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (36 samples, 1.76%)</title><rect x="582.7" y="659.0" width="20.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="585.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (36 samples, 1.76%)</title><rect x="582.7" y="643.0" width="20.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="585.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (35 samples, 1.71%)</title><rect x="583.2" y="627.0" width="20.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="586.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (35 samples, 1.71%)</title><rect x="583.2" y="611.0" width="20.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="586.2" y="622.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.05%)</title><rect x="583.8" y="595.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="586.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.10%)</title><rect x="584.4" y="595.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="587.4" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.10%)</title><rect x="584.4" y="579.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="587.4" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.10%)</title><rect x="584.4" y="563.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="587.4" y="574.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.05%)</title><rect x="584.4" y="547.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="587.4" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.05%)</title><rect x="585.0" y="547.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="588.0" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.05%)</title><rect x="585.0" y="531.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="588.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (31 samples, 1.52%)</title><rect x="585.6" y="595.0" width="17.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="588.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (21 samples, 1.03%)</title><rect x="591.3" y="579.0" width="12.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="594.3" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (18 samples, 0.88%)</title><rect x="593.1" y="563.0" width="10.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="596.1" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (10 samples, 0.49%)</title><rect x="597.7" y="547.0" width="5.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="600.7" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.05%)</title><rect x="600.0" y="531.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="603.0" y="542.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.15%)</title><rect x="600.6" y="531.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="603.6" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.05%)</title><rect x="601.2" y="515.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="604.2" y="526.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.05%)</title><rect x="601.7" y="515.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="604.7" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compare (1 samples, 0.05%)</title><rect x="602.3" y="531.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="605.3" y="542.0"></text>
</g>
<g>
<title>java/lang/Byte.compare (1 samples, 0.05%)</title><rect x="602.3" y="515.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="605.3" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.05%)</title><rect x="602.9" y="531.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="605.9" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.05%)</title><rect x="602.9" y="515.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="605.9" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.05%)</title><rect x="603.5" y="675.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="606.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.05%)</title><rect x="604.0" y="691.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="607.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.05%)</title><rect x="604.0" y="675.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="607.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.05%)</title><rect x="604.0" y="659.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="607.0" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (1 samples, 0.05%)</title><rect x="604.6" y="691.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="607.6" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (11 samples, 0.54%)</title><rect x="605.2" y="739.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="608.2" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (4 samples, 0.20%)</title><rect x="605.2" y="723.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="608.2" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (4 samples, 0.20%)</title><rect x="605.2" y="707.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="608.2" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (3 samples, 0.15%)</title><rect x="605.2" y="691.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="608.2" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (3 samples, 0.15%)</title><rect x="605.2" y="675.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="608.2" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (3 samples, 0.15%)</title><rect x="605.2" y="659.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="608.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3 samples, 0.15%)</title><rect x="605.2" y="643.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="608.2" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.05%)</title><rect x="605.2" y="627.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="608.2" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (1 samples, 0.05%)</title><rect x="605.2" y="611.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="608.2" y="622.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1 samples, 0.05%)</title><rect x="605.2" y="595.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="608.2" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1 samples, 0.05%)</title><rect x="605.2" y="579.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="608.2" y="590.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1 samples, 0.05%)</title><rect x="605.2" y="563.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="608.2" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (1 samples, 0.05%)</title><rect x="605.2" y="547.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="608.2" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.getAsBoolean (1 samples, 0.05%)</title><rect x="605.2" y="531.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="608.2" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (1 samples, 0.05%)</title><rect x="605.2" y="515.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="608.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (1 samples, 0.05%)</title><rect x="605.2" y="499.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="608.2" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.05%)</title><rect x="605.2" y="483.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="608.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$62/987822523.apply (1 samples, 0.05%)</title><rect x="605.2" y="467.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="608.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (1 samples, 0.05%)</title><rect x="605.2" y="451.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="608.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$115/1349025670.apply (1 samples, 0.05%)</title><rect x="605.8" y="627.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="608.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (1 samples, 0.05%)</title><rect x="605.8" y="611.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="608.8" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (1 samples, 0.05%)</title><rect x="605.8" y="595.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="608.8" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.05%)</title><rect x="605.8" y="579.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="608.8" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.05%)</title><rect x="605.8" y="563.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="608.8" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="605.8" y="547.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="608.8" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="605.8" y="531.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="608.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$95/351241919.apply (1 samples, 0.05%)</title><rect x="606.4" y="627.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="609.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (1 samples, 0.05%)</title><rect x="606.4" y="611.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="609.4" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (1 samples, 0.05%)</title><rect x="606.4" y="595.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="609.4" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.05%)</title><rect x="606.4" y="579.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="609.4" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.05%)</title><rect x="606.4" y="563.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="609.4" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="606.4" y="547.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="609.4" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="606.4" y="531.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="609.4" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="606.4" y="515.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="609.4" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.05%)</title><rect x="606.4" y="499.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="609.4" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (1 samples, 0.05%)</title><rect x="606.9" y="691.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="609.9" y="702.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (1 samples, 0.05%)</title><rect x="607.5" y="723.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="610.5" y="734.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (1 samples, 0.05%)</title><rect x="607.5" y="707.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="610.5" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.05%)</title><rect x="607.5" y="691.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="610.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (6 samples, 0.29%)</title><rect x="608.1" y="723.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="611.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (6 samples, 0.29%)</title><rect x="608.1" y="707.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="611.1" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.29%)</title><rect x="608.1" y="691.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="611.1" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (5 samples, 0.24%)</title><rect x="608.1" y="675.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="611.1" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (5 samples, 0.24%)</title><rect x="608.1" y="659.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="611.1" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (5 samples, 0.24%)</title><rect x="608.1" y="643.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="611.1" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (5 samples, 0.24%)</title><rect x="608.1" y="627.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="611.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (5 samples, 0.24%)</title><rect x="608.1" y="611.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="611.1" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.20%)</title><rect x="608.1" y="595.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="611.1" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (3 samples, 0.15%)</title><rect x="608.1" y="579.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="611.1" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (2 samples, 0.10%)</title><rect x="608.1" y="563.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="611.1" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (2 samples, 0.10%)</title><rect x="608.1" y="547.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="611.1" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="608.7" y="531.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="611.7" y="542.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1 samples, 0.05%)</title><rect x="609.2" y="563.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="612.2" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1 samples, 0.05%)</title><rect x="609.2" y="547.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="612.2" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1 samples, 0.05%)</title><rect x="609.2" y="531.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="612.2" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (1 samples, 0.05%)</title><rect x="609.2" y="515.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="612.2" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.getAsBoolean (1 samples, 0.05%)</title><rect x="609.2" y="499.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="612.2" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (1 samples, 0.05%)</title><rect x="609.2" y="483.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="612.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (1 samples, 0.05%)</title><rect x="609.2" y="467.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="612.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.05%)</title><rect x="609.2" y="451.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="612.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.05%)</title><rect x="609.2" y="435.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="612.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (1 samples, 0.05%)</title><rect x="609.2" y="419.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="612.2" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1 samples, 0.05%)</title><rect x="609.8" y="579.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="612.8" y="590.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1 samples, 0.05%)</title><rect x="609.8" y="563.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="612.8" y="574.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1 samples, 0.05%)</title><rect x="609.8" y="547.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="612.8" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1 samples, 0.05%)</title><rect x="609.8" y="531.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="612.8" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (1 samples, 0.05%)</title><rect x="609.8" y="515.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="612.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$95/351241919.apply (1 samples, 0.05%)</title><rect x="610.4" y="595.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="613.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (1 samples, 0.05%)</title><rect x="610.4" y="579.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="613.4" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (1 samples, 0.05%)</title><rect x="610.4" y="563.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="613.4" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.05%)</title><rect x="610.4" y="547.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="613.4" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.05%)</title><rect x="610.4" y="531.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="613.4" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="610.4" y="515.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="613.4" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="610.4" y="499.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="613.4" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="610.4" y="483.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="613.4" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.05%)</title><rect x="611.0" y="675.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="614.0" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (1 samples, 0.05%)</title><rect x="611.0" y="659.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="614.0" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.05%)</title><rect x="611.0" y="643.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="614.0" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.05%)</title><rect x="611.0" y="627.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="614.0" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1 samples, 0.05%)</title><rect x="611.0" y="611.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="614.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.05%)</title><rect x="611.0" y="595.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="614.0" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.05%)</title><rect x="611.0" y="579.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="614.0" y="590.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1 samples, 0.05%)</title><rect x="611.0" y="563.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="614.0" y="574.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1 samples, 0.05%)</title><rect x="611.0" y="547.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="614.0" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1 samples, 0.05%)</title><rect x="611.0" y="531.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="614.0" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1 samples, 0.05%)</title><rect x="611.0" y="515.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="614.0" y="526.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (1 samples, 0.05%)</title><rect x="611.6" y="803.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="614.6" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.05%)</title><rect x="611.6" y="787.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="614.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.05%)</title><rect x="611.6" y="771.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="614.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.05%)</title><rect x="611.6" y="755.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="614.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.05%)</title><rect x="611.6" y="739.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="614.6" y="750.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.10%)</title><rect x="612.1" y="803.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="615.1" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.10%)</title><rect x="612.1" y="787.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="615.1" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.05%)</title><rect x="612.1" y="771.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="615.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.05%)</title><rect x="612.1" y="755.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="615.1" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.05%)</title><rect x="612.7" y="771.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="615.7" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (12 samples, 0.59%)</title><rect x="613.3" y="835.0" width="6.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="616.3" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.20%)</title><rect x="613.9" y="819.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="616.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.10%)</title><rect x="615.0" y="803.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="618.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.10%)</title><rect x="615.0" y="787.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="618.0" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.34%)</title><rect x="616.2" y="819.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="619.2" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.20%)</title><rect x="617.9" y="803.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="620.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.05%)</title><rect x="620.2" y="835.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="623.2" y="846.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.05%)</title><rect x="620.2" y="819.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="623.2" y="830.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.05%)</title><rect x="620.2" y="803.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="623.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.05%)</title><rect x="620.2" y="787.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="623.2" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (3 samples, 0.15%)</title><rect x="620.8" y="835.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="623.8" y="846.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.10%)</title><rect x="621.4" y="819.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="624.4" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.20%)</title><rect x="622.5" y="835.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="625.5" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.20%)</title><rect x="622.5" y="819.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="625.5" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.20%)</title><rect x="622.5" y="803.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="625.5" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.10%)</title><rect x="624.8" y="835.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="627.8" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.10%)</title><rect x="624.8" y="819.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="627.8" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (47 samples, 2.30%)</title><rect x="626.0" y="851.0" width="27.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="629.0" y="862.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (47 samples, 2.30%)</title><rect x="626.0" y="835.0" width="27.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="629.0" y="846.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (6 samples, 0.29%)</title><rect x="627.7" y="819.0" width="3.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="630.7" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.05%)</title><rect x="628.3" y="803.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="631.3" y="814.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned (2 samples, 0.10%)</title><rect x="628.9" y="803.0" width="1.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="631.9" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.10%)</title><rect x="630.0" y="803.0" width="1.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="633.0" y="814.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.05%)</title><rect x="630.0" y="787.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="633.0" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.05%)</title><rect x="630.6" y="787.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="633.6" y="798.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.05%)</title><rect x="631.2" y="819.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="634.2" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.05%)</title><rect x="631.8" y="819.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="634.8" y="830.0"></text>
</g>
<g>
<title>recv (36 samples, 1.76%)</title><rect x="632.4" y="819.0" width="20.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="635.4" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (31 samples, 1.52%)</title><rect x="635.2" y="803.0" width="18.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="638.2" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (31 samples, 1.52%)</title><rect x="635.2" y="787.0" width="18.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="638.2" y="798.0"></text>
</g>
<g>
<title>sys_recvfrom (26 samples, 1.27%)</title><rect x="638.1" y="771.0" width="15.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="641.1" y="782.0"></text>
</g>
<g>
<title>SYSC_recvfrom (25 samples, 1.22%)</title><rect x="638.1" y="755.0" width="14.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="641.1" y="766.0"></text>
</g>
<g>
<title>sock_recvmsg (22 samples, 1.08%)</title><rect x="638.7" y="739.0" width="12.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="641.7" y="750.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.10%)</title><rect x="639.3" y="723.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="642.3" y="734.0"></text>
</g>
<g>
<title>inet_recvmsg (18 samples, 0.88%)</title><rect x="640.5" y="723.0" width="10.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="643.5" y="734.0"></text>
</g>
<g>
<title>tcp_recvmsg (17 samples, 0.83%)</title><rect x="641.0" y="707.0" width="9.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="644.0" y="718.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.05%)</title><rect x="642.2" y="691.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="645.2" y="702.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.20%)</title><rect x="642.8" y="691.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="645.8" y="702.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.05%)</title><rect x="642.8" y="675.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="645.8" y="686.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.10%)</title><rect x="643.3" y="675.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="646.3" y="686.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.05%)</title><rect x="643.3" y="659.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="646.3" y="670.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.05%)</title><rect x="643.9" y="659.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="646.9" y="670.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.05%)</title><rect x="644.5" y="675.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="647.5" y="686.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.10%)</title><rect x="645.1" y="691.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="648.1" y="702.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.05%)</title><rect x="646.2" y="691.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="649.2" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (3 samples, 0.15%)</title><rect x="646.8" y="691.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="649.8" y="702.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.10%)</title><rect x="646.8" y="675.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="649.8" y="686.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.05%)</title><rect x="647.4" y="659.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="650.4" y="670.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.05%)</title><rect x="648.0" y="675.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="651.0" y="686.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.05%)</title><rect x="648.5" y="691.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="651.5" y="702.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (3 samples, 0.15%)</title><rect x="649.1" y="691.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="652.1" y="702.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.05%)</title><rect x="650.9" y="723.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="653.9" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.05%)</title><rect x="650.9" y="707.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="653.9" y="718.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.05%)</title><rect x="650.9" y="691.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="653.9" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.05%)</title><rect x="650.9" y="675.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="653.9" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.10%)</title><rect x="651.4" y="739.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="654.4" y="750.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.10%)</title><rect x="651.4" y="723.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="654.4" y="734.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.05%)</title><rect x="652.6" y="755.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="655.6" y="766.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=16339] (543 samples, 26.59%)</title><rect x="653.2" y="915.0" width="313.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="656.2" y="926.0">[NIO Selector #2 tid=16339]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (543 samples, 26.59%)</title><rect x="653.2" y="899.0" width="313.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="656.2" y="910.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (100 samples, 4.90%)</title><rect x="653.7" y="883.0" width="57.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="656.7" y="894.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (4 samples, 0.20%)</title><rect x="658.9" y="867.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="661.9" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (2 samples, 0.10%)</title><rect x="660.1" y="851.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="663.1" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (87 samples, 4.26%)</title><rect x="661.3" y="867.0" width="50.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="664.3" y="878.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.10%)</title><rect x="663.6" y="851.0" width="1.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="666.6" y="862.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.10%)</title><rect x="664.7" y="851.0" width="1.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="667.7" y="862.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.10%)</title><rect x="664.7" y="835.0" width="1.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="667.7" y="846.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.05%)</title><rect x="665.3" y="819.0" width="0.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="668.3" y="830.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.05%)</title><rect x="665.9" y="851.0" width="0.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="668.9" y="862.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.05%)</title><rect x="666.5" y="851.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="669.5" y="862.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.05%)</title><rect x="667.0" y="851.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="670.0" y="862.0"></text>
</g>
<g>
<title>epoll_wait (74 samples, 3.62%)</title><rect x="667.6" y="851.0" width="42.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="670.6" y="862.0">epol..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (59 samples, 2.89%)</title><rect x="676.3" y="835.0" width="34.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="679.3" y="846.0">en..</text>
</g>
<g>
<title>do_syscall_64 (58 samples, 2.84%)</title><rect x="676.3" y="819.0" width="33.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="679.3" y="830.0">do..</text>
</g>
<g>
<title>fput (3 samples, 0.15%)</title><rect x="678.6" y="803.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="681.6" y="814.0"></text>
</g>
<g>
<title>sys_epoll_wait (51 samples, 2.50%)</title><rect x="680.3" y="803.0" width="29.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="683.3" y="814.0">sy..</text>
</g>
<g>
<title>__fdget (1 samples, 0.05%)</title><rect x="680.3" y="787.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="683.3" y="798.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="680.3" y="771.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="683.3" y="782.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.05%)</title><rect x="680.3" y="755.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="683.3" y="766.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="680.9" y="787.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="683.9" y="798.0"></text>
</g>
<g>
<title>ep_poll (49 samples, 2.40%)</title><rect x="681.5" y="787.0" width="28.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="684.5" y="798.0">ep..</text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.24%)</title><rect x="682.6" y="771.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="685.6" y="782.0"></text>
</g>
<g>
<title>ep_scan_ready_list (14 samples, 0.69%)</title><rect x="685.5" y="771.0" width="8.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="688.5" y="782.0"></text>
</g>
<g>
<title>ep_send_events_proc (13 samples, 0.64%)</title><rect x="686.1" y="755.0" width="7.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="689.1" y="766.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (10 samples, 0.49%)</title><rect x="687.3" y="739.0" width="5.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="690.3" y="750.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.20%)</title><rect x="690.1" y="723.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="693.1" y="734.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.15%)</title><rect x="690.7" y="707.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="693.7" y="718.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.05%)</title><rect x="691.9" y="691.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="694.9" y="702.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.05%)</title><rect x="691.9" y="675.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="694.9" y="686.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.05%)</title><rect x="691.9" y="659.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="694.9" y="670.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.05%)</title><rect x="691.9" y="643.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="694.9" y="654.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.05%)</title><rect x="691.9" y="627.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="694.9" y="638.0"></text>
</g>
<g>
<title>rcu_report_qs_rnp (1 samples, 0.05%)</title><rect x="691.9" y="611.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="694.9" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="691.9" y="595.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="694.9" y="606.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.05%)</title><rect x="692.5" y="723.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="695.5" y="734.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.05%)</title><rect x="693.0" y="739.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="696.0" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.05%)</title><rect x="693.6" y="771.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="696.6" y="782.0"></text>
</g>
<g>
<title>mutex_lock (3 samples, 0.15%)</title><rect x="694.2" y="771.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="697.2" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (24 samples, 1.18%)</title><rect x="695.9" y="771.0" width="13.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="698.9" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (24 samples, 1.18%)</title><rect x="695.9" y="755.0" width="13.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="698.9" y="766.0"></text>
</g>
<g>
<title>schedule (24 samples, 1.18%)</title><rect x="695.9" y="739.0" width="13.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="698.9" y="750.0"></text>
</g>
<g>
<title>__schedule (23 samples, 1.13%)</title><rect x="696.5" y="723.0" width="13.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="699.5" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (23 samples, 1.13%)</title><rect x="696.5" y="707.0" width="13.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="699.5" y="718.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.05%)</title><rect x="709.2" y="691.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="712.2" y="702.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.05%)</title><rect x="709.2" y="675.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="712.2" y="686.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.05%)</title><rect x="709.2" y="659.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="712.2" y="670.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.05%)</title><rect x="709.2" y="643.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="712.2" y="654.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.05%)</title><rect x="709.2" y="627.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="712.2" y="638.0"></text>
</g>
<g>
<title>rebalance_domains (1 samples, 0.05%)</title><rect x="709.2" y="611.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="712.2" y="622.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.05%)</title><rect x="709.2" y="595.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="712.2" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="709.2" y="579.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="712.2" y="590.0"></text>
</g>
<g>
<title>sys_epoll_wait (1 samples, 0.05%)</title><rect x="709.8" y="819.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="712.8" y="830.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.10%)</title><rect x="710.4" y="851.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="713.4" y="862.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.10%)</title><rect x="710.4" y="835.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="713.4" y="846.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.10%)</title><rect x="710.4" y="819.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="713.4" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (442 samples, 21.65%)</title><rect x="711.5" y="883.0" width="255.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="714.5" y="894.0">one/nio/net/Session.process</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="712.7" y="867.0" width="0.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="715.7" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (439 samples, 21.50%)</title><rect x="713.3" y="867.0" width="253.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="716.3" y="878.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (384 samples, 18.81%)</title><rect x="713.3" y="851.0" width="221.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="716.3" y="862.0">one/nio/http/HttpSession.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (371 samples, 18.17%)</title><rect x="713.8" y="835.0" width="214.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="716.8" y="846.0">one/nio/http/HttpSession.han..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (371 samples, 18.17%)</title><rect x="713.8" y="819.0" width="214.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="716.8" y="830.0">one/nio/http/HttpServer.hand..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (368 samples, 18.02%)</title><rect x="715.0" y="803.0" width="212.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="718.0" y="814.0">RequestHandler0_get.handleRe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (259 samples, 12.68%)</title><rect x="715.0" y="787.0" width="149.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="718.0" y="798.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (256 samples, 12.54%)</title><rect x="715.0" y="771.0" width="147.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="718.0" y="782.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.24%)</title><rect x="715.0" y="755.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="718.0" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="715.6" y="739.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="718.6" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.15%)</title><rect x="716.2" y="739.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="719.2" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.05%)</title><rect x="716.2" y="723.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="719.2" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.10%)</title><rect x="716.7" y="723.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="719.7" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.10%)</title><rect x="716.7" y="707.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="719.7" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.10%)</title><rect x="716.7" y="691.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="719.7" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (251 samples, 12.29%)</title><rect x="717.9" y="755.0" width="145.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="720.9" y="766.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/Session.write (251 samples, 12.29%)</title><rect x="717.9" y="739.0" width="145.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="720.9" y="750.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="717.9" y="723.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="720.9" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (247 samples, 12.10%)</title><rect x="718.5" y="723.0" width="142.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="721.5" y="734.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (247 samples, 12.10%)</title><rect x="718.5" y="707.0" width="142.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="721.5" y="718.0">one/nio/net/Native..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.05%)</title><rect x="718.5" y="691.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="721.5" y="702.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.05%)</title><rect x="719.0" y="691.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="722.0" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.10%)</title><rect x="719.6" y="691.0" width="1.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="722.6" y="702.0"></text>
</g>
<g>
<title>send (243 samples, 11.90%)</title><rect x="720.8" y="691.0" width="140.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="723.8" y="702.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (238 samples, 11.66%)</title><rect x="723.7" y="675.0" width="137.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="726.7" y="686.0">entry_SYSCALL_64_..</text>
</g>
<g>
<title>do_syscall_64 (238 samples, 11.66%)</title><rect x="723.7" y="659.0" width="137.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="726.7" y="670.0">do_syscall_64</text>
</g>
<g>
<title>sys_sendto (231 samples, 11.31%)</title><rect x="727.7" y="643.0" width="133.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="730.7" y="654.0">sys_sendto</text>
</g>
<g>
<title>SYSC_sendto (231 samples, 11.31%)</title><rect x="727.7" y="627.0" width="133.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="730.7" y="638.0">SYSC_sendto</text>
</g>
<g>
<title>import_single_range (1 samples, 0.05%)</title><rect x="727.7" y="611.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="730.7" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (229 samples, 11.21%)</title><rect x="728.3" y="611.0" width="132.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="731.3" y="622.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (227 samples, 11.12%)</title><rect x="728.3" y="595.0" width="131.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="731.3" y="606.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (227 samples, 11.12%)</title><rect x="728.3" y="579.0" width="131.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="731.3" y="590.0">tcp_sendmsg</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.05%)</title><rect x="728.9" y="563.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="731.9" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.10%)</title><rect x="729.4" y="563.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="732.4" y="574.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.15%)</title><rect x="730.6" y="563.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="733.6" y="574.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.05%)</title><rect x="731.8" y="547.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="734.8" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (219 samples, 10.72%)</title><rect x="732.3" y="563.0" width="126.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="735.3" y="574.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.05%)</title><rect x="735.8" y="547.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="738.8" y="558.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.05%)</title><rect x="736.4" y="547.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="739.4" y="558.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.05%)</title><rect x="736.4" y="531.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="739.4" y="542.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (11 samples, 0.54%)</title><rect x="737.0" y="547.0" width="6.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="740.0" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (11 samples, 0.54%)</title><rect x="737.0" y="531.0" width="6.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="740.0" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (4 samples, 0.20%)</title><rect x="737.5" y="515.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="740.5" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (4 samples, 0.20%)</title><rect x="737.5" y="499.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="740.5" y="510.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.10%)</title><rect x="738.7" y="483.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="741.7" y="494.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.20%)</title><rect x="739.8" y="515.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="742.8" y="526.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.10%)</title><rect x="742.2" y="515.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="745.2" y="526.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.05%)</title><rect x="743.3" y="547.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="746.3" y="558.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.05%)</title><rect x="743.3" y="531.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="746.3" y="542.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.05%)</title><rect x="743.9" y="547.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="746.9" y="558.0"></text>
</g>
<g>
<title>tcp_push (196 samples, 9.60%)</title><rect x="744.5" y="547.0" width="113.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="747.5" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (195 samples, 9.55%)</title><rect x="745.0" y="531.0" width="112.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="748.0" y="542.0">__tcp_push_pen..</text>
</g>
<g>
<title>tcp_write_xmit (195 samples, 9.55%)</title><rect x="745.0" y="515.0" width="112.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="748.0" y="526.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (183 samples, 8.96%)</title><rect x="747.4" y="499.0" width="105.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="750.4" y="510.0">__tcp_transmi..</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.05%)</title><rect x="748.5" y="483.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="751.5" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (178 samples, 8.72%)</title><rect x="749.1" y="483.0" width="102.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="752.1" y="494.0">ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (3 samples, 0.15%)</title><rect x="749.1" y="467.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="752.1" y="478.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.05%)</title><rect x="750.2" y="451.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="753.2" y="462.0"></text>
</g>
<g>
<title>ip_local_out (175 samples, 8.57%)</title><rect x="750.8" y="467.0" width="101.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="753.8" y="478.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (39 samples, 1.91%)</title><rect x="750.8" y="451.0" width="22.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="753.8" y="462.0">_..</text>
</g>
<g>
<title>ip_send_check (1 samples, 0.05%)</title><rect x="750.8" y="435.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="753.8" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.10%)</title><rect x="751.4" y="435.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="754.4" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (6 samples, 0.29%)</title><rect x="752.6" y="435.0" width="3.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="755.6" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (30 samples, 1.47%)</title><rect x="756.0" y="435.0" width="17.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="759.0" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (4 samples, 0.20%)</title><rect x="756.0" y="419.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="759.0" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (3 samples, 0.15%)</title><rect x="756.6" y="403.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="759.6" y="414.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (1 samples, 0.05%)</title><rect x="758.3" y="419.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="761.3" y="430.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn?[iptable_nat] (2 samples, 0.10%)</title><rect x="758.9" y="419.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="761.9" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (2 samples, 0.10%)</title><rect x="758.9" y="403.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="761.9" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (1 samples, 0.05%)</title><rect x="759.5" y="387.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="762.5" y="398.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (23 samples, 1.13%)</title><rect x="760.1" y="419.0" width="13.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="763.1" y="430.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (1 samples, 0.05%)</title><rect x="760.6" y="403.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="763.6" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (21 samples, 1.03%)</title><rect x="761.2" y="403.0" width="12.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="764.2" y="414.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (1 samples, 0.05%)</title><rect x="764.7" y="387.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="767.7" y="398.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (2 samples, 0.10%)</title><rect x="765.3" y="387.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="768.3" y="398.0"></text>
</g>
<g>
<title>ipv4_get_l4proto?[nf_conntrack_ipv4] (1 samples, 0.05%)</title><rect x="766.4" y="387.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="769.4" y="398.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (1 samples, 0.05%)</title><rect x="767.0" y="387.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="770.0" y="398.0"></text>
</g>
<g>
<title>ipv4_pkt_to_tuple?[nf_conntrack_ipv4] (1 samples, 0.05%)</title><rect x="767.0" y="371.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="770.0" y="382.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (6 samples, 0.29%)</title><rect x="767.6" y="387.0" width="3.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="770.6" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.05%)</title><rect x="768.2" y="371.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="771.2" y="382.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (4 samples, 0.20%)</title><rect x="768.7" y="371.0" width="2.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="771.7" y="382.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (3 samples, 0.15%)</title><rect x="769.3" y="355.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="772.3" y="366.0"></text>
</g>
<g>
<title>tcp_pkt_to_tuple?[nf_conntrack] (4 samples, 0.20%)</title><rect x="771.0" y="387.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="774.0" y="398.0"></text>
</g>
<g>
<title>ip_output (135 samples, 6.61%)</title><rect x="773.4" y="451.0" width="78.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="776.4" y="462.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (123 samples, 6.02%)</title><rect x="773.9" y="435.0" width="71.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="776.9" y="446.0">ip_finis..</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.05%)</title><rect x="773.9" y="419.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="776.9" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (122 samples, 5.97%)</title><rect x="774.5" y="419.0" width="70.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="777.5" y="430.0">ip_finis..</text>
</g>
<g>
<title>__local_bh_enable_ip (110 samples, 5.39%)</title><rect x="777.4" y="403.0" width="63.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="780.4" y="414.0">__local..</text>
</g>
<g>
<title>do_softirq.part.17 (110 samples, 5.39%)</title><rect x="777.4" y="387.0" width="63.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="780.4" y="398.0">do_soft..</text>
</g>
<g>
<title>do_softirq_own_stack (108 samples, 5.29%)</title><rect x="778.6" y="371.0" width="62.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="781.6" y="382.0">do_sof..</text>
</g>
<g>
<title>__softirqentry_text_start (108 samples, 5.29%)</title><rect x="778.6" y="355.0" width="62.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="781.6" y="366.0">__soft..</text>
</g>
<g>
<title>net_rx_action (101 samples, 4.95%)</title><rect x="780.3" y="339.0" width="58.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="783.3" y="350.0">net_rx..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.05%)</title><rect x="781.4" y="323.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="784.4" y="334.0"></text>
</g>
<g>
<title>process_backlog (98 samples, 4.80%)</title><rect x="782.0" y="323.0" width="56.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="785.0" y="334.0">proces..</text>
</g>
<g>
<title>__netif_receive_skb (97 samples, 4.75%)</title><rect x="782.6" y="307.0" width="56.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="785.6" y="318.0">__neti..</text>
</g>
<g>
<title>__netif_receive_skb_core (96 samples, 4.70%)</title><rect x="782.6" y="291.0" width="55.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="785.6" y="302.0">__net..</text>
</g>
<g>
<title>ip_rcv (92 samples, 4.51%)</title><rect x="783.8" y="275.0" width="53.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="786.8" y="286.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (83 samples, 4.06%)</title><rect x="783.8" y="259.0" width="47.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="786.8" y="270.0">ip_r..</text>
</g>
<g>
<title>ip_local_deliver (82 samples, 4.02%)</title><rect x="784.3" y="243.0" width="47.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="787.3" y="254.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (77 samples, 3.77%)</title><rect x="784.3" y="227.0" width="44.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="787.3" y="238.0">ip_l..</text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.05%)</title><rect x="785.5" y="211.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="788.5" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (74 samples, 3.62%)</title><rect x="786.1" y="211.0" width="42.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="789.1" y="222.0">tcp_..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.10%)</title><rect x="788.4" y="195.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="791.4" y="206.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.05%)</title><rect x="789.5" y="195.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="792.5" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.05%)</title><rect x="790.1" y="195.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="793.1" y="206.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.05%)</title><rect x="790.1" y="179.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="793.1" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (66 samples, 3.23%)</title><rect x="790.7" y="195.0" width="38.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="793.7" y="206.0">tcp..</text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.05%)</title><rect x="790.7" y="179.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="793.7" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (65 samples, 3.18%)</title><rect x="791.3" y="179.0" width="37.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="794.3" y="190.0">tcp..</text>
</g>
<g>
<title>__tcp_ack_snd_check (5 samples, 0.24%)</title><rect x="791.3" y="163.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="794.3" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (5 samples, 0.24%)</title><rect x="791.3" y="147.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="794.3" y="158.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.05%)</title><rect x="791.9" y="131.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="794.9" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.15%)</title><rect x="792.4" y="131.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="795.4" y="142.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.10%)</title><rect x="793.0" y="115.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="796.0" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.10%)</title><rect x="793.0" y="99.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="796.0" y="110.0"></text>
</g>
<g>
<title>sched_clock_cpu (1 samples, 0.05%)</title><rect x="794.2" y="163.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="797.2" y="174.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.05%)</title><rect x="794.2" y="147.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="797.2" y="158.0"></text>
</g>
<g>
<title>native_sched_clock (1 samples, 0.05%)</title><rect x="794.2" y="131.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="797.2" y="142.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.05%)</title><rect x="794.7" y="163.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="797.7" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.05%)</title><rect x="795.3" y="163.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="798.3" y="174.0"></text>
</g>
<g>
<title>tcp_ack (23 samples, 1.13%)</title><rect x="795.9" y="163.0" width="13.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="798.9" y="174.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.41 (1 samples, 0.05%)</title><rect x="797.6" y="147.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="800.6" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (17 samples, 0.83%)</title><rect x="798.2" y="147.0" width="9.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="801.2" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (8 samples, 0.39%)</title><rect x="799.9" y="131.0" width="4.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="802.9" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (5 samples, 0.24%)</title><rect x="800.5" y="115.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="803.5" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (5 samples, 0.24%)</title><rect x="800.5" y="99.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="803.5" y="110.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.05%)</title><rect x="802.8" y="83.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="805.8" y="94.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.10%)</title><rect x="803.4" y="115.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="806.4" y="126.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.10%)</title><rect x="803.4" y="99.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="806.4" y="110.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.10%)</title><rect x="803.4" y="83.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="806.4" y="94.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.10%)</title><rect x="803.4" y="67.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="806.4" y="78.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.05%)</title><rect x="804.0" y="51.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="807.0" y="62.0"></text>
</g>
<g>
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.05%)</title><rect x="804.0" y="35.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="807.0" y="46.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.10%)</title><rect x="804.6" y="131.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="807.6" y="142.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.41 (3 samples, 0.15%)</title><rect x="805.7" y="131.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="808.7" y="142.0"></text>
</g>
<g>
<title>minmax_running_min (1 samples, 0.05%)</title><rect x="806.9" y="115.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="809.9" y="126.0"></text>
</g>
<g>
<title>minmax_subwin_update (1 samples, 0.05%)</title><rect x="806.9" y="99.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="809.9" y="110.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.05%)</title><rect x="807.5" y="131.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="810.5" y="142.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.05%)</title><rect x="808.0" y="147.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="811.0" y="158.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.05%)</title><rect x="808.6" y="147.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="811.6" y="158.0"></text>
</g>
<g>
<title>tcp_data_queue (34 samples, 1.67%)</title><rect x="809.2" y="163.0" width="19.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="812.2" y="174.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.05%)</title><rect x="809.8" y="147.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="812.8" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (30 samples, 1.47%)</title><rect x="810.3" y="147.0" width="17.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="813.3" y="158.0"></text>
</g>
<g>
<title>__wake_up_sync_key (29 samples, 1.42%)</title><rect x="810.9" y="131.0" width="16.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="813.9" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (29 samples, 1.42%)</title><rect x="810.9" y="115.0" width="16.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="813.9" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (29 samples, 1.42%)</title><rect x="810.9" y="99.0" width="16.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="813.9" y="110.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.05%)</title><rect x="827.7" y="147.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="830.7" y="158.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.05%)</title><rect x="828.3" y="147.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="831.3" y="158.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.05%)</title><rect x="828.8" y="227.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="831.8" y="238.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_fn?[iptable_nat] (1 samples, 0.05%)</title><rect x="829.4" y="227.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="832.4" y="238.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.05%)</title><rect x="830.0" y="227.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="833.0" y="238.0"></text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.10%)</title><rect x="830.6" y="227.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="833.6" y="238.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (2 samples, 0.10%)</title><rect x="831.7" y="259.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="834.7" y="270.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_in?[iptable_nat] (1 samples, 0.05%)</title><rect x="832.9" y="259.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="835.9" y="270.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (1 samples, 0.05%)</title><rect x="833.5" y="259.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="836.5" y="270.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.24%)</title><rect x="834.0" y="259.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="837.0" y="270.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (1 samples, 0.05%)</title><rect x="834.0" y="243.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="837.0" y="254.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.05%)</title><rect x="834.0" y="227.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="837.0" y="238.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack_ipv4] (4 samples, 0.20%)</title><rect x="834.6" y="243.0" width="2.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="837.6" y="254.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (4 samples, 0.20%)</title><rect x="834.6" y="227.0" width="2.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="837.6" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.05%)</title><rect x="836.9" y="275.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="839.9" y="286.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.05%)</title><rect x="837.5" y="275.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="840.5" y="286.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.05%)</title><rect x="838.1" y="291.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="841.1" y="302.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.10%)</title><rect x="838.7" y="339.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="841.7" y="350.0"></text>
</g>
<g>
<title>rcu_bh_qs (2 samples, 0.10%)</title><rect x="839.8" y="339.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="842.8" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (7 samples, 0.34%)</title><rect x="841.0" y="403.0" width="4.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="844.0" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (7 samples, 0.34%)</title><rect x="841.0" y="387.0" width="4.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="844.0" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.20%)</title><rect x="842.7" y="371.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="845.7" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.15%)</title><rect x="843.3" y="355.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="846.3" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.05%)</title><rect x="843.9" y="339.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="846.9" y="350.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.05%)</title><rect x="844.4" y="339.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="847.4" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.05%)</title><rect x="844.4" y="323.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="847.4" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.05%)</title><rect x="844.4" y="307.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="847.4" y="318.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack_ipv4] (2 samples, 0.10%)</title><rect x="845.0" y="435.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="848.0" y="446.0"></text>
</g>
<g>
<title>ipv4_helper?[nf_conntrack_ipv4] (1 samples, 0.05%)</title><rect x="846.2" y="435.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="849.2" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.39%)</title><rect x="846.7" y="435.0" width="4.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="849.7" y="446.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (1 samples, 0.05%)</title><rect x="846.7" y="419.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="849.7" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.05%)</title><rect x="846.7" y="403.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="849.7" y="414.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_out?[iptable_nat] (2 samples, 0.10%)</title><rect x="847.3" y="419.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="850.3" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (1 samples, 0.05%)</title><rect x="847.3" y="403.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="850.3" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat_ipv4] (1 samples, 0.05%)</title><rect x="847.9" y="403.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="850.9" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (1 samples, 0.05%)</title><rect x="847.9" y="387.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="850.9" y="398.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack_ipv4] (5 samples, 0.24%)</title><rect x="848.5" y="419.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="851.5" y="430.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (5 samples, 0.24%)</title><rect x="848.5" y="403.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="851.5" y="414.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.05%)</title><rect x="851.4" y="451.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="854.4" y="462.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.10%)</title><rect x="851.9" y="483.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="854.9" y="494.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.10%)</title><rect x="851.9" y="467.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="854.9" y="478.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.05%)</title><rect x="853.1" y="499.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="856.1" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.10%)</title><rect x="853.7" y="499.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="856.7" y="510.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.05%)</title><rect x="854.8" y="499.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="857.8" y="510.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.10%)</title><rect x="855.4" y="499.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="858.4" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.05%)</title><rect x="856.0" y="483.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="859.0" y="494.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.05%)</title><rect x="856.0" y="467.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="859.0" y="478.0"></text>
</g>
<g>
<title>tcp_tso_segs (1 samples, 0.05%)</title><rect x="856.6" y="499.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="859.6" y="510.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.05%)</title><rect x="857.1" y="499.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="860.1" y="510.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.10%)</title><rect x="857.7" y="547.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="860.7" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.10%)</title><rect x="857.7" y="531.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="860.7" y="542.0"></text>
</g>
<g>
<title>tcp_established_options (2 samples, 0.10%)</title><rect x="857.7" y="515.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="860.7" y="526.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (1 samples, 0.05%)</title><rect x="858.3" y="499.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="861.3" y="510.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.05%)</title><rect x="858.9" y="563.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="861.9" y="574.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.10%)</title><rect x="859.5" y="595.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="862.5" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.05%)</title><rect x="860.0" y="579.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="863.0" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.05%)</title><rect x="860.0" y="563.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="863.0" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.05%)</title><rect x="860.0" y="547.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="863.0" y="558.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.05%)</title><rect x="860.6" y="611.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="863.6" y="622.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.05%)</title><rect x="860.6" y="595.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="863.6" y="606.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="860.6" y="579.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="863.6" y="590.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.05%)</title><rect x="860.6" y="563.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="863.6" y="574.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.15%)</title><rect x="861.2" y="723.0" width="1.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="864.2" y="734.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="861.2" y="707.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="864.2" y="718.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.10%)</title><rect x="861.8" y="707.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="864.8" y="718.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.10%)</title><rect x="861.8" y="691.0" width="1.1" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="864.8" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.15%)</title><rect x="862.9" y="771.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="865.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.10%)</title><rect x="863.5" y="755.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="866.5" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.10%)</title><rect x="863.5" y="739.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="866.5" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.10%)</title><rect x="863.5" y="723.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="866.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (11 samples, 0.54%)</title><rect x="864.7" y="787.0" width="6.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="867.7" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (10 samples, 0.49%)</title><rect x="864.7" y="771.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="867.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="864.7" y="755.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="867.7" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.05%)</title><rect x="864.7" y="739.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="867.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (4 samples, 0.20%)</title><rect x="865.2" y="755.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="868.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.15%)</title><rect x="865.8" y="739.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="868.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.10%)</title><rect x="866.4" y="723.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="869.4" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.20%)</title><rect x="867.6" y="755.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="870.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.20%)</title><rect x="867.6" y="739.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="870.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.20%)</title><rect x="867.6" y="723.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="870.6" y="734.0"></text>
</g>
<g>
<title>jbyte_arraycopy (3 samples, 0.15%)</title><rect x="867.6" y="707.0" width="1.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="870.6" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="869.3" y="707.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="872.3" y="718.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.05%)</title><rect x="869.9" y="755.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="872.9" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="869.9" y="739.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="872.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="869.9" y="723.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="872.9" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.05%)</title><rect x="869.9" y="707.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="872.9" y="718.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.05%)</title><rect x="870.4" y="771.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="873.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.get (98 samples, 4.80%)</title><rect x="871.0" y="787.0" width="56.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="874.0" y="798.0">ru/mai..</text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.05%)</title><rect x="871.6" y="771.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="874.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (96 samples, 4.70%)</title><rect x="872.2" y="771.0" width="55.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="875.2" y="782.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (6 samples, 0.29%)</title><rect x="872.2" y="755.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="875.2" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (6 samples, 0.29%)</title><rect x="872.2" y="739.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="875.2" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (6 samples, 0.29%)</title><rect x="872.2" y="723.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="875.2" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (6 samples, 0.29%)</title><rect x="872.2" y="707.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="875.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (6 samples, 0.29%)</title><rect x="872.2" y="691.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="875.2" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.20%)</title><rect x="872.2" y="675.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="875.2" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (4 samples, 0.20%)</title><rect x="872.2" y="659.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="875.2" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (4 samples, 0.20%)</title><rect x="872.2" y="643.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="875.2" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (4 samples, 0.20%)</title><rect x="872.2" y="627.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="875.2" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (4 samples, 0.20%)</title><rect x="872.2" y="611.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="875.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4 samples, 0.20%)</title><rect x="872.2" y="595.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="875.2" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.15%)</title><rect x="872.8" y="579.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="875.8" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (3 samples, 0.15%)</title><rect x="872.8" y="563.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="875.8" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (2 samples, 0.10%)</title><rect x="872.8" y="547.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="875.8" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (2 samples, 0.10%)</title><rect x="872.8" y="531.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="875.8" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1 samples, 0.05%)</title><rect x="873.3" y="515.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="876.3" y="526.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1 samples, 0.05%)</title><rect x="873.9" y="547.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="876.9" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1 samples, 0.05%)</title><rect x="873.9" y="531.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="876.9" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1 samples, 0.05%)</title><rect x="873.9" y="515.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="876.9" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (1 samples, 0.05%)</title><rect x="873.9" y="499.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="876.9" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.getAsBoolean (1 samples, 0.05%)</title><rect x="873.9" y="483.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="876.9" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (1 samples, 0.05%)</title><rect x="873.9" y="467.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="876.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (1 samples, 0.05%)</title><rect x="873.9" y="451.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="876.9" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.05%)</title><rect x="873.9" y="435.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="876.9" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$62/987822523.apply (1 samples, 0.05%)</title><rect x="873.9" y="419.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="876.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (1 samples, 0.05%)</title><rect x="873.9" y="403.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="876.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$115/1349025670.apply (2 samples, 0.10%)</title><rect x="874.5" y="675.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="877.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (2 samples, 0.10%)</title><rect x="874.5" y="659.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="877.5" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (2 samples, 0.10%)</title><rect x="874.5" y="643.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="877.5" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.10%)</title><rect x="874.5" y="627.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="877.5" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.10%)</title><rect x="874.5" y="611.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="877.5" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (1 samples, 0.05%)</title><rect x="874.5" y="595.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="877.5" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="875.1" y="595.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="878.1" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="875.1" y="579.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="878.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (90 samples, 4.41%)</title><rect x="875.6" y="755.0" width="52.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="878.6" y="766.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (2 samples, 0.10%)</title><rect x="875.6" y="739.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="878.6" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="875.6" y="723.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="878.6" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="875.6" y="707.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="878.6" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.&lt;init&gt; (1 samples, 0.05%)</title><rect x="876.2" y="723.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="879.2" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (3 samples, 0.15%)</title><rect x="876.8" y="739.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="879.8" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.&lt;init&gt; (1 samples, 0.05%)</title><rect x="878.0" y="723.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="881.0" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="878.0" y="707.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="881.0" y="718.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.05%)</title><rect x="878.0" y="691.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="881.0" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.05%)</title><rect x="878.5" y="739.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="881.5" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="878.5" y="723.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="881.5" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="878.5" y="707.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="881.5" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="878.5" y="691.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="881.5" y="702.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.05%)</title><rect x="878.5" y="675.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="881.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (7 samples, 0.34%)</title><rect x="879.1" y="739.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="882.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (7 samples, 0.34%)</title><rect x="879.1" y="723.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="882.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (7 samples, 0.34%)</title><rect x="879.1" y="707.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="882.1" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.05%)</title><rect x="880.3" y="691.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="883.3" y="702.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.05%)</title><rect x="880.3" y="675.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="883.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (1 samples, 0.05%)</title><rect x="880.3" y="659.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="883.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (1 samples, 0.05%)</title><rect x="880.3" y="643.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="883.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (3 samples, 0.15%)</title><rect x="880.8" y="691.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="883.8" y="702.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.05%)</title><rect x="882.0" y="675.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="885.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (1 samples, 0.05%)</title><rect x="882.6" y="691.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="885.6" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (51 samples, 2.50%)</title><rect x="883.2" y="739.0" width="29.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="886.2" y="750.0">ru..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (1 samples, 0.05%)</title><rect x="883.2" y="723.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="886.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (1 samples, 0.05%)</title><rect x="883.2" y="707.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="886.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="883.2" y="691.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="886.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (1 samples, 0.05%)</title><rect x="883.2" y="675.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="886.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (1 samples, 0.05%)</title><rect x="883.2" y="659.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="886.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (1 samples, 0.05%)</title><rect x="883.2" y="643.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="886.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (50 samples, 2.45%)</title><rect x="883.7" y="723.0" width="28.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="886.7" y="734.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (11 samples, 0.54%)</title><rect x="883.7" y="707.0" width="6.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="886.7" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (11 samples, 0.54%)</title><rect x="883.7" y="691.0" width="6.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="886.7" y="702.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (10 samples, 0.49%)</title><rect x="884.3" y="675.0" width="5.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="887.3" y="686.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (9 samples, 0.44%)</title><rect x="884.9" y="659.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="887.9" y="670.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (9 samples, 0.44%)</title><rect x="884.9" y="643.0" width="5.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="887.9" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractSpinedBuffer.count (2 samples, 0.10%)</title><rect x="886.0" y="627.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="889.0" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.05%)</title><rect x="887.2" y="627.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="890.2" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (1 samples, 0.05%)</title><rect x="887.8" y="627.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="890.8" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.getAsBoolean (1 samples, 0.05%)</title><rect x="887.8" y="611.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="890.8" y="622.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (1 samples, 0.05%)</title><rect x="887.8" y="595.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="890.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (1 samples, 0.05%)</title><rect x="887.8" y="579.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="890.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.05%)</title><rect x="887.8" y="563.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="890.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.05%)</title><rect x="887.8" y="547.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="890.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (1 samples, 0.05%)</title><rect x="887.8" y="531.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="890.8" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (3 samples, 0.15%)</title><rect x="888.4" y="627.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="891.4" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.05%)</title><rect x="888.4" y="611.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="891.4" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.05%)</title><rect x="888.4" y="595.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="891.4" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.get$Lambda (1 samples, 0.05%)</title><rect x="888.4" y="579.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="891.4" y="590.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.&lt;init&gt; (1 samples, 0.05%)</title><rect x="888.4" y="563.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="891.4" y="574.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (2 samples, 0.10%)</title><rect x="888.9" y="611.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="891.9" y="622.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (2 samples, 0.10%)</title><rect x="890.1" y="707.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="893.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (2 samples, 0.10%)</title><rect x="890.1" y="691.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="893.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (2 samples, 0.10%)</title><rect x="890.1" y="675.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="893.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.05%)</title><rect x="891.2" y="707.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="894.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (3 samples, 0.15%)</title><rect x="891.8" y="707.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="894.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (3 samples, 0.15%)</title><rect x="891.8" y="691.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="894.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared (3 samples, 0.15%)</title><rect x="891.8" y="675.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="894.8" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2 samples, 0.10%)</title><rect x="892.4" y="659.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="895.4" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (3 samples, 0.15%)</title><rect x="893.6" y="707.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="896.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (3 samples, 0.15%)</title><rect x="893.6" y="691.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="896.6" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.15%)</title><rect x="893.6" y="675.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="896.6" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (3 samples, 0.15%)</title><rect x="893.6" y="659.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="896.6" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (2 samples, 0.10%)</title><rect x="893.6" y="643.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="896.6" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (2 samples, 0.10%)</title><rect x="893.6" y="627.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="896.6" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (2 samples, 0.10%)</title><rect x="893.6" y="611.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="896.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2 samples, 0.10%)</title><rect x="893.6" y="595.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="896.6" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.05%)</title><rect x="893.6" y="579.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="896.6" y="590.0"></text>
</g>
<g>
<title>java/util/AbstractMap$SimpleImmutableEntry.&lt;init&gt; (1 samples, 0.05%)</title><rect x="893.6" y="563.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="896.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$95/351241919.apply (1 samples, 0.05%)</title><rect x="894.1" y="579.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="897.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (1 samples, 0.05%)</title><rect x="894.1" y="563.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="897.1" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (1 samples, 0.05%)</title><rect x="894.1" y="547.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="897.1" y="558.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1 samples, 0.05%)</title><rect x="894.7" y="643.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="897.7" y="654.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1 samples, 0.05%)</title><rect x="894.7" y="627.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="897.7" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1 samples, 0.05%)</title><rect x="894.7" y="611.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="897.7" y="622.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (1 samples, 0.05%)</title><rect x="894.7" y="595.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="897.7" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.getAsBoolean (1 samples, 0.05%)</title><rect x="894.7" y="579.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="897.7" y="590.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (1 samples, 0.05%)</title><rect x="894.7" y="563.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="897.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (1 samples, 0.05%)</title><rect x="894.7" y="547.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="897.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.05%)</title><rect x="894.7" y="531.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="897.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.05%)</title><rect x="894.7" y="515.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="897.7" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractMap$SimpleImmutableEntry.&lt;init&gt; (1 samples, 0.05%)</title><rect x="894.7" y="499.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="897.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (30 samples, 1.47%)</title><rect x="895.3" y="707.0" width="17.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="898.3" y="718.0"></text>
</g>
<g>
<title>java/util/Collection.stream (27 samples, 1.32%)</title><rect x="895.3" y="691.0" width="15.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="898.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (27 samples, 1.32%)</title><rect x="895.3" y="675.0" width="15.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="898.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (27 samples, 1.32%)</title><rect x="895.3" y="659.0" width="15.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="898.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (27 samples, 1.32%)</title><rect x="895.3" y="643.0" width="15.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="898.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (27 samples, 1.32%)</title><rect x="895.3" y="627.0" width="15.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="898.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (27 samples, 1.32%)</title><rect x="895.3" y="611.0" width="15.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="898.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.20%)</title><rect x="895.9" y="595.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="898.9" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.20%)</title><rect x="895.9" y="579.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="898.9" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.20%)</title><rect x="895.9" y="563.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="898.9" y="574.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.20%)</title><rect x="895.9" y="547.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="898.9" y="558.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.05%)</title><rect x="897.6" y="531.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="900.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (22 samples, 1.08%)</title><rect x="898.2" y="595.0" width="12.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="901.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (14 samples, 0.69%)</title><rect x="902.8" y="579.0" width="8.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="905.8" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (11 samples, 0.54%)</title><rect x="904.5" y="563.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="907.5" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.44%)</title><rect x="905.7" y="547.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="908.7" y="558.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (7 samples, 0.34%)</title><rect x="906.3" y="531.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="909.3" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.15%)</title><rect x="908.6" y="515.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="911.6" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.05%)</title><rect x="909.7" y="499.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="912.7" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.05%)</title><rect x="910.3" y="531.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="913.3" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.05%)</title><rect x="910.3" y="515.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="913.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.05%)</title><rect x="910.9" y="691.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="913.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.05%)</title><rect x="910.9" y="675.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="913.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.05%)</title><rect x="910.9" y="659.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="913.9" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (2 samples, 0.10%)</title><rect x="911.5" y="691.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="914.5" y="702.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (1 samples, 0.05%)</title><rect x="911.5" y="675.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="914.5" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (1 samples, 0.05%)</title><rect x="912.0" y="675.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="915.0" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.05%)</title><rect x="912.0" y="659.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="915.0" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.05%)</title><rect x="912.0" y="643.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="915.0" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$63/1805959361.get$Lambda (1 samples, 0.05%)</title><rect x="912.0" y="627.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="915.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (26 samples, 1.27%)</title><rect x="912.6" y="739.0" width="15.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="915.6" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (13 samples, 0.64%)</title><rect x="912.6" y="723.0" width="7.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="915.6" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (13 samples, 0.64%)</title><rect x="912.6" y="707.0" width="7.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="915.6" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (13 samples, 0.64%)</title><rect x="912.6" y="691.0" width="7.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="915.6" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (12 samples, 0.59%)</title><rect x="913.2" y="675.0" width="6.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="916.2" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (12 samples, 0.59%)</title><rect x="913.2" y="659.0" width="6.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="916.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (12 samples, 0.59%)</title><rect x="913.2" y="643.0" width="6.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="916.2" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.10%)</title><rect x="913.2" y="627.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="916.2" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (2 samples, 0.10%)</title><rect x="913.2" y="611.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="916.2" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.05%)</title><rect x="913.2" y="595.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="916.2" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.05%)</title><rect x="913.2" y="579.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="916.2" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1 samples, 0.05%)</title><rect x="913.2" y="563.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="916.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.05%)</title><rect x="913.2" y="547.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="916.2" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.05%)</title><rect x="913.2" y="531.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="916.2" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (1 samples, 0.05%)</title><rect x="913.2" y="515.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="916.2" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.05%)</title><rect x="913.2" y="499.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="916.2" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.05%)</title><rect x="913.2" y="483.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="916.2" y="494.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1 samples, 0.05%)</title><rect x="913.8" y="595.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="916.8" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1 samples, 0.05%)</title><rect x="913.8" y="579.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="916.8" y="590.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1 samples, 0.05%)</title><rect x="913.8" y="563.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="916.8" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (1 samples, 0.05%)</title><rect x="913.8" y="547.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="916.8" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.getAsBoolean (1 samples, 0.05%)</title><rect x="913.8" y="531.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="916.8" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (1 samples, 0.05%)</title><rect x="913.8" y="515.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="916.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (1 samples, 0.05%)</title><rect x="913.8" y="499.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="916.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.05%)</title><rect x="913.8" y="483.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="916.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.05%)</title><rect x="913.8" y="467.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="916.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (1 samples, 0.05%)</title><rect x="913.8" y="451.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="916.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (1 samples, 0.05%)</title><rect x="913.8" y="435.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="916.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$115/1349025670.apply (1 samples, 0.05%)</title><rect x="914.4" y="627.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="917.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (1 samples, 0.05%)</title><rect x="914.4" y="611.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="917.4" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (1 samples, 0.05%)</title><rect x="914.4" y="595.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="917.4" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.05%)</title><rect x="914.4" y="579.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="917.4" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.05%)</title><rect x="914.4" y="563.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="917.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$95/351241919.apply (9 samples, 0.44%)</title><rect x="914.9" y="627.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="917.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (9 samples, 0.44%)</title><rect x="914.9" y="611.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="917.9" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (9 samples, 0.44%)</title><rect x="914.9" y="595.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="917.9" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (9 samples, 0.44%)</title><rect x="914.9" y="579.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="917.9" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (9 samples, 0.44%)</title><rect x="914.9" y="563.0" width="5.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="917.9" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (9 samples, 0.44%)</title><rect x="914.9" y="547.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="917.9" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (9 samples, 0.44%)</title><rect x="914.9" y="531.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="917.9" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (9 samples, 0.44%)</title><rect x="914.9" y="515.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="917.9" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.10%)</title><rect x="916.1" y="499.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="919.1" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.24%)</title><rect x="917.2" y="499.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="920.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (13 samples, 0.64%)</title><rect x="920.1" y="723.0" width="7.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="923.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (13 samples, 0.64%)</title><rect x="920.1" y="707.0" width="7.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="923.1" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (12 samples, 0.59%)</title><rect x="920.7" y="691.0" width="6.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="923.7" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (11 samples, 0.54%)</title><rect x="920.7" y="675.0" width="6.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="923.7" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (11 samples, 0.54%)</title><rect x="920.7" y="659.0" width="6.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="923.7" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (11 samples, 0.54%)</title><rect x="920.7" y="643.0" width="6.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="923.7" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (11 samples, 0.54%)</title><rect x="920.7" y="627.0" width="6.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="923.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (11 samples, 0.54%)</title><rect x="920.7" y="611.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="923.7" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (9 samples, 0.44%)</title><rect x="920.7" y="595.0" width="5.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="923.7" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (8 samples, 0.39%)</title><rect x="920.7" y="579.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="923.7" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (3 samples, 0.15%)</title><rect x="920.7" y="563.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="923.7" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.05%)</title><rect x="921.9" y="547.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="924.9" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="921.9" y="531.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="924.9" y="542.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (5 samples, 0.24%)</title><rect x="922.4" y="563.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="925.4" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (5 samples, 0.24%)</title><rect x="922.4" y="547.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="925.4" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (4 samples, 0.20%)</title><rect x="923.0" y="531.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="926.0" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (4 samples, 0.20%)</title><rect x="923.0" y="515.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="926.0" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.getAsBoolean (3 samples, 0.15%)</title><rect x="923.6" y="499.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="926.6" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (3 samples, 0.15%)</title><rect x="923.6" y="483.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="926.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (3 samples, 0.15%)</title><rect x="923.6" y="467.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="926.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.10%)</title><rect x="923.6" y="451.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="926.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.10%)</title><rect x="923.6" y="435.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="926.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (2 samples, 0.10%)</title><rect x="923.6" y="419.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="926.6" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.05%)</title><rect x="924.2" y="403.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="927.2" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.05%)</title><rect x="924.8" y="451.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="927.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$62/987822523.apply (1 samples, 0.05%)</title><rect x="924.8" y="435.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="927.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (1 samples, 0.05%)</title><rect x="924.8" y="419.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="927.8" y="430.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="924.8" y="403.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="927.8" y="414.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="924.8" y="387.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="927.8" y="398.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1 samples, 0.05%)</title><rect x="925.3" y="579.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="928.3" y="590.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1 samples, 0.05%)</title><rect x="925.3" y="563.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="928.3" y="574.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1 samples, 0.05%)</title><rect x="925.3" y="547.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="928.3" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1 samples, 0.05%)</title><rect x="925.3" y="531.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="928.3" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.05%)</title><rect x="925.9" y="595.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="928.9" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.05%)</title><rect x="925.9" y="579.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="928.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$115/1349025670.apply (1 samples, 0.05%)</title><rect x="926.5" y="595.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="929.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (1 samples, 0.05%)</title><rect x="926.5" y="579.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="929.5" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (1 samples, 0.05%)</title><rect x="926.5" y="563.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="929.5" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.05%)</title><rect x="926.5" y="547.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="929.5" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.05%)</title><rect x="927.1" y="675.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="930.1" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (1 samples, 0.05%)</title><rect x="927.1" y="659.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="930.1" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.05%)</title><rect x="927.1" y="643.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="930.1" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.05%)</title><rect x="927.1" y="627.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="930.1" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1 samples, 0.05%)</title><rect x="927.1" y="611.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="930.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.05%)</title><rect x="927.1" y="595.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="930.1" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.05%)</title><rect x="927.1" y="579.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="930.1" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.05%)</title><rect x="927.1" y="563.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="930.1" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (1 samples, 0.05%)</title><rect x="927.1" y="547.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="930.1" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.05%)</title><rect x="927.1" y="531.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="930.1" y="542.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.05%)</title><rect x="927.6" y="803.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="930.6" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.05%)</title><rect x="927.6" y="787.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="930.6" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.05%)</title><rect x="927.6" y="771.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="930.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.05%)</title><rect x="927.6" y="755.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="930.6" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (10 samples, 0.49%)</title><rect x="928.2" y="835.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="931.2" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (6 samples, 0.29%)</title><rect x="928.8" y="819.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="931.8" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 0.10%)</title><rect x="931.1" y="803.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="934.1" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.15%)</title><rect x="932.3" y="819.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="935.3" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.10%)</title><rect x="932.9" y="803.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="935.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.05%)</title><rect x="934.0" y="835.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="937.0" y="846.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.05%)</title><rect x="934.0" y="819.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="937.0" y="830.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.05%)</title><rect x="934.0" y="803.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="937.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.05%)</title><rect x="934.0" y="787.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="937.0" y="798.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="934.0" y="771.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="937.0" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.05%)</title><rect x="934.6" y="835.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="937.6" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.05%)</title><rect x="934.6" y="819.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="937.6" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.05%)</title><rect x="934.6" y="803.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="937.6" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.05%)</title><rect x="934.6" y="787.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="937.6" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (55 samples, 2.69%)</title><rect x="935.2" y="851.0" width="31.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="938.2" y="862.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (55 samples, 2.69%)</title><rect x="935.2" y="835.0" width="31.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="938.2" y="846.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.15%)</title><rect x="936.9" y="819.0" width="1.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="939.9" y="830.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned (1 samples, 0.05%)</title><rect x="937.5" y="803.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="940.5" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.05%)</title><rect x="938.1" y="803.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="941.1" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.05%)</title><rect x="938.1" y="787.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="941.1" y="798.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.05%)</title><rect x="938.1" y="771.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="941.1" y="782.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.05%)</title><rect x="938.1" y="755.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="941.1" y="766.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.05%)</title><rect x="938.1" y="739.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="941.1" y="750.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.05%)</title><rect x="938.1" y="723.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="941.1" y="734.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.05%)</title><rect x="938.1" y="707.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="941.1" y="718.0"></text>
</g>
<g>
<title>rebalance_domains (1 samples, 0.05%)</title><rect x="938.1" y="691.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="941.1" y="702.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.05%)</title><rect x="938.1" y="675.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="941.1" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="938.1" y="659.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="941.1" y="670.0"></text>
</g>
<g>
<title>recv (49 samples, 2.40%)</title><rect x="938.6" y="819.0" width="28.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="941.6" y="830.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (38 samples, 1.86%)</title><rect x="945.0" y="803.0" width="21.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="948.0" y="814.0">e..</text>
</g>
<g>
<title>do_syscall_64 (38 samples, 1.86%)</title><rect x="945.0" y="787.0" width="21.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="948.0" y="798.0">d..</text>
</g>
<g>
<title>sys_recvfrom (32 samples, 1.57%)</title><rect x="948.5" y="771.0" width="18.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="951.5" y="782.0"></text>
</g>
<g>
<title>SYSC_recvfrom (31 samples, 1.52%)</title><rect x="948.5" y="755.0" width="17.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="951.5" y="766.0"></text>
</g>
<g>
<title>inet_recvmsg (1 samples, 0.05%)</title><rect x="949.0" y="739.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="952.0" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (25 samples, 1.22%)</title><rect x="949.6" y="739.0" width="14.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="952.6" y="750.0"></text>
</g>
<g>
<title>inet_recvmsg (21 samples, 1.03%)</title><rect x="950.2" y="723.0" width="12.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="953.2" y="734.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.05%)</title><rect x="951.3" y="707.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="954.3" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (18 samples, 0.88%)</title><rect x="951.9" y="707.0" width="10.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="954.9" y="718.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.20%)</title><rect x="953.7" y="691.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="956.7" y="702.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.20%)</title><rect x="953.7" y="675.0" width="2.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="956.7" y="686.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.15%)</title><rect x="953.7" y="659.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="956.7" y="670.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.05%)</title><rect x="955.4" y="659.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="958.4" y="670.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.05%)</title><rect x="956.0" y="691.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="959.0" y="702.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.05%)</title><rect x="956.0" y="675.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="959.0" y="686.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (6 samples, 0.29%)</title><rect x="956.5" y="691.0" width="3.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="959.5" y="702.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.05%)</title><rect x="956.5" y="675.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="959.5" y="686.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.20%)</title><rect x="957.1" y="675.0" width="2.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="960.1" y="686.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (4 samples, 0.20%)</title><rect x="957.1" y="659.0" width="2.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="960.1" y="670.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.05%)</title><rect x="959.4" y="675.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="962.4" y="686.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.05%)</title><rect x="960.0" y="691.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="963.0" y="702.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (3 samples, 0.15%)</title><rect x="960.6" y="691.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="963.6" y="702.0"></text>
</g>
<g>
<title>sched_clock_cpu (3 samples, 0.15%)</title><rect x="960.6" y="675.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="963.6" y="686.0"></text>
</g>
<g>
<title>sched_clock (2 samples, 0.10%)</title><rect x="961.2" y="659.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="964.2" y="670.0"></text>
</g>
<g>
<title>native_sched_clock (2 samples, 0.10%)</title><rect x="961.2" y="643.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="964.2" y="654.0"></text>
</g>
<g>
<title>security_socket_recvmsg (3 samples, 0.15%)</title><rect x="962.3" y="723.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="965.3" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (3 samples, 0.15%)</title><rect x="962.3" y="707.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="965.3" y="718.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.05%)</title><rect x="962.3" y="691.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="965.3" y="702.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.10%)</title><rect x="962.9" y="691.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="965.9" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.10%)</title><rect x="962.9" y="675.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="965.9" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.20%)</title><rect x="964.1" y="739.0" width="2.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="967.1" y="750.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.15%)</title><rect x="964.1" y="723.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="967.1" y="734.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.15%)</title><rect x="964.1" y="707.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="967.1" y="718.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.15%)</title><rect x="964.1" y="691.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="967.1" y="702.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="965.8" y="723.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="968.8" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.05%)</title><rect x="966.4" y="755.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="969.4" y="766.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=16340] (382 samples, 18.71%)</title><rect x="966.9" y="915.0" width="220.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="969.9" y="926.0">[NIO Selector #3 tid=16340]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (382 samples, 18.71%)</title><rect x="966.9" y="899.0" width="220.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="969.9" y="910.0">one/nio/server/SelectorThread..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (1 samples, 0.05%)</title><rect x="966.9" y="883.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="969.9" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (8 samples, 0.39%)</title><rect x="967.5" y="883.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="970.5" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (8 samples, 0.39%)</title><rect x="967.5" y="867.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="970.5" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (59 samples, 2.89%)</title><rect x="972.1" y="883.0" width="34.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="975.1" y="894.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (3 samples, 0.15%)</title><rect x="973.3" y="867.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="976.3" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.05%)</title><rect x="974.5" y="851.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="977.5" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (54 samples, 2.64%)</title><rect x="975.0" y="867.0" width="31.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="978.0" y="878.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.05%)</title><rect x="976.2" y="851.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="979.2" y="862.0"></text>
</g>
<g>
<title>__clock_gettime (3 samples, 0.15%)</title><rect x="976.8" y="851.0" width="1.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="979.8" y="862.0"></text>
</g>
<g>
<title>epoll_wait (42 samples, 2.06%)</title><rect x="978.5" y="851.0" width="24.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="981.5" y="862.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (34 samples, 1.67%)</title><rect x="983.1" y="835.0" width="19.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="986.1" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (34 samples, 1.67%)</title><rect x="983.1" y="819.0" width="19.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="986.1" y="830.0"></text>
</g>
<g>
<title>sys_epoll_wait (33 samples, 1.62%)</title><rect x="983.7" y="803.0" width="19.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="986.7" y="814.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.05%)</title><rect x="983.7" y="787.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="986.7" y="798.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.05%)</title><rect x="983.7" y="771.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="986.7" y="782.0"></text>
</g>
<g>
<title>ep_poll (31 samples, 1.52%)</title><rect x="984.3" y="787.0" width="17.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="987.3" y="798.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.10%)</title><rect x="984.3" y="771.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="987.3" y="782.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.05%)</title><rect x="985.4" y="771.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="988.4" y="782.0"></text>
</g>
<g>
<title>ep_scan_ready_list (12 samples, 0.59%)</title><rect x="986.0" y="771.0" width="6.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="989.0" y="782.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.10%)</title><rect x="986.0" y="755.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="989.0" y="766.0"></text>
</g>
<g>
<title>ep_send_events_proc (10 samples, 0.49%)</title><rect x="987.2" y="755.0" width="5.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="990.2" y="766.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (5 samples, 0.24%)</title><rect x="988.9" y="739.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="991.9" y="750.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.05%)</title><rect x="991.2" y="723.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="994.2" y="734.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.10%)</title><rect x="991.8" y="739.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="994.8" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.05%)</title><rect x="992.9" y="771.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="995.9" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (14 samples, 0.69%)</title><rect x="993.5" y="771.0" width="8.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="996.5" y="782.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.10%)</title><rect x="993.5" y="755.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="996.5" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (12 samples, 0.59%)</title><rect x="994.7" y="755.0" width="6.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="997.7" y="766.0"></text>
</g>
<g>
<title>schedule (11 samples, 0.54%)</title><rect x="995.3" y="739.0" width="6.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="998.3" y="750.0"></text>
</g>
<g>
<title>__schedule (10 samples, 0.49%)</title><rect x="995.8" y="723.0" width="5.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="998.8" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (7 samples, 0.34%)</title><rect x="997.6" y="707.0" width="4.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1000.6" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.05%)</title><rect x="1001.6" y="771.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1004.6" y="782.0"></text>
</g>
<g>
<title>ep_scan_ready_list (1 samples, 0.05%)</title><rect x="1002.2" y="787.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1005.2" y="798.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.10%)</title><rect x="1002.8" y="851.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1005.8" y="862.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.10%)</title><rect x="1002.8" y="835.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1005.8" y="846.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.10%)</title><rect x="1002.8" y="819.0" width="1.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1005.8" y="830.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="1003.3" y="803.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1006.3" y="814.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.20%)</title><rect x="1003.9" y="851.0" width="2.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1006.9" y="862.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.20%)</title><rect x="1003.9" y="835.0" width="2.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1006.9" y="846.0"></text>
</g>
<g>
<title>__clock_gettime (3 samples, 0.15%)</title><rect x="1003.9" y="819.0" width="1.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1006.9" y="830.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.05%)</title><rect x="1005.1" y="803.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1008.1" y="814.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.05%)</title><rect x="1005.7" y="819.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1008.7" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (314 samples, 15.38%)</title><rect x="1006.2" y="883.0" width="181.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1009.2" y="894.0">one/nio/net/Session.pro..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (314 samples, 15.38%)</title><rect x="1006.2" y="867.0" width="181.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1009.2" y="878.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (266 samples, 13.03%)</title><rect x="1006.8" y="851.0" width="153.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1009.8" y="862.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (255 samples, 12.49%)</title><rect x="1008.0" y="835.0" width="147.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1011.0" y="846.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (255 samples, 12.49%)</title><rect x="1008.0" y="819.0" width="147.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1011.0" y="830.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (251 samples, 12.29%)</title><rect x="1008.6" y="803.0" width="145.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1011.6" y="814.0">RequestHandler0_ge..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (178 samples, 8.72%)</title><rect x="1008.6" y="787.0" width="102.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1011.6" y="798.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (175 samples, 8.57%)</title><rect x="1009.1" y="771.0" width="101.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1012.1" y="782.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.15%)</title><rect x="1009.1" y="755.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1012.1" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.10%)</title><rect x="1009.7" y="739.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1012.7" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.05%)</title><rect x="1009.7" y="723.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1012.7" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.05%)</title><rect x="1010.3" y="723.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1013.3" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.05%)</title><rect x="1010.3" y="707.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1013.3" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.05%)</title><rect x="1010.3" y="691.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1013.3" y="702.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.05%)</title><rect x="1010.3" y="675.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1013.3" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.05%)</title><rect x="1010.3" y="659.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1013.3" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (172 samples, 8.42%)</title><rect x="1010.9" y="755.0" width="99.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1013.9" y="766.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/net/Session.write (171 samples, 8.37%)</title><rect x="1011.4" y="739.0" width="98.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1014.4" y="750.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (170 samples, 8.33%)</title><rect x="1011.4" y="723.0" width="98.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1014.4" y="734.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (170 samples, 8.33%)</title><rect x="1011.4" y="707.0" width="98.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1014.4" y="718.0">one/nio/net/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.20%)</title><rect x="1012.0" y="691.0" width="2.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1015.0" y="702.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.05%)</title><rect x="1012.6" y="675.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1015.6" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.10%)</title><rect x="1013.2" y="675.0" width="1.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1016.2" y="686.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.05%)</title><rect x="1013.2" y="659.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1016.2" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.05%)</title><rect x="1013.8" y="659.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1016.8" y="670.0"></text>
</g>
<g>
<title>send (165 samples, 8.08%)</title><rect x="1014.3" y="691.0" width="95.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1017.3" y="702.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (159 samples, 7.79%)</title><rect x="1017.8" y="675.0" width="91.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1020.8" y="686.0">entry_SYSCA..</text>
</g>
<g>
<title>do_syscall_64 (158 samples, 7.74%)</title><rect x="1017.8" y="659.0" width="91.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1020.8" y="670.0">do_syscall_64</text>
</g>
<g>
<title>SYSC_sendto (2 samples, 0.10%)</title><rect x="1019.0" y="643.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1022.0" y="654.0"></text>
</g>
<g>
<title>sys_sendto (154 samples, 7.54%)</title><rect x="1020.1" y="643.0" width="89.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1023.1" y="654.0">sys_sendto</text>
</g>
<g>
<title>SYSC_sendto (153 samples, 7.49%)</title><rect x="1020.7" y="627.0" width="88.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1023.7" y="638.0">SYSC_sendto</text>
</g>
<g>
<title>sock_sendmsg (152 samples, 7.44%)</title><rect x="1020.7" y="611.0" width="87.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1023.7" y="622.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (150 samples, 7.35%)</title><rect x="1021.8" y="595.0" width="86.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1024.8" y="606.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (150 samples, 7.35%)</title><rect x="1021.8" y="579.0" width="86.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1024.8" y="590.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.05%)</title><rect x="1021.8" y="563.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1024.8" y="574.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.05%)</title><rect x="1021.8" y="547.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1024.8" y="558.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.05%)</title><rect x="1022.4" y="563.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1025.4" y="574.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.05%)</title><rect x="1023.0" y="563.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1026.0" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (147 samples, 7.20%)</title><rect x="1023.6" y="563.0" width="84.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1026.6" y="574.0">tcp_sendms..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.05%)</title><rect x="1023.6" y="547.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1026.6" y="558.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.05%)</title><rect x="1024.2" y="547.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1027.2" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (3 samples, 0.15%)</title><rect x="1024.7" y="547.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1027.7" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.15%)</title><rect x="1024.7" y="531.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1027.7" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (3 samples, 0.15%)</title><rect x="1024.7" y="515.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1027.7" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.10%)</title><rect x="1024.7" y="499.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1027.7" y="510.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.05%)</title><rect x="1025.3" y="483.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1028.3" y="494.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.05%)</title><rect x="1025.9" y="499.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1028.9" y="510.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.05%)</title><rect x="1026.5" y="547.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1029.5" y="558.0"></text>
</g>
<g>
<title>tcp_push (139 samples, 6.81%)</title><rect x="1027.0" y="547.0" width="80.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1030.0" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (139 samples, 6.81%)</title><rect x="1027.0" y="531.0" width="80.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1030.0" y="542.0">__tcp_pus..</text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.05%)</title><rect x="1027.0" y="515.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1030.0" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (138 samples, 6.76%)</title><rect x="1027.6" y="515.0" width="79.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1030.6" y="526.0">tcp_write..</text>
</g>
<g>
<title>__tcp_transmit_skb (129 samples, 6.32%)</title><rect x="1030.5" y="499.0" width="74.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1033.5" y="510.0">__tcp_tr..</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.05%)</title><rect x="1032.2" y="483.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1035.2" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (122 samples, 5.97%)</title><rect x="1032.8" y="483.0" width="70.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1035.8" y="494.0">ip_queue..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.05%)</title><rect x="1032.8" y="467.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1035.8" y="478.0"></text>
</g>
<g>
<title>ip_local_out (120 samples, 5.88%)</title><rect x="1033.4" y="467.0" width="69.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1036.4" y="478.0">ip_loca..</text>
</g>
<g>
<title>__ip_local_out (26 samples, 1.27%)</title><rect x="1033.4" y="451.0" width="15.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1036.4" y="462.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.05%)</title><rect x="1033.4" y="435.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1036.4" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (1 samples, 0.05%)</title><rect x="1034.0" y="435.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1037.0" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (24 samples, 1.18%)</title><rect x="1034.6" y="435.0" width="13.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1037.6" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (3 samples, 0.15%)</title><rect x="1034.6" y="419.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1037.6" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (3 samples, 0.15%)</title><rect x="1034.6" y="403.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1037.6" y="414.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (4 samples, 0.20%)</title><rect x="1036.3" y="419.0" width="2.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1039.3" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (4 samples, 0.20%)</title><rect x="1036.3" y="403.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1039.3" y="414.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn?[iptable_nat] (1 samples, 0.05%)</title><rect x="1038.6" y="419.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1041.6" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (1 samples, 0.05%)</title><rect x="1038.6" y="403.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1041.6" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (1 samples, 0.05%)</title><rect x="1038.6" y="387.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1041.6" y="398.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack_ipv4] (15 samples, 0.73%)</title><rect x="1039.2" y="419.0" width="8.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1042.2" y="430.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (2 samples, 0.10%)</title><rect x="1039.8" y="403.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1042.8" y="414.0"></text>
</g>
<g>
<title>ipv4_get_l4proto?[nf_conntrack_ipv4] (1 samples, 0.05%)</title><rect x="1040.9" y="403.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1043.9" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (10 samples, 0.49%)</title><rect x="1041.5" y="403.0" width="5.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1044.5" y="414.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.05%)</title><rect x="1042.6" y="387.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1045.6" y="398.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (7 samples, 0.34%)</title><rect x="1043.2" y="387.0" width="4.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1046.2" y="398.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (3 samples, 0.15%)</title><rect x="1045.5" y="371.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1048.5" y="382.0"></text>
</g>
<g>
<title>tcp_get_timeouts?[nf_conntrack] (1 samples, 0.05%)</title><rect x="1047.3" y="403.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1050.3" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.05%)</title><rect x="1047.8" y="419.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1050.8" y="430.0"></text>
</g>
<g>
<title>ip_output (92 samples, 4.51%)</title><rect x="1048.4" y="451.0" width="53.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1051.4" y="462.0">ip_ou..</text>
</g>
<g>
<title>__indirect_thunk_start (1 samples, 0.05%)</title><rect x="1048.4" y="435.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1051.4" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.10%)</title><rect x="1049.0" y="435.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1052.0" y="446.0"></text>
</g>
<g>
<title>ip_finish_output (88 samples, 4.31%)</title><rect x="1050.2" y="435.0" width="50.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1053.2" y="446.0">ip_fi..</text>
</g>
<g>
<title>ip_finish_output2 (87 samples, 4.26%)</title><rect x="1050.7" y="419.0" width="50.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1053.7" y="430.0">ip_fi..</text>
</g>
<g>
<title>__local_bh_enable_ip (71 samples, 3.48%)</title><rect x="1054.8" y="403.0" width="41.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1057.8" y="414.0">__l..</text>
</g>
<g>
<title>do_softirq.part.17 (70 samples, 3.43%)</title><rect x="1055.4" y="387.0" width="40.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1058.4" y="398.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (69 samples, 3.38%)</title><rect x="1055.9" y="371.0" width="39.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1058.9" y="382.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (68 samples, 3.33%)</title><rect x="1055.9" y="355.0" width="39.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1058.9" y="366.0">__s..</text>
</g>
<g>
<title>net_rx_action (63 samples, 3.09%)</title><rect x="1058.8" y="339.0" width="36.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1061.8" y="350.0">net..</text>
</g>
<g>
<title>process_backlog (62 samples, 3.04%)</title><rect x="1059.4" y="323.0" width="35.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1062.4" y="334.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (61 samples, 2.99%)</title><rect x="1060.0" y="307.0" width="35.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1063.0" y="318.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_core (61 samples, 2.99%)</title><rect x="1060.0" y="291.0" width="35.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1063.0" y="302.0">__n..</text>
</g>
<g>
<title>ip_rcv (58 samples, 2.84%)</title><rect x="1061.1" y="275.0" width="33.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1064.1" y="286.0">ip..</text>
</g>
<g>
<title>ip_rcv_finish (51 samples, 2.50%)</title><rect x="1062.3" y="259.0" width="29.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1065.3" y="270.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (49 samples, 2.40%)</title><rect x="1063.4" y="243.0" width="28.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1066.4" y="254.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (43 samples, 2.11%)</title><rect x="1063.4" y="227.0" width="24.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1066.4" y="238.0">i..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.05%)</title><rect x="1063.4" y="211.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1066.4" y="222.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.05%)</title><rect x="1064.0" y="211.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1067.0" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (41 samples, 2.01%)</title><rect x="1064.6" y="211.0" width="23.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1067.6" y="222.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.10%)</title><rect x="1064.6" y="195.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1067.6" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (39 samples, 1.91%)</title><rect x="1065.8" y="195.0" width="22.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1068.8" y="206.0">t..</text>
</g>
<g>
<title>tcp_check_space (3 samples, 0.15%)</title><rect x="1065.8" y="179.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1068.8" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (36 samples, 1.76%)</title><rect x="1067.5" y="179.0" width="20.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1070.5" y="190.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.05%)</title><rect x="1068.6" y="163.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1071.6" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.05%)</title><rect x="1068.6" y="147.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1071.6" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.05%)</title><rect x="1068.6" y="131.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1071.6" y="142.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.05%)</title><rect x="1068.6" y="115.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1071.6" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="1068.6" y="99.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1071.6" y="110.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.05%)</title><rect x="1069.2" y="163.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1072.2" y="174.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.05%)</title><rect x="1069.8" y="163.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1072.8" y="174.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.05%)</title><rect x="1070.4" y="163.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1073.4" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.05%)</title><rect x="1071.0" y="163.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1074.0" y="174.0"></text>
</g>
<g>
<title>tcp_ack (10 samples, 0.49%)</title><rect x="1071.5" y="163.0" width="5.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1074.5" y="174.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.05%)</title><rect x="1072.1" y="147.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1075.1" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (7 samples, 0.34%)</title><rect x="1072.7" y="147.0" width="4.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1075.7" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.10%)</title><rect x="1074.4" y="131.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1077.4" y="142.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.10%)</title><rect x="1074.4" y="115.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1077.4" y="126.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.10%)</title><rect x="1074.4" y="99.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1077.4" y="110.0"></text>
</g>
<g>
<title>rb_next (1 samples, 0.05%)</title><rect x="1075.6" y="131.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1078.6" y="142.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.05%)</title><rect x="1076.2" y="131.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1079.2" y="142.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.05%)</title><rect x="1076.7" y="147.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1079.7" y="158.0"></text>
</g>
<g>
<title>tcp_data_queue (19 samples, 0.93%)</title><rect x="1077.3" y="163.0" width="11.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1080.3" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (19 samples, 0.93%)</title><rect x="1077.3" y="147.0" width="11.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1080.3" y="158.0"></text>
</g>
<g>
<title>__wake_up_sync_key (18 samples, 0.88%)</title><rect x="1077.9" y="131.0" width="10.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1080.9" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (18 samples, 0.88%)</title><rect x="1077.9" y="115.0" width="10.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1080.9" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (17 samples, 0.83%)</title><rect x="1078.5" y="99.0" width="9.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1081.5" y="110.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (1 samples, 0.05%)</title><rect x="1088.3" y="227.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1091.3" y="238.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack_ipv4] (1 samples, 0.05%)</title><rect x="1088.9" y="227.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1091.9" y="238.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.20%)</title><rect x="1089.5" y="227.0" width="2.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1092.5" y="238.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.05%)</title><rect x="1089.5" y="211.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1092.5" y="222.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.05%)</title><rect x="1089.5" y="195.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1092.5" y="206.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (2 samples, 0.10%)</title><rect x="1090.0" y="211.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1093.0" y="222.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.10%)</title><rect x="1090.0" y="195.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1093.0" y="206.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_fn?[iptable_nat] (1 samples, 0.05%)</title><rect x="1091.2" y="211.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1094.2" y="222.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (1 samples, 0.05%)</title><rect x="1091.2" y="195.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1094.2" y="206.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (2 samples, 0.10%)</title><rect x="1091.8" y="259.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1094.8" y="270.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (1 samples, 0.05%)</title><rect x="1092.9" y="259.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1095.9" y="270.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.10%)</title><rect x="1093.5" y="259.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1096.5" y="270.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (1 samples, 0.05%)</title><rect x="1093.5" y="243.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1096.5" y="254.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.05%)</title><rect x="1093.5" y="227.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1096.5" y="238.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack_ipv4] (1 samples, 0.05%)</title><rect x="1094.1" y="243.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1097.1" y="254.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.05%)</title><rect x="1094.1" y="227.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1097.1" y="238.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.05%)</title><rect x="1094.7" y="275.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1097.7" y="286.0"></text>
</g>
<g>
<title>rcu_bh_qs (1 samples, 0.05%)</title><rect x="1095.2" y="355.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1098.2" y="366.0"></text>
</g>
<g>
<title>dev_queue_xmit (9 samples, 0.44%)</title><rect x="1095.8" y="403.0" width="5.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1098.8" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (9 samples, 0.44%)</title><rect x="1095.8" y="387.0" width="5.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1098.8" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.15%)</title><rect x="1096.4" y="371.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1099.4" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.10%)</title><rect x="1097.0" y="355.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1100.0" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.10%)</title><rect x="1097.0" y="339.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1100.0" y="350.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.05%)</title><rect x="1098.1" y="371.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1101.1" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.10%)</title><rect x="1098.7" y="371.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1101.7" y="382.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.05%)</title><rect x="1099.3" y="355.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1102.3" y="366.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (2 samples, 0.10%)</title><rect x="1099.9" y="371.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1102.9" y="382.0"></text>
</g>
<g>
<title>iptable_mangle_hook?[iptable_mangle] (1 samples, 0.05%)</title><rect x="1101.0" y="435.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1104.0" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.10%)</title><rect x="1101.6" y="451.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1104.6" y="462.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.05%)</title><rect x="1102.7" y="467.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1105.7" y="478.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.10%)</title><rect x="1103.3" y="483.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1106.3" y="494.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.05%)</title><rect x="1103.9" y="467.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1106.9" y="478.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.05%)</title><rect x="1104.5" y="483.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1107.5" y="494.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.05%)</title><rect x="1105.1" y="499.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1108.1" y="510.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.05%)</title><rect x="1105.1" y="483.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1108.1" y="494.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.05%)</title><rect x="1105.1" y="467.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1108.1" y="478.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.05%)</title><rect x="1105.6" y="499.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1108.6" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.05%)</title><rect x="1106.2" y="499.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1109.2" y="510.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.05%)</title><rect x="1106.8" y="499.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1109.8" y="510.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.05%)</title><rect x="1106.8" y="483.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1109.8" y="494.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.10%)</title><rect x="1107.4" y="547.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1110.4" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.10%)</title><rect x="1107.4" y="531.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1110.4" y="542.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.05%)</title><rect x="1107.4" y="515.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1110.4" y="526.0"></text>
</g>
<g>
<title>tcp_v4_md5_lookup (1 samples, 0.05%)</title><rect x="1107.9" y="515.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1110.9" y="526.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.05%)</title><rect x="1108.5" y="611.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1111.5" y="622.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.05%)</title><rect x="1108.5" y="595.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1111.5" y="606.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="1108.5" y="579.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1111.5" y="590.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.05%)</title><rect x="1108.5" y="563.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1111.5" y="574.0"></text>
</g>
<g>
<title>sys_sendto (1 samples, 0.05%)</title><rect x="1109.1" y="659.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1112.1" y="670.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.05%)</title><rect x="1109.7" y="723.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1112.7" y="734.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="1109.7" y="707.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1112.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.10%)</title><rect x="1110.3" y="771.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1113.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.10%)</title><rect x="1110.3" y="755.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1113.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.10%)</title><rect x="1110.3" y="739.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1113.3" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (5 samples, 0.24%)</title><rect x="1111.4" y="787.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1114.4" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.24%)</title><rect x="1111.4" y="771.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1114.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (3 samples, 0.15%)</title><rect x="1111.4" y="755.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1114.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.05%)</title><rect x="1112.6" y="739.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1115.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.05%)</title><rect x="1113.1" y="755.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1116.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="1113.1" y="739.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1116.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1113.1" y="723.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1116.1" y="734.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.05%)</title><rect x="1113.7" y="755.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1116.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.get (68 samples, 3.33%)</title><rect x="1114.3" y="787.0" width="39.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1117.3" y="798.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.05%)</title><rect x="1115.5" y="771.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1118.5" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.05%)</title><rect x="1115.5" y="755.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1118.5" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1115.5" y="739.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1118.5" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1115.5" y="723.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1118.5" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1115.5" y="707.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1118.5" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.05%)</title><rect x="1115.5" y="691.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1118.5" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.05%)</title><rect x="1115.5" y="675.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1118.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (65 samples, 3.18%)</title><rect x="1116.0" y="771.0" width="37.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1119.0" y="782.0">ru/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (6 samples, 0.29%)</title><rect x="1116.0" y="755.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1119.0" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (6 samples, 0.29%)</title><rect x="1116.0" y="739.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1119.0" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (6 samples, 0.29%)</title><rect x="1116.0" y="723.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1119.0" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (6 samples, 0.29%)</title><rect x="1116.0" y="707.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1119.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (6 samples, 0.29%)</title><rect x="1116.0" y="691.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1119.0" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.20%)</title><rect x="1116.0" y="675.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1119.0" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (3 samples, 0.15%)</title><rect x="1116.0" y="659.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1119.0" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (3 samples, 0.15%)</title><rect x="1116.0" y="643.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1119.0" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (3 samples, 0.15%)</title><rect x="1116.0" y="627.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1119.0" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (3 samples, 0.15%)</title><rect x="1116.0" y="611.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1119.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3 samples, 0.15%)</title><rect x="1116.0" y="595.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1119.0" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.15%)</title><rect x="1116.0" y="579.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1119.0" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (3 samples, 0.15%)</title><rect x="1116.0" y="563.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1119.0" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.05%)</title><rect x="1116.6" y="547.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1119.6" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.05%)</title><rect x="1116.6" y="531.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1119.6" y="542.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1 samples, 0.05%)</title><rect x="1117.2" y="547.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1120.2" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1 samples, 0.05%)</title><rect x="1117.2" y="531.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1120.2" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1 samples, 0.05%)</title><rect x="1117.2" y="515.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1120.2" y="526.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.clear (1 samples, 0.05%)</title><rect x="1117.2" y="499.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1120.2" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.05%)</title><rect x="1117.8" y="659.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1120.8" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (1 samples, 0.05%)</title><rect x="1117.8" y="643.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1120.8" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.05%)</title><rect x="1117.8" y="627.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1120.8" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.05%)</title><rect x="1117.8" y="611.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1120.8" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1 samples, 0.05%)</title><rect x="1117.8" y="595.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1120.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.05%)</title><rect x="1117.8" y="579.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1120.8" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.05%)</title><rect x="1117.8" y="563.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1120.8" y="574.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1 samples, 0.05%)</title><rect x="1117.8" y="547.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1120.8" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1 samples, 0.05%)</title><rect x="1117.8" y="531.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1120.8" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1 samples, 0.05%)</title><rect x="1117.8" y="515.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1120.8" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1 samples, 0.05%)</title><rect x="1117.8" y="499.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1120.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$115/1349025670.apply (2 samples, 0.10%)</title><rect x="1118.3" y="675.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1121.3" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (2 samples, 0.10%)</title><rect x="1118.3" y="659.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1121.3" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (2 samples, 0.10%)</title><rect x="1118.3" y="643.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1121.3" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.10%)</title><rect x="1118.3" y="627.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1121.3" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.10%)</title><rect x="1118.3" y="611.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1121.3" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.10%)</title><rect x="1118.3" y="595.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1121.3" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.10%)</title><rect x="1118.3" y="579.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1121.3" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.10%)</title><rect x="1118.3" y="563.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1121.3" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.05%)</title><rect x="1119.5" y="755.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1122.5" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (1 samples, 0.05%)</title><rect x="1119.5" y="739.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1122.5" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (2 samples, 0.10%)</title><rect x="1120.1" y="755.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1123.1" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (2 samples, 0.10%)</title><rect x="1120.1" y="739.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1123.1" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.10%)</title><rect x="1120.1" y="723.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1123.1" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.10%)</title><rect x="1120.1" y="707.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1123.1" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.10%)</title><rect x="1120.1" y="691.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1123.1" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.10%)</title><rect x="1120.1" y="675.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1123.1" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.10%)</title><rect x="1120.1" y="659.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1123.1" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.10%)</title><rect x="1120.1" y="643.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1123.1" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.10%)</title><rect x="1120.1" y="627.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1123.1" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.10%)</title><rect x="1120.1" y="611.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1123.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (56 samples, 2.74%)</title><rect x="1121.2" y="755.0" width="32.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1124.2" y="766.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.05%)</title><rect x="1121.2" y="739.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1124.2" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1121.2" y="723.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1124.2" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1121.2" y="707.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1124.2" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1121.2" y="691.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1124.2" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.05%)</title><rect x="1121.2" y="675.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1124.2" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.05%)</title><rect x="1121.2" y="659.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1124.2" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.05%)</title><rect x="1121.2" y="643.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1124.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.10%)</title><rect x="1121.8" y="739.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1124.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.10%)</title><rect x="1121.8" y="723.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1124.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (2 samples, 0.10%)</title><rect x="1121.8" y="707.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1124.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.05%)</title><rect x="1121.8" y="691.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1124.8" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.05%)</title><rect x="1121.8" y="675.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1124.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (1 samples, 0.05%)</title><rect x="1122.4" y="691.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1125.4" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (41 samples, 2.01%)</title><rect x="1123.0" y="739.0" width="23.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1126.0" y="750.0">r..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (2 samples, 0.10%)</title><rect x="1123.0" y="723.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1126.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (2 samples, 0.10%)</title><rect x="1123.0" y="707.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1126.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (2 samples, 0.10%)</title><rect x="1123.0" y="691.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1126.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1123.5" y="675.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1126.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (1 samples, 0.05%)</title><rect x="1123.5" y="659.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1126.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (1 samples, 0.05%)</title><rect x="1123.5" y="643.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1126.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.05%)</title><rect x="1123.5" y="627.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1126.5" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.05%)</title><rect x="1123.5" y="611.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1126.5" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.05%)</title><rect x="1123.5" y="595.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1126.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (39 samples, 1.91%)</title><rect x="1124.1" y="723.0" width="22.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1127.1" y="734.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (7 samples, 0.34%)</title><rect x="1124.1" y="707.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1127.1" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (7 samples, 0.34%)</title><rect x="1124.1" y="691.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1127.1" y="702.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (7 samples, 0.34%)</title><rect x="1124.1" y="675.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1127.1" y="686.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (7 samples, 0.34%)</title><rect x="1124.1" y="659.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1127.1" y="670.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (7 samples, 0.34%)</title><rect x="1124.1" y="643.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1127.1" y="654.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (2 samples, 0.10%)</title><rect x="1125.9" y="627.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1128.9" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.getAsBoolean (2 samples, 0.10%)</title><rect x="1125.9" y="611.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1128.9" y="622.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (2 samples, 0.10%)</title><rect x="1125.9" y="595.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1128.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (2 samples, 0.10%)</title><rect x="1125.9" y="579.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1128.9" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2 samples, 0.10%)</title><rect x="1125.9" y="563.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1128.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$62/987822523.apply (1 samples, 0.05%)</title><rect x="1126.4" y="547.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1129.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (1 samples, 0.05%)</title><rect x="1126.4" y="531.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1129.4" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.05%)</title><rect x="1126.4" y="515.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1129.4" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (2 samples, 0.10%)</title><rect x="1127.0" y="627.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1130.0" y="638.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1127.6" y="611.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1130.6" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1128.2" y="707.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1131.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (4 samples, 0.20%)</title><rect x="1128.7" y="707.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1131.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (3 samples, 0.15%)</title><rect x="1129.3" y="691.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1132.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (3 samples, 0.15%)</title><rect x="1129.3" y="675.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1132.3" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.05%)</title><rect x="1130.5" y="659.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1133.5" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (5 samples, 0.24%)</title><rect x="1131.1" y="707.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1134.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (5 samples, 0.24%)</title><rect x="1131.1" y="691.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1134.1" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.24%)</title><rect x="1131.1" y="675.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1134.1" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (3 samples, 0.15%)</title><rect x="1131.1" y="659.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1134.1" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.05%)</title><rect x="1131.1" y="643.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1134.1" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.05%)</title><rect x="1131.1" y="627.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1134.1" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1 samples, 0.05%)</title><rect x="1131.1" y="611.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1134.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.05%)</title><rect x="1131.1" y="595.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1134.1" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.05%)</title><rect x="1131.1" y="579.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1134.1" y="590.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1 samples, 0.05%)</title><rect x="1131.1" y="563.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1134.1" y="574.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1 samples, 0.05%)</title><rect x="1131.1" y="547.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1134.1" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1 samples, 0.05%)</title><rect x="1131.1" y="531.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1134.1" y="542.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (2 samples, 0.10%)</title><rect x="1131.6" y="643.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1134.6" y="654.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (2 samples, 0.10%)</title><rect x="1131.6" y="627.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1134.6" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (2 samples, 0.10%)</title><rect x="1131.6" y="611.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1134.6" y="622.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (2 samples, 0.10%)</title><rect x="1131.6" y="595.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1134.6" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.getAsBoolean (2 samples, 0.10%)</title><rect x="1131.6" y="579.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1134.6" y="590.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (2 samples, 0.10%)</title><rect x="1131.6" y="563.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1134.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (2 samples, 0.10%)</title><rect x="1131.6" y="547.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1134.6" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2 samples, 0.10%)</title><rect x="1131.6" y="531.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1134.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$62/987822523.apply (1 samples, 0.05%)</title><rect x="1132.2" y="515.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1135.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (1 samples, 0.05%)</title><rect x="1132.2" y="499.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1135.2" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (2 samples, 0.10%)</title><rect x="1132.8" y="659.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1135.8" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (2 samples, 0.10%)</title><rect x="1132.8" y="643.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1135.8" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (2 samples, 0.10%)</title><rect x="1132.8" y="627.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1135.8" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.05%)</title><rect x="1133.4" y="611.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1136.4" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1 samples, 0.05%)</title><rect x="1133.4" y="595.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1136.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.05%)</title><rect x="1133.4" y="579.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1136.4" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.hasNext (1 samples, 0.05%)</title><rect x="1133.4" y="563.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1136.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (22 samples, 1.08%)</title><rect x="1133.9" y="707.0" width="12.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1136.9" y="718.0"></text>
</g>
<g>
<title>java/util/Collection.stream (20 samples, 0.98%)</title><rect x="1133.9" y="691.0" width="11.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1136.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (20 samples, 0.98%)</title><rect x="1133.9" y="675.0" width="11.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1136.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (20 samples, 0.98%)</title><rect x="1133.9" y="659.0" width="11.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1136.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (20 samples, 0.98%)</title><rect x="1133.9" y="643.0" width="11.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1136.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (1 samples, 0.05%)</title><rect x="1133.9" y="627.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1136.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (1 samples, 0.05%)</title><rect x="1133.9" y="611.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1136.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.05%)</title><rect x="1133.9" y="595.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1136.9" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.05%)</title><rect x="1133.9" y="579.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1136.9" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.05%)</title><rect x="1133.9" y="563.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1136.9" y="574.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.05%)</title><rect x="1133.9" y="547.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1136.9" y="558.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.05%)</title><rect x="1133.9" y="531.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1136.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (19 samples, 0.93%)</title><rect x="1134.5" y="627.0" width="11.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1137.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (19 samples, 0.93%)</title><rect x="1134.5" y="611.0" width="11.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1137.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.05%)</title><rect x="1134.5" y="595.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1137.5" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.05%)</title><rect x="1134.5" y="579.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1137.5" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.05%)</title><rect x="1134.5" y="563.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1137.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (18 samples, 0.88%)</title><rect x="1135.1" y="595.0" width="10.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1138.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (13 samples, 0.64%)</title><rect x="1138.0" y="579.0" width="7.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1141.0" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (12 samples, 0.59%)</title><rect x="1138.6" y="563.0" width="6.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1141.6" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.44%)</title><rect x="1140.3" y="547.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1143.3" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.10%)</title><rect x="1140.9" y="531.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1143.9" y="542.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.24%)</title><rect x="1142.0" y="531.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1145.0" y="542.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.05%)</title><rect x="1144.3" y="515.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1147.3" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.05%)</title><rect x="1144.9" y="531.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1147.9" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.05%)</title><rect x="1144.9" y="515.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1147.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.10%)</title><rect x="1145.5" y="691.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1148.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.10%)</title><rect x="1145.5" y="675.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1148.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.10%)</title><rect x="1145.5" y="659.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1148.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1146.1" y="643.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1149.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (12 samples, 0.59%)</title><rect x="1146.7" y="739.0" width="6.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1149.7" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (8 samples, 0.39%)</title><rect x="1146.7" y="723.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1149.7" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (8 samples, 0.39%)</title><rect x="1146.7" y="707.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1149.7" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (6 samples, 0.29%)</title><rect x="1147.2" y="691.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1150.2" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (5 samples, 0.24%)</title><rect x="1147.8" y="675.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1150.8" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (5 samples, 0.24%)</title><rect x="1147.8" y="659.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1150.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (5 samples, 0.24%)</title><rect x="1147.8" y="643.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1150.8" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.05%)</title><rect x="1147.8" y="627.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1150.8" y="638.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.05%)</title><rect x="1147.8" y="611.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1150.8" y="622.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.05%)</title><rect x="1147.8" y="595.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1150.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$115/1349025670.apply (1 samples, 0.05%)</title><rect x="1148.4" y="627.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1151.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (1 samples, 0.05%)</title><rect x="1148.4" y="611.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1151.4" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (1 samples, 0.05%)</title><rect x="1148.4" y="595.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1151.4" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.05%)</title><rect x="1148.4" y="579.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1151.4" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1148.4" y="563.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1151.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$95/351241919.apply (3 samples, 0.15%)</title><rect x="1149.0" y="627.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1152.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (2 samples, 0.10%)</title><rect x="1149.5" y="611.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1152.5" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (2 samples, 0.10%)</title><rect x="1149.5" y="595.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1152.5" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.10%)</title><rect x="1149.5" y="579.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1152.5" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.10%)</title><rect x="1149.5" y="563.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1152.5" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.10%)</title><rect x="1149.5" y="547.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1152.5" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.10%)</title><rect x="1149.5" y="531.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1152.5" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.10%)</title><rect x="1149.5" y="515.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1152.5" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.05%)</title><rect x="1149.5" y="499.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1152.5" y="510.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.05%)</title><rect x="1150.1" y="499.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1153.1" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (1 samples, 0.05%)</title><rect x="1150.7" y="691.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1153.7" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1150.7" y="675.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1153.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (4 samples, 0.20%)</title><rect x="1151.3" y="723.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1154.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (4 samples, 0.20%)</title><rect x="1151.3" y="707.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1154.3" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.15%)</title><rect x="1151.3" y="691.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1154.3" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (3 samples, 0.15%)</title><rect x="1151.3" y="675.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1154.3" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (3 samples, 0.15%)</title><rect x="1151.3" y="659.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1154.3" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (3 samples, 0.15%)</title><rect x="1151.3" y="643.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1154.3" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (3 samples, 0.15%)</title><rect x="1151.3" y="627.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1154.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3 samples, 0.15%)</title><rect x="1151.3" y="611.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1154.3" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.15%)</title><rect x="1151.3" y="595.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1154.3" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (3 samples, 0.15%)</title><rect x="1151.3" y="579.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1154.3" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.05%)</title><rect x="1151.3" y="563.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1154.3" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.05%)</title><rect x="1151.3" y="547.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1154.3" y="558.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (2 samples, 0.10%)</title><rect x="1151.9" y="563.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1154.9" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (2 samples, 0.10%)</title><rect x="1151.9" y="547.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1154.9" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (2 samples, 0.10%)</title><rect x="1151.9" y="531.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1154.9" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (2 samples, 0.10%)</title><rect x="1151.9" y="515.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1154.9" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.getAsBoolean (1 samples, 0.05%)</title><rect x="1152.4" y="499.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1155.4" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (1 samples, 0.05%)</title><rect x="1152.4" y="483.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1155.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (1 samples, 0.05%)</title><rect x="1152.4" y="467.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1155.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.05%)</title><rect x="1152.4" y="451.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1155.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.05%)</title><rect x="1152.4" y="435.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1155.4" y="446.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="1153.0" y="691.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1156.0" y="702.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (3 samples, 0.15%)</title><rect x="1153.6" y="803.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1156.6" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.15%)</title><rect x="1153.6" y="787.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1156.6" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.15%)</title><rect x="1153.6" y="771.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1156.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.15%)</title><rect x="1153.6" y="755.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1156.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.05%)</title><rect x="1154.8" y="739.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1157.8" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.15%)</title><rect x="1155.3" y="835.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1158.3" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1155.3" y="819.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1158.3" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.10%)</title><rect x="1155.9" y="819.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1158.9" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.10%)</title><rect x="1155.9" y="803.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1158.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.05%)</title><rect x="1157.1" y="835.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1160.1" y="846.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.05%)</title><rect x="1157.1" y="819.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1160.1" y="830.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.05%)</title><rect x="1157.1" y="803.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1160.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.05%)</title><rect x="1157.1" y="787.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1160.1" y="798.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="1157.1" y="771.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1160.1" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (2 samples, 0.10%)</title><rect x="1157.6" y="835.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1160.6" y="846.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.10%)</title><rect x="1157.6" y="819.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1160.6" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.10%)</title><rect x="1158.8" y="835.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1161.8" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.05%)</title><rect x="1159.4" y="819.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1162.4" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.05%)</title><rect x="1159.4" y="803.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1162.4" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.05%)</title><rect x="1160.0" y="835.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1163.0" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.05%)</title><rect x="1160.0" y="819.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1163.0" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (47 samples, 2.30%)</title><rect x="1160.5" y="851.0" width="27.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1163.5" y="862.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (47 samples, 2.30%)</title><rect x="1160.5" y="835.0" width="27.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1163.5" y="846.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (6 samples, 0.29%)</title><rect x="1162.8" y="819.0" width="3.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1165.8" y="830.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.05%)</title><rect x="1162.8" y="803.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1165.8" y="814.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned (2 samples, 0.10%)</title><rect x="1163.4" y="803.0" width="1.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1166.4" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.15%)</title><rect x="1164.6" y="803.0" width="1.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1167.6" y="814.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.05%)</title><rect x="1165.2" y="787.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1168.2" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.05%)</title><rect x="1165.7" y="787.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1168.7" y="798.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.05%)</title><rect x="1166.3" y="819.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1169.3" y="830.0"></text>
</g>
<g>
<title>recv (35 samples, 1.71%)</title><rect x="1166.9" y="819.0" width="20.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1169.9" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 1.32%)</title><rect x="1171.5" y="803.0" width="15.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1174.5" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (27 samples, 1.32%)</title><rect x="1171.5" y="787.0" width="15.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1174.5" y="798.0"></text>
</g>
<g>
<title>SYSC_recvfrom (1 samples, 0.05%)</title><rect x="1174.4" y="771.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1177.4" y="782.0"></text>
</g>
<g>
<title>sys_recvfrom (21 samples, 1.03%)</title><rect x="1175.0" y="771.0" width="12.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1178.0" y="782.0"></text>
</g>
<g>
<title>SYSC_recvfrom (20 samples, 0.98%)</title><rect x="1175.0" y="755.0" width="11.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1178.0" y="766.0"></text>
</g>
<g>
<title>sock_recvmsg (15 samples, 0.73%)</title><rect x="1175.6" y="739.0" width="8.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1178.6" y="750.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.05%)</title><rect x="1176.1" y="723.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1179.1" y="734.0"></text>
</g>
<g>
<title>inet_recvmsg (11 samples, 0.54%)</title><rect x="1176.7" y="723.0" width="6.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1179.7" y="734.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.05%)</title><rect x="1177.3" y="707.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1180.3" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (9 samples, 0.44%)</title><rect x="1177.9" y="707.0" width="5.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1180.9" y="718.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.05%)</title><rect x="1178.4" y="691.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1181.4" y="702.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.05%)</title><rect x="1178.4" y="675.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1181.4" y="686.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.05%)</title><rect x="1178.4" y="659.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1181.4" y="670.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.05%)</title><rect x="1179.0" y="691.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1182.0" y="702.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.10%)</title><rect x="1179.6" y="691.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1182.6" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (3 samples, 0.15%)</title><rect x="1180.8" y="691.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1183.8" y="702.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.05%)</title><rect x="1180.8" y="675.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1183.8" y="686.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.05%)</title><rect x="1181.3" y="675.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1184.3" y="686.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.05%)</title><rect x="1181.3" y="659.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1184.3" y="670.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.05%)</title><rect x="1181.9" y="675.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1184.9" y="686.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.05%)</title><rect x="1182.5" y="691.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1185.5" y="702.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.10%)</title><rect x="1183.1" y="723.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1186.1" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.10%)</title><rect x="1183.1" y="707.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1186.1" y="718.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.10%)</title><rect x="1183.1" y="691.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1186.1" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.10%)</title><rect x="1183.1" y="675.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1186.1" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.20%)</title><rect x="1184.2" y="739.0" width="2.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1187.2" y="750.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.20%)</title><rect x="1184.2" y="723.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1187.2" y="734.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.20%)</title><rect x="1184.2" y="707.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1187.2" y="718.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.20%)</title><rect x="1184.2" y="691.0" width="2.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1187.2" y="702.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.05%)</title><rect x="1186.5" y="755.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1189.5" y="766.0"></text>
</g>
<g>
<title>recv@plt (1 samples, 0.05%)</title><rect x="1187.1" y="819.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1190.1" y="830.0"></text>
</g>
<g>
<title>[VM Periodic Tas tid=16332] (4 samples, 0.20%)</title><rect x="1187.7" y="915.0" width="2.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1190.7" y="926.0"></text>
</g>
<g>
<title>start_thread (4 samples, 0.20%)</title><rect x="1187.7" y="899.0" width="2.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1190.7" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (4 samples, 0.20%)</title><rect x="1187.7" y="883.0" width="2.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1190.7" y="894.0"></text>
</g>
<g>
<title>WatcherThread::run() (4 samples, 0.20%)</title><rect x="1187.7" y="867.0" width="2.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.7" y="878.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.05%)</title><rect x="1187.7" y="851.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.7" y="862.0"></text>
</g>
<g>
<title>StatSamplerTask::task() (1 samples, 0.05%)</title><rect x="1188.3" y="851.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.3" y="862.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (2 samples, 0.10%)</title><rect x="1188.8" y="851.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.8" y="862.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.10%)</title><rect x="1188.8" y="835.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.8" y="846.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.05%)</title><rect x="1188.8" y="819.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.8" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.05%)</title><rect x="1188.8" y="803.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1191.8" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="1188.8" y="787.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1191.8" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="1188.8" y="771.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1191.8" y="782.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.05%)</title><rect x="1188.8" y="755.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1191.8" y="766.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="1188.8" y="739.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1191.8" y="750.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.05%)</title><rect x="1188.8" y="723.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1191.8" y="734.0"></text>
</g>
<g>
<title>Thread::muxAcquire(long volatile*, char const*) (1 samples, 0.05%)</title><rect x="1189.4" y="819.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.4" y="830.0"></text>
</g>
</g>
</svg>
