<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="646" onload="init(evt)" viewBox="0 0 1200 646" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="629"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="629"> </text>
<g id="frames">
<g>
<title>all (2,338 samples, 100.00%)</title><rect x="10.0" y="595.0" width="1180.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="13.0" y="606.0">all</text>
</g>
<g>
<title>[C1 CompilerThre tid=16326] (1 samples, 0.04%)</title><rect x="10.0" y="579.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="13.0" y="590.0"></text>
</g>
<g>
<title>[no_Java_frame] (1 samples, 0.04%)</title><rect x="10.0" y="563.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="13.0" y="574.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.04%)</title><rect x="10.0" y="547.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="13.0" y="558.0"></text>
</g>
<g>
<title>[NIO Acceptor 0.0.0.0:8080 #0 tid=16341] (2 samples, 0.09%)</title><rect x="10.5" y="579.0" width="1.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="13.5" y="590.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (2 samples, 0.09%)</title><rect x="10.5" y="563.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.5" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (2 samples, 0.09%)</title><rect x="10.5" y="547.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.5" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (2 samples, 0.09%)</title><rect x="10.5" y="531.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.5" y="542.0"></text>
</g>
<g>
<title>one.nio.http.HttpSession (1 samples, 0.04%)</title><rect x="10.5" y="515.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="13.5" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (1 samples, 0.04%)</title><rect x="11.0" y="515.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="14.0" y="526.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="11.0" y="499.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="14.0" y="510.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=16337] (700 samples, 29.94%)</title><rect x="11.5" y="579.0" width="353.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="14.5" y="590.0">[NIO Selector #0 tid=16337]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (700 samples, 29.94%)</title><rect x="11.5" y="563.0" width="353.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="14.5" y="574.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (8 samples, 0.34%)</title><rect x="11.5" y="547.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="14.5" y="558.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (8 samples, 0.34%)</title><rect x="11.5" y="531.0" width="4.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="14.5" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (692 samples, 29.60%)</title><rect x="15.6" y="547.0" width="349.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="18.6" y="558.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (692 samples, 29.60%)</title><rect x="15.6" y="531.0" width="349.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="18.6" y="542.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (692 samples, 29.60%)</title><rect x="15.6" y="515.0" width="349.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="18.6" y="526.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (606 samples, 25.92%)</title><rect x="15.6" y="499.0" width="305.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="18.6" y="510.0">one/nio/http/HttpSession.handleParsedRequ..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (606 samples, 25.92%)</title><rect x="15.6" y="483.0" width="305.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="18.6" y="494.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (597 samples, 25.53%)</title><rect x="15.6" y="467.0" width="301.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="18.6" y="478.0">RequestHandler0_get.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (35 samples, 1.50%)</title><rect x="15.6" y="451.0" width="17.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="18.6" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (35 samples, 1.50%)</title><rect x="15.6" y="435.0" width="17.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="18.6" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (26 samples, 1.11%)</title><rect x="15.6" y="419.0" width="13.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="18.6" y="430.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (26 samples, 1.11%)</title><rect x="15.6" y="403.0" width="13.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="18.6" y="414.0"></text>
</g>
<g>
<title>byte[] (26 samples, 1.11%)</title><rect x="15.6" y="387.0" width="13.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="18.6" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (9 samples, 0.38%)</title><rect x="28.7" y="419.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="31.7" y="430.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (9 samples, 0.38%)</title><rect x="28.7" y="403.0" width="4.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="31.7" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (15 samples, 0.64%)</title><rect x="33.2" y="451.0" width="7.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="36.2" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (15 samples, 0.64%)</title><rect x="33.2" y="435.0" width="7.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="36.2" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (15 samples, 0.64%)</title><rect x="33.2" y="419.0" width="7.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="36.2" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.64%)</title><rect x="33.2" y="403.0" width="7.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="36.2" y="414.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.21%)</title><rect x="33.2" y="387.0" width="2.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="36.2" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.43%)</title><rect x="35.7" y="387.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="38.7" y="398.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.43%)</title><rect x="35.7" y="371.0" width="5.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="38.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.get (547 samples, 23.40%)</title><rect x="40.8" y="451.0" width="276.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="43.8" y="462.0">ru/mail/polis/service/bmendli/MyServi..</text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.17%)</title><rect x="40.8" y="435.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="43.8" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.17%)</title><rect x="40.8" y="419.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="43.8" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (4 samples, 0.17%)</title><rect x="40.8" y="403.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="43.8" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.17%)</title><rect x="40.8" y="387.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="43.8" y="398.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.17%)</title><rect x="40.8" y="371.0" width="2.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="43.8" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.13%)</title><rect x="42.8" y="435.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="45.8" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.13%)</title><rect x="42.8" y="419.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="45.8" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.13%)</title><rect x="42.8" y="403.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="45.8" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (26 samples, 1.11%)</title><rect x="44.3" y="435.0" width="13.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="47.3" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (4 samples, 0.17%)</title><rect x="44.3" y="419.0" width="2.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="47.3" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (22 samples, 0.94%)</title><rect x="46.3" y="419.0" width="11.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="49.3" y="430.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.30%)</title><rect x="46.3" y="403.0" width="3.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="49.3" y="414.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.26%)</title><rect x="49.9" y="403.0" width="3.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="52.9" y="414.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.38%)</title><rect x="52.9" y="403.0" width="4.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="55.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (502 samples, 21.47%)</title><rect x="57.4" y="435.0" width="253.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="60.4" y="446.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (59 samples, 2.52%)</title><rect x="57.4" y="419.0" width="29.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="60.4" y="430.0">co..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (59 samples, 2.52%)</title><rect x="57.4" y="403.0" width="29.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="60.4" y="414.0">co..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (59 samples, 2.52%)</title><rect x="57.4" y="387.0" width="29.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="60.4" y="398.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (59 samples, 2.52%)</title><rect x="57.4" y="371.0" width="29.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="60.4" y="382.0">co..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (59 samples, 2.52%)</title><rect x="57.4" y="355.0" width="29.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="60.4" y="366.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (39 samples, 1.67%)</title><rect x="57.4" y="339.0" width="19.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="60.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (39 samples, 1.67%)</title><rect x="57.4" y="323.0" width="19.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="60.4" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (39 samples, 1.67%)</title><rect x="57.4" y="307.0" width="19.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="60.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (39 samples, 1.67%)</title><rect x="57.4" y="291.0" width="19.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="60.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (39 samples, 1.67%)</title><rect x="57.4" y="275.0" width="19.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="60.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (39 samples, 1.67%)</title><rect x="57.4" y="259.0" width="19.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="60.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (14 samples, 0.60%)</title><rect x="57.4" y="243.0" width="7.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="60.4" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (14 samples, 0.60%)</title><rect x="57.4" y="227.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="60.4" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (14 samples, 0.60%)</title><rect x="57.4" y="211.0" width="7.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="60.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (14 samples, 0.60%)</title><rect x="57.4" y="195.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="60.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (14 samples, 0.60%)</title><rect x="57.4" y="179.0" width="7.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="60.4" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (14 samples, 0.60%)</title><rect x="57.4" y="163.0" width="7.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="60.4" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.getAsBoolean (14 samples, 0.60%)</title><rect x="57.4" y="147.0" width="7.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="60.4" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (14 samples, 0.60%)</title><rect x="57.4" y="131.0" width="7.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="60.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (14 samples, 0.60%)</title><rect x="57.4" y="115.0" width="7.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="60.4" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (14 samples, 0.60%)</title><rect x="57.4" y="99.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="60.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$62/987822523.apply (14 samples, 0.60%)</title><rect x="57.4" y="83.0" width="7.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="60.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (14 samples, 0.60%)</title><rect x="57.4" y="67.0" width="7.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="60.4" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (10 samples, 0.43%)</title><rect x="57.4" y="51.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="60.4" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (10 samples, 0.43%)</title><rect x="57.4" y="35.0" width="5.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="60.4" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (4 samples, 0.17%)</title><rect x="62.5" y="51.0" width="2.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="65.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$95/351241919.apply (25 samples, 1.07%)</title><rect x="64.5" y="243.0" width="12.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="67.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (25 samples, 1.07%)</title><rect x="64.5" y="227.0" width="12.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="67.5" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (25 samples, 1.07%)</title><rect x="64.5" y="211.0" width="12.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="67.5" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (25 samples, 1.07%)</title><rect x="64.5" y="195.0" width="12.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="67.5" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (25 samples, 1.07%)</title><rect x="64.5" y="179.0" width="12.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="67.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$115/1349025670.apply (20 samples, 0.86%)</title><rect x="77.1" y="339.0" width="10.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="80.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (20 samples, 0.86%)</title><rect x="77.1" y="323.0" width="10.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="80.1" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (20 samples, 0.86%)</title><rect x="77.1" y="307.0" width="10.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="80.1" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (20 samples, 0.86%)</title><rect x="77.1" y="291.0" width="10.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="80.1" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (20 samples, 0.86%)</title><rect x="77.1" y="275.0" width="10.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="80.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (22 samples, 0.94%)</title><rect x="87.2" y="419.0" width="11.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="90.2" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (22 samples, 0.94%)</title><rect x="87.2" y="403.0" width="11.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="90.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$123/739146284.apply (22 samples, 0.94%)</title><rect x="87.2" y="387.0" width="11.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="90.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$4 (22 samples, 0.94%)</title><rect x="87.2" y="371.0" width="11.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="90.2" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (10 samples, 0.43%)</title><rect x="87.2" y="355.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="90.2" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (10 samples, 0.43%)</title><rect x="87.2" y="339.0" width="5.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="90.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.of (1 samples, 0.04%)</title><rect x="92.3" y="355.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="95.3" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.Record (1 samples, 0.04%)</title><rect x="92.3" y="339.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="95.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (11 samples, 0.47%)</title><rect x="92.8" y="355.0" width="5.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="95.8" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (11 samples, 0.47%)</title><rect x="92.8" y="339.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="95.8" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (11 samples, 0.47%)</title><rect x="92.8" y="323.0" width="5.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="95.8" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (11 samples, 0.47%)</title><rect x="92.8" y="307.0" width="5.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="95.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (13 samples, 0.56%)</title><rect x="98.3" y="419.0" width="6.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="101.3" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (13 samples, 0.56%)</title><rect x="98.3" y="403.0" width="6.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="101.3" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (13 samples, 0.56%)</title><rect x="98.3" y="387.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="101.3" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (13 samples, 0.56%)</title><rect x="98.3" y="371.0" width="6.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="101.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (6 samples, 0.26%)</title><rect x="104.9" y="419.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="107.9" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (6 samples, 0.26%)</title><rect x="104.9" y="403.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="107.9" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (6 samples, 0.26%)</title><rect x="104.9" y="387.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="107.9" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.26%)</title><rect x="104.9" y="371.0" width="3.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="107.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (402 samples, 17.19%)</title><rect x="107.9" y="419.0" width="202.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="110.9" y="430.0">ru/mail/polis/dao/bmendli/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (6 samples, 0.26%)</title><rect x="107.9" y="403.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="110.9" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (6 samples, 0.26%)</title><rect x="107.9" y="387.0" width="3.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="110.9" y="398.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (2 samples, 0.09%)</title><rect x="110.9" y="403.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="113.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (2 samples, 0.09%)</title><rect x="110.9" y="387.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="113.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (2 samples, 0.09%)</title><rect x="110.9" y="371.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="113.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (2 samples, 0.09%)</title><rect x="110.9" y="355.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="113.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (2 samples, 0.09%)</title><rect x="110.9" y="339.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="113.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.04%)</title><rect x="110.9" y="323.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="113.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getByteBuffer (1 samples, 0.04%)</title><rect x="110.9" y="307.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="113.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.cachedInputStream (1 samples, 0.04%)</title><rect x="110.9" y="291.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="113.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader$2.getInputStream (1 samples, 0.04%)</title><rect x="110.9" y="275.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="113.9" y="286.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getInputStream (1 samples, 0.04%)</title><rect x="110.9" y="259.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="113.9" y="270.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getInputStream (1 samples, 0.04%)</title><rect x="110.9" y="243.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="113.9" y="254.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.&lt;init&gt; (1 samples, 0.04%)</title><rect x="110.9" y="227.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="113.9" y="238.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.&lt;init&gt; (1 samples, 0.04%)</title><rect x="110.9" y="211.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="113.9" y="222.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.&lt;init&gt; (1 samples, 0.04%)</title><rect x="110.9" y="195.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="113.9" y="206.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="110.9" y="179.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="113.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.04%)</title><rect x="111.4" y="323.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="114.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.getResource (1 samples, 0.04%)</title><rect x="111.4" y="307.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="114.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.checkResource (1 samples, 0.04%)</title><rect x="111.4" y="291.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="114.4" y="302.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.04%)</title><rect x="111.4" y="275.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="114.4" y="286.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.04%)</title><rect x="111.4" y="259.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="114.4" y="270.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/Handler.parseURL (1 samples, 0.04%)</title><rect x="111.4" y="243.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="114.4" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.04%)</title><rect x="111.4" y="227.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="114.4" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.04%)</title><rect x="111.4" y="211.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="114.4" y="222.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.04%)</title><rect x="111.4" y="195.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="114.4" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.04%)</title><rect x="111.4" y="179.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="114.4" y="190.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="111.4" y="163.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="114.4" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (13 samples, 0.56%)</title><rect x="112.0" y="403.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="115.0" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.56%)</title><rect x="112.0" y="387.0" width="6.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="115.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (244 samples, 10.44%)</title><rect x="118.5" y="403.0" width="123.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="121.5" y="414.0">ru/mail/polis/d..</text>
</g>
<g>
<title>java.util.ArrayList (5 samples, 0.21%)</title><rect x="118.5" y="387.0" width="2.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="121.5" y="398.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (9 samples, 0.38%)</title><rect x="121.0" y="387.0" width="4.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="124.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (9 samples, 0.38%)</title><rect x="121.0" y="371.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="124.0" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (9 samples, 0.38%)</title><rect x="121.0" y="355.0" width="4.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="124.0" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.13%)</title><rect x="125.6" y="387.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="128.6" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.13%)</title><rect x="125.6" y="371.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="128.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$106/537430885.get$Lambda (3 samples, 0.13%)</title><rect x="125.6" y="355.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="128.6" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.DAOImpl$$Lambda$106 (3 samples, 0.13%)</title><rect x="125.6" y="339.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="128.6" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.09%)</title><rect x="127.1" y="387.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="130.1" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.09%)</title><rect x="127.1" y="371.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="130.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (225 samples, 9.62%)</title><rect x="128.1" y="387.0" width="113.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="131.1" y="398.0">ru/mail/polis/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (2 samples, 0.09%)</title><rect x="128.1" y="371.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="131.1" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (2 samples, 0.09%)</title><rect x="128.1" y="355.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="131.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (95 samples, 4.06%)</title><rect x="129.1" y="371.0" width="48.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="132.1" y="382.0">com/..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (5 samples, 0.21%)</title><rect x="129.1" y="355.0" width="2.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="132.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (90 samples, 3.85%)</title><rect x="131.6" y="355.0" width="45.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="134.6" y="366.0">com/..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (6 samples, 0.26%)</title><rect x="131.6" y="339.0" width="3.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="134.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (4 samples, 0.17%)</title><rect x="134.7" y="339.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="137.7" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (4 samples, 0.17%)</title><rect x="134.7" y="323.0" width="2.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="137.7" y="334.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (5 samples, 0.21%)</title><rect x="136.7" y="339.0" width="2.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="139.7" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (3 samples, 0.13%)</title><rect x="139.2" y="339.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="142.2" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.13%)</title><rect x="139.2" y="323.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="142.2" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (72 samples, 3.08%)</title><rect x="140.7" y="339.0" width="36.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="143.7" y="350.0">jav..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (72 samples, 3.08%)</title><rect x="140.7" y="323.0" width="36.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="143.7" y="334.0">jav..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (72 samples, 3.08%)</title><rect x="140.7" y="307.0" width="36.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="143.7" y="318.0">jav..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (18 samples, 0.77%)</title><rect x="140.7" y="291.0" width="9.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="143.7" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.getAsBoolean (18 samples, 0.77%)</title><rect x="140.7" y="275.0" width="9.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="143.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (18 samples, 0.77%)</title><rect x="140.7" y="259.0" width="9.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="143.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (18 samples, 0.77%)</title><rect x="140.7" y="243.0" width="9.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="143.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.21%)</title><rect x="140.7" y="227.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="143.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.21%)</title><rect x="140.7" y="211.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="143.7" y="222.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (5 samples, 0.21%)</title><rect x="140.7" y="195.0" width="2.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="143.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (13 samples, 0.56%)</title><rect x="143.2" y="227.0" width="6.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="146.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$62/987822523.apply (13 samples, 0.56%)</title><rect x="143.2" y="211.0" width="6.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="146.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (13 samples, 0.56%)</title><rect x="143.2" y="195.0" width="6.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="146.2" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (10 samples, 0.43%)</title><rect x="143.2" y="179.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="146.2" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (10 samples, 0.43%)</title><rect x="143.2" y="163.0" width="5.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="146.2" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (3 samples, 0.13%)</title><rect x="148.3" y="179.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="151.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (54 samples, 2.31%)</title><rect x="149.8" y="291.0" width="27.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="152.8" y="302.0">j..</text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (11 samples, 0.47%)</title><rect x="149.8" y="275.0" width="5.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="152.8" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.26%)</title><rect x="155.4" y="275.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="158.4" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.26%)</title><rect x="155.4" y="259.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="158.4" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$88/2018795132.get$Lambda (3 samples, 0.13%)</title><rect x="155.4" y="243.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="158.4" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$88 (3 samples, 0.13%)</title><rect x="155.4" y="227.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="158.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.get$Lambda (3 samples, 0.13%)</title><rect x="156.9" y="243.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="159.9" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$92 (3 samples, 0.13%)</title><rect x="156.9" y="227.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="159.9" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (7 samples, 0.30%)</title><rect x="158.4" y="275.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="161.4" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (7 samples, 0.30%)</title><rect x="158.4" y="259.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="161.4" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (7 samples, 0.30%)</title><rect x="158.4" y="243.0" width="3.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="161.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (30 samples, 1.28%)</title><rect x="161.9" y="275.0" width="15.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="164.9" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (30 samples, 1.28%)</title><rect x="161.9" y="259.0" width="15.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="164.9" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (6 samples, 0.26%)</title><rect x="177.1" y="371.0" width="3.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="180.1" y="382.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (7 samples, 0.30%)</title><rect x="180.1" y="371.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="183.1" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (7 samples, 0.30%)</title><rect x="180.1" y="355.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="183.1" y="366.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (3 samples, 0.13%)</title><rect x="180.1" y="339.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="183.1" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (4 samples, 0.17%)</title><rect x="181.6" y="339.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="184.6" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (4 samples, 0.17%)</title><rect x="181.6" y="323.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="184.6" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (4 samples, 0.17%)</title><rect x="181.6" y="307.0" width="2.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="184.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.26%)</title><rect x="183.6" y="371.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="186.6" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.26%)</title><rect x="183.6" y="355.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="186.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$68/1684873348.get$Lambda (6 samples, 0.26%)</title><rect x="183.6" y="339.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="186.6" y="350.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.MemTablePool$$Lambda$68 (6 samples, 0.26%)</title><rect x="183.6" y="323.0" width="3.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="186.6" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (8 samples, 0.34%)</title><rect x="186.6" y="371.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="189.6" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.34%)</title><rect x="186.6" y="355.0" width="4.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="189.6" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (2 samples, 0.09%)</title><rect x="190.7" y="371.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="193.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.09%)</title><rect x="190.7" y="355.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="193.7" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.09%)</title><rect x="190.7" y="339.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="193.7" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$76/1318467195.get$Lambda (2 samples, 0.09%)</title><rect x="190.7" y="323.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="193.7" y="334.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$76 (2 samples, 0.09%)</title><rect x="190.7" y="307.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="193.7" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (11 samples, 0.47%)</title><rect x="191.7" y="371.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="194.7" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (7 samples, 0.30%)</title><rect x="191.7" y="355.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="194.7" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.30%)</title><rect x="191.7" y="339.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="194.7" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.30%)</title><rect x="191.7" y="323.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="194.7" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$76/1318467195.get$Lambda (7 samples, 0.30%)</title><rect x="191.7" y="307.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="194.7" y="318.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$76 (7 samples, 0.30%)</title><rect x="191.7" y="291.0" width="3.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="194.7" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (4 samples, 0.17%)</title><rect x="195.2" y="355.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="198.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.17%)</title><rect x="195.2" y="339.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="198.2" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.17%)</title><rect x="195.2" y="323.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="198.2" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$83/2089945492.get$Lambda (4 samples, 0.17%)</title><rect x="195.2" y="307.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="198.2" y="318.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$83 (4 samples, 0.17%)</title><rect x="195.2" y="291.0" width="2.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="198.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.04%)</title><rect x="197.2" y="371.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="200.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.04%)</title><rect x="197.2" y="355.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="200.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.04%)</title><rect x="197.2" y="339.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="200.2" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.04%)</title><rect x="197.2" y="323.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="200.2" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.04%)</title><rect x="197.2" y="307.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="200.2" y="318.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (1 samples, 0.04%)</title><rect x="197.2" y="291.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="200.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (25 samples, 1.07%)</title><rect x="197.8" y="371.0" width="12.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="200.8" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (2 samples, 0.09%)</title><rect x="197.8" y="355.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="200.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (23 samples, 0.98%)</title><rect x="198.8" y="355.0" width="11.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="201.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (23 samples, 0.98%)</title><rect x="198.8" y="339.0" width="11.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="201.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (23 samples, 0.98%)</title><rect x="198.8" y="323.0" width="11.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="201.8" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (23 samples, 0.98%)</title><rect x="198.8" y="307.0" width="11.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="201.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (23 samples, 0.98%)</title><rect x="198.8" y="291.0" width="11.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="201.8" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (23 samples, 0.98%)</title><rect x="198.8" y="275.0" width="11.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="201.8" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (23 samples, 0.98%)</title><rect x="198.8" y="259.0" width="11.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="201.8" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.getAsBoolean (23 samples, 0.98%)</title><rect x="198.8" y="243.0" width="11.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="201.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (23 samples, 0.98%)</title><rect x="198.8" y="227.0" width="11.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="201.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (23 samples, 0.98%)</title><rect x="198.8" y="211.0" width="11.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="201.8" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (6 samples, 0.26%)</title><rect x="198.8" y="195.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="201.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (6 samples, 0.26%)</title><rect x="198.8" y="179.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="201.8" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (6 samples, 0.26%)</title><rect x="198.8" y="163.0" width="3.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="201.8" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (17 samples, 0.73%)</title><rect x="201.8" y="195.0" width="8.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="204.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$62/987822523.apply (17 samples, 0.73%)</title><rect x="201.8" y="179.0" width="8.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="204.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (17 samples, 0.73%)</title><rect x="201.8" y="163.0" width="8.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="204.8" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (14 samples, 0.60%)</title><rect x="201.8" y="147.0" width="7.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="204.8" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (14 samples, 0.60%)</title><rect x="201.8" y="131.0" width="7.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="204.8" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (3 samples, 0.13%)</title><rect x="208.9" y="147.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="211.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (62 samples, 2.65%)</title><rect x="210.4" y="371.0" width="31.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="213.4" y="382.0">ru..</text>
</g>
<g>
<title>java/util/Collection.stream (18 samples, 0.77%)</title><rect x="210.4" y="355.0" width="9.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="213.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (5 samples, 0.21%)</title><rect x="210.4" y="339.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="213.4" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (5 samples, 0.21%)</title><rect x="210.4" y="323.0" width="2.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="213.4" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (13 samples, 0.56%)</title><rect x="212.9" y="339.0" width="6.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="215.9" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (13 samples, 0.56%)</title><rect x="212.9" y="323.0" width="6.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="215.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (2 samples, 0.09%)</title><rect x="219.5" y="355.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="222.5" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (2 samples, 0.09%)</title><rect x="219.5" y="339.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="222.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (20 samples, 0.86%)</title><rect x="220.5" y="355.0" width="10.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="223.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (20 samples, 0.86%)</title><rect x="220.5" y="339.0" width="10.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="223.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (20 samples, 0.86%)</title><rect x="220.5" y="323.0" width="10.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="223.5" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (20 samples, 0.86%)</title><rect x="220.5" y="307.0" width="10.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="223.5" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (11 samples, 0.47%)</title><rect x="230.6" y="355.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="233.6" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (2 samples, 0.09%)</title><rect x="230.6" y="339.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="233.6" y="350.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (2 samples, 0.09%)</title><rect x="230.6" y="323.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="233.6" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (9 samples, 0.38%)</title><rect x="231.6" y="339.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="234.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.21%)</title><rect x="231.6" y="323.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="234.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.21%)</title><rect x="231.6" y="307.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="234.6" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$63/1805959361.get$Lambda (5 samples, 0.21%)</title><rect x="231.6" y="291.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="234.6" y="302.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$63 (5 samples, 0.21%)</title><rect x="231.6" y="275.0" width="2.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="234.6" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (4 samples, 0.17%)</title><rect x="234.1" y="323.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="237.1" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (4 samples, 0.17%)</title><rect x="234.1" y="307.0" width="2.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="237.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (11 samples, 0.47%)</title><rect x="236.1" y="355.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="239.1" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (11 samples, 0.47%)</title><rect x="236.1" y="339.0" width="5.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="239.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (137 samples, 5.86%)</title><rect x="241.7" y="403.0" width="69.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="244.7" y="414.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (68 samples, 2.91%)</title><rect x="241.7" y="387.0" width="34.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="244.7" y="398.0">co..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (6 samples, 0.26%)</title><rect x="241.7" y="371.0" width="3.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="244.7" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (62 samples, 2.65%)</title><rect x="244.7" y="371.0" width="31.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="247.7" y="382.0">co..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (8 samples, 0.34%)</title><rect x="244.7" y="355.0" width="4.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="247.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (39 samples, 1.67%)</title><rect x="248.7" y="355.0" width="19.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="251.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (39 samples, 1.67%)</title><rect x="248.7" y="339.0" width="19.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="251.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (39 samples, 1.67%)</title><rect x="248.7" y="323.0" width="19.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="251.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (39 samples, 1.67%)</title><rect x="248.7" y="307.0" width="19.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="251.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (19 samples, 0.81%)</title><rect x="248.7" y="291.0" width="9.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="251.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (19 samples, 0.81%)</title><rect x="248.7" y="275.0" width="9.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="251.7" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (19 samples, 0.81%)</title><rect x="248.7" y="259.0" width="9.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="251.7" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (19 samples, 0.81%)</title><rect x="248.7" y="243.0" width="9.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="251.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (19 samples, 0.81%)</title><rect x="248.7" y="227.0" width="9.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="251.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (19 samples, 0.81%)</title><rect x="248.7" y="211.0" width="9.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="251.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.getAsBoolean (19 samples, 0.81%)</title><rect x="248.7" y="195.0" width="9.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="251.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (19 samples, 0.81%)</title><rect x="248.7" y="179.0" width="9.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="251.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (19 samples, 0.81%)</title><rect x="248.7" y="163.0" width="9.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="251.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.17%)</title><rect x="248.7" y="147.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="251.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.17%)</title><rect x="248.7" y="131.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="251.7" y="142.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (4 samples, 0.17%)</title><rect x="248.7" y="115.0" width="2.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="251.7" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (15 samples, 0.64%)</title><rect x="250.7" y="147.0" width="7.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="253.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$62/987822523.apply (15 samples, 0.64%)</title><rect x="250.7" y="131.0" width="7.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="253.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (15 samples, 0.64%)</title><rect x="250.7" y="115.0" width="7.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="253.7" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (10 samples, 0.43%)</title><rect x="250.7" y="99.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="253.7" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (10 samples, 0.43%)</title><rect x="250.7" y="83.0" width="5.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="253.7" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (5 samples, 0.21%)</title><rect x="255.8" y="99.0" width="2.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="258.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$95/351241919.apply (20 samples, 0.86%)</title><rect x="258.3" y="291.0" width="10.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="261.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (20 samples, 0.86%)</title><rect x="258.3" y="275.0" width="10.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="261.3" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (20 samples, 0.86%)</title><rect x="258.3" y="259.0" width="10.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="261.3" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (20 samples, 0.86%)</title><rect x="258.3" y="243.0" width="10.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="261.3" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (20 samples, 0.86%)</title><rect x="258.3" y="227.0" width="10.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="261.3" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (5 samples, 0.21%)</title><rect x="268.4" y="355.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="271.4" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (5 samples, 0.21%)</title><rect x="268.4" y="339.0" width="2.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="271.4" y="350.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (4 samples, 0.17%)</title><rect x="270.9" y="355.0" width="2.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="273.9" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (6 samples, 0.26%)</title><rect x="273.0" y="355.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="276.0" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.26%)</title><rect x="273.0" y="339.0" width="3.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="276.0" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (3 samples, 0.13%)</title><rect x="276.0" y="387.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="279.0" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.13%)</title><rect x="276.0" y="371.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="279.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.13%)</title><rect x="276.0" y="355.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="279.0" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$76/1318467195.get$Lambda (3 samples, 0.13%)</title><rect x="276.0" y="339.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="279.0" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$76 (3 samples, 0.13%)</title><rect x="276.0" y="323.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="279.0" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (6 samples, 0.26%)</title><rect x="277.5" y="387.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="280.5" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (4 samples, 0.17%)</title><rect x="277.5" y="371.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="280.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.17%)</title><rect x="277.5" y="355.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="280.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.17%)</title><rect x="277.5" y="339.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="280.5" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$76/1318467195.get$Lambda (4 samples, 0.17%)</title><rect x="277.5" y="323.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="280.5" y="334.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$76 (4 samples, 0.17%)</title><rect x="277.5" y="307.0" width="2.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="280.5" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (2 samples, 0.09%)</title><rect x="279.5" y="371.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="282.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.09%)</title><rect x="279.5" y="355.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="282.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.09%)</title><rect x="279.5" y="339.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="282.5" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$83/2089945492.get$Lambda (2 samples, 0.09%)</title><rect x="279.5" y="323.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="282.5" y="334.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$83 (2 samples, 0.09%)</title><rect x="279.5" y="307.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="282.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (60 samples, 2.57%)</title><rect x="280.5" y="387.0" width="30.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="283.5" y="398.0">ru..</text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (7 samples, 0.30%)</title><rect x="280.5" y="371.0" width="3.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="283.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (53 samples, 2.27%)</title><rect x="284.1" y="371.0" width="26.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="287.1" y="382.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (53 samples, 2.27%)</title><rect x="284.1" y="355.0" width="26.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="287.1" y="366.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (53 samples, 2.27%)</title><rect x="284.1" y="339.0" width="26.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="287.1" y="350.0">c..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (53 samples, 2.27%)</title><rect x="284.1" y="323.0" width="26.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="287.1" y="334.0">c..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (53 samples, 2.27%)</title><rect x="284.1" y="307.0" width="26.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="287.1" y="318.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (53 samples, 2.27%)</title><rect x="284.1" y="291.0" width="26.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="287.1" y="302.0">c..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (53 samples, 2.27%)</title><rect x="284.1" y="275.0" width="26.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="287.1" y="286.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (28 samples, 1.20%)</title><rect x="284.1" y="259.0" width="14.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="287.1" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (28 samples, 1.20%)</title><rect x="284.1" y="243.0" width="14.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="287.1" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (28 samples, 1.20%)</title><rect x="284.1" y="227.0" width="14.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="287.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (28 samples, 1.20%)</title><rect x="284.1" y="211.0" width="14.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="287.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (28 samples, 1.20%)</title><rect x="284.1" y="195.0" width="14.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="287.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (28 samples, 1.20%)</title><rect x="284.1" y="179.0" width="14.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="287.1" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.getAsBoolean (28 samples, 1.20%)</title><rect x="284.1" y="163.0" width="14.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="287.1" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (28 samples, 1.20%)</title><rect x="284.1" y="147.0" width="14.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="287.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (28 samples, 1.20%)</title><rect x="284.1" y="131.0" width="14.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="287.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (14 samples, 0.60%)</title><rect x="284.1" y="115.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="287.1" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (14 samples, 0.60%)</title><rect x="284.1" y="99.0" width="7.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="287.1" y="110.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (14 samples, 0.60%)</title><rect x="284.1" y="83.0" width="7.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="287.1" y="94.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (14 samples, 0.60%)</title><rect x="291.1" y="115.0" width="7.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="294.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$62/987822523.apply (14 samples, 0.60%)</title><rect x="291.1" y="99.0" width="7.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="294.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (14 samples, 0.60%)</title><rect x="291.1" y="83.0" width="7.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="294.1" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (5 samples, 0.21%)</title><rect x="291.1" y="67.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="294.1" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.21%)</title><rect x="291.1" y="51.0" width="2.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="294.1" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (9 samples, 0.38%)</title><rect x="293.6" y="67.0" width="4.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="296.6" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$95/351241919.apply (25 samples, 1.07%)</title><rect x="298.2" y="259.0" width="12.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="301.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (25 samples, 1.07%)</title><rect x="298.2" y="243.0" width="12.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="301.2" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (25 samples, 1.07%)</title><rect x="298.2" y="227.0" width="12.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="301.2" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (25 samples, 1.07%)</title><rect x="298.2" y="211.0" width="12.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="301.2" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (25 samples, 1.07%)</title><rect x="298.2" y="195.0" width="12.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="301.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.getBytesFromByteBuffer (12 samples, 0.51%)</title><rect x="310.8" y="435.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="313.8" y="446.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.51%)</title><rect x="310.8" y="419.0" width="6.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="313.8" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (9 samples, 0.38%)</title><rect x="316.9" y="467.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="319.9" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.38%)</title><rect x="316.9" y="451.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="319.9" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.38%)</title><rect x="316.9" y="435.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="319.9" y="446.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.17%)</title><rect x="316.9" y="419.0" width="2.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="319.9" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.21%)</title><rect x="318.9" y="419.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="321.9" y="430.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.21%)</title><rect x="318.9" y="403.0" width="2.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="321.9" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (54 samples, 2.31%)</title><rect x="321.4" y="499.0" width="27.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="324.4" y="510.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (6 samples, 0.26%)</title><rect x="321.4" y="483.0" width="3.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="324.4" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (23 samples, 0.98%)</title><rect x="324.4" y="483.0" width="11.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="327.4" y="494.0"></text>
</g>
<g>
<title>java.lang.String[] (23 samples, 0.98%)</title><rect x="324.4" y="467.0" width="11.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="327.4" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (25 samples, 1.07%)</title><rect x="336.0" y="483.0" width="12.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="339.0" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (25 samples, 1.07%)</title><rect x="336.0" y="467.0" width="12.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="339.0" y="478.0"></text>
</g>
<g>
<title>char[] (15 samples, 0.64%)</title><rect x="336.0" y="451.0" width="7.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="339.0" y="462.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.09%)</title><rect x="343.6" y="451.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="346.6" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.34%)</title><rect x="344.6" y="451.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="347.6" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.34%)</title><rect x="344.6" y="435.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="347.6" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (8 samples, 0.34%)</title><rect x="344.6" y="419.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="347.6" y="430.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.34%)</title><rect x="344.6" y="403.0" width="4.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="347.6" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (32 samples, 1.37%)</title><rect x="348.7" y="499.0" width="16.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="351.7" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (32 samples, 1.37%)</title><rect x="348.7" y="483.0" width="16.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="351.7" y="494.0"></text>
</g>
<g>
<title>char[] (21 samples, 0.90%)</title><rect x="348.7" y="467.0" width="10.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="351.7" y="478.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.09%)</title><rect x="359.3" y="467.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="362.3" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.38%)</title><rect x="360.3" y="467.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="363.3" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.38%)</title><rect x="360.3" y="451.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="363.3" y="462.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (9 samples, 0.38%)</title><rect x="360.3" y="435.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="363.3" y="446.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.38%)</title><rect x="360.3" y="419.0" width="4.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="363.3" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=16338] (551 samples, 23.57%)</title><rect x="364.8" y="579.0" width="278.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="367.8" y="590.0">[NIO Selector #1 tid=16338]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (551 samples, 23.57%)</title><rect x="364.8" y="563.0" width="278.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="367.8" y="574.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (13 samples, 0.56%)</title><rect x="364.8" y="547.0" width="6.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="367.8" y="558.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (13 samples, 0.56%)</title><rect x="364.8" y="531.0" width="6.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="367.8" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (538 samples, 23.01%)</title><rect x="371.4" y="547.0" width="271.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="374.4" y="558.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (538 samples, 23.01%)</title><rect x="371.4" y="531.0" width="271.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="374.4" y="542.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (538 samples, 23.01%)</title><rect x="371.4" y="515.0" width="271.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="374.4" y="526.0">one/nio/http/HttpSession.processHttp..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (476 samples, 20.36%)</title><rect x="371.4" y="499.0" width="240.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="374.4" y="510.0">one/nio/http/HttpSession.handleP..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (476 samples, 20.36%)</title><rect x="371.4" y="483.0" width="240.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="374.4" y="494.0">one/nio/http/HttpServer.handleRe..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (465 samples, 19.89%)</title><rect x="371.4" y="467.0" width="234.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="374.4" y="478.0">RequestHandler0_get.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (22 samples, 0.94%)</title><rect x="371.4" y="451.0" width="11.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="374.4" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (22 samples, 0.94%)</title><rect x="371.4" y="435.0" width="11.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="374.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (19 samples, 0.81%)</title><rect x="371.4" y="419.0" width="9.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="374.4" y="430.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (19 samples, 0.81%)</title><rect x="371.4" y="403.0" width="9.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="374.4" y="414.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.81%)</title><rect x="371.4" y="387.0" width="9.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="374.4" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.13%)</title><rect x="381.0" y="419.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="384.0" y="430.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (3 samples, 0.13%)</title><rect x="381.0" y="403.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="384.0" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (12 samples, 0.51%)</title><rect x="382.5" y="451.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="385.5" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (12 samples, 0.51%)</title><rect x="382.5" y="435.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="385.5" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.51%)</title><rect x="382.5" y="419.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="385.5" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.51%)</title><rect x="382.5" y="403.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="385.5" y="414.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.21%)</title><rect x="382.5" y="387.0" width="2.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="385.5" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.30%)</title><rect x="385.0" y="387.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="388.0" y="398.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.30%)</title><rect x="385.0" y="371.0" width="3.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="388.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.get (431 samples, 18.43%)</title><rect x="388.5" y="451.0" width="217.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="391.5" y="462.0">ru/mail/polis/service/bmendli..</text>
</g>
<g>
<title>java/lang/String.getBytes (5 samples, 0.21%)</title><rect x="388.5" y="435.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="391.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (5 samples, 0.21%)</title><rect x="388.5" y="419.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="391.5" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (5 samples, 0.21%)</title><rect x="388.5" y="403.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="391.5" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.21%)</title><rect x="388.5" y="387.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="391.5" y="398.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.21%)</title><rect x="388.5" y="371.0" width="2.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="391.5" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.43%)</title><rect x="391.1" y="435.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="394.1" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.43%)</title><rect x="391.1" y="419.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="394.1" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.43%)</title><rect x="391.1" y="403.0" width="5.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="394.1" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (21 samples, 0.90%)</title><rect x="396.1" y="435.0" width="10.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="399.1" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (6 samples, 0.26%)</title><rect x="396.1" y="419.0" width="3.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="399.1" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (15 samples, 0.64%)</title><rect x="399.1" y="419.0" width="7.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="402.1" y="430.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.34%)</title><rect x="399.1" y="403.0" width="4.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="402.1" y="414.0"></text>
</g>
<g>
<title>java.lang.String[] (4 samples, 0.17%)</title><rect x="403.2" y="403.0" width="2.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="406.2" y="414.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.13%)</title><rect x="405.2" y="403.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="408.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (390 samples, 16.68%)</title><rect x="406.7" y="435.0" width="196.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="409.7" y="446.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (37 samples, 1.58%)</title><rect x="406.7" y="419.0" width="18.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="409.7" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (37 samples, 1.58%)</title><rect x="406.7" y="403.0" width="18.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="409.7" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (37 samples, 1.58%)</title><rect x="406.7" y="387.0" width="18.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="409.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (37 samples, 1.58%)</title><rect x="406.7" y="371.0" width="18.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="409.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (37 samples, 1.58%)</title><rect x="406.7" y="355.0" width="18.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="409.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (26 samples, 1.11%)</title><rect x="406.7" y="339.0" width="13.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="409.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (26 samples, 1.11%)</title><rect x="406.7" y="323.0" width="13.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="409.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (26 samples, 1.11%)</title><rect x="406.7" y="307.0" width="13.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="409.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (26 samples, 1.11%)</title><rect x="406.7" y="291.0" width="13.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="409.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (26 samples, 1.11%)</title><rect x="406.7" y="275.0" width="13.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="409.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (26 samples, 1.11%)</title><rect x="406.7" y="259.0" width="13.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="409.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (12 samples, 0.51%)</title><rect x="406.7" y="243.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="409.7" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (12 samples, 0.51%)</title><rect x="406.7" y="227.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="409.7" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (12 samples, 0.51%)</title><rect x="406.7" y="211.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="409.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (12 samples, 0.51%)</title><rect x="406.7" y="195.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="409.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (12 samples, 0.51%)</title><rect x="406.7" y="179.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="409.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (12 samples, 0.51%)</title><rect x="406.7" y="163.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="409.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.getAsBoolean (12 samples, 0.51%)</title><rect x="406.7" y="147.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="409.7" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (12 samples, 0.51%)</title><rect x="406.7" y="131.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="409.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (12 samples, 0.51%)</title><rect x="406.7" y="115.0" width="6.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="409.7" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.09%)</title><rect x="406.7" y="99.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="409.7" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.09%)</title><rect x="406.7" y="83.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="409.7" y="94.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (2 samples, 0.09%)</title><rect x="406.7" y="67.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="409.7" y="78.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (10 samples, 0.43%)</title><rect x="407.7" y="99.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="410.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$62/987822523.apply (10 samples, 0.43%)</title><rect x="407.7" y="83.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="410.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (10 samples, 0.43%)</title><rect x="407.7" y="67.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="410.7" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (3 samples, 0.13%)</title><rect x="407.7" y="51.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="410.7" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.13%)</title><rect x="407.7" y="35.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="410.7" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (7 samples, 0.30%)</title><rect x="409.2" y="51.0" width="3.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="412.2" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$95/351241919.apply (14 samples, 0.60%)</title><rect x="412.8" y="243.0" width="7.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="415.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (14 samples, 0.60%)</title><rect x="412.8" y="227.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="415.8" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (14 samples, 0.60%)</title><rect x="412.8" y="211.0" width="7.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="415.8" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (14 samples, 0.60%)</title><rect x="412.8" y="195.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="415.8" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (14 samples, 0.60%)</title><rect x="412.8" y="179.0" width="7.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="415.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$115/1349025670.apply (11 samples, 0.47%)</title><rect x="419.8" y="339.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="422.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (11 samples, 0.47%)</title><rect x="419.8" y="323.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="422.8" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (11 samples, 0.47%)</title><rect x="419.8" y="307.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="422.8" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (11 samples, 0.47%)</title><rect x="419.8" y="291.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="422.8" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (11 samples, 0.47%)</title><rect x="419.8" y="275.0" width="5.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="422.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (21 samples, 0.90%)</title><rect x="425.4" y="419.0" width="10.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="428.4" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (21 samples, 0.90%)</title><rect x="425.4" y="403.0" width="10.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="428.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$123/739146284.apply (21 samples, 0.90%)</title><rect x="425.4" y="387.0" width="10.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="428.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$4 (21 samples, 0.90%)</title><rect x="425.4" y="371.0" width="10.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="428.4" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (7 samples, 0.30%)</title><rect x="425.4" y="355.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="428.4" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.30%)</title><rect x="425.4" y="339.0" width="3.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="428.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (14 samples, 0.60%)</title><rect x="428.9" y="355.0" width="7.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="431.9" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (14 samples, 0.60%)</title><rect x="428.9" y="339.0" width="7.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="431.9" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (14 samples, 0.60%)</title><rect x="428.9" y="323.0" width="7.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="431.9" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (14 samples, 0.60%)</title><rect x="428.9" y="307.0" width="7.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="431.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (7 samples, 0.30%)</title><rect x="436.0" y="419.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="439.0" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (7 samples, 0.30%)</title><rect x="436.0" y="403.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="439.0" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (7 samples, 0.30%)</title><rect x="436.0" y="387.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="439.0" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.30%)</title><rect x="436.0" y="371.0" width="3.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="439.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (9 samples, 0.38%)</title><rect x="439.5" y="419.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="442.5" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (9 samples, 0.38%)</title><rect x="439.5" y="403.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="442.5" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (9 samples, 0.38%)</title><rect x="439.5" y="387.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="442.5" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.38%)</title><rect x="439.5" y="371.0" width="4.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="442.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (316 samples, 13.52%)</title><rect x="444.0" y="419.0" width="159.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="447.0" y="430.0">ru/mail/polis/dao/bm..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (1 samples, 0.04%)</title><rect x="444.0" y="403.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="447.0" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (1 samples, 0.04%)</title><rect x="444.0" y="387.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="447.0" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7 samples, 0.30%)</title><rect x="444.6" y="403.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="447.6" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.30%)</title><rect x="444.6" y="387.0" width="3.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="447.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (200 samples, 8.55%)</title><rect x="448.1" y="403.0" width="100.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="451.1" y="414.0">ru/mail/poli..</text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.13%)</title><rect x="448.1" y="387.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="451.1" y="398.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (5 samples, 0.21%)</title><rect x="449.6" y="387.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="452.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (5 samples, 0.21%)</title><rect x="449.6" y="371.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="452.6" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (5 samples, 0.21%)</title><rect x="449.6" y="355.0" width="2.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="452.6" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.09%)</title><rect x="452.1" y="387.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="455.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.09%)</title><rect x="452.1" y="371.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="455.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$106/537430885.get$Lambda (2 samples, 0.09%)</title><rect x="452.1" y="355.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="455.1" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.DAOImpl$$Lambda$106 (2 samples, 0.09%)</title><rect x="452.1" y="339.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="455.1" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (3 samples, 0.13%)</title><rect x="453.1" y="387.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="456.1" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.13%)</title><rect x="453.1" y="371.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="456.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (187 samples, 8.00%)</title><rect x="454.6" y="387.0" width="94.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="457.6" y="398.0">ru/mail/pol..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (5 samples, 0.21%)</title><rect x="454.6" y="371.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="457.6" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (5 samples, 0.21%)</title><rect x="454.6" y="355.0" width="2.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="457.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (74 samples, 3.17%)</title><rect x="457.2" y="371.0" width="37.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="460.2" y="382.0">com..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (3 samples, 0.13%)</title><rect x="457.2" y="355.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="460.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (71 samples, 3.04%)</title><rect x="458.7" y="355.0" width="35.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="461.7" y="366.0">com..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (4 samples, 0.17%)</title><rect x="458.7" y="339.0" width="2.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="461.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (4 samples, 0.17%)</title><rect x="460.7" y="339.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="463.7" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (4 samples, 0.17%)</title><rect x="460.7" y="323.0" width="2.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="463.7" y="334.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (6 samples, 0.26%)</title><rect x="462.7" y="339.0" width="3.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="465.7" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (4 samples, 0.17%)</title><rect x="465.7" y="339.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="468.7" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.17%)</title><rect x="465.7" y="323.0" width="2.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="468.7" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (53 samples, 2.27%)</title><rect x="467.8" y="339.0" width="26.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="470.8" y="350.0">j..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (53 samples, 2.27%)</title><rect x="467.8" y="323.0" width="26.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="470.8" y="334.0">j..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (53 samples, 2.27%)</title><rect x="467.8" y="307.0" width="26.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="470.8" y="318.0">j..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (23 samples, 0.98%)</title><rect x="467.8" y="291.0" width="11.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="470.8" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.getAsBoolean (23 samples, 0.98%)</title><rect x="467.8" y="275.0" width="11.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="470.8" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (23 samples, 0.98%)</title><rect x="467.8" y="259.0" width="11.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="470.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (23 samples, 0.98%)</title><rect x="467.8" y="243.0" width="11.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="470.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.17%)</title><rect x="467.8" y="227.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="470.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.17%)</title><rect x="467.8" y="211.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="470.8" y="222.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (4 samples, 0.17%)</title><rect x="467.8" y="195.0" width="2.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="470.8" y="206.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (19 samples, 0.81%)</title><rect x="469.8" y="227.0" width="9.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="472.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$62/987822523.apply (19 samples, 0.81%)</title><rect x="469.8" y="211.0" width="9.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="472.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (19 samples, 0.81%)</title><rect x="469.8" y="195.0" width="9.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="472.8" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (12 samples, 0.51%)</title><rect x="469.8" y="179.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="472.8" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.51%)</title><rect x="469.8" y="163.0" width="6.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="472.8" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (7 samples, 0.30%)</title><rect x="475.8" y="179.0" width="3.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="478.8" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (30 samples, 1.28%)</title><rect x="479.4" y="291.0" width="15.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="482.4" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (7 samples, 0.30%)</title><rect x="479.4" y="275.0" width="3.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="482.4" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.21%)</title><rect x="482.9" y="275.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="485.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.21%)</title><rect x="482.9" y="259.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="485.9" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$88/2018795132.get$Lambda (1 samples, 0.04%)</title><rect x="482.9" y="243.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="485.9" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$88 (1 samples, 0.04%)</title><rect x="482.9" y="227.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="485.9" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.get$Lambda (4 samples, 0.17%)</title><rect x="483.4" y="243.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="486.4" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$92 (4 samples, 0.17%)</title><rect x="483.4" y="227.0" width="2.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="486.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (3 samples, 0.13%)</title><rect x="485.4" y="275.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="488.4" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (3 samples, 0.13%)</title><rect x="485.4" y="259.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="488.4" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (3 samples, 0.13%)</title><rect x="485.4" y="243.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="488.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (15 samples, 0.64%)</title><rect x="486.9" y="275.0" width="7.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="489.9" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (15 samples, 0.64%)</title><rect x="486.9" y="259.0" width="7.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="489.9" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.17%)</title><rect x="494.5" y="371.0" width="2.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="497.5" y="382.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (16 samples, 0.68%)</title><rect x="496.5" y="371.0" width="8.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="499.5" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (16 samples, 0.68%)</title><rect x="496.5" y="355.0" width="8.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="499.5" y="366.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (5 samples, 0.21%)</title><rect x="496.5" y="339.0" width="2.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="499.5" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (11 samples, 0.47%)</title><rect x="499.1" y="339.0" width="5.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="502.1" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (11 samples, 0.47%)</title><rect x="499.1" y="323.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="502.1" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (11 samples, 0.47%)</title><rect x="499.1" y="307.0" width="5.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="502.1" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.26%)</title><rect x="504.6" y="371.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="507.6" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.26%)</title><rect x="504.6" y="355.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="507.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$68/1684873348.get$Lambda (6 samples, 0.26%)</title><rect x="504.6" y="339.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="507.6" y="350.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.MemTablePool$$Lambda$68 (6 samples, 0.26%)</title><rect x="504.6" y="323.0" width="3.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="507.6" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (8 samples, 0.34%)</title><rect x="507.6" y="371.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="510.6" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (7 samples, 0.30%)</title><rect x="507.6" y="355.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="510.6" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.30%)</title><rect x="507.6" y="339.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="510.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.30%)</title><rect x="507.6" y="323.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="510.6" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$76/1318467195.get$Lambda (7 samples, 0.30%)</title><rect x="507.6" y="307.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="510.6" y="318.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$76 (7 samples, 0.30%)</title><rect x="507.6" y="291.0" width="3.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="510.6" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (1 samples, 0.04%)</title><rect x="511.2" y="355.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="514.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="511.2" y="339.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="514.2" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="511.2" y="323.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="514.2" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$83/2089945492.get$Lambda (1 samples, 0.04%)</title><rect x="511.2" y="307.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="514.2" y="318.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$83 (1 samples, 0.04%)</title><rect x="511.2" y="291.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="514.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (22 samples, 0.94%)</title><rect x="511.7" y="371.0" width="11.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="514.7" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (6 samples, 0.26%)</title><rect x="511.7" y="355.0" width="3.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="514.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (16 samples, 0.68%)</title><rect x="514.7" y="355.0" width="8.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="517.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (16 samples, 0.68%)</title><rect x="514.7" y="339.0" width="8.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="517.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (16 samples, 0.68%)</title><rect x="514.7" y="323.0" width="8.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="517.7" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (16 samples, 0.68%)</title><rect x="514.7" y="307.0" width="8.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="517.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (16 samples, 0.68%)</title><rect x="514.7" y="291.0" width="8.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="517.7" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (16 samples, 0.68%)</title><rect x="514.7" y="275.0" width="8.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="517.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (16 samples, 0.68%)</title><rect x="514.7" y="259.0" width="8.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="517.7" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.getAsBoolean (16 samples, 0.68%)</title><rect x="514.7" y="243.0" width="8.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="517.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (16 samples, 0.68%)</title><rect x="514.7" y="227.0" width="8.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="517.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (16 samples, 0.68%)</title><rect x="514.7" y="211.0" width="8.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="517.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.13%)</title><rect x="514.7" y="195.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="517.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.13%)</title><rect x="514.7" y="179.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="517.7" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (3 samples, 0.13%)</title><rect x="514.7" y="163.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="517.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (13 samples, 0.56%)</title><rect x="516.2" y="195.0" width="6.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="519.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$62/987822523.apply (13 samples, 0.56%)</title><rect x="516.2" y="179.0" width="6.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="519.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (13 samples, 0.56%)</title><rect x="516.2" y="163.0" width="6.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="519.2" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (8 samples, 0.34%)</title><rect x="516.2" y="147.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="519.2" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.34%)</title><rect x="516.2" y="131.0" width="4.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="519.2" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (5 samples, 0.21%)</title><rect x="520.3" y="147.0" width="2.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="523.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (52 samples, 2.22%)</title><rect x="522.8" y="371.0" width="26.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="525.8" y="382.0">r..</text>
</g>
<g>
<title>java/util/Collection.stream (16 samples, 0.68%)</title><rect x="522.8" y="355.0" width="8.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="525.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (6 samples, 0.26%)</title><rect x="522.8" y="339.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="525.8" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (6 samples, 0.26%)</title><rect x="522.8" y="323.0" width="3.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="525.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (10 samples, 0.43%)</title><rect x="525.8" y="339.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="528.8" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (10 samples, 0.43%)</title><rect x="525.8" y="323.0" width="5.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="528.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (1 samples, 0.04%)</title><rect x="530.9" y="355.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="533.9" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (1 samples, 0.04%)</title><rect x="530.9" y="339.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="533.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (7 samples, 0.30%)</title><rect x="531.4" y="355.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="534.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (7 samples, 0.30%)</title><rect x="531.4" y="339.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="534.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (7 samples, 0.30%)</title><rect x="531.4" y="323.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="534.4" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (7 samples, 0.30%)</title><rect x="531.4" y="307.0" width="3.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="534.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (22 samples, 0.94%)</title><rect x="534.9" y="355.0" width="11.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="537.9" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (2 samples, 0.09%)</title><rect x="534.9" y="339.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="537.9" y="350.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (2 samples, 0.09%)</title><rect x="534.9" y="323.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="537.9" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (20 samples, 0.86%)</title><rect x="535.9" y="339.0" width="10.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="538.9" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.34%)</title><rect x="535.9" y="323.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="538.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.34%)</title><rect x="535.9" y="307.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="538.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$63/1805959361.get$Lambda (8 samples, 0.34%)</title><rect x="535.9" y="291.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="538.9" y="302.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$63 (8 samples, 0.34%)</title><rect x="535.9" y="275.0" width="4.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="538.9" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (12 samples, 0.51%)</title><rect x="539.9" y="323.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="542.9" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (12 samples, 0.51%)</title><rect x="539.9" y="307.0" width="6.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="542.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (6 samples, 0.26%)</title><rect x="546.0" y="355.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="549.0" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (6 samples, 0.26%)</title><rect x="546.0" y="339.0" width="3.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="549.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (108 samples, 4.62%)</title><rect x="549.0" y="403.0" width="54.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="552.0" y="414.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (49 samples, 2.10%)</title><rect x="549.0" y="387.0" width="24.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="552.0" y="398.0">c..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (2 samples, 0.09%)</title><rect x="549.0" y="371.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="552.0" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (47 samples, 2.01%)</title><rect x="550.0" y="371.0" width="23.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="553.0" y="382.0">c..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (4 samples, 0.17%)</title><rect x="550.0" y="355.0" width="2.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="553.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (29 samples, 1.24%)</title><rect x="552.1" y="355.0" width="14.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="555.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (29 samples, 1.24%)</title><rect x="552.1" y="339.0" width="14.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="555.1" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (29 samples, 1.24%)</title><rect x="552.1" y="323.0" width="14.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="555.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (29 samples, 1.24%)</title><rect x="552.1" y="307.0" width="14.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="555.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (12 samples, 0.51%)</title><rect x="552.1" y="291.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="555.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (12 samples, 0.51%)</title><rect x="552.1" y="275.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="555.1" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (12 samples, 0.51%)</title><rect x="552.1" y="259.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="555.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (12 samples, 0.51%)</title><rect x="552.1" y="243.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="555.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (12 samples, 0.51%)</title><rect x="552.1" y="227.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="555.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (12 samples, 0.51%)</title><rect x="552.1" y="211.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="555.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.getAsBoolean (12 samples, 0.51%)</title><rect x="552.1" y="195.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="555.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (12 samples, 0.51%)</title><rect x="552.1" y="179.0" width="6.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="555.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (12 samples, 0.51%)</title><rect x="552.1" y="163.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="555.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.09%)</title><rect x="552.1" y="147.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="555.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.09%)</title><rect x="552.1" y="131.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="555.1" y="142.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (2 samples, 0.09%)</title><rect x="552.1" y="115.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="555.1" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (10 samples, 0.43%)</title><rect x="553.1" y="147.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="556.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$62/987822523.apply (10 samples, 0.43%)</title><rect x="553.1" y="131.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="556.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (10 samples, 0.43%)</title><rect x="553.1" y="115.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="556.1" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (7 samples, 0.30%)</title><rect x="553.1" y="99.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="556.1" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.30%)</title><rect x="553.1" y="83.0" width="3.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="556.1" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (3 samples, 0.13%)</title><rect x="556.6" y="99.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="559.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$95/351241919.apply (17 samples, 0.73%)</title><rect x="558.1" y="291.0" width="8.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="561.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (17 samples, 0.73%)</title><rect x="558.1" y="275.0" width="8.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="561.1" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (17 samples, 0.73%)</title><rect x="558.1" y="259.0" width="8.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="561.1" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (17 samples, 0.73%)</title><rect x="558.1" y="243.0" width="8.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="561.1" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (17 samples, 0.73%)</title><rect x="558.1" y="227.0" width="8.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="561.1" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (6 samples, 0.26%)</title><rect x="566.7" y="355.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="569.7" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (6 samples, 0.26%)</title><rect x="566.7" y="339.0" width="3.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="569.7" y="350.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (3 samples, 0.13%)</title><rect x="569.7" y="355.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="572.7" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (5 samples, 0.21%)</title><rect x="571.2" y="355.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="574.2" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.21%)</title><rect x="571.2" y="339.0" width="2.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="574.2" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (2 samples, 0.09%)</title><rect x="573.8" y="387.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="576.8" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.09%)</title><rect x="573.8" y="371.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="576.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.09%)</title><rect x="573.8" y="355.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="576.8" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$76/1318467195.get$Lambda (2 samples, 0.09%)</title><rect x="573.8" y="339.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="576.8" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$76 (2 samples, 0.09%)</title><rect x="573.8" y="323.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="576.8" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (8 samples, 0.34%)</title><rect x="574.8" y="387.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="577.8" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (2 samples, 0.09%)</title><rect x="574.8" y="371.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="577.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.09%)</title><rect x="574.8" y="355.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="577.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.09%)</title><rect x="574.8" y="339.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="577.8" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$76/1318467195.get$Lambda (2 samples, 0.09%)</title><rect x="574.8" y="323.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="577.8" y="334.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$76 (2 samples, 0.09%)</title><rect x="574.8" y="307.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="577.8" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (6 samples, 0.26%)</title><rect x="575.8" y="371.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="578.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.26%)</title><rect x="575.8" y="355.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="578.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.26%)</title><rect x="575.8" y="339.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="578.8" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$83/2089945492.get$Lambda (6 samples, 0.26%)</title><rect x="575.8" y="323.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="578.8" y="334.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$83 (6 samples, 0.26%)</title><rect x="575.8" y="307.0" width="3.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="578.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (49 samples, 2.10%)</title><rect x="578.8" y="387.0" width="24.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="581.8" y="398.0">r..</text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (9 samples, 0.38%)</title><rect x="578.8" y="371.0" width="4.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="581.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (40 samples, 1.71%)</title><rect x="583.3" y="371.0" width="20.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="586.3" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (40 samples, 1.71%)</title><rect x="583.3" y="355.0" width="20.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="586.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (40 samples, 1.71%)</title><rect x="583.3" y="339.0" width="20.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="586.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (40 samples, 1.71%)</title><rect x="583.3" y="323.0" width="20.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="586.3" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (40 samples, 1.71%)</title><rect x="583.3" y="307.0" width="20.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="586.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (40 samples, 1.71%)</title><rect x="583.3" y="291.0" width="20.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="586.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (40 samples, 1.71%)</title><rect x="583.3" y="275.0" width="20.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="586.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (23 samples, 0.98%)</title><rect x="583.3" y="259.0" width="11.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="586.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (23 samples, 0.98%)</title><rect x="583.3" y="243.0" width="11.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="586.3" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (23 samples, 0.98%)</title><rect x="583.3" y="227.0" width="11.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="586.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (23 samples, 0.98%)</title><rect x="583.3" y="211.0" width="11.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="586.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (23 samples, 0.98%)</title><rect x="583.3" y="195.0" width="11.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="586.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (23 samples, 0.98%)</title><rect x="583.3" y="179.0" width="11.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="586.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.getAsBoolean (23 samples, 0.98%)</title><rect x="583.3" y="163.0" width="11.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="586.3" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (23 samples, 0.98%)</title><rect x="583.3" y="147.0" width="11.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="586.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (23 samples, 0.98%)</title><rect x="583.3" y="131.0" width="11.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="586.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.17%)</title><rect x="583.3" y="115.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="586.3" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.17%)</title><rect x="583.3" y="99.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="586.3" y="110.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (4 samples, 0.17%)</title><rect x="583.3" y="83.0" width="2.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="586.3" y="94.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (19 samples, 0.81%)</title><rect x="585.4" y="115.0" width="9.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="588.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$62/987822523.apply (19 samples, 0.81%)</title><rect x="585.4" y="99.0" width="9.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="588.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (19 samples, 0.81%)</title><rect x="585.4" y="83.0" width="9.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="588.4" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (11 samples, 0.47%)</title><rect x="585.4" y="67.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="588.4" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (11 samples, 0.47%)</title><rect x="585.4" y="51.0" width="5.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="588.4" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (8 samples, 0.34%)</title><rect x="590.9" y="67.0" width="4.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="593.9" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$95/351241919.apply (17 samples, 0.73%)</title><rect x="595.0" y="259.0" width="8.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="598.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (17 samples, 0.73%)</title><rect x="595.0" y="243.0" width="8.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="598.0" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (17 samples, 0.73%)</title><rect x="595.0" y="227.0" width="8.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="598.0" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (17 samples, 0.73%)</title><rect x="595.0" y="211.0" width="8.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="598.0" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (17 samples, 0.73%)</title><rect x="595.0" y="195.0" width="8.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="598.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.getBytesFromByteBuffer (5 samples, 0.21%)</title><rect x="603.5" y="435.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="606.5" y="446.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.21%)</title><rect x="603.5" y="419.0" width="2.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="606.5" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (11 samples, 0.47%)</title><rect x="606.1" y="467.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="609.1" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.47%)</title><rect x="606.1" y="451.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="609.1" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.47%)</title><rect x="606.1" y="435.0" width="5.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="609.1" y="446.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.21%)</title><rect x="606.1" y="419.0" width="2.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="609.1" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.26%)</title><rect x="608.6" y="419.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="611.6" y="430.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.26%)</title><rect x="608.6" y="403.0" width="3.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="611.6" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (42 samples, 1.80%)</title><rect x="611.6" y="499.0" width="21.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="614.6" y="510.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (1 samples, 0.04%)</title><rect x="611.6" y="483.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="614.6" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (14 samples, 0.60%)</title><rect x="612.1" y="483.0" width="7.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="615.1" y="494.0"></text>
</g>
<g>
<title>java.lang.String[] (14 samples, 0.60%)</title><rect x="612.1" y="467.0" width="7.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="615.1" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (27 samples, 1.15%)</title><rect x="619.2" y="483.0" width="13.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="622.2" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (27 samples, 1.15%)</title><rect x="619.2" y="467.0" width="13.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="622.2" y="478.0"></text>
</g>
<g>
<title>char[] (10 samples, 0.43%)</title><rect x="619.2" y="451.0" width="5.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="622.2" y="462.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.51%)</title><rect x="624.2" y="451.0" width="6.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="627.2" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.21%)</title><rect x="630.3" y="451.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="633.3" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.21%)</title><rect x="630.3" y="435.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="633.3" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5 samples, 0.21%)</title><rect x="630.3" y="419.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="633.3" y="430.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.21%)</title><rect x="630.3" y="403.0" width="2.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="633.3" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (20 samples, 0.86%)</title><rect x="632.8" y="499.0" width="10.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="635.8" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (20 samples, 0.86%)</title><rect x="632.8" y="483.0" width="10.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="635.8" y="494.0"></text>
</g>
<g>
<title>char[] (10 samples, 0.43%)</title><rect x="632.8" y="467.0" width="5.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="635.8" y="478.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.26%)</title><rect x="637.9" y="467.0" width="3.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="640.9" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.17%)</title><rect x="640.9" y="467.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="643.9" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.17%)</title><rect x="640.9" y="451.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="643.9" y="462.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 0.17%)</title><rect x="640.9" y="435.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="643.9" y="446.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.17%)</title><rect x="640.9" y="419.0" width="2.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="643.9" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=16339] (563 samples, 24.08%)</title><rect x="642.9" y="579.0" width="284.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="645.9" y="590.0">[NIO Selector #2 tid=16339]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (563 samples, 24.08%)</title><rect x="642.9" y="563.0" width="284.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="645.9" y="574.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1 samples, 0.04%)</title><rect x="642.9" y="547.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="645.9" y="558.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (1 samples, 0.04%)</title><rect x="642.9" y="531.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="645.9" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (562 samples, 24.04%)</title><rect x="643.4" y="547.0" width="283.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="646.4" y="558.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (562 samples, 24.04%)</title><rect x="643.4" y="531.0" width="283.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="646.4" y="542.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (562 samples, 24.04%)</title><rect x="643.4" y="515.0" width="283.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="646.4" y="526.0">one/nio/http/HttpSession.processHttpBu..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (491 samples, 21.00%)</title><rect x="643.4" y="499.0" width="247.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="646.4" y="510.0">one/nio/http/HttpSession.handlePa..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (491 samples, 21.00%)</title><rect x="643.4" y="483.0" width="247.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="646.4" y="494.0">one/nio/http/HttpServer.handleReq..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (482 samples, 20.62%)</title><rect x="643.4" y="467.0" width="243.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="646.4" y="478.0">RequestHandler0_get.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (20 samples, 0.86%)</title><rect x="643.4" y="451.0" width="10.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="646.4" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (20 samples, 0.86%)</title><rect x="643.4" y="435.0" width="10.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="646.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (15 samples, 0.64%)</title><rect x="643.4" y="419.0" width="7.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="646.4" y="430.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (15 samples, 0.64%)</title><rect x="643.4" y="403.0" width="7.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="646.4" y="414.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.64%)</title><rect x="643.4" y="387.0" width="7.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="646.4" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.21%)</title><rect x="651.0" y="419.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="654.0" y="430.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (5 samples, 0.21%)</title><rect x="651.0" y="403.0" width="2.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="654.0" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (7 samples, 0.30%)</title><rect x="653.5" y="451.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="656.5" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (7 samples, 0.30%)</title><rect x="653.5" y="435.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="656.5" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.30%)</title><rect x="653.5" y="419.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="656.5" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.30%)</title><rect x="653.5" y="403.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="656.5" y="414.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.17%)</title><rect x="653.5" y="387.0" width="2.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="656.5" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.13%)</title><rect x="655.5" y="387.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="658.5" y="398.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.13%)</title><rect x="655.5" y="371.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="658.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.get (455 samples, 19.46%)</title><rect x="657.0" y="451.0" width="229.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="660.0" y="462.0">ru/mail/polis/service/bmendli/..</text>
</g>
<g>
<title>java/lang/String.getBytes (8 samples, 0.34%)</title><rect x="657.0" y="435.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="660.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (8 samples, 0.34%)</title><rect x="657.0" y="419.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="660.0" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (8 samples, 0.34%)</title><rect x="657.0" y="403.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="660.0" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.34%)</title><rect x="657.0" y="387.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="660.0" y="398.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.34%)</title><rect x="657.0" y="371.0" width="4.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="660.0" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.26%)</title><rect x="661.1" y="435.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="664.1" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.26%)</title><rect x="661.1" y="419.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="664.1" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.26%)</title><rect x="661.1" y="403.0" width="3.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="664.1" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (25 samples, 1.07%)</title><rect x="664.1" y="435.0" width="12.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="667.1" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (5 samples, 0.21%)</title><rect x="664.1" y="419.0" width="2.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="667.1" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (20 samples, 0.86%)</title><rect x="666.6" y="419.0" width="10.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="669.6" y="430.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.43%)</title><rect x="666.6" y="403.0" width="5.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="669.6" y="414.0"></text>
</g>
<g>
<title>java.lang.String[] (5 samples, 0.21%)</title><rect x="671.7" y="403.0" width="2.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="674.7" y="414.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.21%)</title><rect x="674.2" y="403.0" width="2.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="677.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (412 samples, 17.62%)</title><rect x="676.7" y="435.0" width="208.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="679.7" y="446.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (63 samples, 2.69%)</title><rect x="676.7" y="419.0" width="31.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="679.7" y="430.0">co..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (63 samples, 2.69%)</title><rect x="676.7" y="403.0" width="31.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="679.7" y="414.0">co..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (63 samples, 2.69%)</title><rect x="676.7" y="387.0" width="31.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="679.7" y="398.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (63 samples, 2.69%)</title><rect x="676.7" y="371.0" width="31.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="679.7" y="382.0">co..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (63 samples, 2.69%)</title><rect x="676.7" y="355.0" width="31.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="679.7" y="366.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (34 samples, 1.45%)</title><rect x="676.7" y="339.0" width="17.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="679.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (34 samples, 1.45%)</title><rect x="676.7" y="323.0" width="17.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="679.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (34 samples, 1.45%)</title><rect x="676.7" y="307.0" width="17.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="679.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (34 samples, 1.45%)</title><rect x="676.7" y="291.0" width="17.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="679.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (34 samples, 1.45%)</title><rect x="676.7" y="275.0" width="17.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="679.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (34 samples, 1.45%)</title><rect x="676.7" y="259.0" width="17.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="679.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (15 samples, 0.64%)</title><rect x="676.7" y="243.0" width="7.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="679.7" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (15 samples, 0.64%)</title><rect x="676.7" y="227.0" width="7.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="679.7" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (15 samples, 0.64%)</title><rect x="676.7" y="211.0" width="7.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="679.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (15 samples, 0.64%)</title><rect x="676.7" y="195.0" width="7.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="679.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (15 samples, 0.64%)</title><rect x="676.7" y="179.0" width="7.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="679.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (15 samples, 0.64%)</title><rect x="676.7" y="163.0" width="7.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="679.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.getAsBoolean (15 samples, 0.64%)</title><rect x="676.7" y="147.0" width="7.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="679.7" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (15 samples, 0.64%)</title><rect x="676.7" y="131.0" width="7.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="679.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (15 samples, 0.64%)</title><rect x="676.7" y="115.0" width="7.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="679.7" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (15 samples, 0.64%)</title><rect x="676.7" y="99.0" width="7.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="679.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$62/987822523.apply (15 samples, 0.64%)</title><rect x="676.7" y="83.0" width="7.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="679.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (15 samples, 0.64%)</title><rect x="676.7" y="67.0" width="7.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="679.7" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (7 samples, 0.30%)</title><rect x="676.7" y="51.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="679.7" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.30%)</title><rect x="676.7" y="35.0" width="3.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="679.7" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (8 samples, 0.34%)</title><rect x="680.2" y="51.0" width="4.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="683.2" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$95/351241919.apply (19 samples, 0.81%)</title><rect x="684.3" y="243.0" width="9.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="687.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (19 samples, 0.81%)</title><rect x="684.3" y="227.0" width="9.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="687.3" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (19 samples, 0.81%)</title><rect x="684.3" y="211.0" width="9.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="687.3" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (19 samples, 0.81%)</title><rect x="684.3" y="195.0" width="9.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="687.3" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (19 samples, 0.81%)</title><rect x="684.3" y="179.0" width="9.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="687.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$115/1349025670.apply (29 samples, 1.24%)</title><rect x="693.9" y="339.0" width="14.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="696.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (29 samples, 1.24%)</title><rect x="693.9" y="323.0" width="14.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="696.9" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (29 samples, 1.24%)</title><rect x="693.9" y="307.0" width="14.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="696.9" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (29 samples, 1.24%)</title><rect x="693.9" y="291.0" width="14.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="696.9" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (29 samples, 1.24%)</title><rect x="693.9" y="275.0" width="14.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="696.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (21 samples, 0.90%)</title><rect x="708.5" y="419.0" width="10.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="711.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (21 samples, 0.90%)</title><rect x="708.5" y="403.0" width="10.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="711.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$123/739146284.apply (21 samples, 0.90%)</title><rect x="708.5" y="387.0" width="10.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="711.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$4 (21 samples, 0.90%)</title><rect x="708.5" y="371.0" width="10.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="711.5" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (9 samples, 0.38%)</title><rect x="708.5" y="355.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="711.5" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.38%)</title><rect x="708.5" y="339.0" width="4.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="711.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (12 samples, 0.51%)</title><rect x="713.1" y="355.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="716.1" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (12 samples, 0.51%)</title><rect x="713.1" y="339.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="716.1" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (12 samples, 0.51%)</title><rect x="713.1" y="323.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="716.1" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.51%)</title><rect x="713.1" y="307.0" width="6.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="716.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (5 samples, 0.21%)</title><rect x="719.1" y="419.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="722.1" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (5 samples, 0.21%)</title><rect x="719.1" y="403.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="722.1" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (5 samples, 0.21%)</title><rect x="719.1" y="387.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="722.1" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.21%)</title><rect x="719.1" y="371.0" width="2.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="722.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (9 samples, 0.38%)</title><rect x="721.6" y="419.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="724.6" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (9 samples, 0.38%)</title><rect x="721.6" y="403.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="724.6" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (9 samples, 0.38%)</title><rect x="721.6" y="387.0" width="4.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="724.6" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.38%)</title><rect x="721.6" y="371.0" width="4.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="724.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (314 samples, 13.43%)</title><rect x="726.2" y="419.0" width="158.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="729.2" y="430.0">ru/mail/polis/dao/bm..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (6 samples, 0.26%)</title><rect x="726.2" y="403.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="729.2" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (6 samples, 0.26%)</title><rect x="726.2" y="387.0" width="3.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="729.2" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (13 samples, 0.56%)</title><rect x="729.2" y="403.0" width="6.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="732.2" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.56%)</title><rect x="729.2" y="387.0" width="6.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="732.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (191 samples, 8.17%)</title><rect x="735.8" y="403.0" width="96.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="738.8" y="414.0">ru/mail/pol..</text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.13%)</title><rect x="735.8" y="387.0" width="1.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="738.8" y="398.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (5 samples, 0.21%)</title><rect x="737.3" y="387.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="740.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (5 samples, 0.21%)</title><rect x="737.3" y="371.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="740.3" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (5 samples, 0.21%)</title><rect x="737.3" y="355.0" width="2.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="740.3" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.13%)</title><rect x="739.8" y="387.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="742.8" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.13%)</title><rect x="739.8" y="371.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="742.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$106/537430885.get$Lambda (3 samples, 0.13%)</title><rect x="739.8" y="355.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="742.8" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.DAOImpl$$Lambda$106 (3 samples, 0.13%)</title><rect x="739.8" y="339.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="742.8" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (3 samples, 0.13%)</title><rect x="741.3" y="387.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="744.3" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.13%)</title><rect x="741.3" y="371.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="744.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (177 samples, 7.57%)</title><rect x="742.8" y="387.0" width="89.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="745.8" y="398.0">ru/mail/po..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (7 samples, 0.30%)</title><rect x="742.8" y="371.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="745.8" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (7 samples, 0.30%)</title><rect x="742.8" y="355.0" width="3.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="745.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (58 samples, 2.48%)</title><rect x="746.4" y="371.0" width="29.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="749.4" y="382.0">co..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (4 samples, 0.17%)</title><rect x="746.4" y="355.0" width="2.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="749.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (54 samples, 2.31%)</title><rect x="748.4" y="355.0" width="27.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="751.4" y="366.0">c..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (5 samples, 0.21%)</title><rect x="748.4" y="339.0" width="2.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="751.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (1 samples, 0.04%)</title><rect x="750.9" y="339.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="753.9" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (1 samples, 0.04%)</title><rect x="750.9" y="323.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="753.9" y="334.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (3 samples, 0.13%)</title><rect x="751.4" y="339.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="754.4" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (2 samples, 0.09%)</title><rect x="752.9" y="339.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="755.9" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.09%)</title><rect x="752.9" y="323.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="755.9" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (43 samples, 1.84%)</title><rect x="753.9" y="339.0" width="21.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="756.9" y="350.0">j..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (43 samples, 1.84%)</title><rect x="753.9" y="323.0" width="21.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="756.9" y="334.0">j..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (43 samples, 1.84%)</title><rect x="753.9" y="307.0" width="21.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="756.9" y="318.0">j..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (16 samples, 0.68%)</title><rect x="753.9" y="291.0" width="8.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="756.9" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.getAsBoolean (16 samples, 0.68%)</title><rect x="753.9" y="275.0" width="8.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="756.9" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (16 samples, 0.68%)</title><rect x="753.9" y="259.0" width="8.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="756.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (16 samples, 0.68%)</title><rect x="753.9" y="243.0" width="8.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="756.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (7 samples, 0.30%)</title><rect x="753.9" y="227.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="756.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (7 samples, 0.30%)</title><rect x="753.9" y="211.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="756.9" y="222.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (7 samples, 0.30%)</title><rect x="753.9" y="195.0" width="3.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="756.9" y="206.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (9 samples, 0.38%)</title><rect x="757.5" y="227.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="760.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$62/987822523.apply (9 samples, 0.38%)</title><rect x="757.5" y="211.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="760.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (9 samples, 0.38%)</title><rect x="757.5" y="195.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="760.5" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (4 samples, 0.17%)</title><rect x="757.5" y="179.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="760.5" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.17%)</title><rect x="757.5" y="163.0" width="2.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="760.5" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (5 samples, 0.21%)</title><rect x="759.5" y="179.0" width="2.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="762.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (27 samples, 1.15%)</title><rect x="762.0" y="291.0" width="13.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="765.0" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (2 samples, 0.09%)</title><rect x="762.0" y="275.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="765.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.26%)</title><rect x="763.0" y="275.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="766.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.26%)</title><rect x="763.0" y="259.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="766.0" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$88/2018795132.get$Lambda (4 samples, 0.17%)</title><rect x="763.0" y="243.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="766.0" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$88 (4 samples, 0.17%)</title><rect x="763.0" y="227.0" width="2.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="766.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.get$Lambda (2 samples, 0.09%)</title><rect x="765.0" y="243.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="768.0" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$92 (2 samples, 0.09%)</title><rect x="765.0" y="227.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="768.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (4 samples, 0.17%)</title><rect x="766.0" y="275.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="769.0" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (4 samples, 0.17%)</title><rect x="766.0" y="259.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="769.0" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (4 samples, 0.17%)</title><rect x="766.0" y="243.0" width="2.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="769.0" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (15 samples, 0.64%)</title><rect x="768.1" y="275.0" width="7.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="771.1" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (15 samples, 0.64%)</title><rect x="768.1" y="259.0" width="7.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="771.1" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.04%)</title><rect x="775.6" y="371.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="778.6" y="382.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (3 samples, 0.13%)</title><rect x="776.1" y="371.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="779.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (3 samples, 0.13%)</title><rect x="776.1" y="355.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="779.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (3 samples, 0.13%)</title><rect x="776.1" y="339.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="779.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (3 samples, 0.13%)</title><rect x="776.1" y="323.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="779.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (3 samples, 0.13%)</title><rect x="776.1" y="307.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="779.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (3 samples, 0.13%)</title><rect x="776.1" y="291.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="779.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getByteBuffer (1 samples, 0.04%)</title><rect x="776.1" y="275.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="779.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.cachedInputStream (1 samples, 0.04%)</title><rect x="776.1" y="259.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="779.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader$2.getInputStream (1 samples, 0.04%)</title><rect x="776.1" y="243.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="779.1" y="254.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getInputStream (1 samples, 0.04%)</title><rect x="776.1" y="227.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="779.1" y="238.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getInputStream (1 samples, 0.04%)</title><rect x="776.1" y="211.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="779.1" y="222.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.&lt;init&gt; (1 samples, 0.04%)</title><rect x="776.1" y="195.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="779.1" y="206.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.&lt;init&gt; (1 samples, 0.04%)</title><rect x="776.1" y="179.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="779.1" y="190.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.&lt;init&gt; (1 samples, 0.04%)</title><rect x="776.1" y="163.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="779.1" y="174.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="776.1" y="147.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="779.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (2 samples, 0.09%)</title><rect x="776.6" y="275.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="779.6" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.09%)</title><rect x="776.6" y="259.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="779.6" y="270.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.09%)</title><rect x="776.6" y="243.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="779.6" y="254.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (8 samples, 0.34%)</title><rect x="777.7" y="371.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="780.7" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (8 samples, 0.34%)</title><rect x="777.7" y="355.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="780.7" y="366.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (2 samples, 0.09%)</title><rect x="777.7" y="339.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="780.7" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (6 samples, 0.26%)</title><rect x="778.7" y="339.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="781.7" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (6 samples, 0.26%)</title><rect x="778.7" y="323.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="781.7" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (6 samples, 0.26%)</title><rect x="778.7" y="307.0" width="3.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="781.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.13%)</title><rect x="781.7" y="371.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="784.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.13%)</title><rect x="781.7" y="355.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="784.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$68/1684873348.get$Lambda (3 samples, 0.13%)</title><rect x="781.7" y="339.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="784.7" y="350.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.MemTablePool$$Lambda$68 (3 samples, 0.13%)</title><rect x="781.7" y="323.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="784.7" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (5 samples, 0.21%)</title><rect x="783.2" y="371.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="786.2" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.21%)</title><rect x="783.2" y="355.0" width="2.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="786.2" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (3 samples, 0.13%)</title><rect x="785.7" y="371.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="788.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.13%)</title><rect x="785.7" y="355.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="788.7" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.13%)</title><rect x="785.7" y="339.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="788.7" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$76/1318467195.get$Lambda (3 samples, 0.13%)</title><rect x="785.7" y="323.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="788.7" y="334.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$76 (3 samples, 0.13%)</title><rect x="785.7" y="307.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="788.7" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (7 samples, 0.30%)</title><rect x="787.2" y="371.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="790.2" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (3 samples, 0.13%)</title><rect x="787.2" y="355.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="790.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.13%)</title><rect x="787.2" y="339.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="790.2" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.13%)</title><rect x="787.2" y="323.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="790.2" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$76/1318467195.get$Lambda (3 samples, 0.13%)</title><rect x="787.2" y="307.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="790.2" y="318.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$76 (3 samples, 0.13%)</title><rect x="787.2" y="291.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="790.2" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (4 samples, 0.17%)</title><rect x="788.8" y="355.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="791.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.17%)</title><rect x="788.8" y="339.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="791.8" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.17%)</title><rect x="788.8" y="323.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="791.8" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$83/2089945492.get$Lambda (4 samples, 0.17%)</title><rect x="788.8" y="307.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="791.8" y="318.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$83 (4 samples, 0.17%)</title><rect x="788.8" y="291.0" width="2.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="791.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (30 samples, 1.28%)</title><rect x="790.8" y="371.0" width="15.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="793.8" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (7 samples, 0.30%)</title><rect x="790.8" y="355.0" width="3.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="793.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (23 samples, 0.98%)</title><rect x="794.3" y="355.0" width="11.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="797.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (23 samples, 0.98%)</title><rect x="794.3" y="339.0" width="11.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="797.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (23 samples, 0.98%)</title><rect x="794.3" y="323.0" width="11.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="797.3" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (23 samples, 0.98%)</title><rect x="794.3" y="307.0" width="11.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="797.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (23 samples, 0.98%)</title><rect x="794.3" y="291.0" width="11.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="797.3" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (23 samples, 0.98%)</title><rect x="794.3" y="275.0" width="11.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="797.3" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (23 samples, 0.98%)</title><rect x="794.3" y="259.0" width="11.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="797.3" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.getAsBoolean (23 samples, 0.98%)</title><rect x="794.3" y="243.0" width="11.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="797.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (23 samples, 0.98%)</title><rect x="794.3" y="227.0" width="11.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="797.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (23 samples, 0.98%)</title><rect x="794.3" y="211.0" width="11.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="797.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.21%)</title><rect x="794.3" y="195.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="797.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.21%)</title><rect x="794.3" y="179.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="797.3" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (5 samples, 0.21%)</title><rect x="794.3" y="163.0" width="2.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="797.3" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (18 samples, 0.77%)</title><rect x="796.8" y="195.0" width="9.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="799.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$62/987822523.apply (18 samples, 0.77%)</title><rect x="796.8" y="179.0" width="9.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="799.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (18 samples, 0.77%)</title><rect x="796.8" y="163.0" width="9.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="799.8" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (12 samples, 0.51%)</title><rect x="796.8" y="147.0" width="6.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="799.8" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.51%)</title><rect x="796.8" y="131.0" width="6.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="799.8" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (6 samples, 0.26%)</title><rect x="802.9" y="147.0" width="3.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="805.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (52 samples, 2.22%)</title><rect x="805.9" y="371.0" width="26.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="808.9" y="382.0">r..</text>
</g>
<g>
<title>java/util/Collection.stream (17 samples, 0.73%)</title><rect x="805.9" y="355.0" width="8.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="808.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (4 samples, 0.17%)</title><rect x="805.9" y="339.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="808.9" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (4 samples, 0.17%)</title><rect x="805.9" y="323.0" width="2.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="808.9" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (13 samples, 0.56%)</title><rect x="807.9" y="339.0" width="6.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="810.9" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (13 samples, 0.56%)</title><rect x="807.9" y="323.0" width="6.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="810.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (2 samples, 0.09%)</title><rect x="814.5" y="355.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="817.5" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (2 samples, 0.09%)</title><rect x="814.5" y="339.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="817.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (8 samples, 0.34%)</title><rect x="815.5" y="355.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="818.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (8 samples, 0.34%)</title><rect x="815.5" y="339.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="818.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (8 samples, 0.34%)</title><rect x="815.5" y="323.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="818.5" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (8 samples, 0.34%)</title><rect x="815.5" y="307.0" width="4.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="818.5" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (13 samples, 0.56%)</title><rect x="819.5" y="355.0" width="6.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="822.5" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (3 samples, 0.13%)</title><rect x="819.5" y="339.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="822.5" y="350.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (3 samples, 0.13%)</title><rect x="819.5" y="323.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="822.5" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (10 samples, 0.43%)</title><rect x="821.1" y="339.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="824.1" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.17%)</title><rect x="821.1" y="323.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="824.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.17%)</title><rect x="821.1" y="307.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="824.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$63/1805959361.get$Lambda (4 samples, 0.17%)</title><rect x="821.1" y="291.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="824.1" y="302.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$63 (4 samples, 0.17%)</title><rect x="821.1" y="275.0" width="2.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="824.1" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (6 samples, 0.26%)</title><rect x="823.1" y="323.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="826.1" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (6 samples, 0.26%)</title><rect x="823.1" y="307.0" width="3.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="826.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (12 samples, 0.51%)</title><rect x="826.1" y="355.0" width="6.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="829.1" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (12 samples, 0.51%)</title><rect x="826.1" y="339.0" width="6.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="829.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (104 samples, 4.45%)</title><rect x="832.2" y="403.0" width="52.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="835.2" y="414.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (59 samples, 2.52%)</title><rect x="832.2" y="387.0" width="29.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="835.2" y="398.0">co..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (5 samples, 0.21%)</title><rect x="832.2" y="371.0" width="2.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="835.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (54 samples, 2.31%)</title><rect x="834.7" y="371.0" width="27.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="837.7" y="382.0">c..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (5 samples, 0.21%)</title><rect x="834.7" y="355.0" width="2.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="837.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (37 samples, 1.58%)</title><rect x="837.2" y="355.0" width="18.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="840.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (37 samples, 1.58%)</title><rect x="837.2" y="339.0" width="18.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="840.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (37 samples, 1.58%)</title><rect x="837.2" y="323.0" width="18.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="840.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (37 samples, 1.58%)</title><rect x="837.2" y="307.0" width="18.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="840.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (23 samples, 0.98%)</title><rect x="837.2" y="291.0" width="11.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="840.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (23 samples, 0.98%)</title><rect x="837.2" y="275.0" width="11.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="840.2" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (23 samples, 0.98%)</title><rect x="837.2" y="259.0" width="11.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="840.2" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (23 samples, 0.98%)</title><rect x="837.2" y="243.0" width="11.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="840.2" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (23 samples, 0.98%)</title><rect x="837.2" y="227.0" width="11.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="840.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (23 samples, 0.98%)</title><rect x="837.2" y="211.0" width="11.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="840.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.getAsBoolean (23 samples, 0.98%)</title><rect x="837.2" y="195.0" width="11.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="840.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (23 samples, 0.98%)</title><rect x="837.2" y="179.0" width="11.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="840.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (23 samples, 0.98%)</title><rect x="837.2" y="163.0" width="11.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="840.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.13%)</title><rect x="837.2" y="147.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="840.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.13%)</title><rect x="837.2" y="131.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="840.2" y="142.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (3 samples, 0.13%)</title><rect x="837.2" y="115.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="840.2" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (20 samples, 0.86%)</title><rect x="838.7" y="147.0" width="10.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="841.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$62/987822523.apply (20 samples, 0.86%)</title><rect x="838.7" y="131.0" width="10.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="841.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (20 samples, 0.86%)</title><rect x="838.7" y="115.0" width="10.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="841.7" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (14 samples, 0.60%)</title><rect x="838.7" y="99.0" width="7.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="841.7" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (14 samples, 0.60%)</title><rect x="838.7" y="83.0" width="7.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="841.7" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (6 samples, 0.26%)</title><rect x="845.8" y="99.0" width="3.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="848.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$95/351241919.apply (14 samples, 0.60%)</title><rect x="848.8" y="291.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="851.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (14 samples, 0.60%)</title><rect x="848.8" y="275.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="851.8" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (14 samples, 0.60%)</title><rect x="848.8" y="259.0" width="7.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="851.8" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (14 samples, 0.60%)</title><rect x="848.8" y="243.0" width="7.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="851.8" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (14 samples, 0.60%)</title><rect x="848.8" y="227.0" width="7.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="851.8" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (3 samples, 0.13%)</title><rect x="855.9" y="355.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="858.9" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (3 samples, 0.13%)</title><rect x="855.9" y="339.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="858.9" y="350.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (6 samples, 0.26%)</title><rect x="857.4" y="355.0" width="3.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="860.4" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (3 samples, 0.13%)</title><rect x="860.4" y="355.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="863.4" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.13%)</title><rect x="860.4" y="339.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="863.4" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (6 samples, 0.26%)</title><rect x="861.9" y="387.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="864.9" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (1 samples, 0.04%)</title><rect x="861.9" y="371.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="864.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="861.9" y="355.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="864.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="861.9" y="339.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="864.9" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$76/1318467195.get$Lambda (1 samples, 0.04%)</title><rect x="861.9" y="323.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="864.9" y="334.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$76 (1 samples, 0.04%)</title><rect x="861.9" y="307.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="864.9" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (5 samples, 0.21%)</title><rect x="862.4" y="371.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="865.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.21%)</title><rect x="862.4" y="355.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="865.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.21%)</title><rect x="862.4" y="339.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="865.4" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$83/2089945492.get$Lambda (5 samples, 0.21%)</title><rect x="862.4" y="323.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="865.4" y="334.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$83 (5 samples, 0.21%)</title><rect x="862.4" y="307.0" width="2.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="865.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (39 samples, 1.67%)</title><rect x="865.0" y="387.0" width="19.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="868.0" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (5 samples, 0.21%)</title><rect x="865.0" y="371.0" width="2.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="868.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (34 samples, 1.45%)</title><rect x="867.5" y="371.0" width="17.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="870.5" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (34 samples, 1.45%)</title><rect x="867.5" y="355.0" width="17.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="870.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (34 samples, 1.45%)</title><rect x="867.5" y="339.0" width="17.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="870.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (34 samples, 1.45%)</title><rect x="867.5" y="323.0" width="17.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="870.5" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (34 samples, 1.45%)</title><rect x="867.5" y="307.0" width="17.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="870.5" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (34 samples, 1.45%)</title><rect x="867.5" y="291.0" width="17.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="870.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (34 samples, 1.45%)</title><rect x="867.5" y="275.0" width="17.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="870.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (13 samples, 0.56%)</title><rect x="867.5" y="259.0" width="6.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="870.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (13 samples, 0.56%)</title><rect x="867.5" y="243.0" width="6.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="870.5" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (13 samples, 0.56%)</title><rect x="867.5" y="227.0" width="6.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="870.5" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (13 samples, 0.56%)</title><rect x="867.5" y="211.0" width="6.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="870.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (13 samples, 0.56%)</title><rect x="867.5" y="195.0" width="6.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="870.5" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (13 samples, 0.56%)</title><rect x="867.5" y="179.0" width="6.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="870.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.getAsBoolean (13 samples, 0.56%)</title><rect x="867.5" y="163.0" width="6.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="870.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (13 samples, 0.56%)</title><rect x="867.5" y="147.0" width="6.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="870.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (13 samples, 0.56%)</title><rect x="867.5" y="131.0" width="6.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="870.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.04%)</title><rect x="867.5" y="115.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="870.5" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.04%)</title><rect x="867.5" y="99.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="870.5" y="110.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (1 samples, 0.04%)</title><rect x="867.5" y="83.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="870.5" y="94.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (12 samples, 0.51%)</title><rect x="868.0" y="115.0" width="6.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="871.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$62/987822523.apply (12 samples, 0.51%)</title><rect x="868.0" y="99.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="871.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (12 samples, 0.51%)</title><rect x="868.0" y="83.0" width="6.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="871.0" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (8 samples, 0.34%)</title><rect x="868.0" y="67.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="871.0" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.34%)</title><rect x="868.0" y="51.0" width="4.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="871.0" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (4 samples, 0.17%)</title><rect x="872.0" y="67.0" width="2.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="875.0" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$95/351241919.apply (21 samples, 0.90%)</title><rect x="874.1" y="259.0" width="10.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="877.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (21 samples, 0.90%)</title><rect x="874.1" y="243.0" width="10.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="877.1" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (21 samples, 0.90%)</title><rect x="874.1" y="227.0" width="10.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="877.1" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (21 samples, 0.90%)</title><rect x="874.1" y="211.0" width="10.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="877.1" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (21 samples, 0.90%)</title><rect x="874.1" y="195.0" width="10.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="877.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.getBytesFromByteBuffer (4 samples, 0.17%)</title><rect x="884.7" y="435.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="887.7" y="446.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.17%)</title><rect x="884.7" y="419.0" width="2.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="887.7" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (9 samples, 0.38%)</title><rect x="886.7" y="467.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="889.7" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.38%)</title><rect x="886.7" y="451.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="889.7" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.38%)</title><rect x="886.7" y="435.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="889.7" y="446.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.21%)</title><rect x="886.7" y="419.0" width="2.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="889.7" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.17%)</title><rect x="889.2" y="419.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="892.2" y="430.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.17%)</title><rect x="889.2" y="403.0" width="2.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="892.2" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (46 samples, 1.97%)</title><rect x="891.2" y="499.0" width="23.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="894.2" y="510.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (7 samples, 0.30%)</title><rect x="891.2" y="483.0" width="3.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="894.2" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (8 samples, 0.34%)</title><rect x="894.7" y="483.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="897.7" y="494.0"></text>
</g>
<g>
<title>java.lang.String[] (8 samples, 0.34%)</title><rect x="894.7" y="467.0" width="4.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="897.7" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (31 samples, 1.33%)</title><rect x="898.8" y="483.0" width="15.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="901.8" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (31 samples, 1.33%)</title><rect x="898.8" y="467.0" width="15.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="901.8" y="478.0"></text>
</g>
<g>
<title>char[] (19 samples, 0.81%)</title><rect x="898.8" y="451.0" width="9.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="901.8" y="462.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.21%)</title><rect x="908.4" y="451.0" width="2.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="911.4" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.30%)</title><rect x="910.9" y="451.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="913.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.30%)</title><rect x="910.9" y="435.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="913.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (7 samples, 0.30%)</title><rect x="910.9" y="419.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="913.9" y="430.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.30%)</title><rect x="910.9" y="403.0" width="3.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="913.9" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (25 samples, 1.07%)</title><rect x="914.4" y="499.0" width="12.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="917.4" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (25 samples, 1.07%)</title><rect x="914.4" y="483.0" width="12.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="917.4" y="494.0"></text>
</g>
<g>
<title>char[] (13 samples, 0.56%)</title><rect x="914.4" y="467.0" width="6.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="917.4" y="478.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.09%)</title><rect x="921.0" y="467.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="924.0" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.43%)</title><rect x="922.0" y="467.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="925.0" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.43%)</title><rect x="922.0" y="451.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="925.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (10 samples, 0.43%)</title><rect x="922.0" y="435.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="925.0" y="446.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.43%)</title><rect x="922.0" y="419.0" width="5.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="925.0" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=16340] (520 samples, 22.24%)</title><rect x="927.0" y="579.0" width="262.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="930.0" y="590.0">[NIO Selector #3 tid=16340]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (520 samples, 22.24%)</title><rect x="927.0" y="563.0" width="262.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="930.0" y="574.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (14 samples, 0.60%)</title><rect x="927.0" y="547.0" width="7.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="930.0" y="558.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (14 samples, 0.60%)</title><rect x="927.0" y="531.0" width="7.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="930.0" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (506 samples, 21.64%)</title><rect x="934.1" y="547.0" width="255.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="937.1" y="558.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (506 samples, 21.64%)</title><rect x="934.1" y="531.0" width="255.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="937.1" y="542.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (506 samples, 21.64%)</title><rect x="934.1" y="515.0" width="255.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="937.1" y="526.0">one/nio/http/HttpSession.processHt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (455 samples, 19.46%)</title><rect x="934.1" y="499.0" width="229.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="937.1" y="510.0">one/nio/http/HttpSession.handl..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (455 samples, 19.46%)</title><rect x="934.1" y="483.0" width="229.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="937.1" y="494.0">one/nio/http/HttpServer.handle..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (444 samples, 18.99%)</title><rect x="934.1" y="467.0" width="224.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="937.1" y="478.0">RequestHandler0_get.handleRequ..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (21 samples, 0.90%)</title><rect x="934.1" y="451.0" width="10.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="937.1" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (21 samples, 0.90%)</title><rect x="934.1" y="435.0" width="10.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="937.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (13 samples, 0.56%)</title><rect x="934.1" y="419.0" width="6.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="937.1" y="430.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (13 samples, 0.56%)</title><rect x="934.1" y="403.0" width="6.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="937.1" y="414.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.56%)</title><rect x="934.1" y="387.0" width="6.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="937.1" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (8 samples, 0.34%)</title><rect x="940.7" y="419.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="943.7" y="430.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (8 samples, 0.34%)</title><rect x="940.7" y="403.0" width="4.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="943.7" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (4 samples, 0.17%)</title><rect x="944.7" y="451.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="947.7" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.17%)</title><rect x="944.7" y="435.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="947.7" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.17%)</title><rect x="944.7" y="419.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="947.7" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.17%)</title><rect x="944.7" y="403.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="947.7" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.17%)</title><rect x="944.7" y="387.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="947.7" y="398.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.17%)</title><rect x="944.7" y="371.0" width="2.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="947.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.get (419 samples, 17.92%)</title><rect x="946.7" y="451.0" width="211.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="949.7" y="462.0">ru/mail/polis/service/bmendl..</text>
</g>
<g>
<title>java/lang/String.getBytes (7 samples, 0.30%)</title><rect x="946.7" y="435.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="949.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (7 samples, 0.30%)</title><rect x="946.7" y="419.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="949.7" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (7 samples, 0.30%)</title><rect x="946.7" y="403.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="949.7" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.30%)</title><rect x="946.7" y="387.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="949.7" y="398.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.30%)</title><rect x="946.7" y="371.0" width="3.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="949.7" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.30%)</title><rect x="950.3" y="435.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="953.3" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.30%)</title><rect x="950.3" y="419.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="953.3" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.30%)</title><rect x="950.3" y="403.0" width="3.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="953.3" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (23 samples, 0.98%)</title><rect x="953.8" y="435.0" width="11.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="956.8" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (7 samples, 0.30%)</title><rect x="953.8" y="419.0" width="3.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="956.8" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (16 samples, 0.68%)</title><rect x="957.3" y="419.0" width="8.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="960.3" y="430.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.34%)</title><rect x="957.3" y="403.0" width="4.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="960.3" y="414.0"></text>
</g>
<g>
<title>java.lang.String[] (4 samples, 0.17%)</title><rect x="961.4" y="403.0" width="2.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="964.4" y="414.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.17%)</title><rect x="963.4" y="403.0" width="2.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="966.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (376 samples, 16.08%)</title><rect x="965.4" y="435.0" width="189.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="968.4" y="446.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (38 samples, 1.63%)</title><rect x="965.4" y="419.0" width="19.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="968.4" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (38 samples, 1.63%)</title><rect x="965.4" y="403.0" width="19.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="968.4" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (38 samples, 1.63%)</title><rect x="965.4" y="387.0" width="19.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="968.4" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (38 samples, 1.63%)</title><rect x="965.4" y="371.0" width="19.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="968.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (38 samples, 1.63%)</title><rect x="965.4" y="355.0" width="19.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="968.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (27 samples, 1.15%)</title><rect x="965.4" y="339.0" width="13.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="968.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (27 samples, 1.15%)</title><rect x="965.4" y="323.0" width="13.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="968.4" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (27 samples, 1.15%)</title><rect x="965.4" y="307.0" width="13.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="968.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (27 samples, 1.15%)</title><rect x="965.4" y="291.0" width="13.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="968.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (27 samples, 1.15%)</title><rect x="965.4" y="275.0" width="13.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="968.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (27 samples, 1.15%)</title><rect x="965.4" y="259.0" width="13.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="968.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (10 samples, 0.43%)</title><rect x="965.4" y="243.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="968.4" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (10 samples, 0.43%)</title><rect x="965.4" y="227.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="968.4" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (10 samples, 0.43%)</title><rect x="965.4" y="211.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="968.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (10 samples, 0.43%)</title><rect x="965.4" y="195.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="968.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (10 samples, 0.43%)</title><rect x="965.4" y="179.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="968.4" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (10 samples, 0.43%)</title><rect x="965.4" y="163.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="968.4" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.getAsBoolean (10 samples, 0.43%)</title><rect x="965.4" y="147.0" width="5.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="968.4" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (10 samples, 0.43%)</title><rect x="965.4" y="131.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="968.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (10 samples, 0.43%)</title><rect x="965.4" y="115.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="968.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.13%)</title><rect x="965.4" y="99.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="968.4" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.13%)</title><rect x="965.4" y="83.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="968.4" y="94.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (3 samples, 0.13%)</title><rect x="965.4" y="67.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="968.4" y="78.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (7 samples, 0.30%)</title><rect x="966.9" y="99.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="969.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$62/987822523.apply (7 samples, 0.30%)</title><rect x="966.9" y="83.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="969.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (7 samples, 0.30%)</title><rect x="966.9" y="67.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="969.9" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.09%)</title><rect x="966.9" y="51.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="969.9" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.09%)</title><rect x="966.9" y="35.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="969.9" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (5 samples, 0.21%)</title><rect x="967.9" y="51.0" width="2.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="970.9" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$95/351241919.apply (17 samples, 0.73%)</title><rect x="970.5" y="243.0" width="8.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="973.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (17 samples, 0.73%)</title><rect x="970.5" y="227.0" width="8.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="973.5" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (17 samples, 0.73%)</title><rect x="970.5" y="211.0" width="8.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="973.5" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (17 samples, 0.73%)</title><rect x="970.5" y="195.0" width="8.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="973.5" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (17 samples, 0.73%)</title><rect x="970.5" y="179.0" width="8.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="973.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$115/1349025670.apply (11 samples, 0.47%)</title><rect x="979.0" y="339.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="982.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (11 samples, 0.47%)</title><rect x="979.0" y="323.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="982.0" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (11 samples, 0.47%)</title><rect x="979.0" y="307.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="982.0" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (11 samples, 0.47%)</title><rect x="979.0" y="291.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="982.0" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (11 samples, 0.47%)</title><rect x="979.0" y="275.0" width="5.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="982.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (15 samples, 0.64%)</title><rect x="984.6" y="419.0" width="7.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="987.6" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (15 samples, 0.64%)</title><rect x="984.6" y="403.0" width="7.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="987.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$123/739146284.apply (15 samples, 0.64%)</title><rect x="984.6" y="387.0" width="7.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="987.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$4 (15 samples, 0.64%)</title><rect x="984.6" y="371.0" width="7.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="987.6" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (7 samples, 0.30%)</title><rect x="984.6" y="355.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="987.6" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.30%)</title><rect x="984.6" y="339.0" width="3.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="987.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (8 samples, 0.34%)</title><rect x="988.1" y="355.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="991.1" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (8 samples, 0.34%)</title><rect x="988.1" y="339.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="991.1" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (8 samples, 0.34%)</title><rect x="988.1" y="323.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="991.1" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.34%)</title><rect x="988.1" y="307.0" width="4.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="991.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (15 samples, 0.64%)</title><rect x="992.2" y="419.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="995.2" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (15 samples, 0.64%)</title><rect x="992.2" y="403.0" width="7.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="995.2" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (15 samples, 0.64%)</title><rect x="992.2" y="387.0" width="7.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="995.2" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (15 samples, 0.64%)</title><rect x="992.2" y="371.0" width="7.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="995.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (8 samples, 0.34%)</title><rect x="999.7" y="419.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1002.7" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (8 samples, 0.34%)</title><rect x="999.7" y="403.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1002.7" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (8 samples, 0.34%)</title><rect x="999.7" y="387.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1002.7" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.34%)</title><rect x="999.7" y="371.0" width="4.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1002.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (300 samples, 12.83%)</title><rect x="1003.8" y="419.0" width="151.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1006.8" y="430.0">ru/mail/polis/dao/b..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (4 samples, 0.17%)</title><rect x="1003.8" y="403.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1006.8" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (4 samples, 0.17%)</title><rect x="1003.8" y="387.0" width="2.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1006.8" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.21%)</title><rect x="1005.8" y="403.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1008.8" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.21%)</title><rect x="1005.8" y="387.0" width="2.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1008.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (195 samples, 8.34%)</title><rect x="1008.3" y="403.0" width="98.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1011.3" y="414.0">ru/mail/poli..</text>
</g>
<g>
<title>java.util.ArrayList (6 samples, 0.26%)</title><rect x="1008.3" y="387.0" width="3.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1011.3" y="398.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (7 samples, 0.30%)</title><rect x="1011.3" y="387.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1014.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (7 samples, 0.30%)</title><rect x="1011.3" y="371.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1014.3" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (7 samples, 0.30%)</title><rect x="1011.3" y="355.0" width="3.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1014.3" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.17%)</title><rect x="1014.9" y="387.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1017.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.17%)</title><rect x="1014.9" y="371.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1017.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$106/537430885.get$Lambda (4 samples, 0.17%)</title><rect x="1014.9" y="355.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1017.9" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.DAOImpl$$Lambda$106 (4 samples, 0.17%)</title><rect x="1014.9" y="339.0" width="2.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1017.9" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (4 samples, 0.17%)</title><rect x="1016.9" y="387.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1019.9" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.17%)</title><rect x="1016.9" y="371.0" width="2.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1019.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (174 samples, 7.44%)</title><rect x="1018.9" y="387.0" width="87.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1021.9" y="398.0">ru/mail/po..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (5 samples, 0.21%)</title><rect x="1018.9" y="371.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1021.9" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (5 samples, 0.21%)</title><rect x="1018.9" y="355.0" width="2.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1021.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (61 samples, 2.61%)</title><rect x="1021.4" y="371.0" width="30.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1024.4" y="382.0">co..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (4 samples, 0.17%)</title><rect x="1021.4" y="355.0" width="2.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1024.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (57 samples, 2.44%)</title><rect x="1023.4" y="355.0" width="28.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1026.4" y="366.0">co..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (1 samples, 0.04%)</title><rect x="1023.4" y="339.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1026.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (3 samples, 0.13%)</title><rect x="1024.0" y="339.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1027.0" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (3 samples, 0.13%)</title><rect x="1024.0" y="323.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1027.0" y="334.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (7 samples, 0.30%)</title><rect x="1025.5" y="339.0" width="3.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1028.5" y="350.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (46 samples, 1.97%)</title><rect x="1029.0" y="339.0" width="23.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1032.0" y="350.0">j..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (46 samples, 1.97%)</title><rect x="1029.0" y="323.0" width="23.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1032.0" y="334.0">j..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (46 samples, 1.97%)</title><rect x="1029.0" y="307.0" width="23.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1032.0" y="318.0">j..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (16 samples, 0.68%)</title><rect x="1029.0" y="291.0" width="8.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1032.0" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.getAsBoolean (16 samples, 0.68%)</title><rect x="1029.0" y="275.0" width="8.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1032.0" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (16 samples, 0.68%)</title><rect x="1029.0" y="259.0" width="8.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1032.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (16 samples, 0.68%)</title><rect x="1029.0" y="243.0" width="8.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1032.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.13%)</title><rect x="1029.0" y="227.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1032.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.13%)</title><rect x="1029.0" y="211.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1032.0" y="222.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (3 samples, 0.13%)</title><rect x="1029.0" y="195.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1032.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (13 samples, 0.56%)</title><rect x="1030.5" y="227.0" width="6.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1033.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$62/987822523.apply (13 samples, 0.56%)</title><rect x="1030.5" y="211.0" width="6.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1033.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (13 samples, 0.56%)</title><rect x="1030.5" y="195.0" width="6.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1033.5" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (10 samples, 0.43%)</title><rect x="1030.5" y="179.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1033.5" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (10 samples, 0.43%)</title><rect x="1030.5" y="163.0" width="5.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1033.5" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (3 samples, 0.13%)</title><rect x="1035.6" y="179.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1038.6" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (30 samples, 1.28%)</title><rect x="1037.1" y="291.0" width="15.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1040.1" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (7 samples, 0.30%)</title><rect x="1037.1" y="275.0" width="3.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1040.1" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.34%)</title><rect x="1040.6" y="275.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1043.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.34%)</title><rect x="1040.6" y="259.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1043.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$88/2018795132.get$Lambda (4 samples, 0.17%)</title><rect x="1040.6" y="243.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1043.6" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$88 (4 samples, 0.17%)</title><rect x="1040.6" y="227.0" width="2.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1043.6" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.get$Lambda (4 samples, 0.17%)</title><rect x="1042.6" y="243.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1045.6" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$92 (4 samples, 0.17%)</title><rect x="1042.6" y="227.0" width="2.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1045.6" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.09%)</title><rect x="1044.6" y="275.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1047.6" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (2 samples, 0.09%)</title><rect x="1044.6" y="259.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1047.6" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (2 samples, 0.09%)</title><rect x="1044.6" y="243.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1047.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (13 samples, 0.56%)</title><rect x="1045.7" y="275.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1048.7" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (13 samples, 0.56%)</title><rect x="1045.7" y="259.0" width="6.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1048.7" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.13%)</title><rect x="1052.2" y="371.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1055.2" y="382.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (9 samples, 0.38%)</title><rect x="1053.7" y="371.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1056.7" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (9 samples, 0.38%)</title><rect x="1053.7" y="355.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1056.7" y="366.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (2 samples, 0.09%)</title><rect x="1053.7" y="339.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1056.7" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (7 samples, 0.30%)</title><rect x="1054.7" y="339.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1057.7" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (7 samples, 0.30%)</title><rect x="1054.7" y="323.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1057.7" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (7 samples, 0.30%)</title><rect x="1054.7" y="307.0" width="3.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1057.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.30%)</title><rect x="1058.3" y="371.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1061.3" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.30%)</title><rect x="1058.3" y="355.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1061.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$68/1684873348.get$Lambda (7 samples, 0.30%)</title><rect x="1058.3" y="339.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1061.3" y="350.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.MemTablePool$$Lambda$68 (7 samples, 0.30%)</title><rect x="1058.3" y="323.0" width="3.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1061.3" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (3 samples, 0.13%)</title><rect x="1061.8" y="371.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1064.8" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.13%)</title><rect x="1061.8" y="355.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1064.8" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (1 samples, 0.04%)</title><rect x="1063.3" y="371.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1066.3" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="1063.3" y="355.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1066.3" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="1063.3" y="339.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1066.3" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$76/1318467195.get$Lambda (1 samples, 0.04%)</title><rect x="1063.3" y="323.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1066.3" y="334.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$76 (1 samples, 0.04%)</title><rect x="1063.3" y="307.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1066.3" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (5 samples, 0.21%)</title><rect x="1063.8" y="371.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1066.8" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (5 samples, 0.21%)</title><rect x="1063.8" y="355.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1066.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.21%)</title><rect x="1063.8" y="339.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1066.8" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.21%)</title><rect x="1063.8" y="323.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1066.8" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$76/1318467195.get$Lambda (5 samples, 0.21%)</title><rect x="1063.8" y="307.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1066.8" y="318.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$76 (5 samples, 0.21%)</title><rect x="1063.8" y="291.0" width="2.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1066.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.04%)</title><rect x="1066.3" y="371.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1069.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.04%)</title><rect x="1066.3" y="355.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1069.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.04%)</title><rect x="1066.3" y="339.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1069.3" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.04%)</title><rect x="1066.3" y="323.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1069.3" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.04%)</title><rect x="1066.3" y="307.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1069.3" y="318.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (1 samples, 0.04%)</title><rect x="1066.3" y="291.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1069.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (27 samples, 1.15%)</title><rect x="1066.9" y="371.0" width="13.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1069.9" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (6 samples, 0.26%)</title><rect x="1066.9" y="355.0" width="3.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1069.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (21 samples, 0.90%)</title><rect x="1069.9" y="355.0" width="10.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1072.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (21 samples, 0.90%)</title><rect x="1069.9" y="339.0" width="10.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1072.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (21 samples, 0.90%)</title><rect x="1069.9" y="323.0" width="10.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1072.9" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (21 samples, 0.90%)</title><rect x="1069.9" y="307.0" width="10.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1072.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (21 samples, 0.90%)</title><rect x="1069.9" y="291.0" width="10.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1072.9" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (21 samples, 0.90%)</title><rect x="1069.9" y="275.0" width="10.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1072.9" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (21 samples, 0.90%)</title><rect x="1069.9" y="259.0" width="10.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1072.9" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.getAsBoolean (21 samples, 0.90%)</title><rect x="1069.9" y="243.0" width="10.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1072.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (21 samples, 0.90%)</title><rect x="1069.9" y="227.0" width="10.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1072.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (21 samples, 0.90%)</title><rect x="1069.9" y="211.0" width="10.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1072.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.17%)</title><rect x="1069.9" y="195.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1072.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.17%)</title><rect x="1069.9" y="179.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1072.9" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (4 samples, 0.17%)</title><rect x="1069.9" y="163.0" width="2.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1072.9" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (17 samples, 0.73%)</title><rect x="1071.9" y="195.0" width="8.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1074.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$62/987822523.apply (17 samples, 0.73%)</title><rect x="1071.9" y="179.0" width="8.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1074.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (17 samples, 0.73%)</title><rect x="1071.9" y="163.0" width="8.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1074.9" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (14 samples, 0.60%)</title><rect x="1071.9" y="147.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1074.9" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (14 samples, 0.60%)</title><rect x="1071.9" y="131.0" width="7.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1074.9" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (3 samples, 0.13%)</title><rect x="1079.0" y="147.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1082.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (52 samples, 2.22%)</title><rect x="1080.5" y="371.0" width="26.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1083.5" y="382.0">r..</text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.04%)</title><rect x="1080.5" y="355.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1083.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.04%)</title><rect x="1080.5" y="339.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1083.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.04%)</title><rect x="1080.5" y="323.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1083.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.04%)</title><rect x="1080.5" y="307.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1083.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.04%)</title><rect x="1080.5" y="291.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1083.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.04%)</title><rect x="1080.5" y="275.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1083.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$FileLoader.getResource (1 samples, 0.04%)</title><rect x="1080.5" y="259.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1083.5" y="270.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1080.5" y="243.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1083.5" y="254.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1080.5" y="227.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1083.5" y="238.0"></text>
</g>
<g>
<title>sun/net/www/protocol/file/Handler.parseURL (1 samples, 0.04%)</title><rect x="1080.5" y="211.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1083.5" y="222.0"></text>
</g>
<g>
<title>java/net/URLStreamHandler.parseURL (1 samples, 0.04%)</title><rect x="1080.5" y="195.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1083.5" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.04%)</title><rect x="1080.5" y="179.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1083.5" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.04%)</title><rect x="1080.5" y="163.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1083.5" y="174.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.04%)</title><rect x="1080.5" y="147.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1083.5" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.04%)</title><rect x="1080.5" y="131.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1083.5" y="142.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="1080.5" y="115.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1083.5" y="126.0"></text>
</g>
<g>
<title>java/util/Collection.stream (18 samples, 0.77%)</title><rect x="1081.0" y="355.0" width="9.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1084.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (6 samples, 0.26%)</title><rect x="1081.0" y="339.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1084.0" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (6 samples, 0.26%)</title><rect x="1081.0" y="323.0" width="3.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1084.0" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (12 samples, 0.51%)</title><rect x="1084.0" y="339.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1087.0" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (12 samples, 0.51%)</title><rect x="1084.0" y="323.0" width="6.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1087.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (3 samples, 0.13%)</title><rect x="1090.1" y="355.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1093.1" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (3 samples, 0.13%)</title><rect x="1090.1" y="339.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1093.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (7 samples, 0.30%)</title><rect x="1091.6" y="355.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1094.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (7 samples, 0.30%)</title><rect x="1091.6" y="339.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1094.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (7 samples, 0.30%)</title><rect x="1091.6" y="323.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1094.6" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (7 samples, 0.30%)</title><rect x="1091.6" y="307.0" width="3.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1094.6" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (9 samples, 0.38%)</title><rect x="1095.1" y="355.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1098.1" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (3 samples, 0.13%)</title><rect x="1095.1" y="339.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1098.1" y="350.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (3 samples, 0.13%)</title><rect x="1095.1" y="323.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1098.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (6 samples, 0.26%)</title><rect x="1096.6" y="339.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1099.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="1096.6" y="323.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1099.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="1096.6" y="307.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1099.6" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$63/1805959361.get$Lambda (1 samples, 0.04%)</title><rect x="1096.6" y="291.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1099.6" y="302.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$63 (1 samples, 0.04%)</title><rect x="1096.6" y="275.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1099.6" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (5 samples, 0.21%)</title><rect x="1097.1" y="323.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1100.1" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (5 samples, 0.21%)</title><rect x="1097.1" y="307.0" width="2.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1100.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (14 samples, 0.60%)</title><rect x="1099.7" y="355.0" width="7.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1102.7" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (14 samples, 0.60%)</title><rect x="1099.7" y="339.0" width="7.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1102.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (96 samples, 4.11%)</title><rect x="1106.7" y="403.0" width="48.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1109.7" y="414.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (58 samples, 2.48%)</title><rect x="1106.7" y="387.0" width="29.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1109.7" y="398.0">co..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (4 samples, 0.17%)</title><rect x="1106.7" y="371.0" width="2.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1109.7" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (54 samples, 2.31%)</title><rect x="1108.7" y="371.0" width="27.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1111.7" y="382.0">c..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (4 samples, 0.17%)</title><rect x="1108.7" y="355.0" width="2.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1111.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (35 samples, 1.50%)</title><rect x="1110.8" y="355.0" width="17.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1113.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (35 samples, 1.50%)</title><rect x="1110.8" y="339.0" width="17.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1113.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (35 samples, 1.50%)</title><rect x="1110.8" y="323.0" width="17.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1113.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (35 samples, 1.50%)</title><rect x="1110.8" y="307.0" width="17.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1113.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (20 samples, 0.86%)</title><rect x="1110.8" y="291.0" width="10.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1113.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (20 samples, 0.86%)</title><rect x="1110.8" y="275.0" width="10.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1113.8" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (20 samples, 0.86%)</title><rect x="1110.8" y="259.0" width="10.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1113.8" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (20 samples, 0.86%)</title><rect x="1110.8" y="243.0" width="10.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1113.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (20 samples, 0.86%)</title><rect x="1110.8" y="227.0" width="10.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1113.8" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (20 samples, 0.86%)</title><rect x="1110.8" y="211.0" width="10.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1113.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.getAsBoolean (20 samples, 0.86%)</title><rect x="1110.8" y="195.0" width="10.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1113.8" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (20 samples, 0.86%)</title><rect x="1110.8" y="179.0" width="10.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1113.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (20 samples, 0.86%)</title><rect x="1110.8" y="163.0" width="10.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1113.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.17%)</title><rect x="1110.8" y="147.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1113.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.17%)</title><rect x="1110.8" y="131.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1113.8" y="142.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (4 samples, 0.17%)</title><rect x="1110.8" y="115.0" width="2.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1113.8" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (16 samples, 0.68%)</title><rect x="1112.8" y="147.0" width="8.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1115.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$62/987822523.apply (16 samples, 0.68%)</title><rect x="1112.8" y="131.0" width="8.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1115.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (16 samples, 0.68%)</title><rect x="1112.8" y="115.0" width="8.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1115.8" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (13 samples, 0.56%)</title><rect x="1112.8" y="99.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1115.8" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (13 samples, 0.56%)</title><rect x="1112.8" y="83.0" width="6.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1115.8" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (3 samples, 0.13%)</title><rect x="1119.3" y="99.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1122.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$95/351241919.apply (15 samples, 0.64%)</title><rect x="1120.9" y="291.0" width="7.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1123.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (15 samples, 0.64%)</title><rect x="1120.9" y="275.0" width="7.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1123.9" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (15 samples, 0.64%)</title><rect x="1120.9" y="259.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1123.9" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (15 samples, 0.64%)</title><rect x="1120.9" y="243.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1123.9" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (15 samples, 0.64%)</title><rect x="1120.9" y="227.0" width="7.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1123.9" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (5 samples, 0.21%)</title><rect x="1128.4" y="355.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1131.4" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (5 samples, 0.21%)</title><rect x="1128.4" y="339.0" width="2.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1131.4" y="350.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (6 samples, 0.26%)</title><rect x="1130.9" y="355.0" width="3.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1133.9" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (4 samples, 0.17%)</title><rect x="1134.0" y="355.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1137.0" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.17%)</title><rect x="1134.0" y="339.0" width="2.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1137.0" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (1 samples, 0.04%)</title><rect x="1136.0" y="387.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1139.0" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="1136.0" y="371.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1139.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="1136.0" y="355.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1139.0" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$76/1318467195.get$Lambda (1 samples, 0.04%)</title><rect x="1136.0" y="339.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1139.0" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$76 (1 samples, 0.04%)</title><rect x="1136.0" y="323.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1139.0" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (2 samples, 0.09%)</title><rect x="1136.5" y="387.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1139.5" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (1 samples, 0.04%)</title><rect x="1136.5" y="371.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1139.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="1136.5" y="355.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1139.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="1136.5" y="339.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1139.5" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$76/1318467195.get$Lambda (1 samples, 0.04%)</title><rect x="1136.5" y="323.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1139.5" y="334.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$76 (1 samples, 0.04%)</title><rect x="1136.5" y="307.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1139.5" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (1 samples, 0.04%)</title><rect x="1137.0" y="371.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1140.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="1137.0" y="355.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1140.0" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="1137.0" y="339.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1140.0" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$83/2089945492.get$Lambda (1 samples, 0.04%)</title><rect x="1137.0" y="323.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1140.0" y="334.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$83 (1 samples, 0.04%)</title><rect x="1137.0" y="307.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1140.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (35 samples, 1.50%)</title><rect x="1137.5" y="387.0" width="17.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1140.5" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (3 samples, 0.13%)</title><rect x="1137.5" y="371.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1140.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (32 samples, 1.37%)</title><rect x="1139.0" y="371.0" width="16.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1142.0" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (32 samples, 1.37%)</title><rect x="1139.0" y="355.0" width="16.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1142.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (32 samples, 1.37%)</title><rect x="1139.0" y="339.0" width="16.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1142.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (32 samples, 1.37%)</title><rect x="1139.0" y="323.0" width="16.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1142.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (32 samples, 1.37%)</title><rect x="1139.0" y="307.0" width="16.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1142.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (32 samples, 1.37%)</title><rect x="1139.0" y="291.0" width="16.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1142.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (32 samples, 1.37%)</title><rect x="1139.0" y="275.0" width="16.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1142.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (17 samples, 0.73%)</title><rect x="1139.0" y="259.0" width="8.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1142.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (17 samples, 0.73%)</title><rect x="1139.0" y="243.0" width="8.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1142.0" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (17 samples, 0.73%)</title><rect x="1139.0" y="227.0" width="8.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1142.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (17 samples, 0.73%)</title><rect x="1139.0" y="211.0" width="8.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1142.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (17 samples, 0.73%)</title><rect x="1139.0" y="195.0" width="8.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1142.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (17 samples, 0.73%)</title><rect x="1139.0" y="179.0" width="8.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1142.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$92/1205052182.getAsBoolean (17 samples, 0.73%)</title><rect x="1139.0" y="163.0" width="8.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1142.0" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (17 samples, 0.73%)</title><rect x="1139.0" y="147.0" width="8.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1142.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (17 samples, 0.73%)</title><rect x="1139.0" y="131.0" width="8.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1142.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.13%)</title><rect x="1139.0" y="115.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1142.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.13%)</title><rect x="1139.0" y="99.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1142.0" y="110.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (3 samples, 0.13%)</title><rect x="1139.0" y="83.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1142.0" y="94.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (14 samples, 0.60%)</title><rect x="1140.5" y="115.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1143.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$62/987822523.apply (14 samples, 0.60%)</title><rect x="1140.5" y="99.0" width="7.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1143.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (14 samples, 0.60%)</title><rect x="1140.5" y="83.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1143.5" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (11 samples, 0.47%)</title><rect x="1140.5" y="67.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1143.5" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (11 samples, 0.47%)</title><rect x="1140.5" y="51.0" width="5.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1143.5" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (3 samples, 0.13%)</title><rect x="1146.1" y="67.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1149.1" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$95/351241919.apply (15 samples, 0.64%)</title><rect x="1147.6" y="259.0" width="7.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1150.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (15 samples, 0.64%)</title><rect x="1147.6" y="243.0" width="7.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1150.6" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (15 samples, 0.64%)</title><rect x="1147.6" y="227.0" width="7.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1150.6" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (15 samples, 0.64%)</title><rect x="1147.6" y="211.0" width="7.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1150.6" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (15 samples, 0.64%)</title><rect x="1147.6" y="195.0" width="7.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1150.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.getBytesFromByteBuffer (6 samples, 0.26%)</title><rect x="1155.2" y="435.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1158.2" y="446.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.26%)</title><rect x="1155.2" y="419.0" width="3.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1158.2" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (11 samples, 0.47%)</title><rect x="1158.2" y="467.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1161.2" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.47%)</title><rect x="1158.2" y="451.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1161.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.47%)</title><rect x="1158.2" y="435.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1161.2" y="446.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.17%)</title><rect x="1158.2" y="419.0" width="2.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1161.2" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.30%)</title><rect x="1160.2" y="419.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1163.2" y="430.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.30%)</title><rect x="1160.2" y="403.0" width="3.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1163.2" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (35 samples, 1.50%)</title><rect x="1163.8" y="499.0" width="17.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1166.8" y="510.0"></text>
</g>
<g>
<title>one.nio.http.Request (7 samples, 0.30%)</title><rect x="1163.8" y="483.0" width="3.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1166.8" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (11 samples, 0.47%)</title><rect x="1167.3" y="483.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1170.3" y="494.0"></text>
</g>
<g>
<title>java.lang.String[] (11 samples, 0.47%)</title><rect x="1167.3" y="467.0" width="5.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1170.3" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.73%)</title><rect x="1172.8" y="483.0" width="8.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1175.8" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.73%)</title><rect x="1172.8" y="467.0" width="8.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1175.8" y="478.0"></text>
</g>
<g>
<title>char[] (9 samples, 0.38%)</title><rect x="1172.8" y="451.0" width="4.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1175.8" y="462.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.17%)</title><rect x="1177.4" y="451.0" width="2.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1180.4" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.17%)</title><rect x="1179.4" y="451.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1182.4" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.17%)</title><rect x="1179.4" y="435.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1182.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 0.17%)</title><rect x="1179.4" y="419.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1182.4" y="430.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.17%)</title><rect x="1179.4" y="403.0" width="2.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1182.4" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (16 samples, 0.68%)</title><rect x="1181.4" y="499.0" width="8.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1184.4" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (16 samples, 0.68%)</title><rect x="1181.4" y="483.0" width="8.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1184.4" y="494.0"></text>
</g>
<g>
<title>char[] (10 samples, 0.43%)</title><rect x="1181.4" y="467.0" width="5.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1184.4" y="478.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.04%)</title><rect x="1186.5" y="467.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1189.5" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.21%)</title><rect x="1187.0" y="467.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1190.0" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.21%)</title><rect x="1187.0" y="451.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1190.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5 samples, 0.21%)</title><rect x="1187.0" y="435.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1190.0" y="446.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.21%)</title><rect x="1187.0" y="419.0" width="2.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1190.0" y="430.0"></text>
</g>
<g>
<title>[tid=23291] (1 samples, 0.04%)</title><rect x="1189.5" y="579.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1192.5" y="590.0"></text>
</g>
<g>
<title>[no_Java_frame] (1 samples, 0.04%)</title><rect x="1189.5" y="563.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1192.5" y="574.0"></text>
</g>
<g>
<title>java.lang.ClassCastException (1 samples, 0.04%)</title><rect x="1189.5" y="547.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1192.5" y="558.0"></text>
</g>
</g>
</svg>
