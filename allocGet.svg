<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="581"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="581"> </text>
<g id="frames">
<g>
<title>all (7,333 samples, 100.00%)</title><rect x="10.0" y="547.0" width="1180.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="13.0" y="558.0">all</text>
</g>
<g>
<title>[2020-highload-dht-thread-64 tid=22628] (466 samples, 6.35%)</title><rect x="10.0" y="531.0" width="75.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="13.0" y="542.0">[2020-hi..</text>
</g>
<g>
<title>java/lang/Thread.run (466 samples, 6.35%)</title><rect x="10.0" y="515.0" width="75.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="526.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (466 samples, 6.35%)</title><rect x="10.0" y="499.0" width="75.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="510.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (466 samples, 6.35%)</title><rect x="10.0" y="483.0" width="75.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="494.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3 samples, 0.04%)</title><rect x="10.0" y="467.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (3 samples, 0.04%)</title><rect x="10.0" y="451.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.04%)</title><rect x="10.0" y="435.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (3 samples, 0.04%)</title><rect x="10.0" y="419.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (3 samples, 0.04%)</title><rect x="10.0" y="403.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="13.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$75/1549034997.run (463 samples, 6.31%)</title><rect x="10.5" y="467.0" width="74.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.5" y="478.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$get$1 (463 samples, 6.31%)</title><rect x="10.5" y="451.0" width="74.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.5" y="462.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (16 samples, 0.22%)</title><rect x="10.5" y="435.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (16 samples, 0.22%)</title><rect x="10.5" y="419.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.5" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (16 samples, 0.22%)</title><rect x="10.5" y="403.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.5" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (16 samples, 0.22%)</title><rect x="10.5" y="387.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.5" y="398.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.22%)</title><rect x="10.5" y="371.0" width="2.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="13.5" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (14 samples, 0.19%)</title><rect x="13.1" y="435.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="16.1" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (14 samples, 0.19%)</title><rect x="13.1" y="419.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="16.1" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (14 samples, 0.19%)</title><rect x="13.1" y="403.0" width="2.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="16.1" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (21 samples, 0.29%)</title><rect x="15.3" y="435.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="18.3" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (21 samples, 0.29%)</title><rect x="15.3" y="419.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="18.3" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (18 samples, 0.25%)</title><rect x="15.3" y="403.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="18.3" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (18 samples, 0.25%)</title><rect x="15.3" y="387.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="18.3" y="398.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.25%)</title><rect x="15.3" y="371.0" width="2.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="18.3" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.04%)</title><rect x="18.2" y="403.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="21.2" y="414.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (3 samples, 0.04%)</title><rect x="18.2" y="387.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="21.2" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (21 samples, 0.29%)</title><rect x="18.7" y="435.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="21.7" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (5 samples, 0.07%)</title><rect x="18.7" y="419.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="21.7" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (16 samples, 0.22%)</title><rect x="19.5" y="419.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="22.5" y="430.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.14%)</title><rect x="19.5" y="403.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="22.5" y="414.0"></text>
</g>
<g>
<title>java.lang.String[] (3 samples, 0.04%)</title><rect x="21.1" y="403.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="24.1" y="414.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.04%)</title><rect x="21.6" y="403.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="24.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (385 samples, 5.25%)</title><rect x="22.1" y="435.0" width="61.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="25.1" y="446.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (52 samples, 0.71%)</title><rect x="22.1" y="419.0" width="8.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="25.1" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (52 samples, 0.71%)</title><rect x="22.1" y="403.0" width="8.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="25.1" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (52 samples, 0.71%)</title><rect x="22.1" y="387.0" width="8.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="25.1" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (52 samples, 0.71%)</title><rect x="22.1" y="371.0" width="8.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="25.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (52 samples, 0.71%)</title><rect x="22.1" y="355.0" width="8.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="25.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (29 samples, 0.40%)</title><rect x="22.1" y="339.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="25.1" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (29 samples, 0.40%)</title><rect x="22.1" y="323.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="25.1" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (29 samples, 0.40%)</title><rect x="22.1" y="307.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="25.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (29 samples, 0.40%)</title><rect x="22.1" y="291.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="25.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (29 samples, 0.40%)</title><rect x="22.1" y="275.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="25.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (29 samples, 0.40%)</title><rect x="22.1" y="259.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="25.1" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (18 samples, 0.25%)</title><rect x="22.1" y="243.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="25.1" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (18 samples, 0.25%)</title><rect x="22.1" y="227.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="25.1" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (18 samples, 0.25%)</title><rect x="22.1" y="211.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="25.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (18 samples, 0.25%)</title><rect x="22.1" y="195.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="25.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (18 samples, 0.25%)</title><rect x="22.1" y="179.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="25.1" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (18 samples, 0.25%)</title><rect x="22.1" y="163.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="25.1" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (18 samples, 0.25%)</title><rect x="22.1" y="147.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="25.1" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (18 samples, 0.25%)</title><rect x="22.1" y="131.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="25.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (18 samples, 0.25%)</title><rect x="22.1" y="115.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="25.1" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (7 samples, 0.10%)</title><rect x="22.1" y="99.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="25.1" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (7 samples, 0.10%)</title><rect x="22.1" y="83.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="25.1" y="94.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (7 samples, 0.10%)</title><rect x="22.1" y="67.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="25.1" y="78.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (11 samples, 0.15%)</title><rect x="23.2" y="99.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="26.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (11 samples, 0.15%)</title><rect x="23.2" y="83.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="26.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (11 samples, 0.15%)</title><rect x="23.2" y="67.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="26.2" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (8 samples, 0.11%)</title><rect x="23.2" y="51.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="26.2" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.11%)</title><rect x="23.2" y="35.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="26.2" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (3 samples, 0.04%)</title><rect x="24.5" y="51.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="27.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$125/991073477.apply (11 samples, 0.15%)</title><rect x="25.0" y="243.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="28.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (11 samples, 0.15%)</title><rect x="25.0" y="227.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="28.0" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (11 samples, 0.15%)</title><rect x="25.0" y="211.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="28.0" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (11 samples, 0.15%)</title><rect x="25.0" y="195.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="28.0" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (11 samples, 0.15%)</title><rect x="25.0" y="179.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="28.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$177/786148505.apply (23 samples, 0.31%)</title><rect x="26.7" y="339.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="29.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (23 samples, 0.31%)</title><rect x="26.7" y="323.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="29.7" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (23 samples, 0.31%)</title><rect x="26.7" y="307.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="29.7" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (23 samples, 0.31%)</title><rect x="26.7" y="291.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="29.7" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (23 samples, 0.31%)</title><rect x="26.7" y="275.0" width="3.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="29.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (17 samples, 0.23%)</title><rect x="30.4" y="419.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="33.4" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (17 samples, 0.23%)</title><rect x="30.4" y="403.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="33.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$191/1599205169.apply (17 samples, 0.23%)</title><rect x="30.4" y="387.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="33.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$3 (17 samples, 0.23%)</title><rect x="30.4" y="371.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="33.4" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (4 samples, 0.05%)</title><rect x="30.4" y="355.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="33.4" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.05%)</title><rect x="30.4" y="339.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="33.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.of (4 samples, 0.05%)</title><rect x="31.1" y="355.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="34.1" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.Record (4 samples, 0.05%)</title><rect x="31.1" y="339.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="34.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (9 samples, 0.12%)</title><rect x="31.7" y="355.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="34.7" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (9 samples, 0.12%)</title><rect x="31.7" y="339.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="34.7" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (9 samples, 0.12%)</title><rect x="31.7" y="323.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="34.7" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.12%)</title><rect x="31.7" y="307.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="34.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (6 samples, 0.08%)</title><rect x="33.2" y="419.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="36.2" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (6 samples, 0.08%)</title><rect x="33.2" y="403.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="36.2" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (6 samples, 0.08%)</title><rect x="33.2" y="387.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="36.2" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.08%)</title><rect x="33.2" y="371.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="36.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (8 samples, 0.11%)</title><rect x="34.1" y="419.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="37.1" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (8 samples, 0.11%)</title><rect x="34.1" y="403.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="37.1" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (8 samples, 0.11%)</title><rect x="34.1" y="387.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="37.1" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.11%)</title><rect x="34.1" y="371.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="37.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (302 samples, 4.12%)</title><rect x="35.4" y="419.0" width="48.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="38.4" y="430.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (6 samples, 0.08%)</title><rect x="35.4" y="403.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="38.4" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (6 samples, 0.08%)</title><rect x="35.4" y="387.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="38.4" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (6 samples, 0.08%)</title><rect x="36.4" y="403.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="39.4" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (6 samples, 0.08%)</title><rect x="36.4" y="387.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="39.4" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7 samples, 0.10%)</title><rect x="37.4" y="403.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="40.4" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.10%)</title><rect x="37.4" y="387.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="40.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.03%)</title><rect x="38.5" y="403.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="41.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.03%)</title><rect x="38.5" y="387.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="41.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (2 samples, 0.03%)</title><rect x="38.5" y="371.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="41.5" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.03%)</title><rect x="38.5" y="355.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="41.5" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.03%)</title><rect x="38.5" y="339.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="41.5" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (2 samples, 0.03%)</title><rect x="38.5" y="323.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="41.5" y="334.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (2 samples, 0.03%)</title><rect x="38.5" y="307.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="41.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (182 samples, 2.48%)</title><rect x="38.8" y="403.0" width="29.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="41.8" y="414.0">ru..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (7 samples, 0.10%)</title><rect x="39.0" y="387.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="42.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (7 samples, 0.10%)</title><rect x="39.0" y="371.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="42.0" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (7 samples, 0.10%)</title><rect x="39.0" y="355.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="42.0" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (6 samples, 0.08%)</title><rect x="40.1" y="387.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="43.1" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.08%)</title><rect x="40.1" y="371.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="43.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (168 samples, 2.29%)</title><rect x="41.1" y="387.0" width="27.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="44.1" y="398.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (3 samples, 0.04%)</title><rect x="41.1" y="371.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="44.1" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (3 samples, 0.04%)</title><rect x="41.1" y="355.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="44.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (66 samples, 0.90%)</title><rect x="41.5" y="371.0" width="10.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="44.5" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (2 samples, 0.03%)</title><rect x="41.5" y="355.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="44.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (64 samples, 0.87%)</title><rect x="41.9" y="355.0" width="10.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="44.9" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (7 samples, 0.10%)</title><rect x="41.9" y="339.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="44.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (7 samples, 0.10%)</title><rect x="43.0" y="339.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="46.0" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (7 samples, 0.10%)</title><rect x="43.0" y="323.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="46.0" y="334.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (4 samples, 0.05%)</title><rect x="44.1" y="339.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="47.1" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (3 samples, 0.04%)</title><rect x="44.8" y="339.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="47.8" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.04%)</title><rect x="44.8" y="323.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="47.8" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (43 samples, 0.59%)</title><rect x="45.2" y="339.0" width="7.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="48.2" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (43 samples, 0.59%)</title><rect x="45.2" y="323.0" width="7.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="48.2" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (43 samples, 0.59%)</title><rect x="45.2" y="307.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="48.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (15 samples, 0.20%)</title><rect x="45.2" y="291.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="48.2" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (15 samples, 0.20%)</title><rect x="45.2" y="275.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="48.2" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (15 samples, 0.20%)</title><rect x="45.2" y="259.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="48.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (15 samples, 0.20%)</title><rect x="45.2" y="243.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="48.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.07%)</title><rect x="45.2" y="227.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="48.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.07%)</title><rect x="45.2" y="211.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="48.2" y="222.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (5 samples, 0.07%)</title><rect x="45.2" y="195.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="48.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (10 samples, 0.14%)</title><rect x="46.0" y="227.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="49.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (10 samples, 0.14%)</title><rect x="46.0" y="211.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="49.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (10 samples, 0.14%)</title><rect x="46.0" y="195.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="49.0" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (8 samples, 0.11%)</title><rect x="46.0" y="179.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="49.0" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.11%)</title><rect x="46.0" y="163.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="49.0" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (2 samples, 0.03%)</title><rect x="47.3" y="179.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="50.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (28 samples, 0.38%)</title><rect x="47.7" y="291.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="50.7" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (9 samples, 0.12%)</title><rect x="47.7" y="275.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="50.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.08%)</title><rect x="49.1" y="275.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="52.1" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.08%)</title><rect x="49.1" y="259.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="52.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$111/1835775400.get$Lambda (2 samples, 0.03%)</title><rect x="49.1" y="243.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="52.1" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$111 (2 samples, 0.03%)</title><rect x="49.1" y="227.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="52.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.get$Lambda (4 samples, 0.05%)</title><rect x="49.4" y="243.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="52.4" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$117 (4 samples, 0.05%)</title><rect x="49.4" y="227.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="52.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.03%)</title><rect x="50.1" y="275.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="53.1" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (2 samples, 0.03%)</title><rect x="50.1" y="259.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="53.1" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (2 samples, 0.03%)</title><rect x="50.1" y="243.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="53.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (11 samples, 0.15%)</title><rect x="50.4" y="275.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="53.4" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (11 samples, 0.15%)</title><rect x="50.4" y="259.0" width="1.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="53.4" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.05%)</title><rect x="52.2" y="371.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="55.2" y="382.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (5 samples, 0.07%)</title><rect x="52.8" y="371.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="55.8" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (5 samples, 0.07%)</title><rect x="52.8" y="355.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="55.8" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$ValueIterator (5 samples, 0.07%)</title><rect x="52.8" y="339.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="55.8" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (3 samples, 0.04%)</title><rect x="53.6" y="371.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="56.6" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.04%)</title><rect x="53.6" y="355.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="56.6" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (2 samples, 0.03%)</title><rect x="54.1" y="371.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="57.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="54.1" y="355.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="57.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="54.1" y="339.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="57.1" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$95/683319954.get$Lambda (2 samples, 0.03%)</title><rect x="54.1" y="323.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="57.1" y="334.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$95 (2 samples, 0.03%)</title><rect x="54.1" y="307.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="57.1" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (4 samples, 0.05%)</title><rect x="54.4" y="371.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="57.4" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (3 samples, 0.04%)</title><rect x="54.6" y="355.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="57.6" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="54.6" y="339.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="57.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="54.6" y="323.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="57.6" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$103/582602737.get$Lambda (3 samples, 0.04%)</title><rect x="54.6" y="307.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="57.6" y="318.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$103 (3 samples, 0.04%)</title><rect x="54.6" y="291.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="57.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (25 samples, 0.34%)</title><rect x="55.2" y="371.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="58.2" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (2 samples, 0.03%)</title><rect x="55.2" y="355.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="58.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (23 samples, 0.31%)</title><rect x="55.5" y="355.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="58.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (23 samples, 0.31%)</title><rect x="55.5" y="339.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="58.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (23 samples, 0.31%)</title><rect x="55.5" y="323.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="58.5" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (23 samples, 0.31%)</title><rect x="55.5" y="307.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="58.5" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (23 samples, 0.31%)</title><rect x="55.5" y="291.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="58.5" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (23 samples, 0.31%)</title><rect x="55.5" y="275.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="58.5" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (23 samples, 0.31%)</title><rect x="55.5" y="259.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="58.5" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (23 samples, 0.31%)</title><rect x="55.5" y="243.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="58.5" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (23 samples, 0.31%)</title><rect x="55.5" y="227.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="58.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (23 samples, 0.31%)</title><rect x="55.5" y="211.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="58.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (6 samples, 0.08%)</title><rect x="55.5" y="195.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="58.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (6 samples, 0.08%)</title><rect x="55.5" y="179.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="58.5" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (6 samples, 0.08%)</title><rect x="55.5" y="163.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="58.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (17 samples, 0.23%)</title><rect x="56.5" y="195.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="59.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (17 samples, 0.23%)</title><rect x="56.5" y="179.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="59.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (17 samples, 0.23%)</title><rect x="56.5" y="163.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="59.5" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (12 samples, 0.16%)</title><rect x="56.5" y="147.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="59.5" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.16%)</title><rect x="56.5" y="131.0" width="1.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="59.5" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (5 samples, 0.07%)</title><rect x="58.4" y="147.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="61.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (55 samples, 0.75%)</title><rect x="59.2" y="371.0" width="8.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="62.2" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (14 samples, 0.19%)</title><rect x="59.2" y="355.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="62.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (3 samples, 0.04%)</title><rect x="59.2" y="339.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="62.2" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (3 samples, 0.04%)</title><rect x="59.2" y="323.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="62.2" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (11 samples, 0.15%)</title><rect x="59.7" y="339.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="62.7" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (11 samples, 0.15%)</title><rect x="59.7" y="323.0" width="1.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="62.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (3 samples, 0.04%)</title><rect x="61.5" y="355.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="64.5" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (3 samples, 0.04%)</title><rect x="61.5" y="339.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="64.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.08%)</title><rect x="62.0" y="355.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="65.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.08%)</title><rect x="62.0" y="339.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="65.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.08%)</title><rect x="62.0" y="323.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="65.0" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (6 samples, 0.08%)</title><rect x="62.0" y="307.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="65.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (18 samples, 0.25%)</title><rect x="62.9" y="355.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="65.9" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (4 samples, 0.05%)</title><rect x="62.9" y="339.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="65.9" y="350.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (4 samples, 0.05%)</title><rect x="62.9" y="323.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="65.9" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (14 samples, 0.19%)</title><rect x="63.6" y="339.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="66.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="63.6" y="323.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="66.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="63.6" y="307.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="66.6" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$89/1249014641.get$Lambda (3 samples, 0.04%)</title><rect x="63.6" y="291.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="66.6" y="302.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$89 (3 samples, 0.04%)</title><rect x="63.6" y="275.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="66.6" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (11 samples, 0.15%)</title><rect x="64.1" y="323.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="67.1" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (11 samples, 0.15%)</title><rect x="64.1" y="307.0" width="1.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="67.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (14 samples, 0.19%)</title><rect x="65.8" y="355.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="68.8" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (14 samples, 0.19%)</title><rect x="65.8" y="339.0" width="2.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="68.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (99 samples, 1.35%)</title><rect x="68.1" y="403.0" width="15.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="71.1" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (50 samples, 0.68%)</title><rect x="68.1" y="387.0" width="8.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="71.1" y="398.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (5 samples, 0.07%)</title><rect x="68.1" y="371.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="71.1" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (45 samples, 0.61%)</title><rect x="68.9" y="371.0" width="7.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="71.9" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (31 samples, 0.42%)</title><rect x="69.1" y="355.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="72.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (31 samples, 0.42%)</title><rect x="69.1" y="339.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="72.1" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (31 samples, 0.42%)</title><rect x="69.1" y="323.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="72.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (31 samples, 0.42%)</title><rect x="69.1" y="307.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="72.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (20 samples, 0.27%)</title><rect x="69.1" y="291.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="72.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (20 samples, 0.27%)</title><rect x="69.1" y="275.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="72.1" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (20 samples, 0.27%)</title><rect x="69.1" y="259.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="72.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (20 samples, 0.27%)</title><rect x="69.1" y="243.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="72.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (20 samples, 0.27%)</title><rect x="69.1" y="227.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="72.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (20 samples, 0.27%)</title><rect x="69.1" y="211.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="72.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (20 samples, 0.27%)</title><rect x="69.1" y="195.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="72.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (20 samples, 0.27%)</title><rect x="69.1" y="179.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="72.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (20 samples, 0.27%)</title><rect x="69.1" y="163.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="72.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.07%)</title><rect x="69.1" y="147.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="72.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.07%)</title><rect x="69.1" y="131.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="72.1" y="142.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (5 samples, 0.07%)</title><rect x="69.1" y="115.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="72.1" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (15 samples, 0.20%)</title><rect x="69.9" y="147.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="72.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (15 samples, 0.20%)</title><rect x="69.9" y="131.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="72.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (15 samples, 0.20%)</title><rect x="69.9" y="115.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="72.9" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (13 samples, 0.18%)</title><rect x="69.9" y="99.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="72.9" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (13 samples, 0.18%)</title><rect x="69.9" y="83.0" width="2.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="72.9" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (2 samples, 0.03%)</title><rect x="72.0" y="99.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="75.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$125/991073477.apply (11 samples, 0.15%)</title><rect x="72.3" y="291.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="75.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (11 samples, 0.15%)</title><rect x="72.3" y="275.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="75.3" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (11 samples, 0.15%)</title><rect x="72.3" y="259.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="75.3" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (11 samples, 0.15%)</title><rect x="72.3" y="243.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="75.3" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (11 samples, 0.15%)</title><rect x="72.3" y="227.0" width="1.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="75.3" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (4 samples, 0.05%)</title><rect x="74.0" y="355.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="77.0" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (4 samples, 0.05%)</title><rect x="74.0" y="339.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="77.0" y="350.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (4 samples, 0.05%)</title><rect x="74.7" y="355.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="77.7" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (5 samples, 0.07%)</title><rect x="75.3" y="355.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="78.3" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.07%)</title><rect x="75.3" y="339.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="78.3" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (2 samples, 0.03%)</title><rect x="76.1" y="387.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="79.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="76.1" y="371.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="79.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="76.1" y="355.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="79.1" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$95/683319954.get$Lambda (2 samples, 0.03%)</title><rect x="76.1" y="339.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="79.1" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$95 (2 samples, 0.03%)</title><rect x="76.1" y="323.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="79.1" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (8 samples, 0.11%)</title><rect x="76.5" y="387.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="79.5" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (4 samples, 0.05%)</title><rect x="76.5" y="371.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="79.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.05%)</title><rect x="76.5" y="355.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="79.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.05%)</title><rect x="76.5" y="339.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="79.5" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$95/683319954.get$Lambda (4 samples, 0.05%)</title><rect x="76.5" y="323.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="79.5" y="334.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$95 (4 samples, 0.05%)</title><rect x="76.5" y="307.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="79.5" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (4 samples, 0.05%)</title><rect x="77.1" y="371.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="80.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.05%)</title><rect x="77.1" y="355.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="80.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.05%)</title><rect x="77.1" y="339.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="80.1" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$103/582602737.get$Lambda (4 samples, 0.05%)</title><rect x="77.1" y="323.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="80.1" y="334.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$103 (4 samples, 0.05%)</title><rect x="77.1" y="307.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="80.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (39 samples, 0.53%)</title><rect x="77.7" y="387.0" width="6.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="80.7" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (3 samples, 0.04%)</title><rect x="77.7" y="371.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="80.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (36 samples, 0.49%)</title><rect x="78.2" y="371.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="81.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (36 samples, 0.49%)</title><rect x="78.2" y="355.0" width="5.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="81.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (36 samples, 0.49%)</title><rect x="78.2" y="339.0" width="5.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="81.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (36 samples, 0.49%)</title><rect x="78.2" y="323.0" width="5.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="81.2" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (36 samples, 0.49%)</title><rect x="78.2" y="307.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="81.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (36 samples, 0.49%)</title><rect x="78.2" y="291.0" width="5.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="81.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (36 samples, 0.49%)</title><rect x="78.2" y="275.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="81.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (13 samples, 0.18%)</title><rect x="78.2" y="259.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="81.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (13 samples, 0.18%)</title><rect x="78.2" y="243.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="81.2" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (13 samples, 0.18%)</title><rect x="78.2" y="227.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="81.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (13 samples, 0.18%)</title><rect x="78.2" y="211.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="81.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (13 samples, 0.18%)</title><rect x="78.2" y="195.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="81.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (13 samples, 0.18%)</title><rect x="78.2" y="179.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="81.2" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (13 samples, 0.18%)</title><rect x="78.2" y="163.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="81.2" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (13 samples, 0.18%)</title><rect x="78.2" y="147.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="81.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (13 samples, 0.18%)</title><rect x="78.2" y="131.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="81.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.04%)</title><rect x="78.2" y="115.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="81.2" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.04%)</title><rect x="78.2" y="99.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="81.2" y="110.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (3 samples, 0.04%)</title><rect x="78.2" y="83.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="81.2" y="94.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (10 samples, 0.14%)</title><rect x="78.7" y="115.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="81.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (10 samples, 0.14%)</title><rect x="78.7" y="99.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="81.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (10 samples, 0.14%)</title><rect x="78.7" y="83.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="81.7" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (7 samples, 0.10%)</title><rect x="78.7" y="67.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="81.7" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.10%)</title><rect x="78.7" y="51.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="81.7" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (3 samples, 0.04%)</title><rect x="79.8" y="67.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="82.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$125/991073477.apply (23 samples, 0.31%)</title><rect x="80.3" y="259.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="83.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (23 samples, 0.31%)</title><rect x="80.3" y="243.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="83.3" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (23 samples, 0.31%)</title><rect x="80.3" y="227.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="83.3" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (23 samples, 0.31%)</title><rect x="80.3" y="211.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="83.3" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (23 samples, 0.31%)</title><rect x="80.3" y="195.0" width="3.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="83.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.getBytesFromByteBuffer (6 samples, 0.08%)</title><rect x="84.0" y="435.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="87.0" y="446.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.08%)</title><rect x="84.0" y="419.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="87.0" y="430.0"></text>
</g>
<g>
<title>[2020-highload-dht-thread-86 tid=22652] (469 samples, 6.40%)</title><rect x="85.0" y="531.0" width="75.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="88.0" y="542.0">[2020-hi..</text>
</g>
<g>
<title>java/lang/Thread.run (469 samples, 6.40%)</title><rect x="85.0" y="515.0" width="75.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="88.0" y="526.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (469 samples, 6.40%)</title><rect x="85.0" y="499.0" width="75.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="88.0" y="510.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (469 samples, 6.40%)</title><rect x="85.0" y="483.0" width="75.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="88.0" y="494.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (8 samples, 0.11%)</title><rect x="85.0" y="467.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="88.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (8 samples, 0.11%)</title><rect x="85.0" y="451.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="88.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (8 samples, 0.11%)</title><rect x="85.0" y="435.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="88.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (8 samples, 0.11%)</title><rect x="85.0" y="419.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="88.0" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (8 samples, 0.11%)</title><rect x="85.0" y="403.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="88.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$75/1549034997.run (461 samples, 6.29%)</title><rect x="86.3" y="467.0" width="74.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="89.3" y="478.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$get$1 (461 samples, 6.29%)</title><rect x="86.3" y="451.0" width="74.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="89.3" y="462.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (9 samples, 0.12%)</title><rect x="86.3" y="435.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="89.3" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (9 samples, 0.12%)</title><rect x="86.3" y="419.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="89.3" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (9 samples, 0.12%)</title><rect x="86.3" y="403.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="89.3" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (9 samples, 0.12%)</title><rect x="86.3" y="387.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="89.3" y="398.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.12%)</title><rect x="86.3" y="371.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="89.3" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.07%)</title><rect x="87.7" y="435.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="90.7" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.07%)</title><rect x="87.7" y="419.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="90.7" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.07%)</title><rect x="87.7" y="403.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="90.7" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (18 samples, 0.25%)</title><rect x="88.5" y="435.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="91.5" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (18 samples, 0.25%)</title><rect x="88.5" y="419.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="91.5" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 0.11%)</title><rect x="88.5" y="403.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="91.5" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (8 samples, 0.11%)</title><rect x="88.5" y="387.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="91.5" y="398.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.11%)</title><rect x="88.5" y="371.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="91.5" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 0.14%)</title><rect x="89.8" y="403.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="92.8" y="414.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (10 samples, 0.14%)</title><rect x="89.8" y="387.0" width="1.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="92.8" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (19 samples, 0.26%)</title><rect x="91.4" y="435.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="94.4" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (2 samples, 0.03%)</title><rect x="91.4" y="419.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="94.4" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (17 samples, 0.23%)</title><rect x="91.7" y="419.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="94.7" y="430.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.14%)</title><rect x="91.7" y="403.0" width="1.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="94.7" y="414.0"></text>
</g>
<g>
<title>java.lang.String[] (3 samples, 0.04%)</title><rect x="93.4" y="403.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="96.4" y="414.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.05%)</title><rect x="93.8" y="403.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="96.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (401 samples, 5.47%)</title><rect x="94.5" y="435.0" width="64.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="97.5" y="446.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (55 samples, 0.75%)</title><rect x="94.5" y="419.0" width="8.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="97.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (55 samples, 0.75%)</title><rect x="94.5" y="403.0" width="8.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="97.5" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (55 samples, 0.75%)</title><rect x="94.5" y="387.0" width="8.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="97.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (55 samples, 0.75%)</title><rect x="94.5" y="371.0" width="8.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="97.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (55 samples, 0.75%)</title><rect x="94.5" y="355.0" width="8.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="97.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (37 samples, 0.50%)</title><rect x="94.5" y="339.0" width="5.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="97.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (37 samples, 0.50%)</title><rect x="94.5" y="323.0" width="5.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="97.5" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (37 samples, 0.50%)</title><rect x="94.5" y="307.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="97.5" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (37 samples, 0.50%)</title><rect x="94.5" y="291.0" width="5.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="97.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (37 samples, 0.50%)</title><rect x="94.5" y="275.0" width="5.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="97.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (37 samples, 0.50%)</title><rect x="94.5" y="259.0" width="5.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="97.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (18 samples, 0.25%)</title><rect x="94.5" y="243.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="97.5" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (18 samples, 0.25%)</title><rect x="94.5" y="227.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="97.5" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (18 samples, 0.25%)</title><rect x="94.5" y="211.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="97.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (18 samples, 0.25%)</title><rect x="94.5" y="195.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="97.5" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (18 samples, 0.25%)</title><rect x="94.5" y="179.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="97.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (18 samples, 0.25%)</title><rect x="94.5" y="163.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="97.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (18 samples, 0.25%)</title><rect x="94.5" y="147.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="97.5" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (18 samples, 0.25%)</title><rect x="94.5" y="131.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="97.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (18 samples, 0.25%)</title><rect x="94.5" y="115.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="97.5" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (6 samples, 0.08%)</title><rect x="94.5" y="99.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="97.5" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (6 samples, 0.08%)</title><rect x="94.5" y="83.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="97.5" y="94.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (6 samples, 0.08%)</title><rect x="94.5" y="67.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="97.5" y="78.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (12 samples, 0.16%)</title><rect x="95.4" y="99.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="98.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (12 samples, 0.16%)</title><rect x="95.4" y="83.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="98.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (12 samples, 0.16%)</title><rect x="95.4" y="67.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="98.4" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (6 samples, 0.08%)</title><rect x="95.4" y="51.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="98.4" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.08%)</title><rect x="95.4" y="35.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="98.4" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (6 samples, 0.08%)</title><rect x="96.4" y="51.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="99.4" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$125/991073477.apply (19 samples, 0.26%)</title><rect x="97.4" y="243.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="100.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (19 samples, 0.26%)</title><rect x="97.4" y="227.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="100.4" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (19 samples, 0.26%)</title><rect x="97.4" y="211.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="100.4" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (19 samples, 0.26%)</title><rect x="97.4" y="195.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="100.4" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (19 samples, 0.26%)</title><rect x="97.4" y="179.0" width="3.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="100.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$177/786148505.apply (18 samples, 0.25%)</title><rect x="100.4" y="339.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="103.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (18 samples, 0.25%)</title><rect x="100.4" y="323.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="103.4" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (18 samples, 0.25%)</title><rect x="100.4" y="307.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="103.4" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (18 samples, 0.25%)</title><rect x="100.4" y="291.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="103.4" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (18 samples, 0.25%)</title><rect x="100.4" y="275.0" width="2.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="103.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (19 samples, 0.26%)</title><rect x="103.3" y="419.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="106.3" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (19 samples, 0.26%)</title><rect x="103.3" y="403.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="106.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$191/1599205169.apply (19 samples, 0.26%)</title><rect x="103.3" y="387.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="106.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$3 (19 samples, 0.26%)</title><rect x="103.3" y="371.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="106.3" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (8 samples, 0.11%)</title><rect x="103.3" y="355.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="106.3" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.11%)</title><rect x="103.3" y="339.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="106.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.of (2 samples, 0.03%)</title><rect x="104.6" y="355.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="107.6" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.Record (2 samples, 0.03%)</title><rect x="104.6" y="339.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="107.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (9 samples, 0.12%)</title><rect x="104.9" y="355.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="107.9" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (9 samples, 0.12%)</title><rect x="104.9" y="339.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="107.9" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (9 samples, 0.12%)</title><rect x="104.9" y="323.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="107.9" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.12%)</title><rect x="104.9" y="307.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="107.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (3 samples, 0.04%)</title><rect x="106.4" y="419.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="109.4" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (3 samples, 0.04%)</title><rect x="106.4" y="403.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="109.4" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (3 samples, 0.04%)</title><rect x="106.4" y="387.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="109.4" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.04%)</title><rect x="106.4" y="371.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="109.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (7 samples, 0.10%)</title><rect x="106.9" y="419.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="109.9" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (7 samples, 0.10%)</title><rect x="106.9" y="403.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="109.9" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (7 samples, 0.10%)</title><rect x="106.9" y="387.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="109.9" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.10%)</title><rect x="106.9" y="371.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="109.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (317 samples, 4.32%)</title><rect x="108.0" y="419.0" width="51.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="111.0" y="430.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (7 samples, 0.10%)</title><rect x="108.2" y="403.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="111.2" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (7 samples, 0.10%)</title><rect x="108.2" y="387.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="111.2" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (10 samples, 0.14%)</title><rect x="109.3" y="403.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="112.3" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.14%)</title><rect x="109.3" y="387.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="112.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (200 samples, 2.73%)</title><rect x="111.1" y="403.0" width="32.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="114.1" y="414.0">ru..</text>
</g>
<g>
<title>java.util.ArrayList (7 samples, 0.10%)</title><rect x="111.1" y="387.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="114.1" y="398.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (6 samples, 0.08%)</title><rect x="112.2" y="387.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="115.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (6 samples, 0.08%)</title><rect x="112.2" y="371.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="115.2" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (6 samples, 0.08%)</title><rect x="112.2" y="355.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="115.2" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (5 samples, 0.07%)</title><rect x="113.1" y="387.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="116.1" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.07%)</title><rect x="113.1" y="371.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="116.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (182 samples, 2.48%)</title><rect x="114.0" y="387.0" width="29.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="117.0" y="398.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (9 samples, 0.12%)</title><rect x="114.0" y="371.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="117.0" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (9 samples, 0.12%)</title><rect x="114.0" y="355.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="117.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (69 samples, 0.94%)</title><rect x="115.4" y="371.0" width="11.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="118.4" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (2 samples, 0.03%)</title><rect x="115.4" y="355.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="118.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (67 samples, 0.91%)</title><rect x="115.7" y="355.0" width="10.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="118.7" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (4 samples, 0.05%)</title><rect x="115.7" y="339.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="118.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (2 samples, 0.03%)</title><rect x="116.4" y="339.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="119.4" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (2 samples, 0.03%)</title><rect x="116.4" y="323.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="119.4" y="334.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (7 samples, 0.10%)</title><rect x="116.7" y="339.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="119.7" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (5 samples, 0.07%)</title><rect x="117.8" y="339.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="120.8" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.07%)</title><rect x="117.8" y="323.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="120.8" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (49 samples, 0.67%)</title><rect x="118.6" y="339.0" width="7.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="121.6" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (49 samples, 0.67%)</title><rect x="118.6" y="323.0" width="7.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="121.6" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (49 samples, 0.67%)</title><rect x="118.6" y="307.0" width="7.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="121.6" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (16 samples, 0.22%)</title><rect x="118.6" y="291.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="121.6" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (16 samples, 0.22%)</title><rect x="118.6" y="275.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="121.6" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (16 samples, 0.22%)</title><rect x="118.6" y="259.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="121.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (16 samples, 0.22%)</title><rect x="118.6" y="243.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="121.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.05%)</title><rect x="118.6" y="227.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="121.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.05%)</title><rect x="118.6" y="211.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="121.6" y="222.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (4 samples, 0.05%)</title><rect x="118.6" y="195.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="121.6" y="206.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (12 samples, 0.16%)</title><rect x="119.3" y="227.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="122.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (12 samples, 0.16%)</title><rect x="119.3" y="211.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="122.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (12 samples, 0.16%)</title><rect x="119.3" y="195.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="122.3" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (9 samples, 0.12%)</title><rect x="119.3" y="179.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="122.3" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.12%)</title><rect x="119.3" y="163.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="122.3" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (3 samples, 0.04%)</title><rect x="120.7" y="179.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="123.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (33 samples, 0.45%)</title><rect x="121.2" y="291.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="124.2" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (4 samples, 0.05%)</title><rect x="121.2" y="275.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="124.2" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.14%)</title><rect x="121.8" y="275.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="124.8" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.14%)</title><rect x="121.8" y="259.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="124.8" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$111/1835775400.get$Lambda (4 samples, 0.05%)</title><rect x="121.8" y="243.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="124.8" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$111 (4 samples, 0.05%)</title><rect x="121.8" y="227.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="124.8" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.get$Lambda (6 samples, 0.08%)</title><rect x="122.5" y="243.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="125.5" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$117 (6 samples, 0.08%)</title><rect x="122.5" y="227.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="125.5" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (7 samples, 0.10%)</title><rect x="123.4" y="275.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="126.4" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (7 samples, 0.10%)</title><rect x="123.4" y="259.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="126.4" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (7 samples, 0.10%)</title><rect x="123.4" y="243.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="126.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (12 samples, 0.16%)</title><rect x="124.6" y="275.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="127.6" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.16%)</title><rect x="124.6" y="259.0" width="1.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="127.6" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (7 samples, 0.10%)</title><rect x="126.5" y="371.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="129.5" y="382.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (7 samples, 0.10%)</title><rect x="127.6" y="371.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="130.6" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (7 samples, 0.10%)</title><rect x="127.6" y="355.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="130.6" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$ValueIterator (7 samples, 0.10%)</title><rect x="127.6" y="339.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="130.6" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.03%)</title><rect x="128.8" y="371.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="131.8" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="128.8" y="355.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="131.8" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (3 samples, 0.04%)</title><rect x="129.1" y="371.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="132.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="129.1" y="355.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="132.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="129.1" y="339.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="132.1" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$95/683319954.get$Lambda (3 samples, 0.04%)</title><rect x="129.1" y="323.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="132.1" y="334.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$95 (3 samples, 0.04%)</title><rect x="129.1" y="307.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="132.1" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (10 samples, 0.14%)</title><rect x="129.6" y="371.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="132.6" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (2 samples, 0.03%)</title><rect x="129.6" y="355.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="132.6" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="129.6" y="339.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="132.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="129.6" y="323.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="132.6" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$95/683319954.get$Lambda (2 samples, 0.03%)</title><rect x="129.6" y="307.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="132.6" y="318.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$95 (2 samples, 0.03%)</title><rect x="129.6" y="291.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="132.6" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (8 samples, 0.11%)</title><rect x="129.9" y="355.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="132.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.11%)</title><rect x="129.9" y="339.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="132.9" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.11%)</title><rect x="129.9" y="323.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="132.9" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$103/582602737.get$Lambda (8 samples, 0.11%)</title><rect x="129.9" y="307.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="132.9" y="318.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$103 (8 samples, 0.11%)</title><rect x="129.9" y="291.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="132.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (25 samples, 0.34%)</title><rect x="131.3" y="371.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="134.3" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (5 samples, 0.07%)</title><rect x="131.3" y="355.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="134.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (20 samples, 0.27%)</title><rect x="132.1" y="355.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="135.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (20 samples, 0.27%)</title><rect x="132.1" y="339.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="135.1" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (20 samples, 0.27%)</title><rect x="132.1" y="323.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="135.1" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (20 samples, 0.27%)</title><rect x="132.1" y="307.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="135.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (20 samples, 0.27%)</title><rect x="132.1" y="291.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="135.1" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (20 samples, 0.27%)</title><rect x="132.1" y="275.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="135.1" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (20 samples, 0.27%)</title><rect x="132.1" y="259.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="135.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (20 samples, 0.27%)</title><rect x="132.1" y="243.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="135.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (20 samples, 0.27%)</title><rect x="132.1" y="227.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="135.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (20 samples, 0.27%)</title><rect x="132.1" y="211.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="135.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.05%)</title><rect x="132.1" y="195.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="135.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.05%)</title><rect x="132.1" y="179.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="135.1" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (4 samples, 0.05%)</title><rect x="132.1" y="163.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="135.1" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (16 samples, 0.22%)</title><rect x="132.8" y="195.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="135.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (16 samples, 0.22%)</title><rect x="132.8" y="179.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="135.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (16 samples, 0.22%)</title><rect x="132.8" y="163.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="135.8" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (13 samples, 0.18%)</title><rect x="132.8" y="147.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="135.8" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (13 samples, 0.18%)</title><rect x="132.8" y="131.0" width="2.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="135.8" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (3 samples, 0.04%)</title><rect x="134.9" y="147.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="137.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (49 samples, 0.67%)</title><rect x="135.4" y="371.0" width="7.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="138.4" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (14 samples, 0.19%)</title><rect x="135.4" y="355.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="138.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (7 samples, 0.10%)</title><rect x="135.4" y="339.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="138.4" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (7 samples, 0.10%)</title><rect x="135.4" y="323.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="138.4" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (7 samples, 0.10%)</title><rect x="136.5" y="339.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="139.5" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (7 samples, 0.10%)</title><rect x="136.5" y="323.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="139.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (10 samples, 0.14%)</title><rect x="137.8" y="355.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="140.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (10 samples, 0.14%)</title><rect x="137.8" y="339.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="140.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (10 samples, 0.14%)</title><rect x="137.8" y="323.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="140.8" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (10 samples, 0.14%)</title><rect x="137.8" y="307.0" width="1.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="140.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (13 samples, 0.18%)</title><rect x="139.4" y="355.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="142.4" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (5 samples, 0.07%)</title><rect x="139.4" y="339.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="142.4" y="350.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (5 samples, 0.07%)</title><rect x="139.4" y="323.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="142.4" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (8 samples, 0.11%)</title><rect x="140.2" y="339.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="143.2" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (7 samples, 0.10%)</title><rect x="140.3" y="323.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="143.3" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (7 samples, 0.10%)</title><rect x="140.3" y="307.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="143.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (11 samples, 0.15%)</title><rect x="141.5" y="355.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="144.5" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (11 samples, 0.15%)</title><rect x="141.5" y="339.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="144.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (98 samples, 1.34%)</title><rect x="143.2" y="403.0" width="15.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="146.2" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (52 samples, 0.71%)</title><rect x="143.2" y="387.0" width="8.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="146.2" y="398.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (3 samples, 0.04%)</title><rect x="143.2" y="371.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="146.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (49 samples, 0.67%)</title><rect x="143.7" y="371.0" width="7.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="146.7" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (5 samples, 0.07%)</title><rect x="143.7" y="355.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="146.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (32 samples, 0.44%)</title><rect x="144.5" y="355.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="147.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (32 samples, 0.44%)</title><rect x="144.5" y="339.0" width="5.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="147.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (32 samples, 0.44%)</title><rect x="144.5" y="323.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="147.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (32 samples, 0.44%)</title><rect x="144.5" y="307.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="147.5" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (16 samples, 0.22%)</title><rect x="144.5" y="291.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="147.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (16 samples, 0.22%)</title><rect x="144.5" y="275.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="147.5" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (16 samples, 0.22%)</title><rect x="144.5" y="259.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="147.5" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (16 samples, 0.22%)</title><rect x="144.5" y="243.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="147.5" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (16 samples, 0.22%)</title><rect x="144.5" y="227.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="147.5" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (16 samples, 0.22%)</title><rect x="144.5" y="211.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="147.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (16 samples, 0.22%)</title><rect x="144.5" y="195.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="147.5" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (16 samples, 0.22%)</title><rect x="144.5" y="179.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="147.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (16 samples, 0.22%)</title><rect x="144.5" y="163.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="147.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.04%)</title><rect x="144.5" y="147.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="147.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.04%)</title><rect x="144.5" y="131.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="147.5" y="142.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (3 samples, 0.04%)</title><rect x="144.5" y="115.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="147.5" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (13 samples, 0.18%)</title><rect x="145.0" y="147.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="148.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (13 samples, 0.18%)</title><rect x="145.0" y="131.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="148.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (13 samples, 0.18%)</title><rect x="145.0" y="115.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="148.0" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (7 samples, 0.10%)</title><rect x="145.0" y="99.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="148.0" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.10%)</title><rect x="145.0" y="83.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="148.0" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (6 samples, 0.08%)</title><rect x="146.1" y="99.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="149.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$125/991073477.apply (16 samples, 0.22%)</title><rect x="147.1" y="291.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="150.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (16 samples, 0.22%)</title><rect x="147.1" y="275.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="150.1" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (16 samples, 0.22%)</title><rect x="147.1" y="259.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="150.1" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (16 samples, 0.22%)</title><rect x="147.1" y="243.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="150.1" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (16 samples, 0.22%)</title><rect x="147.1" y="227.0" width="2.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="150.1" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (4 samples, 0.05%)</title><rect x="149.7" y="355.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="152.7" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (4 samples, 0.05%)</title><rect x="149.7" y="339.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="152.7" y="350.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (3 samples, 0.04%)</title><rect x="150.3" y="355.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="153.3" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (5 samples, 0.07%)</title><rect x="150.8" y="355.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="153.8" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.07%)</title><rect x="150.8" y="339.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="153.8" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (8 samples, 0.11%)</title><rect x="151.8" y="387.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="154.8" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (6 samples, 0.08%)</title><rect x="151.8" y="371.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="154.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.08%)</title><rect x="151.8" y="355.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="154.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.08%)</title><rect x="151.8" y="339.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="154.8" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$95/683319954.get$Lambda (6 samples, 0.08%)</title><rect x="151.8" y="323.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="154.8" y="334.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$95 (6 samples, 0.08%)</title><rect x="151.8" y="307.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="154.8" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (2 samples, 0.03%)</title><rect x="152.7" y="371.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="155.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="152.7" y="355.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="155.7" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="152.7" y="339.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="155.7" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$103/582602737.get$Lambda (2 samples, 0.03%)</title><rect x="152.7" y="323.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="155.7" y="334.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$103 (2 samples, 0.03%)</title><rect x="152.7" y="307.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="155.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (37 samples, 0.50%)</title><rect x="153.1" y="387.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="156.1" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (4 samples, 0.05%)</title><rect x="153.1" y="371.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="156.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (33 samples, 0.45%)</title><rect x="153.7" y="371.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="156.7" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (33 samples, 0.45%)</title><rect x="153.7" y="355.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="156.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (33 samples, 0.45%)</title><rect x="153.7" y="339.0" width="5.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="156.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (33 samples, 0.45%)</title><rect x="153.7" y="323.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="156.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (33 samples, 0.45%)</title><rect x="153.7" y="307.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="156.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (33 samples, 0.45%)</title><rect x="153.7" y="291.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="156.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (33 samples, 0.45%)</title><rect x="153.7" y="275.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="156.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (18 samples, 0.25%)</title><rect x="153.7" y="259.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="156.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (18 samples, 0.25%)</title><rect x="153.7" y="243.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="156.7" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (18 samples, 0.25%)</title><rect x="153.7" y="227.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="156.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (18 samples, 0.25%)</title><rect x="153.7" y="211.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="156.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (18 samples, 0.25%)</title><rect x="153.7" y="195.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="156.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (18 samples, 0.25%)</title><rect x="153.7" y="179.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="156.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (18 samples, 0.25%)</title><rect x="153.7" y="163.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="156.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (18 samples, 0.25%)</title><rect x="153.7" y="147.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="156.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (18 samples, 0.25%)</title><rect x="153.7" y="131.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="156.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (8 samples, 0.11%)</title><rect x="153.7" y="115.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="156.7" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (8 samples, 0.11%)</title><rect x="153.7" y="99.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="156.7" y="110.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (8 samples, 0.11%)</title><rect x="153.7" y="83.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="156.7" y="94.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (10 samples, 0.14%)</title><rect x="155.0" y="115.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="158.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (10 samples, 0.14%)</title><rect x="155.0" y="99.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="158.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (10 samples, 0.14%)</title><rect x="155.0" y="83.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="158.0" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (5 samples, 0.07%)</title><rect x="155.0" y="67.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="158.0" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.07%)</title><rect x="155.0" y="51.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="158.0" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (5 samples, 0.07%)</title><rect x="155.8" y="67.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="158.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$125/991073477.apply (15 samples, 0.20%)</title><rect x="156.6" y="259.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="159.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (15 samples, 0.20%)</title><rect x="156.6" y="243.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="159.6" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (15 samples, 0.20%)</title><rect x="156.6" y="227.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="159.6" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (15 samples, 0.20%)</title><rect x="156.6" y="211.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="159.6" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (15 samples, 0.20%)</title><rect x="156.6" y="195.0" width="2.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="159.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.getBytesFromByteBuffer (9 samples, 0.12%)</title><rect x="159.0" y="435.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="162.0" y="446.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.12%)</title><rect x="159.0" y="419.0" width="1.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="162.0" y="430.0"></text>
</g>
<g>
<title>[2020-highload-dht-thread-91 tid=22735] (464 samples, 6.33%)</title><rect x="160.5" y="531.0" width="74.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="163.5" y="542.0">[2020-hi..</text>
</g>
<g>
<title>java/lang/Thread.run (464 samples, 6.33%)</title><rect x="160.5" y="515.0" width="74.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="163.5" y="526.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (464 samples, 6.33%)</title><rect x="160.5" y="499.0" width="74.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="163.5" y="510.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (464 samples, 6.33%)</title><rect x="160.5" y="483.0" width="74.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="163.5" y="494.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (4 samples, 0.05%)</title><rect x="160.5" y="467.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="163.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (4 samples, 0.05%)</title><rect x="160.5" y="451.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="163.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (4 samples, 0.05%)</title><rect x="160.5" y="435.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="163.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (4 samples, 0.05%)</title><rect x="160.5" y="419.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="163.5" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (4 samples, 0.05%)</title><rect x="160.5" y="403.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="163.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$75/1549034997.run (460 samples, 6.27%)</title><rect x="161.1" y="467.0" width="74.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="164.1" y="478.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$get$1 (460 samples, 6.27%)</title><rect x="161.1" y="451.0" width="74.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="164.1" y="462.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (12 samples, 0.16%)</title><rect x="161.1" y="435.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="164.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (12 samples, 0.16%)</title><rect x="161.1" y="419.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="164.1" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (12 samples, 0.16%)</title><rect x="161.1" y="403.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="164.1" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (12 samples, 0.16%)</title><rect x="161.1" y="387.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="164.1" y="398.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.16%)</title><rect x="161.1" y="371.0" width="1.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="164.1" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.07%)</title><rect x="163.0" y="435.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="166.0" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.07%)</title><rect x="163.0" y="419.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="166.0" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.07%)</title><rect x="163.0" y="403.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="166.0" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (20 samples, 0.27%)</title><rect x="163.8" y="435.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="166.8" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (20 samples, 0.27%)</title><rect x="163.8" y="419.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="166.8" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (13 samples, 0.18%)</title><rect x="163.8" y="403.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="166.8" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (13 samples, 0.18%)</title><rect x="163.8" y="387.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="166.8" y="398.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.18%)</title><rect x="163.8" y="371.0" width="2.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="166.8" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.10%)</title><rect x="165.9" y="403.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="168.9" y="414.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (7 samples, 0.10%)</title><rect x="165.9" y="387.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="168.9" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (26 samples, 0.35%)</title><rect x="167.1" y="435.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="170.1" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (7 samples, 0.10%)</title><rect x="167.1" y="419.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="170.1" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (19 samples, 0.26%)</title><rect x="168.2" y="419.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="171.2" y="430.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.11%)</title><rect x="168.2" y="403.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="171.2" y="414.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.08%)</title><rect x="169.5" y="403.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="172.5" y="414.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.07%)</title><rect x="170.4" y="403.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="173.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (394 samples, 5.37%)</title><rect x="171.2" y="435.0" width="63.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="174.2" y="446.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (57 samples, 0.78%)</title><rect x="171.2" y="419.0" width="9.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="174.2" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (57 samples, 0.78%)</title><rect x="171.2" y="403.0" width="9.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="174.2" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (57 samples, 0.78%)</title><rect x="171.2" y="387.0" width="9.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="174.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (57 samples, 0.78%)</title><rect x="171.2" y="371.0" width="9.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="174.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (57 samples, 0.78%)</title><rect x="171.2" y="355.0" width="9.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="174.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (41 samples, 0.56%)</title><rect x="171.2" y="339.0" width="6.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="174.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (41 samples, 0.56%)</title><rect x="171.2" y="323.0" width="6.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="174.2" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (41 samples, 0.56%)</title><rect x="171.2" y="307.0" width="6.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="174.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (41 samples, 0.56%)</title><rect x="171.2" y="291.0" width="6.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="174.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (41 samples, 0.56%)</title><rect x="171.2" y="275.0" width="6.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="174.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (41 samples, 0.56%)</title><rect x="171.2" y="259.0" width="6.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="174.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (20 samples, 0.27%)</title><rect x="171.2" y="243.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="174.2" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (20 samples, 0.27%)</title><rect x="171.2" y="227.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="174.2" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (20 samples, 0.27%)</title><rect x="171.2" y="211.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="174.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (20 samples, 0.27%)</title><rect x="171.2" y="195.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="174.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (20 samples, 0.27%)</title><rect x="171.2" y="179.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="174.2" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (20 samples, 0.27%)</title><rect x="171.2" y="163.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="174.2" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (20 samples, 0.27%)</title><rect x="171.2" y="147.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="174.2" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (20 samples, 0.27%)</title><rect x="171.2" y="131.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="174.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (20 samples, 0.27%)</title><rect x="171.2" y="115.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="174.2" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (6 samples, 0.08%)</title><rect x="171.2" y="99.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="174.2" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (6 samples, 0.08%)</title><rect x="171.2" y="83.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="174.2" y="94.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (6 samples, 0.08%)</title><rect x="171.2" y="67.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="174.2" y="78.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (14 samples, 0.19%)</title><rect x="172.2" y="99.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="175.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (14 samples, 0.19%)</title><rect x="172.2" y="83.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="175.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (14 samples, 0.19%)</title><rect x="172.2" y="67.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="175.2" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (8 samples, 0.11%)</title><rect x="172.2" y="51.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="175.2" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.11%)</title><rect x="172.2" y="35.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="175.2" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (6 samples, 0.08%)</title><rect x="173.5" y="51.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="176.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$125/991073477.apply (21 samples, 0.29%)</title><rect x="174.5" y="243.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="177.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (21 samples, 0.29%)</title><rect x="174.5" y="227.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="177.5" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (21 samples, 0.29%)</title><rect x="174.5" y="211.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="177.5" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (21 samples, 0.29%)</title><rect x="174.5" y="195.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="177.5" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (21 samples, 0.29%)</title><rect x="174.5" y="179.0" width="3.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="177.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$177/786148505.apply (16 samples, 0.22%)</title><rect x="177.8" y="339.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="180.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (16 samples, 0.22%)</title><rect x="177.8" y="323.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="180.8" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (16 samples, 0.22%)</title><rect x="177.8" y="307.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="180.8" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (16 samples, 0.22%)</title><rect x="177.8" y="291.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="180.8" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (16 samples, 0.22%)</title><rect x="177.8" y="275.0" width="2.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="180.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (22 samples, 0.30%)</title><rect x="180.4" y="419.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="183.4" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (22 samples, 0.30%)</title><rect x="180.4" y="403.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="183.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$191/1599205169.apply (22 samples, 0.30%)</title><rect x="180.4" y="387.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="183.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$3 (22 samples, 0.30%)</title><rect x="180.4" y="371.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="183.4" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (7 samples, 0.10%)</title><rect x="180.4" y="355.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="183.4" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.10%)</title><rect x="180.4" y="339.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="183.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.of (6 samples, 0.08%)</title><rect x="181.5" y="355.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="184.5" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.Record (6 samples, 0.08%)</title><rect x="181.5" y="339.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="184.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (9 samples, 0.12%)</title><rect x="182.5" y="355.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="185.5" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (9 samples, 0.12%)</title><rect x="182.5" y="339.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="185.5" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (9 samples, 0.12%)</title><rect x="182.5" y="323.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="185.5" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.12%)</title><rect x="182.5" y="307.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="185.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (6 samples, 0.08%)</title><rect x="184.0" y="419.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="187.0" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (6 samples, 0.08%)</title><rect x="184.0" y="403.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="187.0" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (6 samples, 0.08%)</title><rect x="184.0" y="387.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="187.0" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.08%)</title><rect x="184.0" y="371.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="187.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (8 samples, 0.11%)</title><rect x="184.9" y="419.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="187.9" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (8 samples, 0.11%)</title><rect x="184.9" y="403.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="187.9" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (8 samples, 0.11%)</title><rect x="184.9" y="387.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="187.9" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.11%)</title><rect x="184.9" y="371.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="187.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (301 samples, 4.10%)</title><rect x="186.2" y="419.0" width="48.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="189.2" y="430.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (5 samples, 0.07%)</title><rect x="186.2" y="403.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="189.2" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (5 samples, 0.07%)</title><rect x="186.2" y="387.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="189.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (8 samples, 0.11%)</title><rect x="187.0" y="403.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="190.0" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (8 samples, 0.11%)</title><rect x="187.0" y="387.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="190.0" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.07%)</title><rect x="188.3" y="403.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="191.3" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.07%)</title><rect x="188.3" y="387.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="191.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (196 samples, 2.67%)</title><rect x="189.1" y="403.0" width="31.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="192.1" y="414.0">ru..</text>
</g>
<g>
<title>java.util.ArrayList (5 samples, 0.07%)</title><rect x="189.1" y="387.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="192.1" y="398.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (3 samples, 0.04%)</title><rect x="189.9" y="387.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="192.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (3 samples, 0.04%)</title><rect x="189.9" y="371.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="192.9" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (3 samples, 0.04%)</title><rect x="189.9" y="355.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="192.9" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (5 samples, 0.07%)</title><rect x="190.4" y="387.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="193.4" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.07%)</title><rect x="190.4" y="371.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="193.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (183 samples, 2.50%)</title><rect x="191.2" y="387.0" width="29.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="194.2" y="398.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (5 samples, 0.07%)</title><rect x="191.2" y="371.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="194.2" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (5 samples, 0.07%)</title><rect x="191.2" y="355.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="194.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (79 samples, 1.08%)</title><rect x="192.0" y="371.0" width="12.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="195.0" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (78 samples, 1.06%)</title><rect x="192.2" y="355.0" width="12.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="195.2" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (5 samples, 0.07%)</title><rect x="192.2" y="339.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="195.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (7 samples, 0.10%)</title><rect x="193.0" y="339.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="196.0" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (7 samples, 0.10%)</title><rect x="193.0" y="323.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="196.0" y="334.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (4 samples, 0.05%)</title><rect x="194.1" y="339.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="197.1" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (5 samples, 0.07%)</title><rect x="194.7" y="339.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="197.7" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.07%)</title><rect x="194.7" y="323.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="197.7" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (57 samples, 0.78%)</title><rect x="195.5" y="339.0" width="9.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="198.5" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (57 samples, 0.78%)</title><rect x="195.5" y="323.0" width="9.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="198.5" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (57 samples, 0.78%)</title><rect x="195.5" y="307.0" width="9.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="198.5" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (18 samples, 0.25%)</title><rect x="195.5" y="291.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="198.5" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (18 samples, 0.25%)</title><rect x="195.5" y="275.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="198.5" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (18 samples, 0.25%)</title><rect x="195.5" y="259.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="198.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (18 samples, 0.25%)</title><rect x="195.5" y="243.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="198.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.03%)</title><rect x="195.5" y="227.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="198.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.03%)</title><rect x="195.5" y="211.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="198.5" y="222.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (2 samples, 0.03%)</title><rect x="195.5" y="195.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="198.5" y="206.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (16 samples, 0.22%)</title><rect x="195.9" y="227.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="198.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (16 samples, 0.22%)</title><rect x="195.9" y="211.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="198.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (16 samples, 0.22%)</title><rect x="195.9" y="195.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="198.9" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (12 samples, 0.16%)</title><rect x="195.9" y="179.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="198.9" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.16%)</title><rect x="195.9" y="163.0" width="1.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="198.9" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (4 samples, 0.05%)</title><rect x="197.8" y="179.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="200.8" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (39 samples, 0.53%)</title><rect x="198.4" y="291.0" width="6.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="201.4" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (4 samples, 0.05%)</title><rect x="198.4" y="275.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="201.4" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.11%)</title><rect x="199.1" y="275.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="202.1" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.11%)</title><rect x="199.1" y="259.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="202.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.get$Lambda (7 samples, 0.10%)</title><rect x="199.2" y="243.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="202.2" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$117 (7 samples, 0.10%)</title><rect x="199.2" y="227.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="202.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (6 samples, 0.08%)</title><rect x="200.4" y="275.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="203.4" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (6 samples, 0.08%)</title><rect x="200.4" y="259.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="203.4" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (6 samples, 0.08%)</title><rect x="200.4" y="243.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="203.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (21 samples, 0.29%)</title><rect x="201.3" y="275.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="204.3" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (21 samples, 0.29%)</title><rect x="201.3" y="259.0" width="3.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="204.3" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.04%)</title><rect x="204.7" y="371.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="207.7" y="382.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (6 samples, 0.08%)</title><rect x="205.2" y="371.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="208.2" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (6 samples, 0.08%)</title><rect x="205.2" y="355.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="208.2" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$ValueIterator (6 samples, 0.08%)</title><rect x="205.2" y="339.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="208.2" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (5 samples, 0.07%)</title><rect x="206.2" y="371.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="209.2" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.07%)</title><rect x="206.2" y="355.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="209.2" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (4 samples, 0.05%)</title><rect x="207.0" y="371.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="210.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.05%)</title><rect x="207.0" y="355.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="210.0" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.05%)</title><rect x="207.0" y="339.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="210.0" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$95/683319954.get$Lambda (4 samples, 0.05%)</title><rect x="207.0" y="323.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="210.0" y="334.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$95 (4 samples, 0.05%)</title><rect x="207.0" y="307.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="210.0" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (8 samples, 0.11%)</title><rect x="207.6" y="371.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="210.6" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (3 samples, 0.04%)</title><rect x="207.6" y="355.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="210.6" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="207.6" y="339.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="210.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="207.6" y="323.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="210.6" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$95/683319954.get$Lambda (3 samples, 0.04%)</title><rect x="207.6" y="307.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="210.6" y="318.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$95 (3 samples, 0.04%)</title><rect x="207.6" y="291.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="210.6" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (5 samples, 0.07%)</title><rect x="208.1" y="355.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="211.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.07%)</title><rect x="208.1" y="339.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="211.1" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.07%)</title><rect x="208.1" y="323.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="211.1" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$103/582602737.get$Lambda (5 samples, 0.07%)</title><rect x="208.1" y="307.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="211.1" y="318.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$103 (5 samples, 0.07%)</title><rect x="208.1" y="291.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="211.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (15 samples, 0.20%)</title><rect x="208.9" y="371.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="211.9" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (3 samples, 0.04%)</title><rect x="208.9" y="355.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="211.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (12 samples, 0.16%)</title><rect x="209.4" y="355.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="212.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (12 samples, 0.16%)</title><rect x="209.4" y="339.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="212.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (12 samples, 0.16%)</title><rect x="209.4" y="323.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="212.4" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (12 samples, 0.16%)</title><rect x="209.4" y="307.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="212.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (12 samples, 0.16%)</title><rect x="209.4" y="291.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="212.4" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (12 samples, 0.16%)</title><rect x="209.4" y="275.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="212.4" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (12 samples, 0.16%)</title><rect x="209.4" y="259.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="212.4" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (12 samples, 0.16%)</title><rect x="209.4" y="243.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="212.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (12 samples, 0.16%)</title><rect x="209.4" y="227.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="212.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (12 samples, 0.16%)</title><rect x="209.4" y="211.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="212.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.04%)</title><rect x="209.4" y="195.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="212.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.04%)</title><rect x="209.4" y="179.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="212.4" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (3 samples, 0.04%)</title><rect x="209.4" y="163.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="212.4" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (9 samples, 0.12%)</title><rect x="209.9" y="195.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="212.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (9 samples, 0.12%)</title><rect x="209.9" y="179.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="212.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (9 samples, 0.12%)</title><rect x="209.9" y="163.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="212.9" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (7 samples, 0.10%)</title><rect x="209.9" y="147.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="212.9" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.10%)</title><rect x="209.9" y="131.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="212.9" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (2 samples, 0.03%)</title><rect x="211.0" y="147.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="214.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (58 samples, 0.79%)</title><rect x="211.3" y="371.0" width="9.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="214.3" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (9 samples, 0.12%)</title><rect x="211.3" y="355.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="214.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (4 samples, 0.05%)</title><rect x="211.3" y="339.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="214.3" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (4 samples, 0.05%)</title><rect x="211.3" y="323.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="214.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (5 samples, 0.07%)</title><rect x="212.0" y="339.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="215.0" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (5 samples, 0.07%)</title><rect x="212.0" y="323.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="215.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (3 samples, 0.04%)</title><rect x="212.8" y="355.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="215.8" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (3 samples, 0.04%)</title><rect x="212.8" y="339.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="215.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (14 samples, 0.19%)</title><rect x="213.2" y="355.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="216.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (14 samples, 0.19%)</title><rect x="213.2" y="339.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="216.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (14 samples, 0.19%)</title><rect x="213.2" y="323.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="216.2" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (14 samples, 0.19%)</title><rect x="213.2" y="307.0" width="2.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="216.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (18 samples, 0.25%)</title><rect x="215.5" y="355.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="218.5" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (3 samples, 0.04%)</title><rect x="215.5" y="339.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="218.5" y="350.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (3 samples, 0.04%)</title><rect x="215.5" y="323.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="218.5" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (15 samples, 0.20%)</title><rect x="216.0" y="339.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="219.0" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.08%)</title><rect x="216.0" y="323.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="219.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.08%)</title><rect x="216.0" y="307.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="219.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$89/1249014641.get$Lambda (6 samples, 0.08%)</title><rect x="216.0" y="291.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="219.0" y="302.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$89 (6 samples, 0.08%)</title><rect x="216.0" y="275.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="219.0" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (9 samples, 0.12%)</title><rect x="216.9" y="323.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="219.9" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (9 samples, 0.12%)</title><rect x="216.9" y="307.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="219.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (14 samples, 0.19%)</title><rect x="218.4" y="355.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="221.4" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (14 samples, 0.19%)</title><rect x="218.4" y="339.0" width="2.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="221.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (87 samples, 1.19%)</title><rect x="220.6" y="403.0" width="14.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="223.6" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (45 samples, 0.61%)</title><rect x="220.6" y="387.0" width="7.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="223.6" y="398.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (2 samples, 0.03%)</title><rect x="220.6" y="371.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="223.6" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (43 samples, 0.59%)</title><rect x="221.0" y="371.0" width="6.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="224.0" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (3 samples, 0.04%)</title><rect x="221.0" y="355.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="224.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (25 samples, 0.34%)</title><rect x="221.4" y="355.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="224.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (25 samples, 0.34%)</title><rect x="221.4" y="339.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="224.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (25 samples, 0.34%)</title><rect x="221.4" y="323.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="224.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (25 samples, 0.34%)</title><rect x="221.4" y="307.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="224.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (14 samples, 0.19%)</title><rect x="221.4" y="291.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="224.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (14 samples, 0.19%)</title><rect x="221.4" y="275.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="224.4" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (14 samples, 0.19%)</title><rect x="221.4" y="259.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="224.4" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (14 samples, 0.19%)</title><rect x="221.4" y="243.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="224.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (14 samples, 0.19%)</title><rect x="221.4" y="227.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="224.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (14 samples, 0.19%)</title><rect x="221.4" y="211.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="224.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (14 samples, 0.19%)</title><rect x="221.4" y="195.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="224.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (14 samples, 0.19%)</title><rect x="221.4" y="179.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="224.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (14 samples, 0.19%)</title><rect x="221.4" y="163.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="224.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.03%)</title><rect x="221.4" y="147.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="224.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.03%)</title><rect x="221.4" y="131.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="224.4" y="142.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (2 samples, 0.03%)</title><rect x="221.4" y="115.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="224.4" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (12 samples, 0.16%)</title><rect x="221.8" y="147.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="224.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (12 samples, 0.16%)</title><rect x="221.8" y="131.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="224.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (12 samples, 0.16%)</title><rect x="221.8" y="115.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="224.8" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (9 samples, 0.12%)</title><rect x="221.8" y="99.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="224.8" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.12%)</title><rect x="221.8" y="83.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="224.8" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (3 samples, 0.04%)</title><rect x="223.2" y="99.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="226.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$125/991073477.apply (11 samples, 0.15%)</title><rect x="223.7" y="291.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="226.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (11 samples, 0.15%)</title><rect x="223.7" y="275.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="226.7" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (11 samples, 0.15%)</title><rect x="223.7" y="259.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="226.7" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (11 samples, 0.15%)</title><rect x="223.7" y="243.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="226.7" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (11 samples, 0.15%)</title><rect x="223.7" y="227.0" width="1.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="226.7" y="238.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (8 samples, 0.11%)</title><rect x="225.5" y="355.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="228.5" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (7 samples, 0.10%)</title><rect x="226.8" y="355.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="229.8" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.10%)</title><rect x="226.8" y="339.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="229.8" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (3 samples, 0.04%)</title><rect x="227.9" y="387.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="230.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="227.9" y="371.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="230.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="227.9" y="355.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="230.9" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$95/683319954.get$Lambda (3 samples, 0.04%)</title><rect x="227.9" y="339.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="230.9" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$95 (3 samples, 0.04%)</title><rect x="227.9" y="323.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="230.9" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (4 samples, 0.05%)</title><rect x="228.4" y="387.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="231.4" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (3 samples, 0.04%)</title><rect x="228.5" y="371.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="231.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="228.5" y="355.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="231.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="228.5" y="339.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="231.5" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$103/582602737.get$Lambda (3 samples, 0.04%)</title><rect x="228.5" y="323.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="231.5" y="334.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$103 (3 samples, 0.04%)</title><rect x="228.5" y="307.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="231.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (35 samples, 0.48%)</title><rect x="229.0" y="387.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="232.0" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (6 samples, 0.08%)</title><rect x="229.0" y="371.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="232.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (29 samples, 0.40%)</title><rect x="230.0" y="371.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="233.0" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (29 samples, 0.40%)</title><rect x="230.0" y="355.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="233.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (29 samples, 0.40%)</title><rect x="230.0" y="339.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="233.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (29 samples, 0.40%)</title><rect x="230.0" y="323.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="233.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (29 samples, 0.40%)</title><rect x="230.0" y="307.0" width="4.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="233.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (29 samples, 0.40%)</title><rect x="230.0" y="291.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="233.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (29 samples, 0.40%)</title><rect x="230.0" y="275.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="233.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (15 samples, 0.20%)</title><rect x="230.0" y="259.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="233.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (15 samples, 0.20%)</title><rect x="230.0" y="243.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="233.0" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (15 samples, 0.20%)</title><rect x="230.0" y="227.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="233.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (15 samples, 0.20%)</title><rect x="230.0" y="211.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="233.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (15 samples, 0.20%)</title><rect x="230.0" y="195.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="233.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (15 samples, 0.20%)</title><rect x="230.0" y="179.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="233.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (15 samples, 0.20%)</title><rect x="230.0" y="163.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="233.0" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (15 samples, 0.20%)</title><rect x="230.0" y="147.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="233.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (15 samples, 0.20%)</title><rect x="230.0" y="131.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="233.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.07%)</title><rect x="230.0" y="115.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="233.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.07%)</title><rect x="230.0" y="99.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="233.0" y="110.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (5 samples, 0.07%)</title><rect x="230.0" y="83.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="233.0" y="94.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (10 samples, 0.14%)</title><rect x="230.8" y="115.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="233.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (10 samples, 0.14%)</title><rect x="230.8" y="99.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="233.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (10 samples, 0.14%)</title><rect x="230.8" y="83.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="233.8" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (6 samples, 0.08%)</title><rect x="230.8" y="67.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="233.8" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.08%)</title><rect x="230.8" y="51.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="233.8" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (4 samples, 0.05%)</title><rect x="231.7" y="67.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="234.7" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$125/991073477.apply (14 samples, 0.19%)</title><rect x="232.4" y="259.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="235.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (14 samples, 0.19%)</title><rect x="232.4" y="243.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="235.4" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (14 samples, 0.19%)</title><rect x="232.4" y="227.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="235.4" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (14 samples, 0.19%)</title><rect x="232.4" y="211.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="235.4" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (14 samples, 0.19%)</title><rect x="232.4" y="195.0" width="2.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="235.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.getBytesFromByteBuffer (3 samples, 0.04%)</title><rect x="234.6" y="435.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="237.6" y="446.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="234.6" y="419.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="237.6" y="430.0"></text>
</g>
<g>
<title>[2020-highload-dht-thread-92 tid=30293] (100 samples, 1.36%)</title><rect x="235.1" y="531.0" width="16.1" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="238.1" y="542.0"></text>
</g>
<g>
<title>java/lang/Thread.run (100 samples, 1.36%)</title><rect x="235.1" y="515.0" width="16.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="238.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (100 samples, 1.36%)</title><rect x="235.1" y="499.0" width="16.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="238.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (100 samples, 1.36%)</title><rect x="235.1" y="483.0" width="16.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="238.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.03%)</title><rect x="235.1" y="467.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="238.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (2 samples, 0.03%)</title><rect x="235.1" y="451.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="238.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.03%)</title><rect x="235.1" y="435.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="238.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2 samples, 0.03%)</title><rect x="235.1" y="419.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="238.1" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2 samples, 0.03%)</title><rect x="235.1" y="403.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="238.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$75/1549034997.run (98 samples, 1.34%)</title><rect x="235.4" y="467.0" width="15.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="238.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$get$1 (98 samples, 1.34%)</title><rect x="235.4" y="451.0" width="15.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="238.4" y="462.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.03%)</title><rect x="235.4" y="435.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="238.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.03%)</title><rect x="235.4" y="419.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="238.4" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.03%)</title><rect x="235.4" y="403.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="238.4" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="235.4" y="387.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="238.4" y="398.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="235.4" y="371.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="238.4" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.03%)</title><rect x="235.8" y="435.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="238.8" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.03%)</title><rect x="235.8" y="419.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="238.8" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.03%)</title><rect x="235.8" y="403.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="238.8" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (2 samples, 0.03%)</title><rect x="236.2" y="435.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="239.2" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.03%)</title><rect x="236.2" y="419.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="239.2" y="430.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="236.2" y="403.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="239.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (90 samples, 1.23%)</title><rect x="236.6" y="435.0" width="14.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="239.6" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (11 samples, 0.15%)</title><rect x="236.6" y="419.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="239.6" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (11 samples, 0.15%)</title><rect x="236.6" y="403.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="239.6" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (11 samples, 0.15%)</title><rect x="236.6" y="387.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="239.6" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (11 samples, 0.15%)</title><rect x="236.6" y="371.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="239.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (11 samples, 0.15%)</title><rect x="236.6" y="355.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="239.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.07%)</title><rect x="236.6" y="339.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="239.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (5 samples, 0.07%)</title><rect x="236.6" y="323.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="239.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (5 samples, 0.07%)</title><rect x="236.6" y="307.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="239.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (5 samples, 0.07%)</title><rect x="236.6" y="291.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="239.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (5 samples, 0.07%)</title><rect x="236.6" y="275.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="239.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (5 samples, 0.07%)</title><rect x="236.6" y="259.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="239.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$125/991073477.apply (4 samples, 0.05%)</title><rect x="236.7" y="243.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="239.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (4 samples, 0.05%)</title><rect x="236.7" y="227.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="239.7" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (4 samples, 0.05%)</title><rect x="236.7" y="211.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="239.7" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (4 samples, 0.05%)</title><rect x="236.7" y="195.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="239.7" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.05%)</title><rect x="236.7" y="179.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="239.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$177/786148505.apply (6 samples, 0.08%)</title><rect x="237.4" y="339.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="240.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (6 samples, 0.08%)</title><rect x="237.4" y="323.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="240.4" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (6 samples, 0.08%)</title><rect x="237.4" y="307.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="240.4" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (6 samples, 0.08%)</title><rect x="237.4" y="291.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="240.4" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.08%)</title><rect x="237.4" y="275.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="240.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (8 samples, 0.11%)</title><rect x="238.3" y="419.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="241.3" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (8 samples, 0.11%)</title><rect x="238.3" y="403.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="241.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$191/1599205169.apply (8 samples, 0.11%)</title><rect x="238.3" y="387.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="241.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$3 (8 samples, 0.11%)</title><rect x="238.3" y="371.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="241.3" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (5 samples, 0.07%)</title><rect x="238.3" y="355.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="241.3" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.07%)</title><rect x="238.3" y="339.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="241.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (2 samples, 0.03%)</title><rect x="239.3" y="355.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="242.3" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="239.3" y="339.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="242.3" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.03%)</title><rect x="239.3" y="323.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="242.3" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.03%)</title><rect x="239.3" y="307.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="242.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (4 samples, 0.05%)</title><rect x="239.6" y="419.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="242.6" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (4 samples, 0.05%)</title><rect x="239.6" y="403.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="242.6" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (4 samples, 0.05%)</title><rect x="239.6" y="387.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="242.6" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.05%)</title><rect x="239.6" y="371.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="242.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (67 samples, 0.91%)</title><rect x="240.3" y="419.0" width="10.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="243.3" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7 samples, 0.10%)</title><rect x="240.4" y="403.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="243.4" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.10%)</title><rect x="240.4" y="387.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="243.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (36 samples, 0.49%)</title><rect x="241.6" y="403.0" width="5.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="244.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (34 samples, 0.46%)</title><rect x="241.9" y="387.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="244.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (17 samples, 0.23%)</title><rect x="241.9" y="371.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="244.9" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (17 samples, 0.23%)</title><rect x="241.9" y="355.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="244.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (2 samples, 0.03%)</title><rect x="242.0" y="339.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="245.0" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (2 samples, 0.03%)</title><rect x="242.0" y="323.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="245.0" y="334.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (4 samples, 0.05%)</title><rect x="242.4" y="339.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="245.4" y="350.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (9 samples, 0.12%)</title><rect x="243.2" y="339.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="246.2" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (9 samples, 0.12%)</title><rect x="243.2" y="323.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="246.2" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (9 samples, 0.12%)</title><rect x="243.2" y="307.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="246.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (4 samples, 0.05%)</title><rect x="243.2" y="291.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="246.2" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (4 samples, 0.05%)</title><rect x="243.2" y="275.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="246.2" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (4 samples, 0.05%)</title><rect x="243.2" y="259.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="246.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (4 samples, 0.05%)</title><rect x="243.2" y="243.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="246.2" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (3 samples, 0.04%)</title><rect x="243.3" y="227.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="246.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (3 samples, 0.04%)</title><rect x="243.3" y="211.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="246.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (3 samples, 0.04%)</title><rect x="243.3" y="195.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="246.3" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.03%)</title><rect x="243.3" y="179.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="246.3" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.03%)</title><rect x="243.3" y="163.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="246.3" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (5 samples, 0.07%)</title><rect x="243.8" y="291.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="246.8" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (2 samples, 0.03%)</title><rect x="243.8" y="275.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="246.8" y="286.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.03%)</title><rect x="244.1" y="275.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="247.1" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (2 samples, 0.03%)</title><rect x="244.1" y="259.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="247.1" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (2 samples, 0.03%)</title><rect x="244.1" y="243.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="247.1" y="254.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (2 samples, 0.03%)</title><rect x="244.8" y="371.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="247.8" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (2 samples, 0.03%)</title><rect x="244.8" y="355.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="247.8" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$ValueIterator (2 samples, 0.03%)</title><rect x="244.8" y="339.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="247.8" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (2 samples, 0.03%)</title><rect x="245.3" y="371.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="248.3" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (2 samples, 0.03%)</title><rect x="245.3" y="355.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="248.3" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="245.3" y="339.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="248.3" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="245.3" y="323.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="248.3" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$103/582602737.get$Lambda (2 samples, 0.03%)</title><rect x="245.3" y="307.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="248.3" y="318.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$103 (2 samples, 0.03%)</title><rect x="245.3" y="291.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="248.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (4 samples, 0.05%)</title><rect x="245.6" y="371.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="248.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (3 samples, 0.04%)</title><rect x="245.7" y="355.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="248.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.04%)</title><rect x="245.7" y="339.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="248.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (3 samples, 0.04%)</title><rect x="245.7" y="323.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="248.7" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (3 samples, 0.04%)</title><rect x="245.7" y="307.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="248.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (3 samples, 0.04%)</title><rect x="245.7" y="291.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="248.7" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (3 samples, 0.04%)</title><rect x="245.7" y="275.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="248.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (3 samples, 0.04%)</title><rect x="245.7" y="259.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="248.7" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (3 samples, 0.04%)</title><rect x="245.7" y="243.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="248.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (3 samples, 0.04%)</title><rect x="245.7" y="227.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="248.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (3 samples, 0.04%)</title><rect x="245.7" y="211.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="248.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (3 samples, 0.04%)</title><rect x="245.7" y="195.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="248.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (3 samples, 0.04%)</title><rect x="245.7" y="179.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="248.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (3 samples, 0.04%)</title><rect x="245.7" y="163.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="248.7" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (3 samples, 0.04%)</title><rect x="245.7" y="147.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="248.7" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.04%)</title><rect x="245.7" y="131.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="248.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (7 samples, 0.10%)</title><rect x="246.2" y="371.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="249.2" y="382.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (3 samples, 0.04%)</title><rect x="246.5" y="355.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="249.5" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (3 samples, 0.04%)</title><rect x="246.5" y="339.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="249.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="246.5" y="323.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="249.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="246.5" y="307.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="249.5" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$89/1249014641.get$Lambda (2 samples, 0.03%)</title><rect x="246.5" y="291.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="249.5" y="302.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$89 (2 samples, 0.03%)</title><rect x="246.5" y="275.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="249.5" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (2 samples, 0.03%)</title><rect x="247.0" y="355.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="250.0" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (2 samples, 0.03%)</title><rect x="247.0" y="339.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="250.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (23 samples, 0.31%)</title><rect x="247.4" y="403.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="250.4" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (13 samples, 0.18%)</title><rect x="247.4" y="387.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="250.4" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (12 samples, 0.16%)</title><rect x="247.5" y="371.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="250.5" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (7 samples, 0.10%)</title><rect x="247.7" y="355.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="250.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (7 samples, 0.10%)</title><rect x="247.7" y="339.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="250.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (7 samples, 0.10%)</title><rect x="247.7" y="323.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="250.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (7 samples, 0.10%)</title><rect x="247.7" y="307.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="250.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.04%)</title><rect x="247.7" y="291.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="250.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (3 samples, 0.04%)</title><rect x="247.7" y="275.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="250.7" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (3 samples, 0.04%)</title><rect x="247.7" y="259.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="250.7" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (3 samples, 0.04%)</title><rect x="247.7" y="243.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="250.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (3 samples, 0.04%)</title><rect x="247.7" y="227.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="250.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (3 samples, 0.04%)</title><rect x="247.7" y="211.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="250.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (3 samples, 0.04%)</title><rect x="247.7" y="195.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="250.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (3 samples, 0.04%)</title><rect x="247.7" y="179.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="250.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (3 samples, 0.04%)</title><rect x="247.7" y="163.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="250.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2 samples, 0.03%)</title><rect x="247.8" y="147.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="250.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (2 samples, 0.03%)</title><rect x="247.8" y="131.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="250.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (2 samples, 0.03%)</title><rect x="247.8" y="115.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="250.8" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.03%)</title><rect x="247.8" y="99.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="250.8" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.03%)</title><rect x="247.8" y="83.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="250.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$125/991073477.apply (4 samples, 0.05%)</title><rect x="248.2" y="291.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="251.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (4 samples, 0.05%)</title><rect x="248.2" y="275.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="251.2" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (4 samples, 0.05%)</title><rect x="248.2" y="259.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="251.2" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (4 samples, 0.05%)</title><rect x="248.2" y="243.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="251.2" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.05%)</title><rect x="248.2" y="227.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="251.2" y="238.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (2 samples, 0.03%)</title><rect x="249.0" y="355.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="252.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (9 samples, 0.12%)</title><rect x="249.6" y="387.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="252.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (8 samples, 0.11%)</title><rect x="249.8" y="371.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="252.8" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (8 samples, 0.11%)</title><rect x="249.8" y="355.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="252.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (8 samples, 0.11%)</title><rect x="249.8" y="339.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="252.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (8 samples, 0.11%)</title><rect x="249.8" y="323.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="252.8" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (8 samples, 0.11%)</title><rect x="249.8" y="307.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="252.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (8 samples, 0.11%)</title><rect x="249.8" y="291.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="252.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (8 samples, 0.11%)</title><rect x="249.8" y="275.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="252.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.05%)</title><rect x="249.8" y="259.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="252.8" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (4 samples, 0.05%)</title><rect x="249.8" y="243.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="252.8" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (4 samples, 0.05%)</title><rect x="249.8" y="227.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="252.8" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (4 samples, 0.05%)</title><rect x="249.8" y="211.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="252.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (4 samples, 0.05%)</title><rect x="249.8" y="195.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="252.8" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (4 samples, 0.05%)</title><rect x="249.8" y="179.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="252.8" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (4 samples, 0.05%)</title><rect x="249.8" y="163.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="252.8" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (4 samples, 0.05%)</title><rect x="249.8" y="147.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="252.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (4 samples, 0.05%)</title><rect x="249.8" y="131.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="252.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.03%)</title><rect x="249.8" y="115.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="252.8" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.03%)</title><rect x="249.8" y="99.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="252.8" y="110.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (2 samples, 0.03%)</title><rect x="249.8" y="83.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="252.8" y="94.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2 samples, 0.03%)</title><rect x="250.1" y="115.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="253.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (2 samples, 0.03%)</title><rect x="250.1" y="99.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="253.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (2 samples, 0.03%)</title><rect x="250.1" y="83.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="253.1" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.03%)</title><rect x="250.1" y="67.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="253.1" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.03%)</title><rect x="250.1" y="51.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="253.1" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$125/991073477.apply (4 samples, 0.05%)</title><rect x="250.4" y="259.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="253.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (4 samples, 0.05%)</title><rect x="250.4" y="243.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="253.4" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (4 samples, 0.05%)</title><rect x="250.4" y="227.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="253.4" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (4 samples, 0.05%)</title><rect x="250.4" y="211.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="253.4" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.05%)</title><rect x="250.4" y="195.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="253.4" y="206.0"></text>
</g>
<g>
<title>[2020-highload-dht-thread-93 tid=30294] (480 samples, 6.55%)</title><rect x="251.2" y="531.0" width="77.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="254.2" y="542.0">[2020-hig..</text>
</g>
<g>
<title>java/lang/Thread.run (480 samples, 6.55%)</title><rect x="251.2" y="515.0" width="77.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="254.2" y="526.0">java/lang..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (480 samples, 6.55%)</title><rect x="251.2" y="499.0" width="77.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="254.2" y="510.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (480 samples, 6.55%)</title><rect x="251.2" y="483.0" width="77.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="254.2" y="494.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.03%)</title><rect x="251.2" y="467.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="254.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (2 samples, 0.03%)</title><rect x="251.2" y="451.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="254.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.03%)</title><rect x="251.2" y="435.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="254.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2 samples, 0.03%)</title><rect x="251.2" y="419.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="254.2" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2 samples, 0.03%)</title><rect x="251.2" y="403.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="254.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$75/1549034997.run (478 samples, 6.52%)</title><rect x="251.5" y="467.0" width="77.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="254.5" y="478.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$get$1 (478 samples, 6.52%)</title><rect x="251.5" y="451.0" width="77.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="254.5" y="462.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (13 samples, 0.18%)</title><rect x="251.5" y="435.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="254.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (13 samples, 0.18%)</title><rect x="251.5" y="419.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="254.5" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (13 samples, 0.18%)</title><rect x="251.5" y="403.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="254.5" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (13 samples, 0.18%)</title><rect x="251.5" y="387.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="254.5" y="398.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.18%)</title><rect x="251.5" y="371.0" width="2.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="254.5" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (11 samples, 0.15%)</title><rect x="253.6" y="435.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="256.6" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (11 samples, 0.15%)</title><rect x="253.6" y="419.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="256.6" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.15%)</title><rect x="253.6" y="403.0" width="1.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="256.6" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (22 samples, 0.30%)</title><rect x="255.4" y="435.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="258.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (22 samples, 0.30%)</title><rect x="255.4" y="419.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="258.4" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (16 samples, 0.22%)</title><rect x="255.4" y="403.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="258.4" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (16 samples, 0.22%)</title><rect x="255.4" y="387.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="258.4" y="398.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.22%)</title><rect x="255.4" y="371.0" width="2.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="258.4" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.08%)</title><rect x="258.0" y="403.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="261.0" y="414.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (6 samples, 0.08%)</title><rect x="258.0" y="387.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="261.0" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (25 samples, 0.34%)</title><rect x="258.9" y="435.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="261.9" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (4 samples, 0.05%)</title><rect x="258.9" y="419.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="261.9" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (21 samples, 0.29%)</title><rect x="259.6" y="419.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="262.6" y="430.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.18%)</title><rect x="259.6" y="403.0" width="2.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="262.6" y="414.0"></text>
</g>
<g>
<title>java.lang.String[] (3 samples, 0.04%)</title><rect x="261.7" y="403.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="264.7" y="414.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.07%)</title><rect x="262.2" y="403.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="265.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (399 samples, 5.44%)</title><rect x="263.0" y="435.0" width="64.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="266.0" y="446.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (51 samples, 0.70%)</title><rect x="263.0" y="419.0" width="8.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="266.0" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (51 samples, 0.70%)</title><rect x="263.0" y="403.0" width="8.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="266.0" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (51 samples, 0.70%)</title><rect x="263.0" y="387.0" width="8.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="266.0" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (51 samples, 0.70%)</title><rect x="263.0" y="371.0" width="8.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="266.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (51 samples, 0.70%)</title><rect x="263.0" y="355.0" width="8.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="266.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (30 samples, 0.41%)</title><rect x="263.0" y="339.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="266.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (30 samples, 0.41%)</title><rect x="263.0" y="323.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="266.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (30 samples, 0.41%)</title><rect x="263.0" y="307.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="266.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (30 samples, 0.41%)</title><rect x="263.0" y="291.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="266.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (30 samples, 0.41%)</title><rect x="263.0" y="275.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="266.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (30 samples, 0.41%)</title><rect x="263.0" y="259.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="266.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (12 samples, 0.16%)</title><rect x="263.0" y="243.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="266.0" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (12 samples, 0.16%)</title><rect x="263.0" y="227.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="266.0" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (12 samples, 0.16%)</title><rect x="263.0" y="211.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="266.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (12 samples, 0.16%)</title><rect x="263.0" y="195.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="266.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (12 samples, 0.16%)</title><rect x="263.0" y="179.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="266.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (12 samples, 0.16%)</title><rect x="263.0" y="163.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="266.0" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (12 samples, 0.16%)</title><rect x="263.0" y="147.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="266.0" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (12 samples, 0.16%)</title><rect x="263.0" y="131.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="266.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (12 samples, 0.16%)</title><rect x="263.0" y="115.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="266.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (6 samples, 0.08%)</title><rect x="263.0" y="99.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="266.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (6 samples, 0.08%)</title><rect x="263.0" y="83.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="266.0" y="94.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (6 samples, 0.08%)</title><rect x="263.0" y="67.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="266.0" y="78.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (6 samples, 0.08%)</title><rect x="263.9" y="99.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="266.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (6 samples, 0.08%)</title><rect x="263.9" y="83.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="266.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (6 samples, 0.08%)</title><rect x="263.9" y="67.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="266.9" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (5 samples, 0.07%)</title><rect x="263.9" y="51.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="266.9" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.07%)</title><rect x="263.9" y="35.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="266.9" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$125/991073477.apply (18 samples, 0.25%)</title><rect x="264.9" y="243.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="267.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (18 samples, 0.25%)</title><rect x="264.9" y="227.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="267.9" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (18 samples, 0.25%)</title><rect x="264.9" y="211.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="267.9" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (18 samples, 0.25%)</title><rect x="264.9" y="195.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="267.9" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (18 samples, 0.25%)</title><rect x="264.9" y="179.0" width="2.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="267.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$177/786148505.apply (21 samples, 0.29%)</title><rect x="267.8" y="339.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="270.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (21 samples, 0.29%)</title><rect x="267.8" y="323.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="270.8" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (21 samples, 0.29%)</title><rect x="267.8" y="307.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="270.8" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (21 samples, 0.29%)</title><rect x="267.8" y="291.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="270.8" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (21 samples, 0.29%)</title><rect x="267.8" y="275.0" width="3.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="270.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (21 samples, 0.29%)</title><rect x="271.2" y="419.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="274.2" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (21 samples, 0.29%)</title><rect x="271.2" y="403.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="274.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$191/1599205169.apply (21 samples, 0.29%)</title><rect x="271.2" y="387.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="274.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$3 (21 samples, 0.29%)</title><rect x="271.2" y="371.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="274.2" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (12 samples, 0.16%)</title><rect x="271.2" y="355.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="274.2" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.16%)</title><rect x="271.2" y="339.0" width="1.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="274.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.of (2 samples, 0.03%)</title><rect x="273.1" y="355.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="276.1" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.Record (2 samples, 0.03%)</title><rect x="273.1" y="339.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="276.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (7 samples, 0.10%)</title><rect x="273.4" y="355.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="276.4" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (7 samples, 0.10%)</title><rect x="273.4" y="339.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="276.4" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (7 samples, 0.10%)</title><rect x="273.4" y="323.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="276.4" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.10%)</title><rect x="273.4" y="307.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="276.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (8 samples, 0.11%)</title><rect x="274.5" y="419.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="277.5" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (8 samples, 0.11%)</title><rect x="274.5" y="403.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="277.5" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (8 samples, 0.11%)</title><rect x="274.5" y="387.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="277.5" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.11%)</title><rect x="274.5" y="371.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="277.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (14 samples, 0.19%)</title><rect x="275.8" y="419.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="278.8" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (14 samples, 0.19%)</title><rect x="275.8" y="403.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="278.8" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (14 samples, 0.19%)</title><rect x="275.8" y="387.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="278.8" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (14 samples, 0.19%)</title><rect x="275.8" y="371.0" width="2.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="278.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (305 samples, 4.16%)</title><rect x="278.1" y="419.0" width="49.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="281.1" y="430.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (3 samples, 0.04%)</title><rect x="278.1" y="403.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="281.1" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (3 samples, 0.04%)</title><rect x="278.1" y="387.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="281.1" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (3 samples, 0.04%)</title><rect x="278.6" y="403.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="281.6" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (3 samples, 0.04%)</title><rect x="278.6" y="387.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="281.6" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (12 samples, 0.16%)</title><rect x="279.1" y="403.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="282.1" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (12 samples, 0.16%)</title><rect x="279.1" y="387.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="282.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (187 samples, 2.55%)</title><rect x="281.0" y="403.0" width="30.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="284.0" y="414.0">ru..</text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.04%)</title><rect x="281.0" y="387.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="284.0" y="398.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (3 samples, 0.04%)</title><rect x="281.5" y="387.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="284.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (3 samples, 0.04%)</title><rect x="281.5" y="371.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="284.5" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (3 samples, 0.04%)</title><rect x="281.5" y="355.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="284.5" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (4 samples, 0.05%)</title><rect x="281.9" y="387.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="284.9" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.05%)</title><rect x="281.9" y="371.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="284.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (177 samples, 2.41%)</title><rect x="282.6" y="387.0" width="28.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="285.6" y="398.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (8 samples, 0.11%)</title><rect x="282.6" y="371.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="285.6" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (8 samples, 0.11%)</title><rect x="282.6" y="355.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="285.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (69 samples, 0.94%)</title><rect x="283.9" y="371.0" width="11.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="286.9" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (3 samples, 0.04%)</title><rect x="283.9" y="355.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="286.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (66 samples, 0.90%)</title><rect x="284.4" y="355.0" width="10.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="287.4" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (5 samples, 0.07%)</title><rect x="284.4" y="339.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="287.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (4 samples, 0.05%)</title><rect x="285.2" y="339.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="288.2" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (4 samples, 0.05%)</title><rect x="285.2" y="323.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="288.2" y="334.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (10 samples, 0.14%)</title><rect x="285.8" y="339.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="288.8" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (7 samples, 0.10%)</title><rect x="287.4" y="339.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="290.4" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.10%)</title><rect x="287.4" y="323.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="290.4" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (40 samples, 0.55%)</title><rect x="288.5" y="339.0" width="6.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="291.5" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (40 samples, 0.55%)</title><rect x="288.5" y="323.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="291.5" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (40 samples, 0.55%)</title><rect x="288.5" y="307.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="291.5" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (11 samples, 0.15%)</title><rect x="288.5" y="291.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="291.5" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (11 samples, 0.15%)</title><rect x="288.5" y="275.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="291.5" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (11 samples, 0.15%)</title><rect x="288.5" y="259.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="291.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (11 samples, 0.15%)</title><rect x="288.5" y="243.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="291.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.05%)</title><rect x="288.5" y="227.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="291.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.05%)</title><rect x="288.5" y="211.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="291.5" y="222.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (4 samples, 0.05%)</title><rect x="288.5" y="195.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="291.5" y="206.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (7 samples, 0.10%)</title><rect x="289.2" y="227.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="292.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (7 samples, 0.10%)</title><rect x="289.2" y="211.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="292.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (7 samples, 0.10%)</title><rect x="289.2" y="195.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="292.2" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (5 samples, 0.07%)</title><rect x="289.2" y="179.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="292.2" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.07%)</title><rect x="289.2" y="163.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="292.2" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (2 samples, 0.03%)</title><rect x="290.0" y="179.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="293.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (29 samples, 0.40%)</title><rect x="290.3" y="291.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="293.3" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (3 samples, 0.04%)</title><rect x="290.3" y="275.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="293.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.07%)</title><rect x="290.8" y="275.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="293.8" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.07%)</title><rect x="290.8" y="259.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="293.8" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.get$Lambda (4 samples, 0.05%)</title><rect x="291.0" y="243.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="294.0" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$117 (4 samples, 0.05%)</title><rect x="291.0" y="227.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="294.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (8 samples, 0.11%)</title><rect x="291.6" y="275.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="294.6" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (8 samples, 0.11%)</title><rect x="291.6" y="259.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="294.6" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (8 samples, 0.11%)</title><rect x="291.6" y="243.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="294.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (13 samples, 0.18%)</title><rect x="292.9" y="275.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="295.9" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (13 samples, 0.18%)</title><rect x="292.9" y="259.0" width="2.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="295.9" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.05%)</title><rect x="295.0" y="371.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="298.0" y="382.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (9 samples, 0.12%)</title><rect x="295.6" y="371.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="298.6" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (9 samples, 0.12%)</title><rect x="295.6" y="355.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="298.6" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$ValueIterator (9 samples, 0.12%)</title><rect x="295.6" y="339.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="298.6" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (5 samples, 0.07%)</title><rect x="297.1" y="371.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="300.1" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.07%)</title><rect x="297.1" y="355.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="300.1" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (4 samples, 0.05%)</title><rect x="297.9" y="371.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="300.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.05%)</title><rect x="297.9" y="355.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="300.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.05%)</title><rect x="297.9" y="339.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="300.9" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$95/683319954.get$Lambda (4 samples, 0.05%)</title><rect x="297.9" y="323.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="300.9" y="334.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$95 (4 samples, 0.05%)</title><rect x="297.9" y="307.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="300.9" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (8 samples, 0.11%)</title><rect x="298.5" y="371.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="301.5" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (3 samples, 0.04%)</title><rect x="298.5" y="355.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="301.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="298.5" y="339.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="301.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="298.5" y="323.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="301.5" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$95/683319954.get$Lambda (3 samples, 0.04%)</title><rect x="298.5" y="307.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="301.5" y="318.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$95 (3 samples, 0.04%)</title><rect x="298.5" y="291.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="301.5" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (5 samples, 0.07%)</title><rect x="299.0" y="355.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="302.0" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.07%)</title><rect x="299.0" y="339.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="302.0" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.07%)</title><rect x="299.0" y="323.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="302.0" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$103/582602737.get$Lambda (5 samples, 0.07%)</title><rect x="299.0" y="307.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="302.0" y="318.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$103 (5 samples, 0.07%)</title><rect x="299.0" y="291.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="302.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (20 samples, 0.27%)</title><rect x="300.0" y="371.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="303.0" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (2 samples, 0.03%)</title><rect x="300.0" y="355.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="303.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (18 samples, 0.25%)</title><rect x="300.3" y="355.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="303.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (18 samples, 0.25%)</title><rect x="300.3" y="339.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="303.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (18 samples, 0.25%)</title><rect x="300.3" y="323.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="303.3" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (18 samples, 0.25%)</title><rect x="300.3" y="307.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="303.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (18 samples, 0.25%)</title><rect x="300.3" y="291.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="303.3" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (18 samples, 0.25%)</title><rect x="300.3" y="275.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="303.3" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (18 samples, 0.25%)</title><rect x="300.3" y="259.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="303.3" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (18 samples, 0.25%)</title><rect x="300.3" y="243.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="303.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (18 samples, 0.25%)</title><rect x="300.3" y="227.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="303.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (18 samples, 0.25%)</title><rect x="300.3" y="211.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="303.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (6 samples, 0.08%)</title><rect x="300.3" y="195.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="303.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (6 samples, 0.08%)</title><rect x="300.3" y="179.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="303.3" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (6 samples, 0.08%)</title><rect x="300.3" y="163.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="303.3" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (12 samples, 0.16%)</title><rect x="301.3" y="195.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="304.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (12 samples, 0.16%)</title><rect x="301.3" y="179.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="304.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (12 samples, 0.16%)</title><rect x="301.3" y="163.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="304.3" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (8 samples, 0.11%)</title><rect x="301.3" y="147.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="304.3" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.11%)</title><rect x="301.3" y="131.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="304.3" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (4 samples, 0.05%)</title><rect x="302.5" y="147.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="305.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (49 samples, 0.67%)</title><rect x="303.2" y="371.0" width="7.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="306.2" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (11 samples, 0.15%)</title><rect x="303.2" y="355.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="306.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (3 samples, 0.04%)</title><rect x="303.2" y="339.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="306.2" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (3 samples, 0.04%)</title><rect x="303.2" y="323.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="306.2" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (8 samples, 0.11%)</title><rect x="303.7" y="339.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="306.7" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (8 samples, 0.11%)</title><rect x="303.7" y="323.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="306.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (6 samples, 0.08%)</title><rect x="305.0" y="355.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="308.0" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (6 samples, 0.08%)</title><rect x="305.0" y="339.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="308.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (7 samples, 0.10%)</title><rect x="305.9" y="355.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="308.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (7 samples, 0.10%)</title><rect x="305.9" y="339.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="308.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (7 samples, 0.10%)</title><rect x="305.9" y="323.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="308.9" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (7 samples, 0.10%)</title><rect x="305.9" y="307.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="308.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (17 samples, 0.23%)</title><rect x="307.1" y="355.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="310.1" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (16 samples, 0.22%)</title><rect x="307.2" y="339.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="310.2" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="307.2" y="323.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="310.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="307.2" y="307.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="310.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$89/1249014641.get$Lambda (2 samples, 0.03%)</title><rect x="307.2" y="291.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="310.2" y="302.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$89 (2 samples, 0.03%)</title><rect x="307.2" y="275.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="310.2" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (14 samples, 0.19%)</title><rect x="307.5" y="323.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="310.5" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (14 samples, 0.19%)</title><rect x="307.5" y="307.0" width="2.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="310.5" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (8 samples, 0.11%)</title><rect x="309.8" y="355.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="312.8" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (8 samples, 0.11%)</title><rect x="309.8" y="339.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="312.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (100 samples, 1.36%)</title><rect x="311.1" y="403.0" width="16.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="314.1" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (59 samples, 0.80%)</title><rect x="311.1" y="387.0" width="9.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="314.1" y="398.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (5 samples, 0.07%)</title><rect x="311.1" y="371.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="314.1" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (54 samples, 0.74%)</title><rect x="311.9" y="371.0" width="8.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="314.9" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (2 samples, 0.03%)</title><rect x="311.9" y="355.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="314.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (32 samples, 0.44%)</title><rect x="312.2" y="355.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="315.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (32 samples, 0.44%)</title><rect x="312.2" y="339.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="315.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (32 samples, 0.44%)</title><rect x="312.2" y="323.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="315.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (32 samples, 0.44%)</title><rect x="312.2" y="307.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="315.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (20 samples, 0.27%)</title><rect x="312.2" y="291.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="315.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (20 samples, 0.27%)</title><rect x="312.2" y="275.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="315.2" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (20 samples, 0.27%)</title><rect x="312.2" y="259.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="315.2" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (20 samples, 0.27%)</title><rect x="312.2" y="243.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="315.2" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (20 samples, 0.27%)</title><rect x="312.2" y="227.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="315.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (20 samples, 0.27%)</title><rect x="312.2" y="211.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="315.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (20 samples, 0.27%)</title><rect x="312.2" y="195.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="315.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (20 samples, 0.27%)</title><rect x="312.2" y="179.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="315.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (20 samples, 0.27%)</title><rect x="312.2" y="163.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="315.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (6 samples, 0.08%)</title><rect x="312.2" y="147.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="315.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (6 samples, 0.08%)</title><rect x="312.2" y="131.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="315.2" y="142.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (6 samples, 0.08%)</title><rect x="312.2" y="115.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="315.2" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (14 samples, 0.19%)</title><rect x="313.2" y="147.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="316.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (14 samples, 0.19%)</title><rect x="313.2" y="131.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="316.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (14 samples, 0.19%)</title><rect x="313.2" y="115.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="316.2" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (7 samples, 0.10%)</title><rect x="313.2" y="99.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="316.2" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.10%)</title><rect x="313.2" y="83.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="316.2" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (7 samples, 0.10%)</title><rect x="314.3" y="99.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="317.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$125/991073477.apply (12 samples, 0.16%)</title><rect x="315.4" y="291.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="318.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (12 samples, 0.16%)</title><rect x="315.4" y="275.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="318.4" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (12 samples, 0.16%)</title><rect x="315.4" y="259.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="318.4" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (12 samples, 0.16%)</title><rect x="315.4" y="243.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="318.4" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.16%)</title><rect x="315.4" y="227.0" width="2.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="318.4" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (8 samples, 0.11%)</title><rect x="317.4" y="355.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="320.4" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (8 samples, 0.11%)</title><rect x="317.4" y="339.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="320.4" y="350.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (10 samples, 0.14%)</title><rect x="318.6" y="355.0" width="1.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="321.6" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (2 samples, 0.03%)</title><rect x="320.2" y="355.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="323.2" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="320.2" y="339.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="323.2" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (4 samples, 0.05%)</title><rect x="320.6" y="387.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="323.6" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.05%)</title><rect x="320.6" y="371.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="323.6" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.05%)</title><rect x="320.6" y="355.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="323.6" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$95/683319954.get$Lambda (4 samples, 0.05%)</title><rect x="320.6" y="339.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="323.6" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$95 (4 samples, 0.05%)</title><rect x="320.6" y="323.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="323.6" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (8 samples, 0.11%)</title><rect x="321.2" y="387.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="324.2" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (2 samples, 0.03%)</title><rect x="321.2" y="371.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="324.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="321.2" y="355.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="324.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="321.2" y="339.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="324.2" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$95/683319954.get$Lambda (2 samples, 0.03%)</title><rect x="321.2" y="323.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="324.2" y="334.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$95 (2 samples, 0.03%)</title><rect x="321.2" y="307.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="324.2" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (6 samples, 0.08%)</title><rect x="321.5" y="371.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="324.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.08%)</title><rect x="321.5" y="355.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="324.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.08%)</title><rect x="321.5" y="339.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="324.5" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$103/582602737.get$Lambda (6 samples, 0.08%)</title><rect x="321.5" y="323.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="324.5" y="334.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$103 (6 samples, 0.08%)</title><rect x="321.5" y="307.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="324.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (29 samples, 0.40%)</title><rect x="322.5" y="387.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="325.5" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (3 samples, 0.04%)</title><rect x="322.5" y="371.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="325.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (26 samples, 0.35%)</title><rect x="323.0" y="371.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="326.0" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (26 samples, 0.35%)</title><rect x="323.0" y="355.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="326.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (26 samples, 0.35%)</title><rect x="323.0" y="339.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="326.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (26 samples, 0.35%)</title><rect x="323.0" y="323.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="326.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (26 samples, 0.35%)</title><rect x="323.0" y="307.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="326.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (26 samples, 0.35%)</title><rect x="323.0" y="291.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="326.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (26 samples, 0.35%)</title><rect x="323.0" y="275.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="326.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (12 samples, 0.16%)</title><rect x="323.0" y="259.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="326.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (12 samples, 0.16%)</title><rect x="323.0" y="243.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="326.0" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (12 samples, 0.16%)</title><rect x="323.0" y="227.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="326.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (12 samples, 0.16%)</title><rect x="323.0" y="211.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="326.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (12 samples, 0.16%)</title><rect x="323.0" y="195.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="326.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (12 samples, 0.16%)</title><rect x="323.0" y="179.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="326.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (12 samples, 0.16%)</title><rect x="323.0" y="163.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="326.0" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (12 samples, 0.16%)</title><rect x="323.0" y="147.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="326.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (12 samples, 0.16%)</title><rect x="323.0" y="131.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="326.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.05%)</title><rect x="323.0" y="115.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="326.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.05%)</title><rect x="323.0" y="99.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="326.0" y="110.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (4 samples, 0.05%)</title><rect x="323.0" y="83.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="326.0" y="94.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (8 samples, 0.11%)</title><rect x="323.6" y="115.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="326.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (8 samples, 0.11%)</title><rect x="323.6" y="99.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="326.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (8 samples, 0.11%)</title><rect x="323.6" y="83.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="326.6" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (4 samples, 0.05%)</title><rect x="323.6" y="67.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="326.6" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.05%)</title><rect x="323.6" y="51.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="326.6" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (4 samples, 0.05%)</title><rect x="324.3" y="67.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="327.3" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$125/991073477.apply (14 samples, 0.19%)</title><rect x="324.9" y="259.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="327.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (14 samples, 0.19%)</title><rect x="324.9" y="243.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="327.9" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (14 samples, 0.19%)</title><rect x="324.9" y="227.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="327.9" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (14 samples, 0.19%)</title><rect x="324.9" y="211.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="327.9" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (14 samples, 0.19%)</title><rect x="324.9" y="195.0" width="2.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="327.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.getBytesFromByteBuffer (8 samples, 0.11%)</title><rect x="327.2" y="435.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="330.2" y="446.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.11%)</title><rect x="327.2" y="419.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="330.2" y="430.0"></text>
</g>
<g>
<title>[2020-highload-dht-thread-94 tid=30292] (461 samples, 6.29%)</title><rect x="328.5" y="531.0" width="74.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="331.5" y="542.0">[2020-hi..</text>
</g>
<g>
<title>java/lang/Thread.run (461 samples, 6.29%)</title><rect x="328.5" y="515.0" width="74.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="331.5" y="526.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (461 samples, 6.29%)</title><rect x="328.5" y="499.0" width="74.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="331.5" y="510.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (461 samples, 6.29%)</title><rect x="328.5" y="483.0" width="74.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="331.5" y="494.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (8 samples, 0.11%)</title><rect x="328.5" y="467.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="331.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (8 samples, 0.11%)</title><rect x="328.5" y="451.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="331.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (7 samples, 0.10%)</title><rect x="328.5" y="435.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="331.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (7 samples, 0.10%)</title><rect x="328.5" y="419.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="331.5" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (7 samples, 0.10%)</title><rect x="328.5" y="403.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="331.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$75/1549034997.run (453 samples, 6.18%)</title><rect x="329.7" y="467.0" width="72.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="332.7" y="478.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$get$1 (453 samples, 6.18%)</title><rect x="329.7" y="451.0" width="72.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="332.7" y="462.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (10 samples, 0.14%)</title><rect x="329.7" y="435.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="332.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (10 samples, 0.14%)</title><rect x="329.7" y="419.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="332.7" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (10 samples, 0.14%)</title><rect x="329.7" y="403.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="332.7" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.14%)</title><rect x="329.7" y="387.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="332.7" y="398.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.14%)</title><rect x="329.7" y="371.0" width="1.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="332.7" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.08%)</title><rect x="331.4" y="435.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="334.4" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.08%)</title><rect x="331.4" y="419.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="334.4" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.08%)</title><rect x="331.4" y="403.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="334.4" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (17 samples, 0.23%)</title><rect x="332.3" y="435.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="335.3" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (17 samples, 0.23%)</title><rect x="332.3" y="419.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="335.3" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (14 samples, 0.19%)</title><rect x="332.3" y="403.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="335.3" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (14 samples, 0.19%)</title><rect x="332.3" y="387.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="335.3" y="398.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.19%)</title><rect x="332.3" y="371.0" width="2.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="335.3" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.04%)</title><rect x="334.6" y="403.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="337.6" y="414.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (3 samples, 0.04%)</title><rect x="334.6" y="387.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="337.6" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (27 samples, 0.37%)</title><rect x="335.1" y="435.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="338.1" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (6 samples, 0.08%)</title><rect x="335.1" y="419.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="338.1" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (21 samples, 0.29%)</title><rect x="336.0" y="419.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="339.0" y="430.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.11%)</title><rect x="336.0" y="403.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="339.0" y="414.0"></text>
</g>
<g>
<title>java.lang.String[] (8 samples, 0.11%)</title><rect x="337.3" y="403.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="340.3" y="414.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.07%)</title><rect x="338.6" y="403.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="341.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (385 samples, 5.25%)</title><rect x="339.4" y="435.0" width="61.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="342.4" y="446.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (40 samples, 0.55%)</title><rect x="339.4" y="419.0" width="6.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="342.4" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (40 samples, 0.55%)</title><rect x="339.4" y="403.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="342.4" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (40 samples, 0.55%)</title><rect x="339.4" y="387.0" width="6.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="342.4" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (40 samples, 0.55%)</title><rect x="339.4" y="371.0" width="6.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="342.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (40 samples, 0.55%)</title><rect x="339.4" y="355.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="342.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (25 samples, 0.34%)</title><rect x="339.4" y="339.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="342.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (25 samples, 0.34%)</title><rect x="339.4" y="323.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="342.4" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (25 samples, 0.34%)</title><rect x="339.4" y="307.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="342.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (25 samples, 0.34%)</title><rect x="339.4" y="291.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="342.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (25 samples, 0.34%)</title><rect x="339.4" y="275.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="342.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (25 samples, 0.34%)</title><rect x="339.4" y="259.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="342.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (12 samples, 0.16%)</title><rect x="339.4" y="243.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="342.4" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (12 samples, 0.16%)</title><rect x="339.4" y="227.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="342.4" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (12 samples, 0.16%)</title><rect x="339.4" y="211.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="342.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (12 samples, 0.16%)</title><rect x="339.4" y="195.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="342.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (12 samples, 0.16%)</title><rect x="339.4" y="179.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="342.4" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (12 samples, 0.16%)</title><rect x="339.4" y="163.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="342.4" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (12 samples, 0.16%)</title><rect x="339.4" y="147.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="342.4" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (12 samples, 0.16%)</title><rect x="339.4" y="131.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="342.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (12 samples, 0.16%)</title><rect x="339.4" y="115.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="342.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.04%)</title><rect x="339.4" y="99.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="342.4" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.04%)</title><rect x="339.4" y="83.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="342.4" y="94.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (3 samples, 0.04%)</title><rect x="339.4" y="67.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="342.4" y="78.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (9 samples, 0.12%)</title><rect x="339.9" y="99.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="342.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (9 samples, 0.12%)</title><rect x="339.9" y="83.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="342.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (9 samples, 0.12%)</title><rect x="339.9" y="67.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="342.9" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (6 samples, 0.08%)</title><rect x="339.9" y="51.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="342.9" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.08%)</title><rect x="339.9" y="35.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="342.9" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (3 samples, 0.04%)</title><rect x="340.8" y="51.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="343.8" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$125/991073477.apply (13 samples, 0.18%)</title><rect x="341.3" y="243.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="344.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (13 samples, 0.18%)</title><rect x="341.3" y="227.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="344.3" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (13 samples, 0.18%)</title><rect x="341.3" y="211.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="344.3" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (13 samples, 0.18%)</title><rect x="341.3" y="195.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="344.3" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (13 samples, 0.18%)</title><rect x="341.3" y="179.0" width="2.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="344.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$177/786148505.apply (15 samples, 0.20%)</title><rect x="343.4" y="339.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="346.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (15 samples, 0.20%)</title><rect x="343.4" y="323.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="346.4" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (15 samples, 0.20%)</title><rect x="343.4" y="307.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="346.4" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (15 samples, 0.20%)</title><rect x="343.4" y="291.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="346.4" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (15 samples, 0.20%)</title><rect x="343.4" y="275.0" width="2.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="346.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (21 samples, 0.29%)</title><rect x="345.8" y="419.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="348.8" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (21 samples, 0.29%)</title><rect x="345.8" y="403.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="348.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$191/1599205169.apply (21 samples, 0.29%)</title><rect x="345.8" y="387.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="348.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$3 (21 samples, 0.29%)</title><rect x="345.8" y="371.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="348.8" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (12 samples, 0.16%)</title><rect x="345.8" y="355.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="348.8" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.16%)</title><rect x="345.8" y="339.0" width="2.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="348.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.of (5 samples, 0.07%)</title><rect x="347.8" y="355.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="350.8" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.Record (5 samples, 0.07%)</title><rect x="347.8" y="339.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="350.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (4 samples, 0.05%)</title><rect x="348.6" y="355.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="351.6" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (4 samples, 0.05%)</title><rect x="348.6" y="339.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="351.6" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (4 samples, 0.05%)</title><rect x="348.6" y="323.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="351.6" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.05%)</title><rect x="348.6" y="307.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="351.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (8 samples, 0.11%)</title><rect x="349.2" y="419.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="352.2" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (8 samples, 0.11%)</title><rect x="349.2" y="403.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="352.2" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (8 samples, 0.11%)</title><rect x="349.2" y="387.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="352.2" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.11%)</title><rect x="349.2" y="371.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="352.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (10 samples, 0.14%)</title><rect x="350.5" y="419.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="353.5" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (10 samples, 0.14%)</title><rect x="350.5" y="403.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="353.5" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (10 samples, 0.14%)</title><rect x="350.5" y="387.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="353.5" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (10 samples, 0.14%)</title><rect x="350.5" y="371.0" width="1.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="353.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (306 samples, 4.17%)</title><rect x="352.1" y="419.0" width="49.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="355.1" y="430.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (4 samples, 0.05%)</title><rect x="352.1" y="403.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="355.1" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (4 samples, 0.05%)</title><rect x="352.1" y="387.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="355.1" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (2 samples, 0.03%)</title><rect x="352.8" y="403.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="355.8" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (2 samples, 0.03%)</title><rect x="352.8" y="387.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="355.8" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (12 samples, 0.16%)</title><rect x="353.1" y="403.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="356.1" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (12 samples, 0.16%)</title><rect x="353.1" y="387.0" width="1.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="356.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (185 samples, 2.52%)</title><rect x="355.0" y="403.0" width="29.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="358.0" y="414.0">ru..</text>
</g>
<g>
<title>java.util.ArrayList (7 samples, 0.10%)</title><rect x="355.0" y="387.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="358.0" y="398.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (6 samples, 0.08%)</title><rect x="356.1" y="387.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="359.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (6 samples, 0.08%)</title><rect x="356.1" y="371.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="359.1" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (6 samples, 0.08%)</title><rect x="356.1" y="355.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="359.1" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.03%)</title><rect x="357.1" y="387.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="360.1" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="357.1" y="371.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="360.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (170 samples, 2.32%)</title><rect x="357.4" y="387.0" width="27.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="360.4" y="398.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (3 samples, 0.04%)</title><rect x="357.4" y="371.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="360.4" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (3 samples, 0.04%)</title><rect x="357.4" y="355.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="360.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (69 samples, 0.94%)</title><rect x="357.9" y="371.0" width="11.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="360.9" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (2 samples, 0.03%)</title><rect x="357.9" y="355.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="360.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (67 samples, 0.91%)</title><rect x="358.2" y="355.0" width="10.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="361.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (6 samples, 0.08%)</title><rect x="358.4" y="339.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="361.4" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (6 samples, 0.08%)</title><rect x="358.4" y="323.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="361.4" y="334.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (2 samples, 0.03%)</title><rect x="359.3" y="339.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="362.3" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (3 samples, 0.04%)</title><rect x="359.7" y="339.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="362.7" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.04%)</title><rect x="359.7" y="323.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="362.7" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (55 samples, 0.75%)</title><rect x="360.2" y="339.0" width="8.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="363.2" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (55 samples, 0.75%)</title><rect x="360.2" y="323.0" width="8.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="363.2" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (55 samples, 0.75%)</title><rect x="360.2" y="307.0" width="8.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="363.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (15 samples, 0.20%)</title><rect x="360.2" y="291.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="363.2" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (15 samples, 0.20%)</title><rect x="360.2" y="275.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="363.2" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (15 samples, 0.20%)</title><rect x="360.2" y="259.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="363.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (15 samples, 0.20%)</title><rect x="360.2" y="243.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="363.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.03%)</title><rect x="360.2" y="227.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="363.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.03%)</title><rect x="360.2" y="211.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="363.2" y="222.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (2 samples, 0.03%)</title><rect x="360.2" y="195.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="363.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (13 samples, 0.18%)</title><rect x="360.5" y="227.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="363.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (13 samples, 0.18%)</title><rect x="360.5" y="211.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="363.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (13 samples, 0.18%)</title><rect x="360.5" y="195.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="363.5" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (12 samples, 0.16%)</title><rect x="360.5" y="179.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="363.5" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.16%)</title><rect x="360.5" y="163.0" width="1.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="363.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (40 samples, 0.55%)</title><rect x="362.6" y="291.0" width="6.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="365.6" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (8 samples, 0.11%)</title><rect x="362.6" y="275.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="365.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.08%)</title><rect x="363.9" y="275.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="366.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.08%)</title><rect x="363.9" y="259.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="366.9" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$111/1835775400.get$Lambda (4 samples, 0.05%)</title><rect x="363.9" y="243.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="366.9" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$111 (4 samples, 0.05%)</title><rect x="363.9" y="227.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="366.9" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.get$Lambda (2 samples, 0.03%)</title><rect x="364.5" y="243.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="367.5" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$117 (2 samples, 0.03%)</title><rect x="364.5" y="227.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="367.5" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (4 samples, 0.05%)</title><rect x="364.8" y="275.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="367.8" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (4 samples, 0.05%)</title><rect x="364.8" y="259.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="367.8" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (4 samples, 0.05%)</title><rect x="364.8" y="243.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="367.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (22 samples, 0.30%)</title><rect x="365.5" y="275.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="368.5" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (22 samples, 0.30%)</title><rect x="365.5" y="259.0" width="3.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="368.5" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (7 samples, 0.10%)</title><rect x="369.0" y="371.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="372.0" y="382.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (3 samples, 0.04%)</title><rect x="370.1" y="371.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="373.1" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (3 samples, 0.04%)</title><rect x="370.1" y="355.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="373.1" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$ValueIterator (3 samples, 0.04%)</title><rect x="370.1" y="339.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="373.1" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (7 samples, 0.10%)</title><rect x="370.6" y="371.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="373.6" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.10%)</title><rect x="370.6" y="355.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="373.6" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (7 samples, 0.10%)</title><rect x="371.7" y="371.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="374.7" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (2 samples, 0.03%)</title><rect x="371.7" y="355.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="374.7" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="371.7" y="339.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="374.7" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="371.7" y="323.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="374.7" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$95/683319954.get$Lambda (2 samples, 0.03%)</title><rect x="371.7" y="307.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="374.7" y="318.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$95 (2 samples, 0.03%)</title><rect x="371.7" y="291.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="374.7" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (5 samples, 0.07%)</title><rect x="372.1" y="355.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="375.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.07%)</title><rect x="372.1" y="339.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="375.1" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.07%)</title><rect x="372.1" y="323.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="375.1" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$103/582602737.get$Lambda (5 samples, 0.07%)</title><rect x="372.1" y="307.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="375.1" y="318.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$103 (5 samples, 0.07%)</title><rect x="372.1" y="291.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="375.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (19 samples, 0.26%)</title><rect x="372.9" y="371.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="375.9" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (2 samples, 0.03%)</title><rect x="372.9" y="355.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="375.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (17 samples, 0.23%)</title><rect x="373.2" y="355.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="376.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (17 samples, 0.23%)</title><rect x="373.2" y="339.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="376.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (17 samples, 0.23%)</title><rect x="373.2" y="323.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="376.2" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (17 samples, 0.23%)</title><rect x="373.2" y="307.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="376.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (17 samples, 0.23%)</title><rect x="373.2" y="291.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="376.2" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (17 samples, 0.23%)</title><rect x="373.2" y="275.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="376.2" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (17 samples, 0.23%)</title><rect x="373.2" y="259.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="376.2" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (17 samples, 0.23%)</title><rect x="373.2" y="243.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="376.2" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (17 samples, 0.23%)</title><rect x="373.2" y="227.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="376.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (17 samples, 0.23%)</title><rect x="373.2" y="211.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="376.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.05%)</title><rect x="373.2" y="195.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="376.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.05%)</title><rect x="373.2" y="179.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="376.2" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (4 samples, 0.05%)</title><rect x="373.2" y="163.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="376.2" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (13 samples, 0.18%)</title><rect x="373.8" y="195.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="376.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (13 samples, 0.18%)</title><rect x="373.8" y="179.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="376.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (13 samples, 0.18%)</title><rect x="373.8" y="163.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="376.8" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (9 samples, 0.12%)</title><rect x="373.8" y="147.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="376.8" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.12%)</title><rect x="373.8" y="131.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="376.8" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (4 samples, 0.05%)</title><rect x="375.3" y="147.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="378.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (55 samples, 0.75%)</title><rect x="375.9" y="371.0" width="8.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="378.9" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (19 samples, 0.26%)</title><rect x="375.9" y="355.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="378.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (6 samples, 0.08%)</title><rect x="375.9" y="339.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="378.9" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (6 samples, 0.08%)</title><rect x="375.9" y="323.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="378.9" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (13 samples, 0.18%)</title><rect x="376.9" y="339.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="379.9" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (13 samples, 0.18%)</title><rect x="376.9" y="323.0" width="2.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="379.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (2 samples, 0.03%)</title><rect x="379.0" y="355.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="382.0" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (2 samples, 0.03%)</title><rect x="379.0" y="339.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="382.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (7 samples, 0.10%)</title><rect x="379.3" y="355.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="382.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (7 samples, 0.10%)</title><rect x="379.3" y="339.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="382.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (7 samples, 0.10%)</title><rect x="379.3" y="323.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="382.3" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (7 samples, 0.10%)</title><rect x="379.3" y="307.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="382.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (15 samples, 0.20%)</title><rect x="380.4" y="355.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="383.4" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (4 samples, 0.05%)</title><rect x="380.4" y="339.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="383.4" y="350.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (4 samples, 0.05%)</title><rect x="380.4" y="323.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="383.4" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (11 samples, 0.15%)</title><rect x="381.1" y="339.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="384.1" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.08%)</title><rect x="381.1" y="323.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="384.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.08%)</title><rect x="381.1" y="307.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="384.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$89/1249014641.get$Lambda (6 samples, 0.08%)</title><rect x="381.1" y="291.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="384.1" y="302.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$89 (6 samples, 0.08%)</title><rect x="381.1" y="275.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="384.1" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (5 samples, 0.07%)</title><rect x="382.0" y="323.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="385.0" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (5 samples, 0.07%)</title><rect x="382.0" y="307.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="385.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (12 samples, 0.16%)</title><rect x="382.8" y="355.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="385.8" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (12 samples, 0.16%)</title><rect x="382.8" y="339.0" width="2.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="385.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (103 samples, 1.40%)</title><rect x="384.8" y="403.0" width="16.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="387.8" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (60 samples, 0.82%)</title><rect x="384.8" y="387.0" width="9.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="387.8" y="398.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (4 samples, 0.05%)</title><rect x="384.8" y="371.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="387.8" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (56 samples, 0.76%)</title><rect x="385.4" y="371.0" width="9.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="388.4" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (4 samples, 0.05%)</title><rect x="385.4" y="355.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="388.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (36 samples, 0.49%)</title><rect x="386.1" y="355.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="389.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (36 samples, 0.49%)</title><rect x="386.1" y="339.0" width="5.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="389.1" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (36 samples, 0.49%)</title><rect x="386.1" y="323.0" width="5.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="389.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (36 samples, 0.49%)</title><rect x="386.1" y="307.0" width="5.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="389.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (21 samples, 0.29%)</title><rect x="386.1" y="291.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="389.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (21 samples, 0.29%)</title><rect x="386.1" y="275.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="389.1" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (21 samples, 0.29%)</title><rect x="386.1" y="259.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="389.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (21 samples, 0.29%)</title><rect x="386.1" y="243.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="389.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (21 samples, 0.29%)</title><rect x="386.1" y="227.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="389.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (21 samples, 0.29%)</title><rect x="386.1" y="211.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="389.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (21 samples, 0.29%)</title><rect x="386.1" y="195.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="389.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (21 samples, 0.29%)</title><rect x="386.1" y="179.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="389.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (21 samples, 0.29%)</title><rect x="386.1" y="163.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="389.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.04%)</title><rect x="386.1" y="147.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="389.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.04%)</title><rect x="386.1" y="131.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="389.1" y="142.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (3 samples, 0.04%)</title><rect x="386.1" y="115.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="389.1" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (18 samples, 0.25%)</title><rect x="386.5" y="147.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="389.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (18 samples, 0.25%)</title><rect x="386.5" y="131.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="389.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (18 samples, 0.25%)</title><rect x="386.5" y="115.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="389.5" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (15 samples, 0.20%)</title><rect x="386.5" y="99.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="389.5" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (15 samples, 0.20%)</title><rect x="386.5" y="83.0" width="2.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="389.5" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (3 samples, 0.04%)</title><rect x="389.0" y="99.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="392.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$125/991073477.apply (15 samples, 0.20%)</title><rect x="389.4" y="291.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="392.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (15 samples, 0.20%)</title><rect x="389.4" y="275.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="392.4" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (15 samples, 0.20%)</title><rect x="389.4" y="259.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="392.4" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (15 samples, 0.20%)</title><rect x="389.4" y="243.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="392.4" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (15 samples, 0.20%)</title><rect x="389.4" y="227.0" width="2.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="392.4" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (4 samples, 0.05%)</title><rect x="391.9" y="355.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="394.9" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (4 samples, 0.05%)</title><rect x="391.9" y="339.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="394.9" y="350.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (8 samples, 0.11%)</title><rect x="392.5" y="355.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="395.5" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (4 samples, 0.05%)</title><rect x="393.8" y="355.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="396.8" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.05%)</title><rect x="393.8" y="339.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="396.8" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (3 samples, 0.04%)</title><rect x="394.4" y="387.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="397.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="394.4" y="371.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="397.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="394.4" y="355.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="397.4" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$95/683319954.get$Lambda (3 samples, 0.04%)</title><rect x="394.4" y="339.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="397.4" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$95 (3 samples, 0.04%)</title><rect x="394.4" y="323.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="397.4" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (5 samples, 0.07%)</title><rect x="394.9" y="387.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="397.9" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (3 samples, 0.04%)</title><rect x="394.9" y="371.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="397.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="394.9" y="355.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="397.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="394.9" y="339.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="397.9" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$95/683319954.get$Lambda (3 samples, 0.04%)</title><rect x="394.9" y="323.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="397.9" y="334.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$95 (3 samples, 0.04%)</title><rect x="394.9" y="307.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="397.9" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (2 samples, 0.03%)</title><rect x="395.4" y="371.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="398.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="395.4" y="355.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="398.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="395.4" y="339.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="398.4" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$103/582602737.get$Lambda (2 samples, 0.03%)</title><rect x="395.4" y="323.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="398.4" y="334.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$103 (2 samples, 0.03%)</title><rect x="395.4" y="307.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="398.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (35 samples, 0.48%)</title><rect x="395.7" y="387.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="398.7" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (4 samples, 0.05%)</title><rect x="395.7" y="371.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="398.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (31 samples, 0.42%)</title><rect x="396.4" y="371.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="399.4" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (31 samples, 0.42%)</title><rect x="396.4" y="355.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="399.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (31 samples, 0.42%)</title><rect x="396.4" y="339.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="399.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (31 samples, 0.42%)</title><rect x="396.4" y="323.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="399.4" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (31 samples, 0.42%)</title><rect x="396.4" y="307.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="399.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (31 samples, 0.42%)</title><rect x="396.4" y="291.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="399.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (31 samples, 0.42%)</title><rect x="396.4" y="275.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="399.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (18 samples, 0.25%)</title><rect x="396.4" y="259.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="399.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (18 samples, 0.25%)</title><rect x="396.4" y="243.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="399.4" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (18 samples, 0.25%)</title><rect x="396.4" y="227.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="399.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (18 samples, 0.25%)</title><rect x="396.4" y="211.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="399.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (18 samples, 0.25%)</title><rect x="396.4" y="195.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="399.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (18 samples, 0.25%)</title><rect x="396.4" y="179.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="399.4" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (18 samples, 0.25%)</title><rect x="396.4" y="163.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="399.4" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (18 samples, 0.25%)</title><rect x="396.4" y="147.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="399.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (18 samples, 0.25%)</title><rect x="396.4" y="131.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="399.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.05%)</title><rect x="396.4" y="115.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="399.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.05%)</title><rect x="396.4" y="99.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="399.4" y="110.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (4 samples, 0.05%)</title><rect x="396.4" y="83.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="399.4" y="94.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (14 samples, 0.19%)</title><rect x="397.0" y="115.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="400.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (14 samples, 0.19%)</title><rect x="397.0" y="99.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="400.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (14 samples, 0.19%)</title><rect x="397.0" y="83.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="400.0" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (9 samples, 0.12%)</title><rect x="397.0" y="67.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="400.0" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.12%)</title><rect x="397.0" y="51.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="400.0" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (5 samples, 0.07%)</title><rect x="398.5" y="67.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="401.5" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$125/991073477.apply (13 samples, 0.18%)</title><rect x="399.3" y="259.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="402.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (13 samples, 0.18%)</title><rect x="399.3" y="243.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="402.3" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (13 samples, 0.18%)</title><rect x="399.3" y="227.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="402.3" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (13 samples, 0.18%)</title><rect x="399.3" y="211.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="402.3" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (13 samples, 0.18%)</title><rect x="399.3" y="195.0" width="2.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="402.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.getBytesFromByteBuffer (8 samples, 0.11%)</title><rect x="401.3" y="435.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="404.3" y="446.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.11%)</title><rect x="401.3" y="419.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="404.3" y="430.0"></text>
</g>
<g>
<title>[2020-highload-dht-thread-95 tid=31738] (475 samples, 6.48%)</title><rect x="402.6" y="531.0" width="76.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="405.6" y="542.0">[2020-hi..</text>
</g>
<g>
<title>java/lang/Thread.run (475 samples, 6.48%)</title><rect x="402.6" y="515.0" width="76.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="405.6" y="526.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (475 samples, 6.48%)</title><rect x="402.6" y="499.0" width="76.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="405.6" y="510.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (475 samples, 6.48%)</title><rect x="402.6" y="483.0" width="76.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="405.6" y="494.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (6 samples, 0.08%)</title><rect x="402.6" y="467.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="405.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (6 samples, 0.08%)</title><rect x="402.6" y="451.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="405.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (6 samples, 0.08%)</title><rect x="402.6" y="435.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="405.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (6 samples, 0.08%)</title><rect x="402.6" y="419.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="405.6" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (6 samples, 0.08%)</title><rect x="402.6" y="403.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="405.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$75/1549034997.run (469 samples, 6.40%)</title><rect x="403.6" y="467.0" width="75.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="406.6" y="478.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$get$1 (469 samples, 6.40%)</title><rect x="403.6" y="451.0" width="75.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="406.6" y="462.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (12 samples, 0.16%)</title><rect x="403.6" y="435.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="406.6" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (12 samples, 0.16%)</title><rect x="403.6" y="419.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="406.6" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (12 samples, 0.16%)</title><rect x="403.6" y="403.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="406.6" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (12 samples, 0.16%)</title><rect x="403.6" y="387.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="406.6" y="398.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.16%)</title><rect x="403.6" y="371.0" width="1.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="406.6" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.07%)</title><rect x="405.5" y="435.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="408.5" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.07%)</title><rect x="405.5" y="419.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="408.5" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.07%)</title><rect x="405.5" y="403.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="408.5" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (28 samples, 0.38%)</title><rect x="406.3" y="435.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="409.3" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (28 samples, 0.38%)</title><rect x="406.3" y="419.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="409.3" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (21 samples, 0.29%)</title><rect x="406.3" y="403.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="409.3" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (21 samples, 0.29%)</title><rect x="406.3" y="387.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="409.3" y="398.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.29%)</title><rect x="406.3" y="371.0" width="3.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="409.3" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.10%)</title><rect x="409.7" y="403.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="412.7" y="414.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (7 samples, 0.10%)</title><rect x="409.7" y="387.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="412.7" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (30 samples, 0.41%)</title><rect x="410.8" y="435.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="413.8" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (6 samples, 0.08%)</title><rect x="410.8" y="419.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="413.8" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (24 samples, 0.33%)</title><rect x="411.8" y="419.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="414.8" y="430.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.16%)</title><rect x="411.8" y="403.0" width="1.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="414.8" y="414.0"></text>
</g>
<g>
<title>java.lang.String[] (7 samples, 0.10%)</title><rect x="413.7" y="403.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="416.7" y="414.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.07%)</title><rect x="414.9" y="403.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="417.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (387 samples, 5.28%)</title><rect x="415.7" y="435.0" width="62.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="418.7" y="446.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (40 samples, 0.55%)</title><rect x="415.7" y="419.0" width="6.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="418.7" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (40 samples, 0.55%)</title><rect x="415.7" y="403.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="418.7" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (40 samples, 0.55%)</title><rect x="415.7" y="387.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="418.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (40 samples, 0.55%)</title><rect x="415.7" y="371.0" width="6.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="418.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (40 samples, 0.55%)</title><rect x="415.7" y="355.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="418.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (33 samples, 0.45%)</title><rect x="415.7" y="339.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="418.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (33 samples, 0.45%)</title><rect x="415.7" y="323.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="418.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (33 samples, 0.45%)</title><rect x="415.7" y="307.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="418.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (33 samples, 0.45%)</title><rect x="415.7" y="291.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="418.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (33 samples, 0.45%)</title><rect x="415.7" y="275.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="418.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (33 samples, 0.45%)</title><rect x="415.7" y="259.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="418.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (17 samples, 0.23%)</title><rect x="415.7" y="243.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="418.7" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (17 samples, 0.23%)</title><rect x="415.7" y="227.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="418.7" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (17 samples, 0.23%)</title><rect x="415.7" y="211.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="418.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (17 samples, 0.23%)</title><rect x="415.7" y="195.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="418.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (17 samples, 0.23%)</title><rect x="415.7" y="179.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="418.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (17 samples, 0.23%)</title><rect x="415.7" y="163.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="418.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (17 samples, 0.23%)</title><rect x="415.7" y="147.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="418.7" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (17 samples, 0.23%)</title><rect x="415.7" y="131.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="418.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (17 samples, 0.23%)</title><rect x="415.7" y="115.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="418.7" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.07%)</title><rect x="415.7" y="99.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="418.7" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.07%)</title><rect x="415.7" y="83.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="418.7" y="94.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (5 samples, 0.07%)</title><rect x="415.7" y="67.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="418.7" y="78.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (12 samples, 0.16%)</title><rect x="416.5" y="99.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="419.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (12 samples, 0.16%)</title><rect x="416.5" y="83.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="419.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (12 samples, 0.16%)</title><rect x="416.5" y="67.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="419.5" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (8 samples, 0.11%)</title><rect x="416.5" y="51.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="419.5" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.11%)</title><rect x="416.5" y="35.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="419.5" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (4 samples, 0.05%)</title><rect x="417.8" y="51.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="420.8" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$125/991073477.apply (16 samples, 0.22%)</title><rect x="418.4" y="243.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="421.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (16 samples, 0.22%)</title><rect x="418.4" y="227.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="421.4" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (16 samples, 0.22%)</title><rect x="418.4" y="211.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="421.4" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (16 samples, 0.22%)</title><rect x="418.4" y="195.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="421.4" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (16 samples, 0.22%)</title><rect x="418.4" y="179.0" width="2.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="421.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$177/786148505.apply (7 samples, 0.10%)</title><rect x="421.0" y="339.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="424.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (7 samples, 0.10%)</title><rect x="421.0" y="323.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="424.0" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (7 samples, 0.10%)</title><rect x="421.0" y="307.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="424.0" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (7 samples, 0.10%)</title><rect x="421.0" y="291.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="424.0" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.10%)</title><rect x="421.0" y="275.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="424.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (28 samples, 0.38%)</title><rect x="422.1" y="419.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="425.1" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (28 samples, 0.38%)</title><rect x="422.1" y="403.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="425.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$191/1599205169.apply (28 samples, 0.38%)</title><rect x="422.1" y="387.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="425.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$3 (28 samples, 0.38%)</title><rect x="422.1" y="371.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="425.1" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (11 samples, 0.15%)</title><rect x="422.1" y="355.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="425.1" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (11 samples, 0.15%)</title><rect x="422.1" y="339.0" width="1.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="425.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.of (6 samples, 0.08%)</title><rect x="423.9" y="355.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="426.9" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.Record (6 samples, 0.08%)</title><rect x="423.9" y="339.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="426.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (11 samples, 0.15%)</title><rect x="424.8" y="355.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="427.8" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (11 samples, 0.15%)</title><rect x="424.8" y="339.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="427.8" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (11 samples, 0.15%)</title><rect x="424.8" y="323.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="427.8" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (11 samples, 0.15%)</title><rect x="424.8" y="307.0" width="1.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="427.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (6 samples, 0.08%)</title><rect x="426.6" y="419.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="429.6" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (6 samples, 0.08%)</title><rect x="426.6" y="403.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="429.6" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (6 samples, 0.08%)</title><rect x="426.6" y="387.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="429.6" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.08%)</title><rect x="426.6" y="371.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="429.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (10 samples, 0.14%)</title><rect x="427.6" y="419.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="430.6" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (10 samples, 0.14%)</title><rect x="427.6" y="403.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="430.6" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (10 samples, 0.14%)</title><rect x="427.6" y="387.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="430.6" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (10 samples, 0.14%)</title><rect x="427.6" y="371.0" width="1.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="430.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (303 samples, 4.13%)</title><rect x="429.2" y="419.0" width="48.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="432.2" y="430.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (7 samples, 0.10%)</title><rect x="429.2" y="403.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="432.2" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (7 samples, 0.10%)</title><rect x="429.2" y="387.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="432.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (4 samples, 0.05%)</title><rect x="430.3" y="403.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="433.3" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (4 samples, 0.05%)</title><rect x="430.3" y="387.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="433.3" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (11 samples, 0.15%)</title><rect x="431.0" y="403.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="434.0" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.15%)</title><rect x="431.0" y="387.0" width="1.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="434.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (176 samples, 2.40%)</title><rect x="432.7" y="403.0" width="28.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="435.7" y="414.0">ru..</text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.03%)</title><rect x="432.7" y="387.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="435.7" y="398.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (12 samples, 0.16%)</title><rect x="433.0" y="387.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="436.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (12 samples, 0.16%)</title><rect x="433.0" y="371.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="436.0" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (12 samples, 0.16%)</title><rect x="433.0" y="355.0" width="2.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="436.0" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (5 samples, 0.07%)</title><rect x="435.0" y="387.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="438.0" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.07%)</title><rect x="435.0" y="371.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="438.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (157 samples, 2.14%)</title><rect x="435.8" y="387.0" width="25.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="438.8" y="398.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (3 samples, 0.04%)</title><rect x="435.8" y="371.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="438.8" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (3 samples, 0.04%)</title><rect x="435.8" y="355.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="438.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (57 samples, 0.78%)</title><rect x="436.3" y="371.0" width="9.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="439.3" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (57 samples, 0.78%)</title><rect x="436.3" y="355.0" width="9.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="439.3" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (2 samples, 0.03%)</title><rect x="436.3" y="339.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="439.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (7 samples, 0.10%)</title><rect x="436.6" y="339.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="439.6" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (7 samples, 0.10%)</title><rect x="436.6" y="323.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="439.6" y="334.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (5 samples, 0.07%)</title><rect x="437.7" y="339.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="440.7" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (5 samples, 0.07%)</title><rect x="438.5" y="339.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="441.5" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.07%)</title><rect x="438.5" y="323.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="441.5" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (38 samples, 0.52%)</title><rect x="439.3" y="339.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="442.3" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (38 samples, 0.52%)</title><rect x="439.3" y="323.0" width="6.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="442.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (38 samples, 0.52%)</title><rect x="439.3" y="307.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="442.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (14 samples, 0.19%)</title><rect x="439.3" y="291.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="442.3" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (14 samples, 0.19%)</title><rect x="439.3" y="275.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="442.3" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (14 samples, 0.19%)</title><rect x="439.3" y="259.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="442.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (14 samples, 0.19%)</title><rect x="439.3" y="243.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="442.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.07%)</title><rect x="439.3" y="227.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="442.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.07%)</title><rect x="439.3" y="211.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="442.3" y="222.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (5 samples, 0.07%)</title><rect x="439.3" y="195.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="442.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (9 samples, 0.12%)</title><rect x="440.1" y="227.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="443.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (9 samples, 0.12%)</title><rect x="440.1" y="211.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="443.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (9 samples, 0.12%)</title><rect x="440.1" y="195.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="443.1" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (6 samples, 0.08%)</title><rect x="440.1" y="179.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="443.1" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.08%)</title><rect x="440.1" y="163.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="443.1" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (3 samples, 0.04%)</title><rect x="441.1" y="179.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="444.1" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (24 samples, 0.33%)</title><rect x="441.6" y="291.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="444.6" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (2 samples, 0.03%)</title><rect x="441.6" y="275.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="444.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.05%)</title><rect x="441.9" y="275.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="444.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.05%)</title><rect x="441.9" y="259.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="444.9" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.get$Lambda (3 samples, 0.04%)</title><rect x="442.1" y="243.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="445.1" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$117 (3 samples, 0.04%)</title><rect x="442.1" y="227.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="445.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (3 samples, 0.04%)</title><rect x="442.5" y="275.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="445.5" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (3 samples, 0.04%)</title><rect x="442.5" y="259.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="445.5" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (3 samples, 0.04%)</title><rect x="442.5" y="243.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="445.5" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (15 samples, 0.20%)</title><rect x="443.0" y="275.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="446.0" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (15 samples, 0.20%)</title><rect x="443.0" y="259.0" width="2.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="446.0" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.05%)</title><rect x="445.4" y="371.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="448.4" y="382.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (8 samples, 0.11%)</title><rect x="446.1" y="371.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="449.1" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (8 samples, 0.11%)</title><rect x="446.1" y="355.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="449.1" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$ValueIterator (8 samples, 0.11%)</title><rect x="446.1" y="339.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="449.1" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (3 samples, 0.04%)</title><rect x="447.4" y="371.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="450.4" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.04%)</title><rect x="447.4" y="355.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="450.4" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (7 samples, 0.10%)</title><rect x="448.0" y="371.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="451.0" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (2 samples, 0.03%)</title><rect x="448.0" y="355.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="451.0" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="448.0" y="339.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="451.0" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="448.0" y="323.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="451.0" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$95/683319954.get$Lambda (2 samples, 0.03%)</title><rect x="448.0" y="307.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="451.0" y="318.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$95 (2 samples, 0.03%)</title><rect x="448.0" y="291.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="451.0" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (5 samples, 0.07%)</title><rect x="448.3" y="355.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="451.3" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.07%)</title><rect x="448.3" y="339.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="451.3" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.07%)</title><rect x="448.3" y="323.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="451.3" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$103/582602737.get$Lambda (5 samples, 0.07%)</title><rect x="448.3" y="307.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="451.3" y="318.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$103 (5 samples, 0.07%)</title><rect x="448.3" y="291.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="451.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (24 samples, 0.33%)</title><rect x="449.1" y="371.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="452.1" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (2 samples, 0.03%)</title><rect x="449.1" y="355.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="452.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (22 samples, 0.30%)</title><rect x="449.5" y="355.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="452.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (22 samples, 0.30%)</title><rect x="449.5" y="339.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="452.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (22 samples, 0.30%)</title><rect x="449.5" y="323.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="452.5" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (22 samples, 0.30%)</title><rect x="449.5" y="307.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="452.5" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (22 samples, 0.30%)</title><rect x="449.5" y="291.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="452.5" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (22 samples, 0.30%)</title><rect x="449.5" y="275.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="452.5" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (22 samples, 0.30%)</title><rect x="449.5" y="259.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="452.5" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (22 samples, 0.30%)</title><rect x="449.5" y="243.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="452.5" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (22 samples, 0.30%)</title><rect x="449.5" y="227.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="452.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (22 samples, 0.30%)</title><rect x="449.5" y="211.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="452.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.07%)</title><rect x="449.5" y="195.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="452.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.07%)</title><rect x="449.5" y="179.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="452.5" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (5 samples, 0.07%)</title><rect x="449.5" y="163.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="452.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (17 samples, 0.23%)</title><rect x="450.3" y="195.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="453.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (17 samples, 0.23%)</title><rect x="450.3" y="179.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="453.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (17 samples, 0.23%)</title><rect x="450.3" y="163.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="453.3" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (13 samples, 0.18%)</title><rect x="450.3" y="147.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="453.3" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (13 samples, 0.18%)</title><rect x="450.3" y="131.0" width="2.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="453.3" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (4 samples, 0.05%)</title><rect x="452.4" y="147.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="455.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (50 samples, 0.68%)</title><rect x="453.0" y="371.0" width="8.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="456.0" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (15 samples, 0.20%)</title><rect x="453.0" y="355.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="456.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (6 samples, 0.08%)</title><rect x="453.0" y="339.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="456.0" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (6 samples, 0.08%)</title><rect x="453.0" y="323.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="456.0" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (9 samples, 0.12%)</title><rect x="454.0" y="339.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="457.0" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (9 samples, 0.12%)</title><rect x="454.0" y="323.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="457.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (3 samples, 0.04%)</title><rect x="455.4" y="355.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="458.4" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (3 samples, 0.04%)</title><rect x="455.4" y="339.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="458.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (9 samples, 0.12%)</title><rect x="455.9" y="355.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="458.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (9 samples, 0.12%)</title><rect x="455.9" y="339.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="458.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (9 samples, 0.12%)</title><rect x="455.9" y="323.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="458.9" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (9 samples, 0.12%)</title><rect x="455.9" y="307.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="458.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (13 samples, 0.18%)</title><rect x="457.3" y="355.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="460.3" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (4 samples, 0.05%)</title><rect x="457.3" y="339.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="460.3" y="350.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (4 samples, 0.05%)</title><rect x="457.3" y="323.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="460.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (9 samples, 0.12%)</title><rect x="458.0" y="339.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="461.0" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="458.0" y="323.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="461.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="458.0" y="307.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="461.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$89/1249014641.get$Lambda (2 samples, 0.03%)</title><rect x="458.0" y="291.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="461.0" y="302.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$89 (2 samples, 0.03%)</title><rect x="458.0" y="275.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="461.0" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (7 samples, 0.10%)</title><rect x="458.3" y="323.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="461.3" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (7 samples, 0.10%)</title><rect x="458.3" y="307.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="461.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (10 samples, 0.14%)</title><rect x="459.4" y="355.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="462.4" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (10 samples, 0.14%)</title><rect x="459.4" y="339.0" width="1.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="462.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (105 samples, 1.43%)</title><rect x="461.0" y="403.0" width="16.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="464.0" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (66 samples, 0.90%)</title><rect x="461.0" y="387.0" width="10.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="464.0" y="398.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (7 samples, 0.10%)</title><rect x="461.0" y="371.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="464.0" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (59 samples, 0.80%)</title><rect x="462.2" y="371.0" width="9.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="465.2" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (5 samples, 0.07%)</title><rect x="462.2" y="355.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="465.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (34 samples, 0.46%)</title><rect x="463.0" y="355.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="466.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (34 samples, 0.46%)</title><rect x="463.0" y="339.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="466.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (34 samples, 0.46%)</title><rect x="463.0" y="323.0" width="5.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="466.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (34 samples, 0.46%)</title><rect x="463.0" y="307.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="466.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (13 samples, 0.18%)</title><rect x="463.0" y="291.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="466.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (13 samples, 0.18%)</title><rect x="463.0" y="275.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="466.0" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (13 samples, 0.18%)</title><rect x="463.0" y="259.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="466.0" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (13 samples, 0.18%)</title><rect x="463.0" y="243.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="466.0" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (13 samples, 0.18%)</title><rect x="463.0" y="227.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="466.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (13 samples, 0.18%)</title><rect x="463.0" y="211.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="466.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (13 samples, 0.18%)</title><rect x="463.0" y="195.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="466.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (13 samples, 0.18%)</title><rect x="463.0" y="179.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="466.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (13 samples, 0.18%)</title><rect x="463.0" y="163.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="466.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.04%)</title><rect x="463.0" y="147.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="466.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.04%)</title><rect x="463.0" y="131.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="466.0" y="142.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (3 samples, 0.04%)</title><rect x="463.0" y="115.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="466.0" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (10 samples, 0.14%)</title><rect x="463.5" y="147.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="466.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (10 samples, 0.14%)</title><rect x="463.5" y="131.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="466.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (10 samples, 0.14%)</title><rect x="463.5" y="115.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="466.5" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (7 samples, 0.10%)</title><rect x="463.5" y="99.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="466.5" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.10%)</title><rect x="463.5" y="83.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="466.5" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (3 samples, 0.04%)</title><rect x="464.6" y="99.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="467.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$125/991073477.apply (21 samples, 0.29%)</title><rect x="465.1" y="291.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="468.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (21 samples, 0.29%)</title><rect x="465.1" y="275.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="468.1" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (21 samples, 0.29%)</title><rect x="465.1" y="259.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="468.1" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (21 samples, 0.29%)</title><rect x="465.1" y="243.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="468.1" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (21 samples, 0.29%)</title><rect x="465.1" y="227.0" width="3.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="468.1" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (5 samples, 0.07%)</title><rect x="468.5" y="355.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="471.5" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (5 samples, 0.07%)</title><rect x="468.5" y="339.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="471.5" y="350.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (12 samples, 0.16%)</title><rect x="469.3" y="355.0" width="1.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="472.3" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (3 samples, 0.04%)</title><rect x="471.2" y="355.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="474.2" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.04%)</title><rect x="471.2" y="339.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="474.2" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (10 samples, 0.14%)</title><rect x="471.8" y="387.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="474.8" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (4 samples, 0.05%)</title><rect x="471.8" y="371.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="474.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.05%)</title><rect x="471.8" y="355.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="474.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.05%)</title><rect x="471.8" y="339.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="474.8" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$95/683319954.get$Lambda (4 samples, 0.05%)</title><rect x="471.8" y="323.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="474.8" y="334.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$95 (4 samples, 0.05%)</title><rect x="471.8" y="307.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="474.8" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (6 samples, 0.08%)</title><rect x="472.5" y="371.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="475.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.08%)</title><rect x="472.5" y="355.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="475.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.08%)</title><rect x="472.5" y="339.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="475.5" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$103/582602737.get$Lambda (6 samples, 0.08%)</title><rect x="472.5" y="323.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="475.5" y="334.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$103 (6 samples, 0.08%)</title><rect x="472.5" y="307.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="475.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (28 samples, 0.38%)</title><rect x="473.4" y="387.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="476.4" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (3 samples, 0.04%)</title><rect x="473.4" y="371.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="476.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (25 samples, 0.34%)</title><rect x="473.9" y="371.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="476.9" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (25 samples, 0.34%)</title><rect x="473.9" y="355.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="476.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (25 samples, 0.34%)</title><rect x="473.9" y="339.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="476.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (25 samples, 0.34%)</title><rect x="473.9" y="323.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="476.9" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (25 samples, 0.34%)</title><rect x="473.9" y="307.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="476.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (25 samples, 0.34%)</title><rect x="473.9" y="291.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="476.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (25 samples, 0.34%)</title><rect x="473.9" y="275.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="476.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (11 samples, 0.15%)</title><rect x="473.9" y="259.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="476.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (11 samples, 0.15%)</title><rect x="473.9" y="243.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="476.9" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (11 samples, 0.15%)</title><rect x="473.9" y="227.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="476.9" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (11 samples, 0.15%)</title><rect x="473.9" y="211.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="476.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (11 samples, 0.15%)</title><rect x="473.9" y="195.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="476.9" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (11 samples, 0.15%)</title><rect x="473.9" y="179.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="476.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (11 samples, 0.15%)</title><rect x="473.9" y="163.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="476.9" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (11 samples, 0.15%)</title><rect x="473.9" y="147.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="476.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (11 samples, 0.15%)</title><rect x="473.9" y="131.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="476.9" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (10 samples, 0.14%)</title><rect x="474.1" y="115.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="477.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (10 samples, 0.14%)</title><rect x="474.1" y="99.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="477.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (10 samples, 0.14%)</title><rect x="474.1" y="83.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="477.1" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (6 samples, 0.08%)</title><rect x="474.1" y="67.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="477.1" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.08%)</title><rect x="474.1" y="51.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="477.1" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (4 samples, 0.05%)</title><rect x="475.0" y="67.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="478.0" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$125/991073477.apply (14 samples, 0.19%)</title><rect x="475.7" y="259.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="478.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (14 samples, 0.19%)</title><rect x="475.7" y="243.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="478.7" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (14 samples, 0.19%)</title><rect x="475.7" y="227.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="478.7" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (14 samples, 0.19%)</title><rect x="475.7" y="211.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="478.7" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (14 samples, 0.19%)</title><rect x="475.7" y="195.0" width="2.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="478.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.getBytesFromByteBuffer (7 samples, 0.10%)</title><rect x="477.9" y="435.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="480.9" y="446.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.10%)</title><rect x="477.9" y="419.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="480.9" y="430.0"></text>
</g>
<g>
<title>[2020-highload-dht-thread-96 tid=31739] (468 samples, 6.38%)</title><rect x="479.1" y="531.0" width="75.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="482.1" y="542.0">[2020-hi..</text>
</g>
<g>
<title>java/lang/Thread.run (468 samples, 6.38%)</title><rect x="479.1" y="515.0" width="75.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="482.1" y="526.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (468 samples, 6.38%)</title><rect x="479.1" y="499.0" width="75.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="482.1" y="510.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (468 samples, 6.38%)</title><rect x="479.1" y="483.0" width="75.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="482.1" y="494.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (5 samples, 0.07%)</title><rect x="479.1" y="467.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="482.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (5 samples, 0.07%)</title><rect x="479.1" y="451.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="482.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (5 samples, 0.07%)</title><rect x="479.1" y="435.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="482.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (5 samples, 0.07%)</title><rect x="479.1" y="419.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="482.1" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (5 samples, 0.07%)</title><rect x="479.1" y="403.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="482.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$75/1549034997.run (463 samples, 6.31%)</title><rect x="479.9" y="467.0" width="74.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="482.9" y="478.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$get$1 (463 samples, 6.31%)</title><rect x="479.9" y="451.0" width="74.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="482.9" y="462.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (10 samples, 0.14%)</title><rect x="479.9" y="435.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="482.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (10 samples, 0.14%)</title><rect x="479.9" y="419.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="482.9" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (10 samples, 0.14%)</title><rect x="479.9" y="403.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="482.9" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.14%)</title><rect x="479.9" y="387.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="482.9" y="398.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.14%)</title><rect x="479.9" y="371.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="482.9" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.03%)</title><rect x="481.5" y="435.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="484.5" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.03%)</title><rect x="481.5" y="419.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="484.5" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.03%)</title><rect x="481.5" y="403.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="484.5" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (18 samples, 0.25%)</title><rect x="481.8" y="435.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="484.8" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (18 samples, 0.25%)</title><rect x="481.8" y="419.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="484.8" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (16 samples, 0.22%)</title><rect x="481.8" y="403.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="484.8" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (16 samples, 0.22%)</title><rect x="481.8" y="387.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="484.8" y="398.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.22%)</title><rect x="481.8" y="371.0" width="2.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="484.8" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.03%)</title><rect x="484.4" y="403.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="487.4" y="414.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (2 samples, 0.03%)</title><rect x="484.4" y="387.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="487.4" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (19 samples, 0.26%)</title><rect x="484.7" y="435.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="487.7" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (6 samples, 0.08%)</title><rect x="484.7" y="419.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="487.7" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (13 samples, 0.18%)</title><rect x="485.7" y="419.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="488.7" y="430.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.08%)</title><rect x="485.7" y="403.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="488.7" y="414.0"></text>
</g>
<g>
<title>java.lang.String[] (4 samples, 0.05%)</title><rect x="486.6" y="403.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="489.6" y="414.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.04%)</title><rect x="487.3" y="403.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="490.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (410 samples, 5.59%)</title><rect x="487.8" y="435.0" width="65.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="490.8" y="446.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (53 samples, 0.72%)</title><rect x="487.8" y="419.0" width="8.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="490.8" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (53 samples, 0.72%)</title><rect x="487.8" y="403.0" width="8.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="490.8" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (53 samples, 0.72%)</title><rect x="487.8" y="387.0" width="8.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="490.8" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (53 samples, 0.72%)</title><rect x="487.8" y="371.0" width="8.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="490.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (53 samples, 0.72%)</title><rect x="487.8" y="355.0" width="8.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="490.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (39 samples, 0.53%)</title><rect x="487.8" y="339.0" width="6.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="490.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (39 samples, 0.53%)</title><rect x="487.8" y="323.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="490.8" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (39 samples, 0.53%)</title><rect x="487.8" y="307.0" width="6.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="490.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (39 samples, 0.53%)</title><rect x="487.8" y="291.0" width="6.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="490.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (39 samples, 0.53%)</title><rect x="487.8" y="275.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="490.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (39 samples, 0.53%)</title><rect x="487.8" y="259.0" width="6.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="490.8" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (22 samples, 0.30%)</title><rect x="487.8" y="243.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="490.8" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (22 samples, 0.30%)</title><rect x="487.8" y="227.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="490.8" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (22 samples, 0.30%)</title><rect x="487.8" y="211.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="490.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (22 samples, 0.30%)</title><rect x="487.8" y="195.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="490.8" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (22 samples, 0.30%)</title><rect x="487.8" y="179.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="490.8" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (22 samples, 0.30%)</title><rect x="487.8" y="163.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="490.8" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (22 samples, 0.30%)</title><rect x="487.8" y="147.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="490.8" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (22 samples, 0.30%)</title><rect x="487.8" y="131.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="490.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (22 samples, 0.30%)</title><rect x="487.8" y="115.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="490.8" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.05%)</title><rect x="487.8" y="99.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="490.8" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.05%)</title><rect x="487.8" y="83.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="490.8" y="94.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (4 samples, 0.05%)</title><rect x="487.8" y="67.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="490.8" y="78.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (18 samples, 0.25%)</title><rect x="488.4" y="99.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="491.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (18 samples, 0.25%)</title><rect x="488.4" y="83.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="491.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (18 samples, 0.25%)</title><rect x="488.4" y="67.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="491.4" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (11 samples, 0.15%)</title><rect x="488.4" y="51.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="491.4" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (11 samples, 0.15%)</title><rect x="488.4" y="35.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="491.4" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (7 samples, 0.10%)</title><rect x="490.2" y="51.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="493.2" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$125/991073477.apply (17 samples, 0.23%)</title><rect x="491.3" y="243.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="494.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (17 samples, 0.23%)</title><rect x="491.3" y="227.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="494.3" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (17 samples, 0.23%)</title><rect x="491.3" y="211.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="494.3" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (17 samples, 0.23%)</title><rect x="491.3" y="195.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="494.3" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (17 samples, 0.23%)</title><rect x="491.3" y="179.0" width="2.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="494.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$177/786148505.apply (14 samples, 0.19%)</title><rect x="494.0" y="339.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="497.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (14 samples, 0.19%)</title><rect x="494.0" y="323.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="497.0" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (14 samples, 0.19%)</title><rect x="494.0" y="307.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="497.0" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (14 samples, 0.19%)</title><rect x="494.0" y="291.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="497.0" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (14 samples, 0.19%)</title><rect x="494.0" y="275.0" width="2.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="497.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (26 samples, 0.35%)</title><rect x="496.3" y="419.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="499.3" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (26 samples, 0.35%)</title><rect x="496.3" y="403.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="499.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$191/1599205169.apply (26 samples, 0.35%)</title><rect x="496.3" y="387.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="499.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$3 (26 samples, 0.35%)</title><rect x="496.3" y="371.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="499.3" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (7 samples, 0.10%)</title><rect x="496.3" y="355.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="499.3" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.10%)</title><rect x="496.3" y="339.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="499.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.of (5 samples, 0.07%)</title><rect x="497.4" y="355.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="500.4" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.Record (5 samples, 0.07%)</title><rect x="497.4" y="339.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="500.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (14 samples, 0.19%)</title><rect x="498.2" y="355.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="501.2" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (14 samples, 0.19%)</title><rect x="498.2" y="339.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="501.2" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (14 samples, 0.19%)</title><rect x="498.2" y="323.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="501.2" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (14 samples, 0.19%)</title><rect x="498.2" y="307.0" width="2.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="501.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (9 samples, 0.12%)</title><rect x="500.5" y="419.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="503.5" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (9 samples, 0.12%)</title><rect x="500.5" y="403.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="503.5" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (9 samples, 0.12%)</title><rect x="500.5" y="387.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="503.5" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.12%)</title><rect x="500.5" y="371.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="503.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (12 samples, 0.16%)</title><rect x="501.9" y="419.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="504.9" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (12 samples, 0.16%)</title><rect x="501.9" y="403.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="504.9" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (12 samples, 0.16%)</title><rect x="501.9" y="387.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="504.9" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.16%)</title><rect x="501.9" y="371.0" width="2.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="504.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (310 samples, 4.23%)</title><rect x="503.9" y="419.0" width="49.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="506.9" y="430.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (9 samples, 0.12%)</title><rect x="503.9" y="403.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="506.9" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (9 samples, 0.12%)</title><rect x="503.9" y="387.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="506.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (4 samples, 0.05%)</title><rect x="505.3" y="403.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="508.3" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (4 samples, 0.05%)</title><rect x="505.3" y="387.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="508.3" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (10 samples, 0.14%)</title><rect x="505.9" y="403.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="508.9" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.14%)</title><rect x="505.9" y="387.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="508.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (197 samples, 2.69%)</title><rect x="507.6" y="403.0" width="31.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="510.6" y="414.0">ru..</text>
</g>
<g>
<title>java.util.ArrayList (9 samples, 0.12%)</title><rect x="507.6" y="387.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="510.6" y="398.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (3 samples, 0.04%)</title><rect x="509.0" y="387.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="512.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (3 samples, 0.04%)</title><rect x="509.0" y="371.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="512.0" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (3 samples, 0.04%)</title><rect x="509.0" y="355.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="512.0" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (3 samples, 0.04%)</title><rect x="509.5" y="387.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="512.5" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.04%)</title><rect x="509.5" y="371.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="512.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (182 samples, 2.48%)</title><rect x="510.0" y="387.0" width="29.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="513.0" y="398.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (2 samples, 0.03%)</title><rect x="510.0" y="371.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="513.0" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (2 samples, 0.03%)</title><rect x="510.0" y="355.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="513.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (76 samples, 1.04%)</title><rect x="510.3" y="371.0" width="12.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="513.3" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (3 samples, 0.04%)</title><rect x="510.3" y="355.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="513.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (73 samples, 1.00%)</title><rect x="510.8" y="355.0" width="11.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="513.8" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (5 samples, 0.07%)</title><rect x="510.8" y="339.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="513.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (5 samples, 0.07%)</title><rect x="511.6" y="339.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="514.6" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (5 samples, 0.07%)</title><rect x="511.6" y="323.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="514.6" y="334.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (8 samples, 0.11%)</title><rect x="512.4" y="339.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="515.4" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (5 samples, 0.07%)</title><rect x="513.7" y="339.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="516.7" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.07%)</title><rect x="513.7" y="323.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="516.7" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (50 samples, 0.68%)</title><rect x="514.5" y="339.0" width="8.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="517.5" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (50 samples, 0.68%)</title><rect x="514.5" y="323.0" width="8.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="517.5" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (50 samples, 0.68%)</title><rect x="514.5" y="307.0" width="8.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="517.5" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (20 samples, 0.27%)</title><rect x="514.5" y="291.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="517.5" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (20 samples, 0.27%)</title><rect x="514.5" y="275.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="517.5" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (20 samples, 0.27%)</title><rect x="514.5" y="259.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="517.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (20 samples, 0.27%)</title><rect x="514.5" y="243.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="517.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.05%)</title><rect x="514.5" y="227.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="517.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.05%)</title><rect x="514.5" y="211.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="517.5" y="222.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (4 samples, 0.05%)</title><rect x="514.5" y="195.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="517.5" y="206.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (16 samples, 0.22%)</title><rect x="515.1" y="227.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="518.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (16 samples, 0.22%)</title><rect x="515.1" y="211.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="518.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (16 samples, 0.22%)</title><rect x="515.1" y="195.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="518.1" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (10 samples, 0.14%)</title><rect x="515.1" y="179.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="518.1" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (10 samples, 0.14%)</title><rect x="515.1" y="163.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="518.1" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (6 samples, 0.08%)</title><rect x="516.7" y="179.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="519.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (30 samples, 0.41%)</title><rect x="517.7" y="291.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="520.7" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (4 samples, 0.05%)</title><rect x="517.7" y="275.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="520.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.08%)</title><rect x="518.3" y="275.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="521.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.08%)</title><rect x="518.3" y="259.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="521.3" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$111/1835775400.get$Lambda (2 samples, 0.03%)</title><rect x="518.3" y="243.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="521.3" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$111 (2 samples, 0.03%)</title><rect x="518.3" y="227.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="521.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.get$Lambda (4 samples, 0.05%)</title><rect x="518.7" y="243.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="521.7" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$117 (4 samples, 0.05%)</title><rect x="518.7" y="227.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="521.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (5 samples, 0.07%)</title><rect x="519.3" y="275.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="522.3" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (5 samples, 0.07%)</title><rect x="519.3" y="259.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="522.3" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (5 samples, 0.07%)</title><rect x="519.3" y="243.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="522.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (15 samples, 0.20%)</title><rect x="520.1" y="275.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="523.1" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (15 samples, 0.20%)</title><rect x="520.1" y="259.0" width="2.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="523.1" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (5 samples, 0.07%)</title><rect x="522.5" y="371.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="525.5" y="382.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (5 samples, 0.07%)</title><rect x="523.3" y="371.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="526.3" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (5 samples, 0.07%)</title><rect x="523.3" y="355.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="526.3" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$ValueIterator (5 samples, 0.07%)</title><rect x="523.3" y="339.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="526.3" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (7 samples, 0.10%)</title><rect x="524.1" y="371.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="527.1" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.10%)</title><rect x="524.1" y="355.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="527.1" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (4 samples, 0.05%)</title><rect x="525.3" y="371.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="528.3" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.05%)</title><rect x="525.3" y="355.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="528.3" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.05%)</title><rect x="525.3" y="339.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="528.3" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$95/683319954.get$Lambda (4 samples, 0.05%)</title><rect x="525.3" y="323.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="528.3" y="334.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$95 (4 samples, 0.05%)</title><rect x="525.3" y="307.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="528.3" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (8 samples, 0.11%)</title><rect x="525.9" y="371.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="528.9" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (3 samples, 0.04%)</title><rect x="525.9" y="355.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="528.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="525.9" y="339.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="528.9" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="525.9" y="323.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="528.9" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$95/683319954.get$Lambda (3 samples, 0.04%)</title><rect x="525.9" y="307.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="528.9" y="318.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$95 (3 samples, 0.04%)</title><rect x="525.9" y="291.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="528.9" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (5 samples, 0.07%)</title><rect x="526.4" y="355.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="529.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.07%)</title><rect x="526.4" y="339.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="529.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.07%)</title><rect x="526.4" y="323.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="529.4" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$103/582602737.get$Lambda (5 samples, 0.07%)</title><rect x="526.4" y="307.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="529.4" y="318.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$103 (5 samples, 0.07%)</title><rect x="526.4" y="291.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="529.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.03%)</title><rect x="527.2" y="371.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="530.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.03%)</title><rect x="527.2" y="355.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="530.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (2 samples, 0.03%)</title><rect x="527.2" y="339.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="530.2" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.03%)</title><rect x="527.2" y="323.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="530.2" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.03%)</title><rect x="527.2" y="307.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="530.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (17 samples, 0.23%)</title><rect x="527.5" y="371.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="530.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (16 samples, 0.22%)</title><rect x="527.7" y="355.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="530.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (16 samples, 0.22%)</title><rect x="527.7" y="339.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="530.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (16 samples, 0.22%)</title><rect x="527.7" y="323.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="530.7" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (16 samples, 0.22%)</title><rect x="527.7" y="307.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="530.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (16 samples, 0.22%)</title><rect x="527.7" y="291.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="530.7" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (16 samples, 0.22%)</title><rect x="527.7" y="275.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="530.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (16 samples, 0.22%)</title><rect x="527.7" y="259.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="530.7" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (16 samples, 0.22%)</title><rect x="527.7" y="243.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="530.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (16 samples, 0.22%)</title><rect x="527.7" y="227.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="530.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (16 samples, 0.22%)</title><rect x="527.7" y="211.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="530.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.05%)</title><rect x="527.7" y="195.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="530.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.05%)</title><rect x="527.7" y="179.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="530.7" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (4 samples, 0.05%)</title><rect x="527.7" y="163.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="530.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (12 samples, 0.16%)</title><rect x="528.3" y="195.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="531.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (12 samples, 0.16%)</title><rect x="528.3" y="179.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="531.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (12 samples, 0.16%)</title><rect x="528.3" y="163.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="531.3" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (12 samples, 0.16%)</title><rect x="528.3" y="147.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="531.3" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.16%)</title><rect x="528.3" y="131.0" width="1.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="531.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (56 samples, 0.76%)</title><rect x="530.2" y="371.0" width="9.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="533.2" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (18 samples, 0.25%)</title><rect x="530.2" y="355.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="533.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (4 samples, 0.05%)</title><rect x="530.2" y="339.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="533.2" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (4 samples, 0.05%)</title><rect x="530.2" y="323.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="533.2" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (14 samples, 0.19%)</title><rect x="530.9" y="339.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="533.9" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (14 samples, 0.19%)</title><rect x="530.9" y="323.0" width="2.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="533.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (2 samples, 0.03%)</title><rect x="533.1" y="355.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="536.1" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (2 samples, 0.03%)</title><rect x="533.1" y="339.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="536.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (9 samples, 0.12%)</title><rect x="533.5" y="355.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="536.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (9 samples, 0.12%)</title><rect x="533.5" y="339.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="536.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (9 samples, 0.12%)</title><rect x="533.5" y="323.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="536.5" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (9 samples, 0.12%)</title><rect x="533.5" y="307.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="536.5" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (18 samples, 0.25%)</title><rect x="534.9" y="355.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="537.9" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (5 samples, 0.07%)</title><rect x="534.9" y="339.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="537.9" y="350.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (5 samples, 0.07%)</title><rect x="534.9" y="323.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="537.9" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (13 samples, 0.18%)</title><rect x="535.7" y="339.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="538.7" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="535.7" y="323.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="538.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="535.7" y="307.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="538.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$89/1249014641.get$Lambda (3 samples, 0.04%)</title><rect x="535.7" y="291.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="538.7" y="302.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$89 (3 samples, 0.04%)</title><rect x="535.7" y="275.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="538.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (10 samples, 0.14%)</title><rect x="536.2" y="323.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="539.2" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (10 samples, 0.14%)</title><rect x="536.2" y="307.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="539.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (9 samples, 0.12%)</title><rect x="537.8" y="355.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="540.8" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (9 samples, 0.12%)</title><rect x="537.8" y="339.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="540.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (90 samples, 1.23%)</title><rect x="539.3" y="403.0" width="14.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="542.3" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (41 samples, 0.56%)</title><rect x="539.3" y="387.0" width="6.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="542.3" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (40 samples, 0.55%)</title><rect x="539.4" y="371.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="542.4" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (6 samples, 0.08%)</title><rect x="539.4" y="355.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="542.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (23 samples, 0.31%)</title><rect x="540.4" y="355.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="543.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (23 samples, 0.31%)</title><rect x="540.4" y="339.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="543.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (23 samples, 0.31%)</title><rect x="540.4" y="323.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="543.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (23 samples, 0.31%)</title><rect x="540.4" y="307.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="543.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (11 samples, 0.15%)</title><rect x="540.4" y="291.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="543.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (11 samples, 0.15%)</title><rect x="540.4" y="275.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="543.4" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (11 samples, 0.15%)</title><rect x="540.4" y="259.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="543.4" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (11 samples, 0.15%)</title><rect x="540.4" y="243.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="543.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (11 samples, 0.15%)</title><rect x="540.4" y="227.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="543.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (11 samples, 0.15%)</title><rect x="540.4" y="211.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="543.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (11 samples, 0.15%)</title><rect x="540.4" y="195.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="543.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (11 samples, 0.15%)</title><rect x="540.4" y="179.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="543.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (11 samples, 0.15%)</title><rect x="540.4" y="163.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="543.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.05%)</title><rect x="540.4" y="147.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="543.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.05%)</title><rect x="540.4" y="131.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="543.4" y="142.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (4 samples, 0.05%)</title><rect x="540.4" y="115.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="543.4" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (7 samples, 0.10%)</title><rect x="541.0" y="147.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="544.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (7 samples, 0.10%)</title><rect x="541.0" y="131.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="544.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (7 samples, 0.10%)</title><rect x="541.0" y="115.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="544.0" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (4 samples, 0.05%)</title><rect x="541.0" y="99.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="544.0" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.05%)</title><rect x="541.0" y="83.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="544.0" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (3 samples, 0.04%)</title><rect x="541.7" y="99.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="544.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$125/991073477.apply (12 samples, 0.16%)</title><rect x="542.2" y="291.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="545.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (12 samples, 0.16%)</title><rect x="542.2" y="275.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="545.2" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (12 samples, 0.16%)</title><rect x="542.2" y="259.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="545.2" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (12 samples, 0.16%)</title><rect x="542.2" y="243.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="545.2" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.16%)</title><rect x="542.2" y="227.0" width="1.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="545.2" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (4 samples, 0.05%)</title><rect x="544.1" y="355.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="547.1" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (4 samples, 0.05%)</title><rect x="544.1" y="339.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="547.1" y="350.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (3 samples, 0.04%)</title><rect x="544.7" y="355.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="547.7" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (4 samples, 0.05%)</title><rect x="545.2" y="355.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="548.2" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.05%)</title><rect x="545.2" y="339.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="548.2" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (7 samples, 0.10%)</title><rect x="545.9" y="387.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="548.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.10%)</title><rect x="545.9" y="371.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="548.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.10%)</title><rect x="545.9" y="355.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="548.9" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$95/683319954.get$Lambda (7 samples, 0.10%)</title><rect x="545.9" y="339.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="548.9" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$95 (7 samples, 0.10%)</title><rect x="545.9" y="323.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="548.9" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (4 samples, 0.05%)</title><rect x="547.0" y="387.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="550.0" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (3 samples, 0.04%)</title><rect x="547.1" y="371.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="550.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="547.1" y="355.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="550.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="547.1" y="339.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="550.1" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$103/582602737.get$Lambda (3 samples, 0.04%)</title><rect x="547.1" y="323.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="550.1" y="334.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$103 (3 samples, 0.04%)</title><rect x="547.1" y="307.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="550.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (38 samples, 0.52%)</title><rect x="547.6" y="387.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="550.6" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (5 samples, 0.07%)</title><rect x="547.6" y="371.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="550.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (33 samples, 0.45%)</title><rect x="548.4" y="371.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="551.4" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (33 samples, 0.45%)</title><rect x="548.4" y="355.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="551.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (33 samples, 0.45%)</title><rect x="548.4" y="339.0" width="5.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="551.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (33 samples, 0.45%)</title><rect x="548.4" y="323.0" width="5.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="551.4" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (33 samples, 0.45%)</title><rect x="548.4" y="307.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="551.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (33 samples, 0.45%)</title><rect x="548.4" y="291.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="551.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (33 samples, 0.45%)</title><rect x="548.4" y="275.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="551.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (17 samples, 0.23%)</title><rect x="548.4" y="259.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="551.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (17 samples, 0.23%)</title><rect x="548.4" y="243.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="551.4" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (17 samples, 0.23%)</title><rect x="548.4" y="227.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="551.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (17 samples, 0.23%)</title><rect x="548.4" y="211.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="551.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (17 samples, 0.23%)</title><rect x="548.4" y="195.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="551.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (17 samples, 0.23%)</title><rect x="548.4" y="179.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="551.4" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (17 samples, 0.23%)</title><rect x="548.4" y="163.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="551.4" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (17 samples, 0.23%)</title><rect x="548.4" y="147.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="551.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (17 samples, 0.23%)</title><rect x="548.4" y="131.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="551.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.05%)</title><rect x="548.4" y="115.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="551.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.05%)</title><rect x="548.4" y="99.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="551.4" y="110.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (4 samples, 0.05%)</title><rect x="548.4" y="83.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="551.4" y="94.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (13 samples, 0.18%)</title><rect x="549.1" y="115.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="552.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (13 samples, 0.18%)</title><rect x="549.1" y="99.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="552.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (13 samples, 0.18%)</title><rect x="549.1" y="83.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="552.1" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (9 samples, 0.12%)</title><rect x="549.1" y="67.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="552.1" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.12%)</title><rect x="549.1" y="51.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="552.1" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (4 samples, 0.05%)</title><rect x="550.5" y="67.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="553.5" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$125/991073477.apply (16 samples, 0.22%)</title><rect x="551.2" y="259.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="554.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (16 samples, 0.22%)</title><rect x="551.2" y="243.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="554.2" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (16 samples, 0.22%)</title><rect x="551.2" y="227.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="554.2" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (16 samples, 0.22%)</title><rect x="551.2" y="211.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="554.2" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (16 samples, 0.22%)</title><rect x="551.2" y="195.0" width="2.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="554.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.getBytesFromByteBuffer (4 samples, 0.05%)</title><rect x="553.7" y="435.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="556.7" y="446.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.05%)</title><rect x="553.7" y="419.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="556.7" y="430.0"></text>
</g>
<g>
<title>[2020-highload-dht-thread-97 tid=486] (439 samples, 5.99%)</title><rect x="554.4" y="531.0" width="70.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="557.4" y="542.0">[2020-hi..</text>
</g>
<g>
<title>java/lang/Thread.run (439 samples, 5.99%)</title><rect x="554.4" y="515.0" width="70.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="557.4" y="526.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (439 samples, 5.99%)</title><rect x="554.4" y="499.0" width="70.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="557.4" y="510.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (439 samples, 5.99%)</title><rect x="554.4" y="483.0" width="70.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="557.4" y="494.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (7 samples, 0.10%)</title><rect x="554.4" y="467.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="557.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (7 samples, 0.10%)</title><rect x="554.4" y="451.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="557.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (6 samples, 0.08%)</title><rect x="554.4" y="435.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="557.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (6 samples, 0.08%)</title><rect x="554.4" y="419.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="557.4" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (6 samples, 0.08%)</title><rect x="554.4" y="403.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="557.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$75/1549034997.run (432 samples, 5.89%)</title><rect x="555.5" y="467.0" width="69.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="558.5" y="478.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.lambda$get$1 (432 samples, 5.89%)</title><rect x="555.5" y="451.0" width="69.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="558.5" y="462.0">ru/mail..</text>
</g>
<g>
<title>java/lang/String.getBytes (9 samples, 0.12%)</title><rect x="555.5" y="435.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="558.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (9 samples, 0.12%)</title><rect x="555.5" y="419.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="558.5" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (9 samples, 0.12%)</title><rect x="555.5" y="403.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="558.5" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (9 samples, 0.12%)</title><rect x="555.5" y="387.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="558.5" y="398.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.12%)</title><rect x="555.5" y="371.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="558.5" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.10%)</title><rect x="557.0" y="435.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="560.0" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.10%)</title><rect x="557.0" y="419.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="560.0" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.10%)</title><rect x="557.0" y="403.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="560.0" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (16 samples, 0.22%)</title><rect x="558.1" y="435.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="561.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (16 samples, 0.22%)</title><rect x="558.1" y="419.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="561.1" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (13 samples, 0.18%)</title><rect x="558.1" y="403.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="561.1" y="414.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (13 samples, 0.18%)</title><rect x="558.1" y="387.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="561.1" y="398.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.18%)</title><rect x="558.1" y="371.0" width="2.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="561.1" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.04%)</title><rect x="560.2" y="403.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="563.2" y="414.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (3 samples, 0.04%)</title><rect x="560.2" y="387.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="563.2" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (24 samples, 0.33%)</title><rect x="560.7" y="435.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="563.7" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (5 samples, 0.07%)</title><rect x="560.7" y="419.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="563.7" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (19 samples, 0.26%)</title><rect x="561.5" y="419.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="564.5" y="430.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.08%)</title><rect x="561.5" y="403.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="564.5" y="414.0"></text>
</g>
<g>
<title>java.lang.String[] (8 samples, 0.11%)</title><rect x="562.4" y="403.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="565.4" y="414.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.07%)</title><rect x="563.7" y="403.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="566.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (373 samples, 5.09%)</title><rect x="564.5" y="435.0" width="60.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="567.5" y="446.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (46 samples, 0.63%)</title><rect x="564.5" y="419.0" width="7.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="567.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (46 samples, 0.63%)</title><rect x="564.5" y="403.0" width="7.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="567.5" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (46 samples, 0.63%)</title><rect x="564.5" y="387.0" width="7.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="567.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (46 samples, 0.63%)</title><rect x="564.5" y="371.0" width="7.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="567.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (46 samples, 0.63%)</title><rect x="564.5" y="355.0" width="7.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="567.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (34 samples, 0.46%)</title><rect x="564.5" y="339.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="567.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (34 samples, 0.46%)</title><rect x="564.5" y="323.0" width="5.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="567.5" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (34 samples, 0.46%)</title><rect x="564.5" y="307.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="567.5" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (34 samples, 0.46%)</title><rect x="564.5" y="291.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="567.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (34 samples, 0.46%)</title><rect x="564.5" y="275.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="567.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (34 samples, 0.46%)</title><rect x="564.5" y="259.0" width="5.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="567.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (15 samples, 0.20%)</title><rect x="564.5" y="243.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="567.5" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (15 samples, 0.20%)</title><rect x="564.5" y="227.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="567.5" y="238.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (15 samples, 0.20%)</title><rect x="564.5" y="211.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="567.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (15 samples, 0.20%)</title><rect x="564.5" y="195.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="567.5" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (15 samples, 0.20%)</title><rect x="564.5" y="179.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="567.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (15 samples, 0.20%)</title><rect x="564.5" y="163.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="567.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (15 samples, 0.20%)</title><rect x="564.5" y="147.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="567.5" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (15 samples, 0.20%)</title><rect x="564.5" y="131.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="567.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (15 samples, 0.20%)</title><rect x="564.5" y="115.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="567.5" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (8 samples, 0.11%)</title><rect x="564.5" y="99.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="567.5" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (8 samples, 0.11%)</title><rect x="564.5" y="83.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="567.5" y="94.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (8 samples, 0.11%)</title><rect x="564.5" y="67.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="567.5" y="78.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (7 samples, 0.10%)</title><rect x="565.8" y="99.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="568.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (7 samples, 0.10%)</title><rect x="565.8" y="83.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="568.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (7 samples, 0.10%)</title><rect x="565.8" y="67.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="568.8" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (3 samples, 0.04%)</title><rect x="565.8" y="51.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="568.8" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.04%)</title><rect x="565.8" y="35.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="568.8" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (4 samples, 0.05%)</title><rect x="566.3" y="51.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="569.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$125/991073477.apply (19 samples, 0.26%)</title><rect x="566.9" y="243.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="569.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (19 samples, 0.26%)</title><rect x="566.9" y="227.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="569.9" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (19 samples, 0.26%)</title><rect x="566.9" y="211.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="569.9" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (19 samples, 0.26%)</title><rect x="566.9" y="195.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="569.9" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (19 samples, 0.26%)</title><rect x="566.9" y="179.0" width="3.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="569.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$177/786148505.apply (12 samples, 0.16%)</title><rect x="570.0" y="339.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="573.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (12 samples, 0.16%)</title><rect x="570.0" y="323.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="573.0" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (12 samples, 0.16%)</title><rect x="570.0" y="307.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="573.0" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (12 samples, 0.16%)</title><rect x="570.0" y="291.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="573.0" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.16%)</title><rect x="570.0" y="275.0" width="1.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="573.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (26 samples, 0.35%)</title><rect x="571.9" y="419.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="574.9" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (26 samples, 0.35%)</title><rect x="571.9" y="403.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="574.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl$$Lambda$191/1599205169.apply (26 samples, 0.35%)</title><rect x="571.9" y="387.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="574.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.lambda$iterator$3 (26 samples, 0.35%)</title><rect x="571.9" y="371.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="574.9" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (12 samples, 0.16%)</title><rect x="571.9" y="355.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="574.9" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.16%)</title><rect x="571.9" y="339.0" width="2.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="574.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.of (7 samples, 0.10%)</title><rect x="573.9" y="355.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="576.9" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.Record (7 samples, 0.10%)</title><rect x="573.9" y="339.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="576.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (7 samples, 0.10%)</title><rect x="575.0" y="355.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="578.0" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (7 samples, 0.10%)</title><rect x="575.0" y="339.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="578.0" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (7 samples, 0.10%)</title><rect x="575.0" y="323.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="578.0" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.10%)</title><rect x="575.0" y="307.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="578.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (8 samples, 0.11%)</title><rect x="576.1" y="419.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="579.1" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (8 samples, 0.11%)</title><rect x="576.1" y="403.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="579.1" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (8 samples, 0.11%)</title><rect x="576.1" y="387.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="579.1" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.11%)</title><rect x="576.1" y="371.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="579.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (9 samples, 0.12%)</title><rect x="577.4" y="419.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="580.4" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (9 samples, 0.12%)</title><rect x="577.4" y="403.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="580.4" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (9 samples, 0.12%)</title><rect x="577.4" y="387.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="580.4" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.12%)</title><rect x="577.4" y="371.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="580.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.iterator (284 samples, 3.87%)</title><rect x="578.8" y="419.0" width="45.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="581.8" y="430.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (7 samples, 0.10%)</title><rect x="578.8" y="403.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="581.8" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (7 samples, 0.10%)</title><rect x="578.8" y="387.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="581.8" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (6 samples, 0.08%)</title><rect x="580.0" y="403.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="583.0" y="414.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (6 samples, 0.08%)</title><rect x="580.0" y="387.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="583.0" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (9 samples, 0.12%)</title><rect x="580.9" y="403.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="583.9" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.12%)</title><rect x="580.9" y="387.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="583.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.listCellIterator (179 samples, 2.44%)</title><rect x="582.5" y="403.0" width="28.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="585.5" y="414.0">ru..</text>
</g>
<g>
<title>java.util.ArrayList (6 samples, 0.08%)</title><rect x="582.5" y="387.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="585.5" y="398.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (5 samples, 0.07%)</title><rect x="583.5" y="387.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="586.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (5 samples, 0.07%)</title><rect x="583.5" y="371.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="586.5" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (5 samples, 0.07%)</title><rect x="583.5" y="355.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="586.5" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (3 samples, 0.04%)</title><rect x="584.3" y="387.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="587.3" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.04%)</title><rect x="584.3" y="371.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="587.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool.iterator (165 samples, 2.25%)</title><rect x="584.8" y="387.0" width="26.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="587.8" y="398.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (68 samples, 0.93%)</title><rect x="585.0" y="371.0" width="10.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="588.0" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (2 samples, 0.03%)</title><rect x="585.0" y="355.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="588.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (66 samples, 0.90%)</title><rect x="585.3" y="355.0" width="10.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="588.3" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (3 samples, 0.04%)</title><rect x="585.3" y="339.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="588.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (6 samples, 0.08%)</title><rect x="585.8" y="339.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="588.8" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (6 samples, 0.08%)</title><rect x="585.8" y="323.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="588.8" y="334.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (2 samples, 0.03%)</title><rect x="586.7" y="339.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="589.7" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (3 samples, 0.04%)</title><rect x="587.0" y="339.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="590.0" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.04%)</title><rect x="587.0" y="323.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="590.0" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (52 samples, 0.71%)</title><rect x="587.5" y="339.0" width="8.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="590.5" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (52 samples, 0.71%)</title><rect x="587.5" y="323.0" width="8.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="590.5" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (52 samples, 0.71%)</title><rect x="587.5" y="307.0" width="8.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="590.5" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (21 samples, 0.29%)</title><rect x="587.5" y="291.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="590.5" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (21 samples, 0.29%)</title><rect x="587.5" y="275.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="590.5" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (21 samples, 0.29%)</title><rect x="587.5" y="259.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="590.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (21 samples, 0.29%)</title><rect x="587.5" y="243.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="590.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (9 samples, 0.12%)</title><rect x="587.5" y="227.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="590.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (9 samples, 0.12%)</title><rect x="587.5" y="211.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="590.5" y="222.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (9 samples, 0.12%)</title><rect x="587.5" y="195.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="590.5" y="206.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (12 samples, 0.16%)</title><rect x="589.0" y="227.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="592.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (12 samples, 0.16%)</title><rect x="589.0" y="211.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="592.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (12 samples, 0.16%)</title><rect x="589.0" y="195.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="592.0" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (11 samples, 0.15%)</title><rect x="589.0" y="179.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="592.0" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (11 samples, 0.15%)</title><rect x="589.0" y="163.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="592.0" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (31 samples, 0.42%)</title><rect x="590.9" y="291.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="593.9" y="302.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (9 samples, 0.12%)</title><rect x="590.9" y="275.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="593.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="592.4" y="275.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="595.4" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="592.4" y="259.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="595.4" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$111/1835775400.get$Lambda (2 samples, 0.03%)</title><rect x="592.4" y="243.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="595.4" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$111 (2 samples, 0.03%)</title><rect x="592.4" y="227.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="595.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (4 samples, 0.05%)</title><rect x="592.8" y="275.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="595.8" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (4 samples, 0.05%)</title><rect x="592.8" y="259.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="595.8" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (4 samples, 0.05%)</title><rect x="592.8" y="243.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="595.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (15 samples, 0.20%)</title><rect x="593.5" y="275.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="596.5" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (15 samples, 0.20%)</title><rect x="593.5" y="259.0" width="2.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="596.5" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (6 samples, 0.08%)</title><rect x="595.9" y="371.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="598.9" y="382.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (9 samples, 0.12%)</title><rect x="596.9" y="371.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="599.9" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (9 samples, 0.12%)</title><rect x="596.9" y="355.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="599.9" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$ValueIterator (9 samples, 0.12%)</title><rect x="596.9" y="339.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="599.9" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (3 samples, 0.04%)</title><rect x="598.3" y="371.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="601.3" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.04%)</title><rect x="598.3" y="355.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="601.3" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (2 samples, 0.03%)</title><rect x="598.8" y="371.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="601.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="598.8" y="355.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="601.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="598.8" y="339.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="601.8" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$95/683319954.get$Lambda (2 samples, 0.03%)</title><rect x="598.8" y="323.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="601.8" y="334.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$95 (2 samples, 0.03%)</title><rect x="598.8" y="307.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="601.8" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (7 samples, 0.10%)</title><rect x="599.1" y="371.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="602.1" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (3 samples, 0.04%)</title><rect x="599.1" y="355.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="602.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="599.1" y="339.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="602.1" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="599.1" y="323.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="602.1" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$95/683319954.get$Lambda (3 samples, 0.04%)</title><rect x="599.1" y="307.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="602.1" y="318.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$95 (3 samples, 0.04%)</title><rect x="599.1" y="291.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="602.1" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (4 samples, 0.05%)</title><rect x="599.6" y="355.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="602.6" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.05%)</title><rect x="599.6" y="339.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="602.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.05%)</title><rect x="599.6" y="323.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="602.6" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$103/582602737.get$Lambda (4 samples, 0.05%)</title><rect x="599.6" y="307.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="602.6" y="318.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$103 (4 samples, 0.05%)</title><rect x="599.6" y="291.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="602.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (18 samples, 0.25%)</title><rect x="600.2" y="371.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="603.2" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (4 samples, 0.05%)</title><rect x="600.2" y="355.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="603.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (14 samples, 0.19%)</title><rect x="600.9" y="355.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="603.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (14 samples, 0.19%)</title><rect x="600.9" y="339.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="603.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (14 samples, 0.19%)</title><rect x="600.9" y="323.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="603.9" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (14 samples, 0.19%)</title><rect x="600.9" y="307.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="603.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (14 samples, 0.19%)</title><rect x="600.9" y="291.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="603.9" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (14 samples, 0.19%)</title><rect x="600.9" y="275.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="603.9" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (14 samples, 0.19%)</title><rect x="600.9" y="259.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="603.9" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (14 samples, 0.19%)</title><rect x="600.9" y="243.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="603.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (14 samples, 0.19%)</title><rect x="600.9" y="227.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="603.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (14 samples, 0.19%)</title><rect x="600.9" y="211.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="603.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.04%)</title><rect x="600.9" y="195.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="603.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.04%)</title><rect x="600.9" y="179.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="603.9" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (3 samples, 0.04%)</title><rect x="600.9" y="163.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="603.9" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (11 samples, 0.15%)</title><rect x="601.4" y="195.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="604.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (11 samples, 0.15%)</title><rect x="601.4" y="179.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="604.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (11 samples, 0.15%)</title><rect x="601.4" y="163.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="604.4" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (7 samples, 0.10%)</title><rect x="601.4" y="147.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="604.4" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.10%)</title><rect x="601.4" y="131.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="604.4" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (4 samples, 0.05%)</title><rect x="602.5" y="147.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="605.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.iterator (51 samples, 0.70%)</title><rect x="603.1" y="371.0" width="8.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="606.1" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (19 samples, 0.26%)</title><rect x="603.1" y="355.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="606.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (5 samples, 0.07%)</title><rect x="603.1" y="339.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="606.1" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (5 samples, 0.07%)</title><rect x="603.1" y="323.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="606.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (14 samples, 0.19%)</title><rect x="603.9" y="339.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="606.9" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (14 samples, 0.19%)</title><rect x="603.9" y="323.0" width="2.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="606.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (3 samples, 0.04%)</title><rect x="606.2" y="355.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="609.2" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (3 samples, 0.04%)</title><rect x="606.2" y="339.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="609.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.08%)</title><rect x="606.7" y="355.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="609.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.08%)</title><rect x="606.7" y="339.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="609.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.08%)</title><rect x="606.7" y="323.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="609.7" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (6 samples, 0.08%)</title><rect x="606.7" y="307.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="609.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (15 samples, 0.20%)</title><rect x="607.6" y="355.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="610.6" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (5 samples, 0.07%)</title><rect x="607.6" y="339.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="610.6" y="350.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (5 samples, 0.07%)</title><rect x="607.6" y="323.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="610.6" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (10 samples, 0.14%)</title><rect x="608.4" y="339.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="611.4" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (10 samples, 0.14%)</title><rect x="608.4" y="323.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="611.4" y="334.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (10 samples, 0.14%)</title><rect x="608.4" y="307.0" width="1.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="611.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (8 samples, 0.11%)</title><rect x="610.1" y="355.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="613.1" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (8 samples, 0.11%)</title><rect x="610.1" y="339.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="613.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/DAOImpl.mergeIterator (82 samples, 1.12%)</title><rect x="611.3" y="403.0" width="13.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="614.3" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (52 samples, 0.71%)</title><rect x="611.3" y="387.0" width="8.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="614.3" y="398.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (4 samples, 0.05%)</title><rect x="611.3" y="371.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="614.3" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (48 samples, 0.65%)</title><rect x="612.0" y="371.0" width="7.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="615.0" y="382.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (7 samples, 0.10%)</title><rect x="612.0" y="355.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="615.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (29 samples, 0.40%)</title><rect x="613.1" y="355.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="616.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (29 samples, 0.40%)</title><rect x="613.1" y="339.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="616.1" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (29 samples, 0.40%)</title><rect x="613.1" y="323.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="616.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (29 samples, 0.40%)</title><rect x="613.1" y="307.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="616.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (12 samples, 0.16%)</title><rect x="613.1" y="291.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="616.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (12 samples, 0.16%)</title><rect x="613.1" y="275.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="616.1" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (12 samples, 0.16%)</title><rect x="613.1" y="259.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="616.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (12 samples, 0.16%)</title><rect x="613.1" y="243.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="616.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (12 samples, 0.16%)</title><rect x="613.1" y="227.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="616.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (12 samples, 0.16%)</title><rect x="613.1" y="211.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="616.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (12 samples, 0.16%)</title><rect x="613.1" y="195.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="616.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (12 samples, 0.16%)</title><rect x="613.1" y="179.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="616.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (12 samples, 0.16%)</title><rect x="613.1" y="163.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="616.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.05%)</title><rect x="613.1" y="147.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="616.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.05%)</title><rect x="613.1" y="131.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="616.1" y="142.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (4 samples, 0.05%)</title><rect x="613.1" y="115.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="616.1" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (8 samples, 0.11%)</title><rect x="613.8" y="147.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="616.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (8 samples, 0.11%)</title><rect x="613.8" y="131.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="616.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (8 samples, 0.11%)</title><rect x="613.8" y="115.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="616.8" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (5 samples, 0.07%)</title><rect x="613.8" y="99.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="616.8" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.07%)</title><rect x="613.8" y="83.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="616.8" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.bmendli.Cell (3 samples, 0.04%)</title><rect x="614.6" y="99.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="617.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$125/991073477.apply (17 samples, 0.23%)</title><rect x="615.0" y="291.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="618.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (17 samples, 0.23%)</title><rect x="615.0" y="275.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="618.0" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (17 samples, 0.23%)</title><rect x="615.0" y="259.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="618.0" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (17 samples, 0.23%)</title><rect x="615.0" y="243.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="618.0" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (17 samples, 0.23%)</title><rect x="615.0" y="227.0" width="2.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="618.0" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (4 samples, 0.05%)</title><rect x="617.8" y="355.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="620.8" y="366.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (4 samples, 0.05%)</title><rect x="617.8" y="339.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="620.8" y="350.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (6 samples, 0.08%)</title><rect x="618.4" y="355.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="621.4" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (2 samples, 0.03%)</title><rect x="619.4" y="355.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="622.4" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="619.4" y="339.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="622.4" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (4 samples, 0.05%)</title><rect x="619.7" y="387.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="622.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.05%)</title><rect x="619.7" y="371.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="622.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.05%)</title><rect x="619.7" y="355.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="622.7" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$95/683319954.get$Lambda (4 samples, 0.05%)</title><rect x="619.7" y="339.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="622.7" y="350.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$95 (4 samples, 0.05%)</title><rect x="619.7" y="323.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="622.7" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (4 samples, 0.05%)</title><rect x="620.4" y="387.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="623.4" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (2 samples, 0.03%)</title><rect x="620.4" y="371.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="623.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="620.4" y="355.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="623.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="620.4" y="339.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="623.4" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$95/683319954.get$Lambda (2 samples, 0.03%)</title><rect x="620.4" y="323.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="623.4" y="334.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$95 (2 samples, 0.03%)</title><rect x="620.4" y="307.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="623.4" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.thenComparing (2 samples, 0.03%)</title><rect x="620.7" y="371.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="623.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="620.7" y="355.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="623.7" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="620.7" y="339.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="623.7" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$103/582602737.get$Lambda (2 samples, 0.03%)</title><rect x="620.7" y="323.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="623.7" y="334.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$103 (2 samples, 0.03%)</title><rect x="620.7" y="307.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="623.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (22 samples, 0.30%)</title><rect x="621.0" y="387.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="624.0" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (3 samples, 0.04%)</title><rect x="621.0" y="371.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="624.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (19 samples, 0.26%)</title><rect x="621.5" y="371.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="624.5" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (19 samples, 0.26%)</title><rect x="621.5" y="355.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="624.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (19 samples, 0.26%)</title><rect x="621.5" y="339.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="624.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (19 samples, 0.26%)</title><rect x="621.5" y="323.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="624.5" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (19 samples, 0.26%)</title><rect x="621.5" y="307.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="624.5" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (19 samples, 0.26%)</title><rect x="621.5" y="291.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="624.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (19 samples, 0.26%)</title><rect x="621.5" y="275.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="624.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.05%)</title><rect x="621.5" y="259.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="624.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (4 samples, 0.05%)</title><rect x="621.5" y="243.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="624.5" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (4 samples, 0.05%)</title><rect x="621.5" y="227.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="624.5" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (4 samples, 0.05%)</title><rect x="621.5" y="211.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="624.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (4 samples, 0.05%)</title><rect x="621.5" y="195.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="624.5" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (4 samples, 0.05%)</title><rect x="621.5" y="179.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="624.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$117/1737744088.getAsBoolean (4 samples, 0.05%)</title><rect x="621.5" y="163.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="624.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (4 samples, 0.05%)</title><rect x="621.5" y="147.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="624.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (4 samples, 0.05%)</title><rect x="621.5" y="131.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="624.5" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (3 samples, 0.04%)</title><rect x="621.6" y="115.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="624.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable$$Lambda$78/333685243.apply (3 samples, 0.04%)</title><rect x="621.6" y="99.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="624.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTable.lambda$iterator$0 (3 samples, 0.04%)</title><rect x="621.6" y="83.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="624.6" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.03%)</title><rect x="621.6" y="67.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="624.6" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.03%)</title><rect x="621.6" y="51.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="624.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/MemTablePool$$Lambda$125/991073477.apply (15 samples, 0.20%)</title><rect x="622.1" y="259.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="625.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/bmendli/Cell.getKey (15 samples, 0.20%)</title><rect x="622.1" y="243.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="625.1" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (15 samples, 0.20%)</title><rect x="622.1" y="227.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="625.1" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (15 samples, 0.20%)</title><rect x="622.1" y="211.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="625.1" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (15 samples, 0.20%)</title><rect x="622.1" y="195.0" width="2.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="625.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.getBytesFromByteBuffer (3 samples, 0.04%)</title><rect x="624.5" y="435.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="627.5" y="446.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="624.5" y="419.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="627.5" y="430.0"></text>
</g>
<g>
<title>[NIO Acceptor 0.0.0.0:8080 #0 tid=14058] (44 samples, 0.60%)</title><rect x="625.0" y="531.0" width="7.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="628.0" y="542.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (44 samples, 0.60%)</title><rect x="625.0" y="515.0" width="7.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="628.0" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (44 samples, 0.60%)</title><rect x="625.0" y="499.0" width="7.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="628.0" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (44 samples, 0.60%)</title><rect x="625.0" y="483.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="628.0" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (43 samples, 0.59%)</title><rect x="625.2" y="467.0" width="6.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="628.2" y="478.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.10%)</title><rect x="625.2" y="451.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="628.2" y="462.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.49%)</title><rect x="626.3" y="451.0" width="5.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="629.3" y="462.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=14050] (415 samples, 5.66%)</title><rect x="632.1" y="531.0" width="66.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="635.1" y="542.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (415 samples, 5.66%)</title><rect x="632.1" y="515.0" width="66.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="635.1" y="526.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (47 samples, 0.64%)</title><rect x="632.1" y="499.0" width="7.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="635.1" y="510.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (47 samples, 0.64%)</title><rect x="632.1" y="483.0" width="7.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="635.1" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (368 samples, 5.02%)</title><rect x="639.7" y="499.0" width="59.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="642.7" y="510.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (368 samples, 5.02%)</title><rect x="639.7" y="483.0" width="59.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="642.7" y="494.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (368 samples, 5.02%)</title><rect x="639.7" y="467.0" width="59.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="642.7" y="478.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (90 samples, 1.23%)</title><rect x="639.7" y="451.0" width="14.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="642.7" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (90 samples, 1.23%)</title><rect x="639.7" y="435.0" width="14.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="642.7" y="446.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (42 samples, 0.57%)</title><rect x="639.7" y="419.0" width="6.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="642.7" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (26 samples, 0.35%)</title><rect x="639.7" y="403.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="642.7" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (26 samples, 0.35%)</title><rect x="639.7" y="387.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="642.7" y="398.0"></text>
</g>
<g>
<title>java/lang/String.substring (26 samples, 0.35%)</title><rect x="639.7" y="371.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="642.7" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (26 samples, 0.35%)</title><rect x="639.7" y="355.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="642.7" y="366.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.16%)</title><rect x="639.7" y="339.0" width="1.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="642.7" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (14 samples, 0.19%)</title><rect x="641.6" y="339.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="644.6" y="350.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.19%)</title><rect x="641.6" y="323.0" width="2.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="644.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.get (16 samples, 0.22%)</title><rect x="643.8" y="403.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="646.8" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.22%)</title><rect x="643.8" y="387.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="646.8" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.22%)</title><rect x="643.8" y="371.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="646.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$75/1549034997.get$Lambda (16 samples, 0.22%)</title><rect x="643.8" y="355.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="646.8" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.bmendli.MyService$$Lambda$75 (16 samples, 0.22%)</title><rect x="643.8" y="339.0" width="2.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="646.8" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (48 samples, 0.65%)</title><rect x="646.4" y="419.0" width="7.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="649.4" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (48 samples, 0.65%)</title><rect x="646.4" y="403.0" width="7.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="649.4" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (48 samples, 0.65%)</title><rect x="646.4" y="387.0" width="7.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="649.4" y="398.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.22%)</title><rect x="646.4" y="371.0" width="2.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="649.4" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (32 samples, 0.44%)</title><rect x="649.0" y="371.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="652.0" y="382.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.44%)</title><rect x="649.0" y="355.0" width="5.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="652.0" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (181 samples, 2.47%)</title><rect x="654.1" y="451.0" width="29.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="657.1" y="462.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (30 samples, 0.41%)</title><rect x="654.1" y="435.0" width="4.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="657.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (51 samples, 0.70%)</title><rect x="659.0" y="435.0" width="8.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="662.0" y="446.0"></text>
</g>
<g>
<title>java.lang.String[] (51 samples, 0.70%)</title><rect x="659.0" y="419.0" width="8.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="662.0" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (100 samples, 1.36%)</title><rect x="667.2" y="435.0" width="16.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="670.2" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (100 samples, 1.36%)</title><rect x="667.2" y="419.0" width="16.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="670.2" y="430.0"></text>
</g>
<g>
<title>char[] (58 samples, 0.79%)</title><rect x="667.2" y="403.0" width="9.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="670.2" y="414.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.20%)</title><rect x="676.5" y="403.0" width="2.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="679.5" y="414.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (27 samples, 0.37%)</title><rect x="678.9" y="403.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="681.9" y="414.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (27 samples, 0.37%)</title><rect x="678.9" y="387.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="681.9" y="398.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (27 samples, 0.37%)</title><rect x="678.9" y="371.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="681.9" y="382.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.37%)</title><rect x="678.9" y="355.0" width="4.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="681.9" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (97 samples, 1.32%)</title><rect x="683.3" y="451.0" width="15.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="686.3" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (97 samples, 1.32%)</title><rect x="683.3" y="435.0" width="15.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="686.3" y="446.0"></text>
</g>
<g>
<title>char[] (46 samples, 0.63%)</title><rect x="683.3" y="419.0" width="7.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="686.3" y="430.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.16%)</title><rect x="690.7" y="419.0" width="1.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="693.7" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (39 samples, 0.53%)</title><rect x="692.6" y="419.0" width="6.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="695.6" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (39 samples, 0.53%)</title><rect x="692.6" y="403.0" width="6.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="695.6" y="414.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (39 samples, 0.53%)</title><rect x="692.6" y="387.0" width="6.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="695.6" y="398.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.53%)</title><rect x="692.6" y="371.0" width="6.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="695.6" y="382.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=14051] (425 samples, 5.80%)</title><rect x="698.9" y="531.0" width="68.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="701.9" y="542.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (425 samples, 5.80%)</title><rect x="698.9" y="515.0" width="68.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="701.9" y="526.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session.process (425 samples, 5.80%)</title><rect x="698.9" y="499.0" width="68.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="701.9" y="510.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (425 samples, 5.80%)</title><rect x="698.9" y="483.0" width="68.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="701.9" y="494.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (425 samples, 5.80%)</title><rect x="698.9" y="467.0" width="68.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="701.9" y="478.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (114 samples, 1.55%)</title><rect x="698.9" y="451.0" width="18.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="701.9" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (114 samples, 1.55%)</title><rect x="698.9" y="435.0" width="18.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="701.9" y="446.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (75 samples, 1.02%)</title><rect x="698.9" y="419.0" width="12.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="701.9" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (51 samples, 0.70%)</title><rect x="698.9" y="403.0" width="8.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="701.9" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (51 samples, 0.70%)</title><rect x="698.9" y="387.0" width="8.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="701.9" y="398.0"></text>
</g>
<g>
<title>java/lang/String.substring (51 samples, 0.70%)</title><rect x="698.9" y="371.0" width="8.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="701.9" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (51 samples, 0.70%)</title><rect x="698.9" y="355.0" width="8.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="701.9" y="366.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.37%)</title><rect x="698.9" y="339.0" width="4.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="701.9" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (24 samples, 0.33%)</title><rect x="703.2" y="339.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="706.2" y="350.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.33%)</title><rect x="703.2" y="323.0" width="3.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="706.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.get (24 samples, 0.33%)</title><rect x="707.1" y="403.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="710.1" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (24 samples, 0.33%)</title><rect x="707.1" y="387.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="710.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.33%)</title><rect x="707.1" y="371.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="710.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$75/1549034997.get$Lambda (24 samples, 0.33%)</title><rect x="707.1" y="355.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="710.1" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.bmendli.MyService$$Lambda$75 (24 samples, 0.33%)</title><rect x="707.1" y="339.0" width="3.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="710.1" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (39 samples, 0.53%)</title><rect x="711.0" y="419.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="714.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (39 samples, 0.53%)</title><rect x="711.0" y="403.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="714.0" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (39 samples, 0.53%)</title><rect x="711.0" y="387.0" width="6.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="714.0" y="398.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.29%)</title><rect x="711.0" y="371.0" width="3.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="714.0" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (18 samples, 0.25%)</title><rect x="714.3" y="371.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="717.3" y="382.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.25%)</title><rect x="714.3" y="355.0" width="2.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="717.3" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (217 samples, 2.96%)</title><rect x="717.2" y="451.0" width="34.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="720.2" y="462.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (37 samples, 0.50%)</title><rect x="717.2" y="435.0" width="6.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="720.2" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (75 samples, 1.02%)</title><rect x="723.2" y="435.0" width="12.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="726.2" y="446.0"></text>
</g>
<g>
<title>java.lang.String[] (75 samples, 1.02%)</title><rect x="723.2" y="419.0" width="12.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="726.2" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (105 samples, 1.43%)</title><rect x="735.3" y="435.0" width="16.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="738.3" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (105 samples, 1.43%)</title><rect x="735.3" y="419.0" width="16.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="738.3" y="430.0"></text>
</g>
<g>
<title>char[] (53 samples, 0.72%)</title><rect x="735.3" y="403.0" width="8.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="738.3" y="414.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.25%)</title><rect x="743.8" y="403.0" width="2.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="746.8" y="414.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (34 samples, 0.46%)</title><rect x="746.7" y="403.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="749.7" y="414.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (34 samples, 0.46%)</title><rect x="746.7" y="387.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="749.7" y="398.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (34 samples, 0.46%)</title><rect x="746.7" y="371.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="749.7" y="382.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.46%)</title><rect x="746.7" y="355.0" width="5.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="749.7" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (94 samples, 1.28%)</title><rect x="752.1" y="451.0" width="15.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="755.1" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (94 samples, 1.28%)</title><rect x="752.1" y="435.0" width="15.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="755.1" y="446.0"></text>
</g>
<g>
<title>char[] (41 samples, 0.56%)</title><rect x="752.1" y="419.0" width="6.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="755.1" y="430.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.20%)</title><rect x="758.7" y="419.0" width="2.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="761.7" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (38 samples, 0.52%)</title><rect x="761.2" y="419.0" width="6.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="764.2" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (38 samples, 0.52%)</title><rect x="761.2" y="403.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="764.2" y="414.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (38 samples, 0.52%)</title><rect x="761.2" y="387.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="764.2" y="398.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.52%)</title><rect x="761.2" y="371.0" width="6.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="764.2" y="382.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=14052] (417 samples, 5.69%)</title><rect x="767.3" y="531.0" width="67.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="770.3" y="542.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (417 samples, 5.69%)</title><rect x="767.3" y="515.0" width="67.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="770.3" y="526.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (42 samples, 0.57%)</title><rect x="767.3" y="499.0" width="6.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="770.3" y="510.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (42 samples, 0.57%)</title><rect x="767.3" y="483.0" width="6.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="770.3" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (375 samples, 5.11%)</title><rect x="774.0" y="499.0" width="60.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="777.0" y="510.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (375 samples, 5.11%)</title><rect x="774.0" y="483.0" width="60.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="777.0" y="494.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (375 samples, 5.11%)</title><rect x="774.0" y="467.0" width="60.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="777.0" y="478.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (85 samples, 1.16%)</title><rect x="774.0" y="451.0" width="13.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="777.0" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (85 samples, 1.16%)</title><rect x="774.0" y="435.0" width="13.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="777.0" y="446.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (44 samples, 0.60%)</title><rect x="774.0" y="419.0" width="7.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="777.0" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (29 samples, 0.40%)</title><rect x="774.0" y="403.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="777.0" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (29 samples, 0.40%)</title><rect x="774.0" y="387.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="777.0" y="398.0"></text>
</g>
<g>
<title>java/lang/String.substring (29 samples, 0.40%)</title><rect x="774.0" y="371.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="777.0" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (29 samples, 0.40%)</title><rect x="774.0" y="355.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="777.0" y="366.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.12%)</title><rect x="774.0" y="339.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="777.0" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (20 samples, 0.27%)</title><rect x="775.5" y="339.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="778.5" y="350.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.27%)</title><rect x="775.5" y="323.0" width="3.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="778.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.get (15 samples, 0.20%)</title><rect x="778.7" y="403.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="781.7" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.19%)</title><rect x="778.7" y="387.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="781.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.19%)</title><rect x="778.7" y="371.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="781.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$75/1549034997.get$Lambda (14 samples, 0.19%)</title><rect x="778.7" y="355.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="781.7" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.bmendli.MyService$$Lambda$75 (14 samples, 0.19%)</title><rect x="778.7" y="339.0" width="2.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="781.7" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (41 samples, 0.56%)</title><rect x="781.1" y="419.0" width="6.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="784.1" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (41 samples, 0.56%)</title><rect x="781.1" y="403.0" width="6.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="784.1" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (41 samples, 0.56%)</title><rect x="781.1" y="387.0" width="6.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="784.1" y="398.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.20%)</title><rect x="781.1" y="371.0" width="2.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="784.1" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (26 samples, 0.35%)</title><rect x="783.5" y="371.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="786.5" y="382.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.35%)</title><rect x="783.5" y="355.0" width="4.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="786.5" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (188 samples, 2.56%)</title><rect x="787.7" y="451.0" width="30.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="790.7" y="462.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (38 samples, 0.52%)</title><rect x="787.7" y="435.0" width="6.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="790.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (64 samples, 0.87%)</title><rect x="793.8" y="435.0" width="10.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="796.8" y="446.0"></text>
</g>
<g>
<title>java.lang.String[] (64 samples, 0.87%)</title><rect x="793.8" y="419.0" width="10.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="796.8" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (86 samples, 1.17%)</title><rect x="804.1" y="435.0" width="13.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="807.1" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (86 samples, 1.17%)</title><rect x="804.1" y="419.0" width="13.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="807.1" y="430.0"></text>
</g>
<g>
<title>char[] (33 samples, 0.45%)</title><rect x="804.1" y="403.0" width="5.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="807.1" y="414.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.26%)</title><rect x="809.4" y="403.0" width="3.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="812.4" y="414.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (34 samples, 0.46%)</title><rect x="812.5" y="403.0" width="5.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="815.5" y="414.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (34 samples, 0.46%)</title><rect x="812.5" y="387.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="815.5" y="398.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (34 samples, 0.46%)</title><rect x="812.5" y="371.0" width="5.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="815.5" y="382.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.46%)</title><rect x="812.5" y="355.0" width="5.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="815.5" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (102 samples, 1.39%)</title><rect x="818.0" y="451.0" width="16.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="821.0" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (102 samples, 1.39%)</title><rect x="818.0" y="435.0" width="16.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="821.0" y="446.0"></text>
</g>
<g>
<title>char[] (57 samples, 0.78%)</title><rect x="818.0" y="419.0" width="9.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="821.0" y="430.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.25%)</title><rect x="827.1" y="419.0" width="2.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="830.1" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (27 samples, 0.37%)</title><rect x="830.0" y="419.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="833.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (27 samples, 0.37%)</title><rect x="830.0" y="403.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="833.0" y="414.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (27 samples, 0.37%)</title><rect x="830.0" y="387.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="833.0" y="398.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.37%)</title><rect x="830.0" y="371.0" width="4.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="833.0" y="382.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=14053] (437 samples, 5.96%)</title><rect x="834.4" y="531.0" width="70.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="837.4" y="542.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (437 samples, 5.96%)</title><rect x="834.4" y="515.0" width="70.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="837.4" y="526.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (437 samples, 5.96%)</title><rect x="834.4" y="499.0" width="70.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="837.4" y="510.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (437 samples, 5.96%)</title><rect x="834.4" y="483.0" width="70.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="837.4" y="494.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (437 samples, 5.96%)</title><rect x="834.4" y="467.0" width="70.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="837.4" y="478.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (114 samples, 1.55%)</title><rect x="834.4" y="451.0" width="18.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="837.4" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (114 samples, 1.55%)</title><rect x="834.4" y="435.0" width="18.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="837.4" y="446.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (63 samples, 0.86%)</title><rect x="834.4" y="419.0" width="10.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="837.4" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (45 samples, 0.61%)</title><rect x="834.4" y="403.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="837.4" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (45 samples, 0.61%)</title><rect x="834.4" y="387.0" width="7.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="837.4" y="398.0"></text>
</g>
<g>
<title>java/lang/String.substring (45 samples, 0.61%)</title><rect x="834.4" y="371.0" width="7.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="837.4" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (45 samples, 0.61%)</title><rect x="834.4" y="355.0" width="7.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="837.4" y="366.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.27%)</title><rect x="834.4" y="339.0" width="3.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="837.4" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (25 samples, 0.34%)</title><rect x="837.6" y="339.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="840.6" y="350.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.34%)</title><rect x="837.6" y="323.0" width="4.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="840.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.get (18 samples, 0.25%)</title><rect x="841.6" y="403.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="844.6" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.23%)</title><rect x="841.6" y="387.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="844.6" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.23%)</title><rect x="841.6" y="371.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="844.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$75/1549034997.get$Lambda (17 samples, 0.23%)</title><rect x="841.6" y="355.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="844.6" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.bmendli.MyService$$Lambda$75 (17 samples, 0.23%)</title><rect x="841.6" y="339.0" width="2.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="844.6" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (51 samples, 0.70%)</title><rect x="844.5" y="419.0" width="8.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="847.5" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (51 samples, 0.70%)</title><rect x="844.5" y="403.0" width="8.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="847.5" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (51 samples, 0.70%)</title><rect x="844.5" y="387.0" width="8.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="847.5" y="398.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.26%)</title><rect x="844.5" y="371.0" width="3.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="847.5" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (32 samples, 0.44%)</title><rect x="847.6" y="371.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="850.6" y="382.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.44%)</title><rect x="847.6" y="355.0" width="5.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="850.6" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (216 samples, 2.95%)</title><rect x="852.7" y="451.0" width="34.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="855.7" y="462.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (46 samples, 0.63%)</title><rect x="852.7" y="435.0" width="7.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="855.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (46 samples, 0.63%)</title><rect x="860.1" y="435.0" width="7.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="863.1" y="446.0"></text>
</g>
<g>
<title>java.lang.String[] (46 samples, 0.63%)</title><rect x="860.1" y="419.0" width="7.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="863.1" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (124 samples, 1.69%)</title><rect x="867.5" y="435.0" width="20.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="870.5" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (124 samples, 1.69%)</title><rect x="867.5" y="419.0" width="20.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="870.5" y="430.0"></text>
</g>
<g>
<title>char[] (60 samples, 0.82%)</title><rect x="867.5" y="403.0" width="9.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="870.5" y="414.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.37%)</title><rect x="877.2" y="403.0" width="4.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="880.2" y="414.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (37 samples, 0.50%)</title><rect x="881.5" y="403.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="884.5" y="414.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (37 samples, 0.50%)</title><rect x="881.5" y="387.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="884.5" y="398.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (37 samples, 0.50%)</title><rect x="881.5" y="371.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="884.5" y="382.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.50%)</title><rect x="881.5" y="355.0" width="6.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="884.5" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (107 samples, 1.46%)</title><rect x="887.5" y="451.0" width="17.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="890.5" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (107 samples, 1.46%)</title><rect x="887.5" y="435.0" width="17.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="890.5" y="446.0"></text>
</g>
<g>
<title>char[] (42 samples, 0.57%)</title><rect x="887.5" y="419.0" width="6.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="890.5" y="430.0"></text>
</g>
<g>
<title>java.lang.String (36 samples, 0.49%)</title><rect x="894.2" y="419.0" width="5.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="897.2" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (29 samples, 0.40%)</title><rect x="900.0" y="419.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="903.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (29 samples, 0.40%)</title><rect x="900.0" y="403.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="903.0" y="414.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (29 samples, 0.40%)</title><rect x="900.0" y="387.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="903.0" y="398.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.40%)</title><rect x="900.0" y="371.0" width="4.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="903.0" y="382.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=14054] (413 samples, 5.63%)</title><rect x="904.7" y="531.0" width="66.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="907.7" y="542.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (413 samples, 5.63%)</title><rect x="904.7" y="515.0" width="66.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="907.7" y="526.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (40 samples, 0.55%)</title><rect x="904.7" y="499.0" width="6.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="907.7" y="510.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (40 samples, 0.55%)</title><rect x="904.7" y="483.0" width="6.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="907.7" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (373 samples, 5.09%)</title><rect x="911.1" y="499.0" width="60.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="914.1" y="510.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (373 samples, 5.09%)</title><rect x="911.1" y="483.0" width="60.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="914.1" y="494.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (373 samples, 5.09%)</title><rect x="911.1" y="467.0" width="60.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="914.1" y="478.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (93 samples, 1.27%)</title><rect x="911.1" y="451.0" width="15.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="914.1" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (93 samples, 1.27%)</title><rect x="911.1" y="435.0" width="15.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="914.1" y="446.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (55 samples, 0.75%)</title><rect x="911.1" y="419.0" width="8.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="914.1" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (33 samples, 0.45%)</title><rect x="911.1" y="403.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="914.1" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (33 samples, 0.45%)</title><rect x="911.1" y="387.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="914.1" y="398.0"></text>
</g>
<g>
<title>java/lang/String.substring (33 samples, 0.45%)</title><rect x="911.1" y="371.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="914.1" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (33 samples, 0.45%)</title><rect x="911.1" y="355.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="914.1" y="366.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.19%)</title><rect x="911.1" y="339.0" width="2.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="914.1" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (19 samples, 0.26%)</title><rect x="913.4" y="339.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="916.4" y="350.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.26%)</title><rect x="913.4" y="323.0" width="3.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="916.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.get (22 samples, 0.30%)</title><rect x="916.4" y="403.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="919.4" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.30%)</title><rect x="916.4" y="387.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="919.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.30%)</title><rect x="916.4" y="371.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="919.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$75/1549034997.get$Lambda (22 samples, 0.30%)</title><rect x="916.4" y="355.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="919.4" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.bmendli.MyService$$Lambda$75 (22 samples, 0.30%)</title><rect x="916.4" y="339.0" width="3.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="919.4" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (38 samples, 0.52%)</title><rect x="920.0" y="419.0" width="6.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="923.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (38 samples, 0.52%)</title><rect x="920.0" y="403.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="923.0" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (38 samples, 0.52%)</title><rect x="920.0" y="387.0" width="6.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="923.0" y="398.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.22%)</title><rect x="920.0" y="371.0" width="2.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="923.0" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (22 samples, 0.30%)</title><rect x="922.6" y="371.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="925.6" y="382.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.30%)</title><rect x="922.6" y="355.0" width="3.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="925.6" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (175 samples, 2.39%)</title><rect x="926.1" y="451.0" width="28.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="929.1" y="462.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (19 samples, 0.26%)</title><rect x="926.1" y="435.0" width="3.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="929.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (59 samples, 0.80%)</title><rect x="929.2" y="435.0" width="9.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="932.2" y="446.0"></text>
</g>
<g>
<title>java.lang.String[] (59 samples, 0.80%)</title><rect x="929.2" y="419.0" width="9.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="932.2" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (97 samples, 1.32%)</title><rect x="938.6" y="435.0" width="15.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="941.6" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (97 samples, 1.32%)</title><rect x="938.6" y="419.0" width="15.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="941.6" y="430.0"></text>
</g>
<g>
<title>char[] (50 samples, 0.68%)</title><rect x="938.6" y="403.0" width="8.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="941.6" y="414.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.25%)</title><rect x="946.7" y="403.0" width="2.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="949.7" y="414.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (29 samples, 0.40%)</title><rect x="949.6" y="403.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="952.6" y="414.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (29 samples, 0.40%)</title><rect x="949.6" y="387.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="952.6" y="398.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (29 samples, 0.40%)</title><rect x="949.6" y="371.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="952.6" y="382.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.40%)</title><rect x="949.6" y="355.0" width="4.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="952.6" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (105 samples, 1.43%)</title><rect x="954.3" y="451.0" width="16.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="957.3" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (105 samples, 1.43%)</title><rect x="954.3" y="435.0" width="16.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="957.3" y="446.0"></text>
</g>
<g>
<title>char[] (56 samples, 0.76%)</title><rect x="954.3" y="419.0" width="9.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="957.3" y="430.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.23%)</title><rect x="963.3" y="419.0" width="2.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="966.3" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (32 samples, 0.44%)</title><rect x="966.0" y="419.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="969.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (32 samples, 0.44%)</title><rect x="966.0" y="403.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="969.0" y="414.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (32 samples, 0.44%)</title><rect x="966.0" y="387.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="969.0" y="398.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.44%)</title><rect x="966.0" y="371.0" width="5.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="969.0" y="382.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=14055] (484 samples, 6.60%)</title><rect x="971.2" y="531.0" width="77.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="974.2" y="542.0">[NIO Sele..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (484 samples, 6.60%)</title><rect x="971.2" y="515.0" width="77.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="974.2" y="526.0">one/nio/s..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (43 samples, 0.59%)</title><rect x="971.2" y="499.0" width="6.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="974.2" y="510.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (43 samples, 0.59%)</title><rect x="971.2" y="483.0" width="6.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="974.2" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (441 samples, 6.01%)</title><rect x="978.1" y="499.0" width="70.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="981.1" y="510.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (441 samples, 6.01%)</title><rect x="978.1" y="483.0" width="70.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="981.1" y="494.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (441 samples, 6.01%)</title><rect x="978.1" y="467.0" width="70.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="981.1" y="478.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (109 samples, 1.49%)</title><rect x="978.1" y="451.0" width="17.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="981.1" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (109 samples, 1.49%)</title><rect x="978.1" y="435.0" width="17.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="981.1" y="446.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (60 samples, 0.82%)</title><rect x="978.1" y="419.0" width="9.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="981.1" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (42 samples, 0.57%)</title><rect x="978.1" y="403.0" width="6.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="981.1" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (42 samples, 0.57%)</title><rect x="978.1" y="387.0" width="6.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="981.1" y="398.0"></text>
</g>
<g>
<title>java/lang/String.substring (42 samples, 0.57%)</title><rect x="978.1" y="371.0" width="6.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="981.1" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (42 samples, 0.57%)</title><rect x="978.1" y="355.0" width="6.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="981.1" y="366.0"></text>
</g>
<g>
<title>java.lang.String (22 samples, 0.30%)</title><rect x="978.1" y="339.0" width="3.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="981.1" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (20 samples, 0.27%)</title><rect x="981.6" y="339.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="984.6" y="350.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.27%)</title><rect x="981.6" y="323.0" width="3.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="984.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.get (18 samples, 0.25%)</title><rect x="984.8" y="403.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="987.8" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.23%)</title><rect x="984.8" y="387.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="987.8" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.23%)</title><rect x="984.8" y="371.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="987.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$75/1549034997.get$Lambda (17 samples, 0.23%)</title><rect x="984.8" y="355.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="987.8" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.bmendli.MyService$$Lambda$75 (17 samples, 0.23%)</title><rect x="984.8" y="339.0" width="2.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="987.8" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (49 samples, 0.67%)</title><rect x="987.7" y="419.0" width="7.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="990.7" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (49 samples, 0.67%)</title><rect x="987.7" y="403.0" width="7.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="990.7" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (49 samples, 0.67%)</title><rect x="987.7" y="387.0" width="7.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="990.7" y="398.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.18%)</title><rect x="987.7" y="371.0" width="2.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="990.7" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (36 samples, 0.49%)</title><rect x="989.8" y="371.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="992.8" y="382.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.49%)</title><rect x="989.8" y="355.0" width="5.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="992.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (233 samples, 3.18%)</title><rect x="995.6" y="451.0" width="37.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="998.6" y="462.0">one..</text>
</g>
<g>
<title>one.nio.http.Request (33 samples, 0.45%)</title><rect x="995.6" y="435.0" width="5.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="998.6" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (79 samples, 1.08%)</title><rect x="1000.9" y="435.0" width="12.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1003.9" y="446.0"></text>
</g>
<g>
<title>java.lang.String[] (79 samples, 1.08%)</title><rect x="1000.9" y="419.0" width="12.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1003.9" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (121 samples, 1.65%)</title><rect x="1013.6" y="435.0" width="19.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1016.6" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (121 samples, 1.65%)</title><rect x="1013.6" y="419.0" width="19.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1016.6" y="430.0"></text>
</g>
<g>
<title>char[] (51 samples, 0.70%)</title><rect x="1013.6" y="403.0" width="8.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1016.6" y="414.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.33%)</title><rect x="1021.8" y="403.0" width="3.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1024.8" y="414.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (46 samples, 0.63%)</title><rect x="1025.7" y="403.0" width="7.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1028.7" y="414.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (46 samples, 0.63%)</title><rect x="1025.7" y="387.0" width="7.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1028.7" y="398.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (46 samples, 0.63%)</title><rect x="1025.7" y="371.0" width="7.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1028.7" y="382.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.63%)</title><rect x="1025.7" y="355.0" width="7.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1028.7" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (99 samples, 1.35%)</title><rect x="1033.1" y="451.0" width="15.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1036.1" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (99 samples, 1.35%)</title><rect x="1033.1" y="435.0" width="15.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1036.1" y="446.0"></text>
</g>
<g>
<title>char[] (43 samples, 0.59%)</title><rect x="1033.1" y="419.0" width="6.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1036.1" y="430.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.33%)</title><rect x="1040.0" y="419.0" width="3.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1043.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (32 samples, 0.44%)</title><rect x="1043.9" y="419.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1046.9" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (32 samples, 0.44%)</title><rect x="1043.9" y="403.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1046.9" y="414.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (32 samples, 0.44%)</title><rect x="1043.9" y="387.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1046.9" y="398.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.44%)</title><rect x="1043.9" y="371.0" width="5.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1046.9" y="382.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=14056] (451 samples, 6.15%)</title><rect x="1049.0" y="531.0" width="72.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1052.0" y="542.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (451 samples, 6.15%)</title><rect x="1049.0" y="515.0" width="72.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1052.0" y="526.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (451 samples, 6.15%)</title><rect x="1049.0" y="499.0" width="72.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1052.0" y="510.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (451 samples, 6.15%)</title><rect x="1049.0" y="483.0" width="72.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1052.0" y="494.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (451 samples, 6.15%)</title><rect x="1049.0" y="467.0" width="72.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1052.0" y="478.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (120 samples, 1.64%)</title><rect x="1049.0" y="451.0" width="19.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1052.0" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (120 samples, 1.64%)</title><rect x="1049.0" y="435.0" width="19.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1052.0" y="446.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (64 samples, 0.87%)</title><rect x="1049.0" y="419.0" width="10.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1052.0" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (42 samples, 0.57%)</title><rect x="1049.0" y="403.0" width="6.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1052.0" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (42 samples, 0.57%)</title><rect x="1049.0" y="387.0" width="6.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1052.0" y="398.0"></text>
</g>
<g>
<title>java/lang/String.substring (42 samples, 0.57%)</title><rect x="1049.0" y="371.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1052.0" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (42 samples, 0.57%)</title><rect x="1049.0" y="355.0" width="6.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1052.0" y="366.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.29%)</title><rect x="1049.0" y="339.0" width="3.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1052.0" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (21 samples, 0.29%)</title><rect x="1052.4" y="339.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1055.4" y="350.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.29%)</title><rect x="1052.4" y="323.0" width="3.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1055.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.get (22 samples, 0.30%)</title><rect x="1055.8" y="403.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1058.8" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.30%)</title><rect x="1055.8" y="387.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1058.8" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.30%)</title><rect x="1055.8" y="371.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1058.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$75/1549034997.get$Lambda (22 samples, 0.30%)</title><rect x="1055.8" y="355.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1058.8" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.bmendli.MyService$$Lambda$75 (22 samples, 0.30%)</title><rect x="1055.8" y="339.0" width="3.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1058.8" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (56 samples, 0.76%)</title><rect x="1059.3" y="419.0" width="9.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1062.3" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (56 samples, 0.76%)</title><rect x="1059.3" y="403.0" width="9.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1062.3" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (56 samples, 0.76%)</title><rect x="1059.3" y="387.0" width="9.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1062.3" y="398.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.31%)</title><rect x="1059.3" y="371.0" width="3.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1062.3" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (33 samples, 0.45%)</title><rect x="1063.0" y="371.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1066.0" y="382.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.45%)</title><rect x="1063.0" y="355.0" width="5.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1066.0" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (234 samples, 3.19%)</title><rect x="1068.3" y="451.0" width="37.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1071.3" y="462.0">one..</text>
</g>
<g>
<title>one.nio.http.Request (48 samples, 0.65%)</title><rect x="1068.3" y="435.0" width="7.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1071.3" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (69 samples, 0.94%)</title><rect x="1076.1" y="435.0" width="11.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1079.1" y="446.0"></text>
</g>
<g>
<title>java.lang.String[] (69 samples, 0.94%)</title><rect x="1076.1" y="419.0" width="11.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1079.1" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (117 samples, 1.60%)</title><rect x="1087.2" y="435.0" width="18.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1090.2" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (117 samples, 1.60%)</title><rect x="1087.2" y="419.0" width="18.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1090.2" y="430.0"></text>
</g>
<g>
<title>char[] (62 samples, 0.85%)</title><rect x="1087.2" y="403.0" width="10.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1090.2" y="414.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.25%)</title><rect x="1097.2" y="403.0" width="2.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1100.2" y="414.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (37 samples, 0.50%)</title><rect x="1100.0" y="403.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1103.0" y="414.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (37 samples, 0.50%)</title><rect x="1100.0" y="387.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1103.0" y="398.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (37 samples, 0.50%)</title><rect x="1100.0" y="371.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1103.0" y="382.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.50%)</title><rect x="1100.0" y="355.0" width="6.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1103.0" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (97 samples, 1.32%)</title><rect x="1106.0" y="451.0" width="15.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1109.0" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (97 samples, 1.32%)</title><rect x="1106.0" y="435.0" width="15.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1109.0" y="446.0"></text>
</g>
<g>
<title>char[] (40 samples, 0.55%)</title><rect x="1106.0" y="419.0" width="6.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1109.0" y="430.0"></text>
</g>
<g>
<title>java.lang.String (26 samples, 0.35%)</title><rect x="1112.4" y="419.0" width="4.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1115.4" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (31 samples, 0.42%)</title><rect x="1116.6" y="419.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1119.6" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (31 samples, 0.42%)</title><rect x="1116.6" y="403.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1119.6" y="414.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (31 samples, 0.42%)</title><rect x="1116.6" y="387.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1119.6" y="398.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.42%)</title><rect x="1116.6" y="371.0" width="5.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1119.6" y="382.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=14057] (425 samples, 5.80%)</title><rect x="1121.6" y="531.0" width="68.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1124.6" y="542.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (425 samples, 5.80%)</title><rect x="1121.6" y="515.0" width="68.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1124.6" y="526.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session.process (425 samples, 5.80%)</title><rect x="1121.6" y="499.0" width="68.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1124.6" y="510.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (425 samples, 5.80%)</title><rect x="1121.6" y="483.0" width="68.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1124.6" y="494.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (425 samples, 5.80%)</title><rect x="1121.6" y="467.0" width="68.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1124.6" y="478.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (106 samples, 1.45%)</title><rect x="1121.6" y="451.0" width="17.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1124.6" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (106 samples, 1.45%)</title><rect x="1121.6" y="435.0" width="17.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1124.6" y="446.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (61 samples, 0.83%)</title><rect x="1121.6" y="419.0" width="9.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1124.6" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (30 samples, 0.41%)</title><rect x="1121.6" y="403.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1124.6" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (30 samples, 0.41%)</title><rect x="1121.6" y="387.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1124.6" y="398.0"></text>
</g>
<g>
<title>java/lang/String.substring (30 samples, 0.41%)</title><rect x="1121.6" y="371.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1124.6" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (30 samples, 0.41%)</title><rect x="1121.6" y="355.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1124.6" y="366.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.20%)</title><rect x="1121.6" y="339.0" width="2.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1124.6" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.20%)</title><rect x="1124.0" y="339.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1127.0" y="350.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.20%)</title><rect x="1124.0" y="323.0" width="2.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1127.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService.get (31 samples, 0.42%)</title><rect x="1126.4" y="403.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1129.4" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (31 samples, 0.42%)</title><rect x="1126.4" y="387.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1129.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 0.42%)</title><rect x="1126.4" y="371.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1129.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bmendli/MyService$$Lambda$75/1549034997.get$Lambda (31 samples, 0.42%)</title><rect x="1126.4" y="355.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1129.4" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.bmendli.MyService$$Lambda$75 (31 samples, 0.42%)</title><rect x="1126.4" y="339.0" width="5.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1129.4" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (45 samples, 0.61%)</title><rect x="1131.4" y="419.0" width="7.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1134.4" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (45 samples, 0.61%)</title><rect x="1131.4" y="403.0" width="7.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1134.4" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (45 samples, 0.61%)</title><rect x="1131.4" y="387.0" width="7.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1134.4" y="398.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.23%)</title><rect x="1131.4" y="371.0" width="2.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1134.4" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (28 samples, 0.38%)</title><rect x="1134.2" y="371.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1137.2" y="382.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.38%)</title><rect x="1134.2" y="355.0" width="4.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1137.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (234 samples, 3.19%)</title><rect x="1138.7" y="451.0" width="37.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1141.7" y="462.0">one..</text>
</g>
<g>
<title>one.nio.http.Request (38 samples, 0.52%)</title><rect x="1138.7" y="435.0" width="6.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1141.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (52 samples, 0.71%)</title><rect x="1144.8" y="435.0" width="8.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1147.8" y="446.0"></text>
</g>
<g>
<title>java.lang.String[] (52 samples, 0.71%)</title><rect x="1144.8" y="419.0" width="8.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1147.8" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (144 samples, 1.96%)</title><rect x="1153.2" y="435.0" width="23.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1156.2" y="446.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (144 samples, 1.96%)</title><rect x="1153.2" y="419.0" width="23.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1156.2" y="430.0">o..</text>
</g>
<g>
<title>char[] (62 samples, 0.85%)</title><rect x="1153.2" y="403.0" width="9.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1156.2" y="414.0"></text>
</g>
<g>
<title>java.lang.String (39 samples, 0.53%)</title><rect x="1163.1" y="403.0" width="6.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1166.1" y="414.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (43 samples, 0.59%)</title><rect x="1169.4" y="403.0" width="6.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1172.4" y="414.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (43 samples, 0.59%)</title><rect x="1169.4" y="387.0" width="6.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1172.4" y="398.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (43 samples, 0.59%)</title><rect x="1169.4" y="371.0" width="6.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1172.4" y="382.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.59%)</title><rect x="1169.4" y="355.0" width="6.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1172.4" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (85 samples, 1.16%)</title><rect x="1176.3" y="451.0" width="13.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1179.3" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (85 samples, 1.16%)</title><rect x="1176.3" y="435.0" width="13.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1179.3" y="446.0"></text>
</g>
<g>
<title>char[] (37 samples, 0.50%)</title><rect x="1176.3" y="419.0" width="6.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1179.3" y="430.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.27%)</title><rect x="1182.3" y="419.0" width="3.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1185.3" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (28 samples, 0.38%)</title><rect x="1185.5" y="419.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1188.5" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (28 samples, 0.38%)</title><rect x="1185.5" y="403.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1188.5" y="414.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (28 samples, 0.38%)</title><rect x="1185.5" y="387.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1188.5" y="398.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.38%)</title><rect x="1185.5" y="371.0" width="4.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1188.5" y="382.0"></text>
</g>
</g>
</svg>
